{"dependencies":[{"name":"../cursor.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":20,"index":128},"end":{"line":4,"column":43,"index":151}}],"key":"ZBfOSxYtG8MhmLhS3E7coisPCBw="}},{"name":"../encoding/toBytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":21,"index":174},"end":{"line":5,"column":54,"index":207}}],"key":"IH3Jqmew4P7fKnssnSnuakMjJtk="}},{"name":"../encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":19,"index":228},"end":{"line":6,"column":50,"index":259}}],"key":"bRt+1vooOX12K5i1W+v01PrrHLA="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fromBlobs = fromBlobs;\n  var cursor_js_1 = require(_dependencyMap[0], \"../cursor.js\");\n  var toBytes_js_1 = require(_dependencyMap[1], \"../encoding/toBytes.js\");\n  var toHex_js_1 = require(_dependencyMap[2], \"../encoding/toHex.js\");\n  function fromBlobs(parameters) {\n    var to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    var blobs = typeof parameters.blobs[0] === 'string' ? parameters.blobs.map(x => (0, toBytes_js_1.hexToBytes)(x)) : parameters.blobs;\n    var length = blobs.reduce((length, blob) => length + blob.length, 0);\n    var data = (0, cursor_js_1.createCursor)(new Uint8Array(length));\n    var active = true;\n    for (var blob of blobs) {\n      var cursor = (0, cursor_js_1.createCursor)(blob);\n      while (active && cursor.position < blob.length) {\n        cursor.incrementPosition(1);\n        var consume = 31;\n        if (blob.length - cursor.position < 31) consume = blob.length - cursor.position;\n        for (var _ in Array.from({\n          length: consume\n        })) {\n          var byte = cursor.readByte();\n          var isTerminator = byte === 0x80 && !cursor.inspectBytes(cursor.remaining).includes(0x80);\n          if (isTerminator) {\n            active = false;\n            break;\n          }\n          data.pushByte(byte);\n        }\n      }\n    }\n    var trimmedData = data.bytes.slice(0, data.position);\n    return to === 'hex' ? (0, toHex_js_1.bytesToHex)(trimmedData) : trimmedData;\n  }\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"fromBlobs"],[7,19,3,17],[7,22,3,20,"fromBlobs"],[7,31,3,29],[8,2,4,0],[8,6,4,6,"cursor_js_1"],[8,17,4,17],[8,20,4,20,"require"],[8,27,4,27],[8,28,4,27,"_dependencyMap"],[8,42,4,27],[8,61,4,42],[8,62,4,43],[9,2,5,0],[9,6,5,6,"toBytes_js_1"],[9,18,5,18],[9,21,5,21,"require"],[9,28,5,28],[9,29,5,28,"_dependencyMap"],[9,43,5,28],[9,72,5,53],[9,73,5,54],[10,2,6,0],[10,6,6,6,"toHex_js_1"],[10,16,6,16],[10,19,6,19,"require"],[10,26,6,26],[10,27,6,26,"_dependencyMap"],[10,41,6,26],[10,68,6,49],[10,69,6,50],[11,2,7,0],[11,11,7,9,"fromBlobs"],[11,20,7,18,"fromBlobs"],[11,21,7,19,"parameters"],[11,31,7,29],[11,33,7,31],[12,4,8,4],[12,8,8,10,"to"],[12,10,8,12],[12,13,8,15,"parameters"],[12,23,8,25],[12,24,8,26,"to"],[12,26,8,28],[12,31,8,33],[12,38,8,40,"parameters"],[12,48,8,50],[12,49,8,51,"blobs"],[12,54,8,56],[12,55,8,57],[12,56,8,58],[12,57,8,59],[12,62,8,64],[12,70,8,72],[12,73,8,75],[12,78,8,80],[12,81,8,83],[12,88,8,90],[12,89,8,91],[13,4,9,4],[13,8,9,10,"blobs"],[13,13,9,15],[13,16,9,19],[13,23,9,26,"parameters"],[13,33,9,36],[13,34,9,37,"blobs"],[13,39,9,42],[13,40,9,43],[13,41,9,44],[13,42,9,45],[13,47,9,50],[13,55,9,58],[13,58,10,10,"parameters"],[13,68,10,20],[13,69,10,21,"blobs"],[13,74,10,26],[13,75,10,27,"map"],[13,78,10,30],[13,79,10,32,"x"],[13,80,10,33],[13,84,10,38],[13,85,10,39],[13,86,10,40],[13,88,10,42,"toBytes_js_1"],[13,100,10,54],[13,101,10,55,"hexToBytes"],[13,111,10,65],[13,113,10,67,"x"],[13,114,10,68],[13,115,10,69],[13,116,10,70],[13,119,11,10,"parameters"],[13,129,11,20],[13,130,11,21,"blobs"],[13,135,11,27],[14,4,12,4],[14,8,12,10,"length"],[14,14,12,16],[14,17,12,19,"blobs"],[14,22,12,24],[14,23,12,25,"reduce"],[14,29,12,31],[14,30,12,32],[14,31,12,33,"length"],[14,37,12,39],[14,39,12,41,"blob"],[14,43,12,45],[14,48,12,50,"length"],[14,54,12,56],[14,57,12,59,"blob"],[14,61,12,63],[14,62,12,64,"length"],[14,68,12,70],[14,70,12,72],[14,71,12,73],[14,72,12,74],[15,4,13,4],[15,8,13,10,"data"],[15,12,13,14],[15,15,13,17],[15,16,13,18],[15,17,13,19],[15,19,13,21,"cursor_js_1"],[15,30,13,32],[15,31,13,33,"createCursor"],[15,43,13,45],[15,45,13,47],[15,49,13,51,"Uint8Array"],[15,59,13,61],[15,60,13,62,"length"],[15,66,13,68],[15,67,13,69],[15,68,13,70],[16,4,14,4],[16,8,14,8,"active"],[16,14,14,14],[16,17,14,17],[16,21,14,21],[17,4,15,4],[17,9,15,9],[17,13,15,15,"blob"],[17,17,15,19],[17,21,15,23,"blobs"],[17,26,15,28],[17,28,15,30],[18,6,16,8],[18,10,16,14,"cursor"],[18,16,16,20],[18,19,16,23],[18,20,16,24],[18,21,16,25],[18,23,16,27,"cursor_js_1"],[18,34,16,38],[18,35,16,39,"createCursor"],[18,47,16,51],[18,49,16,53,"blob"],[18,53,16,57],[18,54,16,58],[19,6,17,8],[19,13,17,15,"active"],[19,19,17,21],[19,23,17,25,"cursor"],[19,29,17,31],[19,30,17,32,"position"],[19,38,17,40],[19,41,17,43,"blob"],[19,45,17,47],[19,46,17,48,"length"],[19,52,17,54],[19,54,17,56],[20,8,18,12,"cursor"],[20,14,18,18],[20,15,18,19,"incrementPosition"],[20,32,18,36],[20,33,18,37],[20,34,18,38],[20,35,18,39],[21,8,19,12],[21,12,19,16,"consume"],[21,19,19,23],[21,22,19,26],[21,24,19,28],[22,8,20,12],[22,12,20,16,"blob"],[22,16,20,20],[22,17,20,21,"length"],[22,23,20,27],[22,26,20,30,"cursor"],[22,32,20,36],[22,33,20,37,"position"],[22,41,20,45],[22,44,20,48],[22,46,20,50],[22,48,21,16,"consume"],[22,55,21,23],[22,58,21,26,"blob"],[22,62,21,30],[22,63,21,31,"length"],[22,69,21,37],[22,72,21,40,"cursor"],[22,78,21,46],[22,79,21,47,"position"],[22,87,21,55],[23,8,22,12],[23,13,22,17],[23,17,22,23,"_"],[23,18,22,24],[23,22,22,28,"Array"],[23,27,22,33],[23,28,22,34,"from"],[23,32,22,38],[23,33,22,39],[24,10,22,41,"length"],[24,16,22,47],[24,18,22,49,"consume"],[25,8,22,57],[25,9,22,58],[25,10,22,59],[25,12,22,61],[26,10,23,16],[26,14,23,22,"byte"],[26,18,23,26],[26,21,23,29,"cursor"],[26,27,23,35],[26,28,23,36,"readByte"],[26,36,23,44],[26,37,23,45],[26,38,23,46],[27,10,24,16],[27,14,24,22,"isTerminator"],[27,26,24,34],[27,29,24,37,"byte"],[27,33,24,41],[27,38,24,46],[27,42,24,50],[27,46,24,54],[27,47,24,55,"cursor"],[27,53,24,61],[27,54,24,62,"inspectBytes"],[27,66,24,74],[27,67,24,75,"cursor"],[27,73,24,81],[27,74,24,82,"remaining"],[27,83,24,91],[27,84,24,92],[27,85,24,93,"includes"],[27,93,24,101],[27,94,24,102],[27,98,24,106],[27,99,24,107],[28,10,25,16],[28,14,25,20,"isTerminator"],[28,26,25,32],[28,28,25,34],[29,12,26,20,"active"],[29,18,26,26],[29,21,26,29],[29,26,26,34],[30,12,27,20],[31,10,28,16],[32,10,29,16,"data"],[32,14,29,20],[32,15,29,21,"pushByte"],[32,23,29,29],[32,24,29,30,"byte"],[32,28,29,34],[32,29,29,35],[33,8,30,12],[34,6,31,8],[35,4,32,4],[36,4,33,4],[36,8,33,10,"trimmedData"],[36,19,33,21],[36,22,33,24,"data"],[36,26,33,28],[36,27,33,29,"bytes"],[36,32,33,34],[36,33,33,35,"slice"],[36,38,33,40],[36,39,33,41],[36,40,33,42],[36,42,33,44,"data"],[36,46,33,48],[36,47,33,49,"position"],[36,55,33,57],[36,56,33,58],[37,4,34,4],[37,11,34,12,"to"],[37,13,34,14],[37,18,34,19],[37,23,34,24],[37,26,34,27],[37,27,34,28],[37,28,34,29],[37,30,34,31,"toHex_js_1"],[37,40,34,41],[37,41,34,42,"bytesToHex"],[37,51,34,52],[37,53,34,54,"trimmedData"],[37,64,34,65],[37,65,34,66],[37,68,34,69,"trimmedData"],[37,79,34,80],[38,2,35,0],[39,0,35,1],[39,3]],"functionMap":{"names":["<global>","fromBlobs","parameters.blobs.map$argument_0","blobs.reduce$argument_0"],"mappings":"AAA;ACM;+BCG,sCD;gCEE,sCF;CDuB"}},"type":"js/module"}]}