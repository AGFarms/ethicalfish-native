{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":213,"column":0,"index":6071}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":213,"column":0,"index":6071}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":204},"end":{"line":10,"column":55,"index":259}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":260},"end":{"line":11,"column":38,"index":298}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":299},"end":{"line":12,"column":68,"index":367}}],"key":"Q+EHYDa3DcqdFVSg04IGBOEjhcw="}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":368},"end":{"line":13,"column":57,"index":425}}],"key":"OP10h8xyCBLDwctlA5RW/tE//Fc="}},{"name":"./internal/state","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":426},"end":{"line":14,"column":37,"index":463}}],"key":"FgeQ1qcKXWVJ2jJ4fWamK0nvHh8="}},{"name":"./internal/types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":464},"end":{"line":15,"column":42,"index":506}}],"key":"4Ol5Xshq2K63QIL4rwuf7cXLdg4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    configure: true,\n    fetch: true,\n    refresh: true,\n    addEventListener: true,\n    useNetInfo: true,\n    useNetInfoInstance: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.configure = configure;\n  exports.default = void 0;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _defaultConfiguration = _interopRequireDefault(require(_dependencyMap[4], \"./internal/defaultConfiguration\"));\n  var _nativeInterface = _interopRequireDefault(require(_dependencyMap[5], \"./internal/nativeInterface\"));\n  var _state2 = _interopRequireDefault(require(_dependencyMap[6], \"./internal/state\"));\n  var Types = _interopRequireWildcard(require(_dependencyMap[7], \"./internal/types\"));\n  Object.keys(Types).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === Types[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return Types[key];\n      }\n    });\n  });\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n  var _configuration = _defaultConfiguration.default;\n\n  // Stores the singleton reference to the state manager\n  var _state = null;\n  var createState = () => {\n    return new _state2.default(_configuration);\n  };\n\n  // Track ongoing requests\n  var isRequestInProgress = false;\n  var requestQueue = [];\n\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n  function configure(configuration) {\n    _configuration = {\n      ..._defaultConfiguration.default,\n      ...configuration\n    };\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (_reactNative.Platform.OS === 'ios') {\n      _nativeInterface.default.configure(configuration);\n    }\n  }\n\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    }\n\n    // If a request is already in progress, return a promise that will resolve when the current request finishes\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    var _useState = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      netInfo = _useState2[0],\n      setNetInfo = _useState2[1];\n    (0, _react.useEffect)(() => {\n      var unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n  function useNetInfoInstance() {\n    var isPaused = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var configuration = arguments.length > 1 ? arguments[1] : undefined;\n    var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      networkInfoManager = _useState4[0],\n      setNetworkInfoManager = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      netInfo = _useState6[0],\n      setNetInfo = _useState6[1];\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      var config = {\n        ..._defaultConfiguration.default,\n        ...configuration\n      };\n      var state = new _state2.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    var refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = exports.default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n});","lineCount":232,"map":[[22,2,10,0],[22,6,10,0,"_react"],[22,12,10,0],[22,15,10,0,"require"],[22,22,10,0],[22,23,10,0,"_dependencyMap"],[22,37,10,0],[23,2,11,0],[23,6,11,0,"_reactNative"],[23,18,11,0],[23,21,11,0,"require"],[23,28,11,0],[23,29,11,0,"_dependencyMap"],[23,43,11,0],[24,2,12,0],[24,6,12,0,"_defaultConfiguration"],[24,27,12,0],[24,30,12,0,"_interopRequireDefault"],[24,52,12,0],[24,53,12,0,"require"],[24,60,12,0],[24,61,12,0,"_dependencyMap"],[24,75,12,0],[25,2,13,0],[25,6,13,0,"_nativeInterface"],[25,22,13,0],[25,25,13,0,"_interopRequireDefault"],[25,47,13,0],[25,48,13,0,"require"],[25,55,13,0],[25,56,13,0,"_dependencyMap"],[25,70,13,0],[26,2,14,0],[26,6,14,0,"_state2"],[26,13,14,0],[26,16,14,0,"_interopRequireDefault"],[26,38,14,0],[26,39,14,0,"require"],[26,46,14,0],[26,47,14,0,"_dependencyMap"],[26,61,14,0],[27,2,15,0],[27,6,15,0,"Types"],[27,11,15,0],[27,14,15,0,"_interopRequireWildcard"],[27,37,15,0],[27,38,15,0,"require"],[27,45,15,0],[27,46,15,0,"_dependencyMap"],[27,60,15,0],[28,2,203,0,"Object"],[28,8,203,0],[28,9,203,0,"keys"],[28,13,203,0],[28,14,203,0,"Types"],[28,19,203,0],[28,21,203,0,"forEach"],[28,28,203,0],[28,39,203,0,"key"],[28,42,203,0],[29,4,203,0],[29,8,203,0,"key"],[29,11,203,0],[29,29,203,0,"key"],[29,32,203,0],[30,4,203,0],[30,8,203,0,"Object"],[30,14,203,0],[30,15,203,0,"prototype"],[30,24,203,0],[30,25,203,0,"hasOwnProperty"],[30,39,203,0],[30,40,203,0,"call"],[30,44,203,0],[30,45,203,0,"_exportNames"],[30,57,203,0],[30,59,203,0,"key"],[30,62,203,0],[31,4,203,0],[31,8,203,0,"key"],[31,11,203,0],[31,15,203,0,"exports"],[31,22,203,0],[31,26,203,0,"exports"],[31,33,203,0],[31,34,203,0,"key"],[31,37,203,0],[31,43,203,0,"Types"],[31,48,203,0],[31,49,203,0,"key"],[31,52,203,0],[32,4,203,0,"Object"],[32,10,203,0],[32,11,203,0,"defineProperty"],[32,25,203,0],[32,26,203,0,"exports"],[32,33,203,0],[32,35,203,0,"key"],[32,38,203,0],[33,6,203,0,"enumerable"],[33,16,203,0],[34,6,203,0,"get"],[34,9,203,0],[34,20,203,0,"get"],[34,21,203,0],[35,8,203,0],[35,15,203,0,"Types"],[35,20,203,0],[35,21,203,0,"key"],[35,24,203,0],[36,6,203,0],[37,4,203,0],[38,2,203,0],[39,2,203,33],[39,11,203,33,"_getRequireWildcardCache"],[39,36,203,33,"e"],[39,37,203,33],[39,66,203,33,"WeakMap"],[39,73,203,33],[39,92,203,33,"r"],[39,93,203,33],[39,100,203,33,"WeakMap"],[39,107,203,33],[39,111,203,33,"t"],[39,112,203,33],[39,119,203,33,"WeakMap"],[39,126,203,33],[39,138,203,33,"_getRequireWildcardCache"],[39,162,203,33],[39,174,203,33,"_getRequireWildcardCache"],[39,175,203,33,"e"],[39,176,203,33],[39,187,203,33,"e"],[39,188,203,33],[39,191,203,33,"t"],[39,192,203,33],[39,195,203,33,"r"],[39,196,203,33],[39,201,203,33,"e"],[39,202,203,33],[40,2,203,33],[40,11,203,33,"_interopRequireWildcard"],[40,35,203,33,"e"],[40,36,203,33],[40,38,203,33,"r"],[40,39,203,33],[40,48,203,33,"r"],[40,49,203,33],[40,53,203,33,"e"],[40,54,203,33],[40,58,203,33,"e"],[40,59,203,33],[40,60,203,33,"__esModule"],[40,70,203,33],[40,79,203,33,"e"],[40,80,203,33],[40,95,203,33,"e"],[40,96,203,33],[40,119,203,33,"e"],[40,120,203,33],[40,145,203,33,"e"],[40,146,203,33],[40,157,203,33,"default"],[40,164,203,33],[40,166,203,33,"e"],[40,167,203,33],[40,175,203,33,"t"],[40,176,203,33],[40,179,203,33,"_getRequireWildcardCache"],[40,203,203,33],[40,204,203,33,"r"],[40,205,203,33],[40,212,203,33,"t"],[40,213,203,33],[40,217,203,33,"t"],[40,218,203,33],[40,219,203,33,"has"],[40,222,203,33],[40,223,203,33,"e"],[40,224,203,33],[40,234,203,33,"t"],[40,235,203,33],[40,236,203,33,"get"],[40,239,203,33],[40,240,203,33,"e"],[40,241,203,33],[40,248,203,33,"n"],[40,249,203,33],[40,254,203,33,"__proto__"],[40,263,203,33],[40,273,203,33,"a"],[40,274,203,33],[40,277,203,33,"Object"],[40,283,203,33],[40,284,203,33,"defineProperty"],[40,298,203,33],[40,302,203,33,"Object"],[40,308,203,33],[40,309,203,33,"getOwnPropertyDescriptor"],[40,333,203,33],[40,344,203,33,"u"],[40,345,203,33],[40,349,203,33,"e"],[40,350,203,33],[40,370,203,33,"u"],[40,371,203,33],[40,378,203,33,"hasOwnProperty"],[40,392,203,33],[40,393,203,33,"call"],[40,397,203,33],[40,398,203,33,"e"],[40,399,203,33],[40,401,203,33,"u"],[40,402,203,33],[40,411,203,33,"i"],[40,412,203,33],[40,415,203,33,"a"],[40,416,203,33],[40,419,203,33,"Object"],[40,425,203,33],[40,426,203,33,"getOwnPropertyDescriptor"],[40,450,203,33],[40,451,203,33,"e"],[40,452,203,33],[40,454,203,33,"u"],[40,455,203,33],[40,465,203,33,"i"],[40,466,203,33],[40,471,203,33,"i"],[40,472,203,33],[40,473,203,33,"get"],[40,476,203,33],[40,480,203,33,"i"],[40,481,203,33],[40,482,203,33,"set"],[40,485,203,33],[40,489,203,33,"Object"],[40,495,203,33],[40,496,203,33,"defineProperty"],[40,510,203,33],[40,511,203,33,"n"],[40,512,203,33],[40,514,203,33,"u"],[40,515,203,33],[40,517,203,33,"i"],[40,518,203,33],[40,522,203,33,"n"],[40,523,203,33],[40,524,203,33,"u"],[40,525,203,33],[40,529,203,33,"e"],[40,530,203,33],[40,531,203,33,"u"],[40,532,203,33],[40,544,203,33,"n"],[40,545,203,33],[40,546,203,33,"default"],[40,553,203,33],[40,556,203,33,"e"],[40,557,203,33],[40,559,203,33,"t"],[40,560,203,33],[40,564,203,33,"t"],[40,565,203,33],[40,566,203,33,"set"],[40,569,203,33],[40,570,203,33,"e"],[40,571,203,33],[40,573,203,33,"n"],[40,574,203,33],[40,577,203,33,"n"],[40,578,203,33],[41,2,1,0],[42,0,2,0],[43,0,3,0],[44,0,4,0],[45,0,5,0],[46,0,6,0],[47,0,7,0],[48,0,8,0],[50,2,17,0],[51,2,18,0],[51,6,18,4,"_configuration"],[51,20,18,18],[51,23,18,21,"DEFAULT_CONFIGURATION"],[51,52,18,42],[53,2,20,0],[54,2,21,0],[54,6,21,4,"_state"],[54,12,21,24],[54,15,21,27],[54,19,21,31],[55,2,22,0],[55,6,22,6,"createState"],[55,17,22,17],[55,20,22,20,"createState"],[55,21,22,20],[55,26,22,33],[56,4,23,2],[56,11,23,9],[56,15,23,13,"State"],[56,30,23,18],[56,31,23,19,"_configuration"],[56,45,23,33],[56,46,23,34],[57,2,24,0],[57,3,24,1],[59,2,26,0],[60,2,27,0],[60,6,27,4,"isRequestInProgress"],[60,25,27,23],[60,28,27,26],[60,33,27,31],[61,2,28,0],[61,6,28,4,"requestQueue"],[61,18,28,57],[61,21,28,60],[61,23,28,62],[63,2,30,0],[64,0,31,0],[65,0,32,0],[66,0,33,0],[67,0,34,0],[68,0,35,0],[69,0,36,0],[70,2,37,7],[70,11,37,16,"configure"],[70,20,37,25,"configure"],[70,21,38,2,"configuration"],[70,34,38,52],[70,36,39,8],[71,4,40,2,"_configuration"],[71,18,40,16],[71,21,40,19],[72,6,41,4],[72,9,41,7,"DEFAULT_CONFIGURATION"],[72,38,41,28],[73,6,42,4],[73,9,42,7,"configuration"],[74,4,43,2],[74,5,43,3],[75,4,45,2],[75,8,45,6,"_state"],[75,14,45,12],[75,16,45,14],[76,6,46,4,"_state"],[76,12,46,10],[76,13,46,11,"tearDown"],[76,21,46,19],[76,22,46,20],[76,23,46,21],[77,6,47,4,"_state"],[77,12,47,10],[77,15,47,13,"createState"],[77,26,47,24],[77,27,47,25],[77,28,47,26],[78,4,48,2],[79,4,50,2],[79,8,50,6,"Platform"],[79,29,50,14],[79,30,50,15,"OS"],[79,32,50,17],[79,37,50,22],[79,42,50,27],[79,44,50,29],[80,6,51,4,"NativeInterface"],[80,30,51,19],[80,31,51,20,"configure"],[80,40,51,29],[80,41,51,30,"configuration"],[80,54,51,43],[80,55,51,44],[81,4,52,2],[82,2,53,0],[84,2,55,0],[85,0,56,0],[86,0,57,0],[87,0,58,0],[88,0,59,0],[89,0,60,0],[90,0,61,0],[91,0,62,0],[92,2,63,7],[92,11,63,16,"fetch"],[92,16,63,21,"fetch"],[92,17,64,2,"requestedInterface"],[92,35,64,29],[92,37,65,31],[93,4,66,2],[93,8,66,6],[93,9,66,7,"_state"],[93,15,66,13],[93,17,66,15],[94,6,67,4,"_state"],[94,12,67,10],[94,15,67,13,"createState"],[94,26,67,24],[94,27,67,25],[94,28,67,26],[95,4,68,2],[96,4,69,2],[96,11,69,9,"_state"],[96,17,69,15],[96,18,69,16,"latest"],[96,24,69,22],[96,25,69,23,"requestedInterface"],[96,43,69,41],[96,44,69,42],[97,2,70,0],[99,2,72,0],[100,0,73,0],[101,0,74,0],[102,0,75,0],[103,0,76,0],[104,2,77,7],[104,11,77,16,"refresh"],[104,18,77,23,"refresh"],[104,19,77,23],[104,21,77,55],[105,4,78,2],[105,8,78,6],[105,9,78,7,"_state"],[105,15,78,13],[105,17,78,15],[106,6,79,4,"_state"],[106,12,79,10],[106,15,79,13,"createState"],[106,26,79,24],[106,27,79,25],[106,28,79,26],[107,4,80,2],[109,4,82,1],[110,4,83,2],[110,8,83,6,"isRequestInProgress"],[110,27,83,25],[110,29,83,27],[111,6,84,4],[111,13,84,11],[111,17,84,15,"Promise"],[111,24,84,22],[111,25,84,24,"resolve"],[111,32,84,31],[111,36,84,36],[112,8,85,6,"requestQueue"],[112,20,85,18],[112,21,85,19,"push"],[112,25,85,23],[112,26,85,24,"resolve"],[112,33,85,31],[112,34,85,32],[113,6,86,4],[113,7,86,5],[113,8,86,6],[114,4,87,2],[115,4,89,2,"isRequestInProgress"],[115,23,89,21],[115,26,89,24],[115,30,89,28],[116,4,91,2],[116,11,91,9,"_state"],[116,17,91,15],[116,18,91,16,"_fetchCurrentState"],[116,36,91,34],[116,37,91,35],[116,38,91,36],[116,39,91,37,"then"],[116,43,91,41],[116,44,91,43,"result"],[116,50,91,49],[116,54,91,54],[117,6,92,4,"requestQueue"],[117,18,92,16],[117,19,92,17,"forEach"],[117,26,92,24],[117,27,92,26,"resolve"],[117,34,92,33],[117,38,92,38,"resolve"],[117,45,92,45],[117,46,92,46,"result"],[117,52,92,52],[117,53,92,53],[117,54,92,54],[118,6,93,4,"requestQueue"],[118,18,93,16],[118,21,93,19],[118,23,93,21],[119,6,94,4],[119,13,94,11,"result"],[119,19,94,17],[120,4,95,2],[120,5,95,3],[120,6,95,4],[120,7,95,5,"finally"],[120,14,95,12],[120,15,95,13],[120,21,95,19],[121,6,96,4,"isRequestInProgress"],[121,25,96,23],[121,28,96,26],[121,33,96,31],[122,4,97,2],[122,5,97,3],[122,6,97,4],[123,2,98,0],[125,2,100,0],[126,0,101,0],[127,0,102,0],[128,0,103,0],[129,0,104,0],[130,0,105,0],[131,0,106,0],[132,0,107,0],[133,0,108,0],[134,0,109,0],[135,0,110,0],[136,2,111,7],[136,11,111,16,"addEventListener"],[136,27,111,32,"addEventListener"],[136,28,112,2,"listener"],[136,36,112,38],[136,38,113,29],[137,4,114,2],[137,8,114,6],[137,9,114,7,"_state"],[137,15,114,13],[137,17,114,15],[138,6,115,4,"_state"],[138,12,115,10],[138,15,115,13,"createState"],[138,26,115,24],[138,27,115,25],[138,28,115,26],[139,4,116,2],[140,4,118,2,"_state"],[140,10,118,8],[140,11,118,9,"add"],[140,14,118,12],[140,15,118,13,"listener"],[140,23,118,21],[140,24,118,22],[141,4,119,2],[141,11,119,9],[141,17,119,21],[142,6,120,4,"_state"],[142,12,120,10],[142,16,120,14,"_state"],[142,22,120,20],[142,23,120,21,"remove"],[142,29,120,27],[142,30,120,28,"listener"],[142,38,120,36],[142,39,120,37],[143,4,121,2],[143,5,121,3],[144,2,122,0],[146,2,124,0],[147,0,125,0],[148,0,126,0],[149,0,127,0],[150,0,128,0],[151,0,129,0],[152,0,130,0],[153,2,131,7],[153,11,131,16,"useNetInfo"],[153,21,131,26,"useNetInfo"],[153,22,132,2,"configuration"],[153,35,132,53],[153,37,133,22],[154,4,134,2],[154,8,134,6,"configuration"],[154,21,134,19],[154,23,134,21],[155,6,135,4,"configure"],[155,15,135,13],[155,16,135,14,"configuration"],[155,29,135,27],[155,30,135,28],[156,4,136,2],[157,4,138,2],[157,8,138,2,"_useState"],[157,17,138,2],[157,20,138,32],[157,24,138,32,"useState"],[157,39,138,40],[157,41,138,61],[158,8,139,4,"type"],[158,12,139,8],[158,14,139,10,"Types"],[158,19,139,15],[158,20,139,16,"NetInfoStateType"],[158,36,139,32],[158,37,139,33,"unknown"],[158,44,139,40],[159,8,140,4,"isConnected"],[159,19,140,15],[159,21,140,17],[159,25,140,21],[160,8,141,4,"isInternetReachable"],[160,27,141,23],[160,29,141,25],[160,33,141,29],[161,8,142,4,"details"],[161,15,142,11],[161,17,142,13],[162,6,143,2],[162,7,143,3],[162,8,143,4],[163,6,143,4,"_useState2"],[163,16,143,4],[163,23,143,4,"_slicedToArray2"],[163,38,143,4],[163,39,143,4,"default"],[163,46,143,4],[163,48,143,4,"_useState"],[163,57,143,4],[164,6,138,9,"netInfo"],[164,13,138,16],[164,16,138,16,"_useState2"],[164,26,138,16],[165,6,138,18,"setNetInfo"],[165,16,138,28],[165,19,138,28,"_useState2"],[165,29,138,28],[166,4,145,2],[166,8,145,2,"useEffect"],[166,24,145,11],[166,26,145,12],[166,32,145,32],[167,6,146,4],[167,10,146,10,"unsubscribe"],[167,21,146,21],[167,24,146,24,"addEventListener"],[167,40,146,40],[167,41,146,41,"setNetInfo"],[167,51,146,51],[167,52,146,52],[168,6,147,4],[168,13,147,11],[168,19,147,17,"unsubscribe"],[168,30,147,28],[168,31,147,29],[168,32,147,30],[169,4,148,2],[169,5,148,3],[169,7,148,5],[169,9,148,7],[169,10,148,8],[170,4,150,2],[170,11,150,9,"netInfo"],[170,18,150,16],[171,2,151,0],[173,2,153,0],[174,0,154,0],[175,0,155,0],[176,0,156,0],[177,0,157,0],[178,0,158,0],[179,0,159,0],[180,0,160,0],[181,0,161,0],[182,2,162,7],[182,11,162,16,"useNetInfoInstance"],[182,29,162,34,"useNetInfoInstance"],[182,30,162,34],[182,32,165,2],[183,4,165,2],[183,8,163,2,"isPaused"],[183,16,163,10],[183,19,163,10,"arguments"],[183,28,163,10],[183,29,163,10,"length"],[183,35,163,10],[183,43,163,10,"arguments"],[183,52,163,10],[183,60,163,10,"undefined"],[183,69,163,10],[183,72,163,10,"arguments"],[183,81,163,10],[183,87,163,13],[183,92,163,18],[184,4,163,18],[184,8,164,2,"configuration"],[184,21,164,53],[184,24,164,53,"arguments"],[184,33,164,53],[184,34,164,53,"length"],[184,40,164,53],[184,47,164,53,"arguments"],[184,56,164,53],[184,62,164,53,"undefined"],[184,71,164,53],[185,4,166,2],[185,8,166,2,"_useState3"],[185,18,166,2],[185,21,166,54],[185,25,166,54,"useState"],[185,40,166,62],[185,42,166,70],[185,43,166,71],[186,6,166,71,"_useState4"],[186,16,166,71],[186,23,166,71,"_slicedToArray2"],[186,38,166,71],[186,39,166,71,"default"],[186,46,166,71],[186,48,166,71,"_useState3"],[186,58,166,71],[187,6,166,9,"networkInfoManager"],[187,24,166,27],[187,27,166,27,"_useState4"],[187,37,166,27],[188,6,166,29,"setNetworkInfoManager"],[188,27,166,50],[188,30,166,50,"_useState4"],[188,40,166,50],[189,4,167,2],[189,8,167,2,"_useState5"],[189,18,167,2],[189,21,167,32],[189,25,167,32,"useState"],[189,40,167,40],[189,42,167,61],[190,8,168,4,"type"],[190,12,168,8],[190,14,168,10,"Types"],[190,19,168,15],[190,20,168,16,"NetInfoStateType"],[190,36,168,32],[190,37,168,33,"unknown"],[190,44,168,40],[191,8,169,4,"isConnected"],[191,19,169,15],[191,21,169,17],[191,25,169,21],[192,8,170,4,"isInternetReachable"],[192,27,170,23],[192,29,170,25],[192,33,170,29],[193,8,171,4,"details"],[193,15,171,11],[193,17,171,13],[194,6,172,2],[194,7,172,3],[194,8,172,4],[195,6,172,4,"_useState6"],[195,16,172,4],[195,23,172,4,"_slicedToArray2"],[195,38,172,4],[195,39,172,4,"default"],[195,46,172,4],[195,48,172,4,"_useState5"],[195,58,172,4],[196,6,167,9,"netInfo"],[196,13,167,16],[196,16,167,16,"_useState6"],[196,26,167,16],[197,6,167,18,"setNetInfo"],[197,16,167,28],[197,19,167,28,"_useState6"],[197,29,167,28],[198,4,174,2],[198,8,174,2,"useEffect"],[198,24,174,11],[198,26,174,12],[198,32,174,18],[199,6,175,4],[199,10,175,8,"isPaused"],[199,18,175,16],[199,20,175,18],[200,8,176,6],[201,6,177,4],[202,6,178,4],[202,10,178,10,"config"],[202,16,178,16],[202,19,178,19],[203,8,179,6],[203,11,179,9,"DEFAULT_CONFIGURATION"],[203,40,179,30],[204,8,180,6],[204,11,180,9,"configuration"],[205,6,181,4],[205,7,181,5],[206,6,182,4],[206,10,182,10,"state"],[206,15,182,15],[206,18,182,18],[206,22,182,22,"State"],[206,37,182,27],[206,38,182,28,"config"],[206,44,182,34],[206,45,182,35],[207,6,183,4,"setNetworkInfoManager"],[207,27,183,25],[207,28,183,26,"state"],[207,33,183,31],[207,34,183,32],[208,6,184,4,"state"],[208,11,184,9],[208,12,184,10,"add"],[208,15,184,13],[208,16,184,14,"setNetInfo"],[208,26,184,24],[208,27,184,25],[209,6,185,4],[209,13,185,11,"state"],[209,18,185,16],[209,19,185,17,"tearDown"],[209,27,185,25],[210,4,186,2],[210,5,186,3],[210,7,186,5],[210,8,186,6,"isPaused"],[210,16,186,14],[210,18,186,16,"configuration"],[210,31,186,29],[210,32,186,30],[210,33,186,31],[211,4,188,2],[211,8,188,8,"refresh"],[211,15,188,15],[211,18,188,18],[211,22,188,18,"useCallback"],[211,40,188,29],[211,42,188,30],[211,48,188,36],[212,6,189,4],[212,10,189,8,"networkInfoManager"],[212,28,189,26],[212,32,189,30],[212,33,189,31,"isRequestInProgress"],[212,52,189,50],[212,54,189,52],[213,8,190,6,"isRequestInProgress"],[213,27,190,25],[213,30,190,28],[213,34,190,32],[214,8,191,6,"networkInfoManager"],[214,26,191,24],[214,27,191,25,"_fetchCurrentState"],[214,45,191,43],[214,46,191,44],[214,47,191,45],[214,48,191,46,"finally"],[214,55,191,53],[214,56,191,54],[214,62,191,60],[215,10,192,8,"isRequestInProgress"],[215,29,192,27],[215,32,192,30],[215,37,192,35],[216,8,193,6],[216,9,193,7],[216,10,193,8],[217,6,194,4],[218,4,195,2],[218,5,195,3],[218,7,195,5],[218,8,195,6,"networkInfoManager"],[218,26,195,24],[218,27,195,25],[218,28,195,26],[219,4,197,2],[219,11,197,9],[220,6,198,4,"netInfo"],[220,13,198,11],[221,6,199,4,"refresh"],[222,4,200,2],[222,5,200,3],[223,2,201,0],[224,2,201,1],[224,6,201,1,"_default"],[224,14,201,1],[224,17,201,1,"exports"],[224,24,201,1],[224,25,201,1,"default"],[224,32,201,1],[224,35,205,15],[225,4,206,2,"configure"],[225,13,206,11],[226,4,207,2,"fetch"],[226,9,207,7],[227,4,208,2,"refresh"],[227,11,208,9],[228,4,209,2,"addEventListener"],[228,20,209,18],[229,4,210,2,"useNetInfo"],[229,14,210,12],[230,4,211,2,"useNetInfoInstance"],[231,2,212,0],[231,3,212,1],[232,0,212,1],[232,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCqB;CDE;OEa;CFgB;OGU;CHO;OIO;uBCO;KDE;0CEK;yBCC,4BD;GFG,UI;GJE;CJC;OSa;SCQ;GDE;CTC;OWS;YCc;WFE,mBE;GDC;CXG;OaW;YDY;GCY;8BTE;sDUG;OVE;GSE;CbM"}},"type":"js/module"}]}