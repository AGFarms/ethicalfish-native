{"dependencies":[{"name":"../../errors/base.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":18,"index":122},"end":{"line":4,"column":49,"index":153}}],"key":"ykEh1DKw3OM6EmDgseDH5ygVu20="}},{"name":"../../errors/encoding.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":22,"index":177},"end":{"line":5,"column":57,"index":212}}],"key":"lnPLkJE3anL8Xkoa6kTdC5TXMoA="}},{"name":"../cursor.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":20,"index":234},"end":{"line":6,"column":43,"index":257}}],"key":"ZBfOSxYtG8MhmLhS3E7coisPCBw="}},{"name":"./toBytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":21,"index":280},"end":{"line":7,"column":44,"index":303}}],"key":"hXL/BcqNZ135HrLcNCeelqhROcI="}},{"name":"./toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":19,"index":324},"end":{"line":8,"column":40,"index":345}}],"key":"qhYjJi0tgbDYewo83gZCYTraLjU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fromRlp = fromRlp;\n  var base_js_1 = require(_dependencyMap[0], \"../../errors/base.js\");\n  var encoding_js_1 = require(_dependencyMap[1], \"../../errors/encoding.js\");\n  var cursor_js_1 = require(_dependencyMap[2], \"../cursor.js\");\n  var toBytes_js_1 = require(_dependencyMap[3], \"./toBytes.js\");\n  var toHex_js_1 = require(_dependencyMap[4], \"./toHex.js\");\n  function fromRlp(value) {\n    var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hex';\n    var bytes = (() => {\n      if (typeof value === 'string') {\n        if (value.length > 3 && value.length % 2 !== 0) throw new encoding_js_1.InvalidHexValueError(value);\n        return (0, toBytes_js_1.hexToBytes)(value);\n      }\n      return value;\n    })();\n    var cursor = (0, cursor_js_1.createCursor)(bytes, {\n      recursiveReadLimit: Number.POSITIVE_INFINITY\n    });\n    var result = fromRlpCursor(cursor, to);\n    return result;\n  }\n  function fromRlpCursor(cursor) {\n    var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hex';\n    if (cursor.bytes.length === 0) return to === 'hex' ? (0, toHex_js_1.bytesToHex)(cursor.bytes) : cursor.bytes;\n    var prefix = cursor.readByte();\n    if (prefix < 0x80) cursor.decrementPosition(1);\n    if (prefix < 0xc0) {\n      var _length = readLength(cursor, prefix, 0x80);\n      var bytes = cursor.readBytes(_length);\n      return to === 'hex' ? (0, toHex_js_1.bytesToHex)(bytes) : bytes;\n    }\n    var length = readLength(cursor, prefix, 0xc0);\n    return readList(cursor, length, to);\n  }\n  function readLength(cursor, prefix, offset) {\n    if (offset === 0x80 && prefix < 0x80) return 1;\n    if (prefix <= offset + 55) return prefix - offset;\n    if (prefix === offset + 55 + 1) return cursor.readUint8();\n    if (prefix === offset + 55 + 2) return cursor.readUint16();\n    if (prefix === offset + 55 + 3) return cursor.readUint24();\n    if (prefix === offset + 55 + 4) return cursor.readUint32();\n    throw new base_js_1.BaseError('Invalid RLP prefix');\n  }\n  function readList(cursor, length, to) {\n    var position = cursor.position;\n    var value = [];\n    while (cursor.position - position < length) value.push(fromRlpCursor(cursor, to));\n    return value;\n  }\n});","lineCount":56,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"fromRlp"],[7,17,3,15],[7,20,3,18,"fromRlp"],[7,27,3,25],[8,2,4,0],[8,6,4,6,"base_js_1"],[8,15,4,15],[8,18,4,18,"require"],[8,25,4,25],[8,26,4,25,"_dependencyMap"],[8,40,4,25],[8,67,4,48],[8,68,4,49],[9,2,5,0],[9,6,5,6,"encoding_js_1"],[9,19,5,19],[9,22,5,22,"require"],[9,29,5,29],[9,30,5,29,"_dependencyMap"],[9,44,5,29],[9,75,5,56],[9,76,5,57],[10,2,6,0],[10,6,6,6,"cursor_js_1"],[10,17,6,17],[10,20,6,20,"require"],[10,27,6,27],[10,28,6,27,"_dependencyMap"],[10,42,6,27],[10,61,6,42],[10,62,6,43],[11,2,7,0],[11,6,7,6,"toBytes_js_1"],[11,18,7,18],[11,21,7,21,"require"],[11,28,7,28],[11,29,7,28,"_dependencyMap"],[11,43,7,28],[11,62,7,43],[11,63,7,44],[12,2,8,0],[12,6,8,6,"toHex_js_1"],[12,16,8,16],[12,19,8,19,"require"],[12,26,8,26],[12,27,8,26,"_dependencyMap"],[12,41,8,26],[12,58,8,39],[12,59,8,40],[13,2,9,0],[13,11,9,9,"fromRlp"],[13,18,9,16,"fromRlp"],[13,19,9,17,"value"],[13,24,9,22],[13,26,9,36],[14,4,9,36],[14,8,9,24,"to"],[14,10,9,26],[14,13,9,26,"arguments"],[14,22,9,26],[14,23,9,26,"length"],[14,29,9,26],[14,37,9,26,"arguments"],[14,46,9,26],[14,54,9,26,"undefined"],[14,63,9,26],[14,66,9,26,"arguments"],[14,75,9,26],[14,81,9,29],[14,86,9,34],[15,4,10,4],[15,8,10,10,"bytes"],[15,13,10,15],[15,16,10,18],[15,17,10,19],[15,23,10,25],[16,6,11,8],[16,10,11,12],[16,17,11,19,"value"],[16,22,11,24],[16,27,11,29],[16,35,11,37],[16,37,11,39],[17,8,12,12],[17,12,12,16,"value"],[17,17,12,21],[17,18,12,22,"length"],[17,24,12,28],[17,27,12,31],[17,28,12,32],[17,32,12,36,"value"],[17,37,12,41],[17,38,12,42,"length"],[17,44,12,48],[17,47,12,51],[17,48,12,52],[17,53,12,57],[17,54,12,58],[17,56,13,16],[17,62,13,22],[17,66,13,26,"encoding_js_1"],[17,79,13,39],[17,80,13,40,"InvalidHexValueError"],[17,100,13,60],[17,101,13,61,"value"],[17,106,13,66],[17,107,13,67],[18,8,14,12],[18,15,14,19],[18,16,14,20],[18,17,14,21],[18,19,14,23,"toBytes_js_1"],[18,31,14,35],[18,32,14,36,"hexToBytes"],[18,42,14,46],[18,44,14,48,"value"],[18,49,14,53],[18,50,14,54],[19,6,15,8],[20,6,16,8],[20,13,16,15,"value"],[20,18,16,20],[21,4,17,4],[21,5,17,5],[21,7,17,7],[21,8,17,8],[22,4,18,4],[22,8,18,10,"cursor"],[22,14,18,16],[22,17,18,19],[22,18,18,20],[22,19,18,21],[22,21,18,23,"cursor_js_1"],[22,32,18,34],[22,33,18,35,"createCursor"],[22,45,18,47],[22,47,18,49,"bytes"],[22,52,18,54],[22,54,18,56],[23,6,19,8,"recursiveReadLimit"],[23,24,19,26],[23,26,19,28,"Number"],[23,32,19,34],[23,33,19,35,"POSITIVE_INFINITY"],[24,4,20,4],[24,5,20,5],[24,6,20,6],[25,4,21,4],[25,8,21,10,"result"],[25,14,21,16],[25,17,21,19,"fromRlpCursor"],[25,30,21,32],[25,31,21,33,"cursor"],[25,37,21,39],[25,39,21,41,"to"],[25,41,21,43],[25,42,21,44],[26,4,22,4],[26,11,22,11,"result"],[26,17,22,17],[27,2,23,0],[28,2,24,0],[28,11,24,9,"fromRlpCursor"],[28,24,24,22,"fromRlpCursor"],[28,25,24,23,"cursor"],[28,31,24,29],[28,33,24,43],[29,4,24,43],[29,8,24,31,"to"],[29,10,24,33],[29,13,24,33,"arguments"],[29,22,24,33],[29,23,24,33,"length"],[29,29,24,33],[29,37,24,33,"arguments"],[29,46,24,33],[29,54,24,33,"undefined"],[29,63,24,33],[29,66,24,33,"arguments"],[29,75,24,33],[29,81,24,36],[29,86,24,41],[30,4,25,4],[30,8,25,8,"cursor"],[30,14,25,14],[30,15,25,15,"bytes"],[30,20,25,20],[30,21,25,21,"length"],[30,27,25,27],[30,32,25,32],[30,33,25,33],[30,35,26,8],[30,42,26,16,"to"],[30,44,26,18],[30,49,26,23],[30,54,26,28],[30,57,26,31],[30,58,26,32],[30,59,26,33],[30,61,26,35,"toHex_js_1"],[30,71,26,45],[30,72,26,46,"bytesToHex"],[30,82,26,56],[30,84,26,58,"cursor"],[30,90,26,64],[30,91,26,65,"bytes"],[30,96,26,70],[30,97,26,71],[30,100,26,74,"cursor"],[30,106,26,80],[30,107,26,81,"bytes"],[30,112,26,86],[31,4,27,4],[31,8,27,10,"prefix"],[31,14,27,16],[31,17,27,19,"cursor"],[31,23,27,25],[31,24,27,26,"readByte"],[31,32,27,34],[31,33,27,35],[31,34,27,36],[32,4,28,4],[32,8,28,8,"prefix"],[32,14,28,14],[32,17,28,17],[32,21,28,21],[32,23,29,8,"cursor"],[32,29,29,14],[32,30,29,15,"decrementPosition"],[32,47,29,32],[32,48,29,33],[32,49,29,34],[32,50,29,35],[33,4,30,4],[33,8,30,8,"prefix"],[33,14,30,14],[33,17,30,17],[33,21,30,21],[33,23,30,23],[34,6,31,8],[34,10,31,14,"length"],[34,17,31,20],[34,20,31,23,"readLength"],[34,30,31,33],[34,31,31,34,"cursor"],[34,37,31,40],[34,39,31,42,"prefix"],[34,45,31,48],[34,47,31,50],[34,51,31,54],[34,52,31,55],[35,6,32,8],[35,10,32,14,"bytes"],[35,15,32,19],[35,18,32,22,"cursor"],[35,24,32,28],[35,25,32,29,"readBytes"],[35,34,32,38],[35,35,32,39,"length"],[35,42,32,45],[35,43,32,46],[36,6,33,8],[36,13,33,16,"to"],[36,15,33,18],[36,20,33,23],[36,25,33,28],[36,28,33,31],[36,29,33,32],[36,30,33,33],[36,32,33,35,"toHex_js_1"],[36,42,33,45],[36,43,33,46,"bytesToHex"],[36,53,33,56],[36,55,33,58,"bytes"],[36,60,33,63],[36,61,33,64],[36,64,33,67,"bytes"],[36,69,33,72],[37,4,34,4],[38,4,35,4],[38,8,35,10,"length"],[38,14,35,16],[38,17,35,19,"readLength"],[38,27,35,29],[38,28,35,30,"cursor"],[38,34,35,36],[38,36,35,38,"prefix"],[38,42,35,44],[38,44,35,46],[38,48,35,50],[38,49,35,51],[39,4,36,4],[39,11,36,11,"readList"],[39,19,36,19],[39,20,36,20,"cursor"],[39,26,36,26],[39,28,36,28,"length"],[39,34,36,34],[39,36,36,36,"to"],[39,38,36,38],[39,39,36,39],[40,2,37,0],[41,2,38,0],[41,11,38,9,"readLength"],[41,21,38,19,"readLength"],[41,22,38,20,"cursor"],[41,28,38,26],[41,30,38,28,"prefix"],[41,36,38,34],[41,38,38,36,"offset"],[41,44,38,42],[41,46,38,44],[42,4,39,4],[42,8,39,8,"offset"],[42,14,39,14],[42,19,39,19],[42,23,39,23],[42,27,39,27,"prefix"],[42,33,39,33],[42,36,39,36],[42,40,39,40],[42,42,40,8],[42,49,40,15],[42,50,40,16],[43,4,41,4],[43,8,41,8,"prefix"],[43,14,41,14],[43,18,41,18,"offset"],[43,24,41,24],[43,27,41,27],[43,29,41,29],[43,31,42,8],[43,38,42,15,"prefix"],[43,44,42,21],[43,47,42,24,"offset"],[43,53,42,30],[44,4,43,4],[44,8,43,8,"prefix"],[44,14,43,14],[44,19,43,19,"offset"],[44,25,43,25],[44,28,43,28],[44,30,43,30],[44,33,43,33],[44,34,43,34],[44,36,44,8],[44,43,44,15,"cursor"],[44,49,44,21],[44,50,44,22,"readUint8"],[44,59,44,31],[44,60,44,32],[44,61,44,33],[45,4,45,4],[45,8,45,8,"prefix"],[45,14,45,14],[45,19,45,19,"offset"],[45,25,45,25],[45,28,45,28],[45,30,45,30],[45,33,45,33],[45,34,45,34],[45,36,46,8],[45,43,46,15,"cursor"],[45,49,46,21],[45,50,46,22,"readUint16"],[45,60,46,32],[45,61,46,33],[45,62,46,34],[46,4,47,4],[46,8,47,8,"prefix"],[46,14,47,14],[46,19,47,19,"offset"],[46,25,47,25],[46,28,47,28],[46,30,47,30],[46,33,47,33],[46,34,47,34],[46,36,48,8],[46,43,48,15,"cursor"],[46,49,48,21],[46,50,48,22,"readUint24"],[46,60,48,32],[46,61,48,33],[46,62,48,34],[47,4,49,4],[47,8,49,8,"prefix"],[47,14,49,14],[47,19,49,19,"offset"],[47,25,49,25],[47,28,49,28],[47,30,49,30],[47,33,49,33],[47,34,49,34],[47,36,50,8],[47,43,50,15,"cursor"],[47,49,50,21],[47,50,50,22,"readUint32"],[47,60,50,32],[47,61,50,33],[47,62,50,34],[48,4,51,4],[48,10,51,10],[48,14,51,14,"base_js_1"],[48,23,51,23],[48,24,51,24,"BaseError"],[48,33,51,33],[48,34,51,34],[48,54,51,54],[48,55,51,55],[49,2,52,0],[50,2,53,0],[50,11,53,9,"readList"],[50,19,53,17,"readList"],[50,20,53,18,"cursor"],[50,26,53,24],[50,28,53,26,"length"],[50,34,53,32],[50,36,53,34,"to"],[50,38,53,36],[50,40,53,38],[51,4,54,4],[51,8,54,10,"position"],[51,16,54,18],[51,19,54,21,"cursor"],[51,25,54,27],[51,26,54,28,"position"],[51,34,54,36],[52,4,55,4],[52,8,55,10,"value"],[52,13,55,15],[52,16,55,18],[52,18,55,20],[53,4,56,4],[53,11,56,11,"cursor"],[53,17,56,17],[53,18,56,18,"position"],[53,26,56,26],[53,29,56,29,"position"],[53,37,56,37],[53,40,56,40,"length"],[53,46,56,46],[53,48,57,8,"value"],[53,53,57,13],[53,54,57,14,"push"],[53,58,57,18],[53,59,57,19,"fromRlpCursor"],[53,72,57,32],[53,73,57,33,"cursor"],[53,79,57,39],[53,81,57,41,"to"],[53,83,57,43],[53,84,57,44],[53,85,57,45],[54,4,58,4],[54,11,58,11,"value"],[54,16,58,16],[55,2,59,0],[56,0,59,1],[56,3]],"functionMap":{"names":["<global>","fromRlp","<anonymous>","fromRlpCursor","readLength","readList"],"mappings":"AAA;ACQ;mBCC;KDO;CDM;AGC;CHa;AIC;CJc;AKC;CLM"}},"type":"js/module"}]}