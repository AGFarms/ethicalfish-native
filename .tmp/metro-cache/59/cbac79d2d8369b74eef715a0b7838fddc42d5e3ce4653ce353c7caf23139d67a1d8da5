{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n   * Asserts fact is true, otherwise throw an error with invariant message\n   * @param fact\n   * @param msg\n   * @param rest\n   */\n  function invariant(fact, msg) {\n    if (!fact) {\n      var error = new Error(`INVARIANT ${msg}`);\n      error.stack = error.stack?.split(\"\\n\")?.filter(d => !/at invariant/.test(d))?.join(\"\\n\");\n      for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        rest[_key - 2] = arguments[_key];\n      }\n      console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\");\n      throw error;\n    }\n  }\n  exports.invariant = invariant;\n});","lineCount":22,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,2,9,0],[10,11,9,9,"invariant"],[10,20,9,18,"invariant"],[10,21,9,19,"fact"],[10,25,9,23],[10,27,9,25,"msg"],[10,30,9,28],[10,32,9,30],[11,4,10,2],[11,8,10,6],[11,9,10,7,"fact"],[11,13,10,11],[11,15,10,13],[12,6,11,4],[12,10,11,10,"error"],[12,15,11,15],[12,18,11,18],[12,22,11,22,"Error"],[12,27,11,27],[12,28,11,28],[12,41,11,41,"msg"],[12,44,11,44],[12,46,11,46],[12,47,11,47],[13,6,12,4,"error"],[13,11,12,9],[13,12,12,10,"stack"],[13,17,12,15],[13,20,12,18,"error"],[13,25,12,23],[13,26,12,24,"stack"],[13,31,12,29],[13,33,12,31,"split"],[13,38,12,36],[13,39,12,37],[13,43,12,41],[13,44,12,42],[13,46,12,44,"filter"],[13,52,12,50],[13,53,12,51,"d"],[13,54,12,52],[13,58,12,56],[13,59,12,57],[13,73,12,71],[13,74,12,72,"test"],[13,78,12,76],[13,79,12,77,"d"],[13,80,12,78],[13,81,12,79],[13,82,12,80],[13,84,12,82,"join"],[13,88,12,86],[13,89,12,87],[13,93,12,91],[13,94,12,92],[14,6,13,4],[14,11,13,9],[14,15,13,13,"_len"],[14,19,13,17],[14,22,13,20,"arguments"],[14,31,13,29],[14,32,13,30,"length"],[14,38,13,36],[14,40,13,38,"rest"],[14,44,13,42],[14,47,13,45],[14,51,13,49,"Array"],[14,56,13,54],[14,57,13,55,"_len"],[14,61,13,59],[14,64,13,62],[14,65,13,63],[14,68,13,66,"_len"],[14,72,13,70],[14,75,13,73],[14,76,13,74],[14,79,13,77],[14,80,13,78],[14,81,13,79],[14,83,13,81,"_key"],[14,87,13,85],[14,90,13,88],[14,91,13,89],[14,93,13,91,"_key"],[14,97,13,95],[14,100,13,98,"_len"],[14,104,13,102],[14,106,13,104,"_key"],[14,110,13,108],[14,112,13,110],[14,114,13,112],[15,8,14,6,"rest"],[15,12,14,10],[15,13,14,11,"_key"],[15,17,14,15],[15,20,14,18],[15,21,14,19],[15,22,14,20],[15,25,14,23,"arguments"],[15,34,14,32],[15,35,14,33,"_key"],[15,39,14,37],[15,40,14,38],[16,6,15,4],[17,6,16,4,"console"],[17,13,16,11],[17,14,16,12,"error"],[17,19,16,17],[17,20,16,18],[17,33,16,31],[17,35,16,33,"error"],[17,40,16,38],[17,42,16,40],[17,48,16,46],[17,50,16,48],[17,53,16,51,"rest"],[17,57,16,55],[17,59,16,57],[17,72,16,70],[17,73,16,71],[18,6,17,4],[18,12,17,10,"error"],[18,17,17,15],[19,4,18,2],[20,2,19,0],[21,2,21,0,"exports"],[21,9,21,7],[21,10,21,8,"invariant"],[21,19,21,17],[21,22,21,20,"invariant"],[21,31,21,29],[22,0,21,30],[22,3]],"functionMap":{"names":["<global>","invariant","error.stack.split.filter$argument_0"],"mappings":"AAA;ACQ;mDCG,4BD;CDO"}},"type":"js/module"}]}