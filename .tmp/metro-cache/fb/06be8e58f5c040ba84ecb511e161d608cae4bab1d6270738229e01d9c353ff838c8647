{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":228,"column":44,"index":8737}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":42,"index":167},"end":{"line":7,"column":65,"index":190}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./getPatternParts.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}}],"key":"z4Ap0VIyJOTYCzFllv6s+WEku7M="}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":26,"index":275},"end":{"line":9,"column":60,"index":309}}],"key":"VmpJdDW9SG25WCfHhqlvsXwd7IE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var queryString = _interopRequireWildcard(require(_dependencyMap[1], \"query-string\"));\n  var _getPatternParts = require(_dependencyMap[2], \"./getPatternParts.js\");\n  var _validatePathConfig = require(_dependencyMap[3], \"./validatePathConfig.js\");\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfig.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var stringify = currentOptions[route.name]?.stringify;\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = _slicedToArray(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            return [key, stringify?.[key] ? stringify[key](value) : String(value)];\n          }));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, _getPatternParts.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternParts.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternParts.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":270,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"getPathFromState"],[8,26,6,24],[8,29,6,27,"getPathFromState"],[8,45,6,43],[9,2,7,0],[9,6,7,4,"queryString"],[9,17,7,15],[9,20,7,18,"_interopRequireWildcard"],[9,43,7,41],[9,44,7,42,"require"],[9,51,7,49],[9,52,7,49,"_dependencyMap"],[9,66,7,49],[9,85,7,64],[9,86,7,65],[9,87,7,66],[10,2,8,0],[10,6,8,4,"_getPatternParts"],[10,22,8,20],[10,25,8,23,"require"],[10,32,8,30],[10,33,8,30,"_dependencyMap"],[10,47,8,30],[10,74,8,53],[10,75,8,54],[11,2,9,0],[11,6,9,4,"_validatePathConfig"],[11,25,9,23],[11,28,9,26,"require"],[11,35,9,33],[11,36,9,33,"_dependencyMap"],[11,50,9,33],[11,80,9,59],[11,81,9,60],[12,2,10,0],[12,11,10,9,"_getRequireWildcardCache"],[12,35,10,33,"_getRequireWildcardCache"],[12,36,10,34,"e"],[12,37,10,35],[12,39,10,37],[13,4,10,39],[13,8,10,43],[13,18,10,53],[13,22,10,57],[13,29,10,64,"WeakMap"],[13,36,10,71],[13,38,10,73],[13,45,10,80],[13,49,10,84],[14,4,10,86],[14,8,10,90,"r"],[14,9,10,91],[14,12,10,94],[14,16,10,98,"WeakMap"],[14,23,10,105],[14,24,10,106],[14,25,10,107],[15,6,10,109,"t"],[15,7,10,110],[15,10,10,113],[15,14,10,117,"WeakMap"],[15,21,10,124],[15,22,10,125],[15,23,10,126],[16,4,10,128],[16,11,10,135],[16,12,10,136,"_getRequireWildcardCache"],[16,36,10,160],[16,39,10,163],[16,48,10,163,"_getRequireWildcardCache"],[16,49,10,173,"e"],[16,50,10,174],[16,52,10,176],[17,6,10,178],[17,13,10,185,"e"],[17,14,10,186],[17,17,10,189,"t"],[17,18,10,190],[17,21,10,193,"r"],[17,22,10,194],[18,4,10,196],[18,5,10,197],[18,7,10,199,"e"],[18,8,10,200],[18,9,10,201],[19,2,10,203],[20,2,11,0],[20,11,11,9,"_interopRequireWildcard"],[20,34,11,32,"_interopRequireWildcard"],[20,35,11,33,"e"],[20,36,11,34],[20,38,11,36,"r"],[20,39,11,37],[20,41,11,39],[21,4,11,41],[21,8,11,45],[21,9,11,46,"r"],[21,10,11,47],[21,14,11,51,"e"],[21,15,11,52],[21,19,11,56,"e"],[21,20,11,57],[21,21,11,58,"__esModule"],[21,31,11,68],[21,33,11,70],[21,40,11,77,"e"],[21,41,11,78],[22,4,11,80],[22,8,11,84],[22,12,11,88],[22,17,11,93,"e"],[22,18,11,94],[22,22,11,98],[22,30,11,106],[22,34,11,110],[22,41,11,117,"e"],[22,42,11,118],[22,46,11,122],[22,56,11,132],[22,60,11,136],[22,67,11,143,"e"],[22,68,11,144],[22,70,11,146],[22,77,11,153],[23,6,11,155,"default"],[23,13,11,162],[23,15,11,164,"e"],[24,4,11,166],[24,5,11,167],[25,4,11,169],[25,8,11,173,"t"],[25,9,11,174],[25,12,11,177,"_getRequireWildcardCache"],[25,36,11,201],[25,37,11,202,"r"],[25,38,11,203],[25,39,11,204],[26,4,11,206],[26,8,11,210,"t"],[26,9,11,211],[26,13,11,215,"t"],[26,14,11,216],[26,15,11,217,"has"],[26,18,11,220],[26,19,11,221,"e"],[26,20,11,222],[26,21,11,223],[26,23,11,225],[26,30,11,232,"t"],[26,31,11,233],[26,32,11,234,"get"],[26,35,11,237],[26,36,11,238,"e"],[26,37,11,239],[26,38,11,240],[27,4,11,242],[27,8,11,246,"n"],[27,9,11,247],[27,12,11,250],[28,8,11,252,"__proto__"],[28,17,11,261],[28,19,11,263],[29,6,11,268],[29,7,11,269],[30,6,11,271,"a"],[30,7,11,272],[30,10,11,275,"Object"],[30,16,11,281],[30,17,11,282,"defineProperty"],[30,31,11,296],[30,35,11,300,"Object"],[30,41,11,306],[30,42,11,307,"getOwnPropertyDescriptor"],[30,66,11,331],[31,4,11,333],[31,9,11,338],[31,13,11,342,"u"],[31,14,11,343],[31,18,11,347,"e"],[31,19,11,348],[31,21,11,350],[31,25,11,354],[31,34,11,363],[31,39,11,368,"u"],[31,40,11,369],[31,44,11,373],[31,45,11,374],[31,46,11,375],[31,47,11,376,"hasOwnProperty"],[31,61,11,390],[31,62,11,391,"call"],[31,66,11,395],[31,67,11,396,"e"],[31,68,11,397],[31,70,11,399,"u"],[31,71,11,400],[31,72,11,401],[31,74,11,403],[32,6,11,405],[32,10,11,409,"i"],[32,11,11,410],[32,14,11,413,"a"],[32,15,11,414],[32,18,11,417,"Object"],[32,24,11,423],[32,25,11,424,"getOwnPropertyDescriptor"],[32,49,11,448],[32,50,11,449,"e"],[32,51,11,450],[32,53,11,452,"u"],[32,54,11,453],[32,55,11,454],[32,58,11,457],[32,62,11,461],[33,6,11,463,"i"],[33,7,11,464],[33,12,11,469,"i"],[33,13,11,470],[33,14,11,471,"get"],[33,17,11,474],[33,21,11,478,"i"],[33,22,11,479],[33,23,11,480,"set"],[33,26,11,483],[33,27,11,484],[33,30,11,487,"Object"],[33,36,11,493],[33,37,11,494,"defineProperty"],[33,51,11,508],[33,52,11,509,"n"],[33,53,11,510],[33,55,11,512,"u"],[33,56,11,513],[33,58,11,515,"i"],[33,59,11,516],[33,60,11,517],[33,63,11,520,"n"],[33,64,11,521],[33,65,11,522,"u"],[33,66,11,523],[33,67,11,524],[33,70,11,527,"e"],[33,71,11,528],[33,72,11,529,"u"],[33,73,11,530],[33,74,11,531],[34,4,11,533],[35,4,11,535],[35,11,11,542,"n"],[35,12,11,543],[35,13,11,544,"default"],[35,20,11,551],[35,23,11,554,"e"],[35,24,11,555],[35,26,11,557,"t"],[35,27,11,558],[35,31,11,562,"t"],[35,32,11,563],[35,33,11,564,"set"],[35,36,11,567],[35,37,11,568,"e"],[35,38,11,569],[35,40,11,571,"n"],[35,41,11,572],[35,42,11,573],[35,44,11,575,"n"],[35,45,11,576],[36,2,11,578],[37,2,12,0],[37,6,12,6,"getActiveRoute"],[37,20,12,20],[37,23,12,23,"state"],[37,28,12,28],[37,32,12,32],[38,4,13,2],[38,8,13,8,"route"],[38,13,13,13],[38,16,13,16],[38,23,13,23,"state"],[38,28,13,28],[38,29,13,29,"index"],[38,34,13,34],[38,39,13,39],[38,47,13,47],[38,50,13,50,"state"],[38,55,13,55],[38,56,13,56,"routes"],[38,62,13,62],[38,63,13,63,"state"],[38,68,13,68],[38,69,13,69,"index"],[38,74,13,74],[38,75,13,75],[38,78,13,78,"state"],[38,83,13,83],[38,84,13,84,"routes"],[38,90,13,90],[38,91,13,91,"state"],[38,96,13,96],[38,97,13,97,"routes"],[38,103,13,103],[38,104,13,104,"length"],[38,110,13,110],[38,113,13,113],[38,114,13,114],[38,115,13,115],[39,4,14,2],[39,8,14,6,"route"],[39,13,14,11],[39,14,14,12,"state"],[39,19,14,17],[39,21,14,19],[40,6,15,4],[40,13,15,11,"getActiveRoute"],[40,27,15,25],[40,28,15,26,"route"],[40,33,15,31],[40,34,15,32,"state"],[40,39,15,37],[40,40,15,38],[41,4,16,2],[42,4,17,2],[42,11,17,9,"route"],[42,16,17,14],[43,2,18,0],[43,3,18,1],[44,2,19,0],[44,6,19,6,"cachedNormalizedConfigs"],[44,29,19,29],[44,32,19,32],[44,36,19,36,"WeakMap"],[44,43,19,43],[44,44,19,44],[44,45,19,45],[45,2,20,0],[45,6,20,6,"getNormalizedConfigs"],[45,26,20,26],[45,29,20,29,"options"],[45,36,20,36],[45,40,20,40],[46,4,21,2],[46,8,21,6],[46,9,21,7,"options"],[46,16,21,14],[46,18,21,16,"screens"],[46,25,21,23],[46,27,21,25],[46,34,21,32],[46,35,21,33],[46,36,21,34],[47,4,22,2],[47,8,22,8,"cached"],[47,14,22,14],[47,17,22,17,"cachedNormalizedConfigs"],[47,40,22,40],[47,41,22,41,"get"],[47,44,22,44],[47,45,22,45,"options"],[47,52,22,52],[47,54,22,54,"screens"],[47,61,22,61],[47,62,22,62],[48,4,23,2],[48,8,23,6,"cached"],[48,14,23,12],[48,16,23,14],[48,23,23,21,"cached"],[48,29,23,27],[49,4,24,2],[49,8,24,8,"normalizedConfigs"],[49,25,24,25],[49,28,24,28,"createNormalizedConfigs"],[49,51,24,51],[49,52,24,52,"options"],[49,59,24,59],[49,60,24,60,"screens"],[49,67,24,67],[49,68,24,68],[50,4,25,2,"cachedNormalizedConfigs"],[50,27,25,25],[50,28,25,26,"set"],[50,31,25,29],[50,32,25,30,"options"],[50,39,25,37],[50,40,25,38,"screens"],[50,47,25,45],[50,49,25,47,"normalizedConfigs"],[50,66,25,64],[50,67,25,65],[51,4,26,2],[51,11,26,9,"normalizedConfigs"],[51,28,26,26],[52,2,27,0],[52,3,27,1],[54,2,29,0],[55,0,30,0],[56,0,31,0],[57,0,32,0],[58,0,33,0],[59,0,34,0],[60,0,35,0],[61,0,36,0],[62,0,37,0],[63,0,38,0],[64,0,39,0],[65,0,40,0],[66,0,41,0],[67,0,42,0],[68,0,43,0],[69,0,44,0],[70,0,45,0],[71,0,46,0],[72,0,47,0],[73,0,48,0],[74,0,49,0],[75,0,50,0],[76,0,51,0],[77,0,52,0],[78,0,53,0],[79,0,54,0],[80,0,55,0],[81,0,56,0],[82,0,57,0],[83,2,58,0],[83,11,58,9,"getPathFromState"],[83,27,58,25,"getPathFromState"],[83,28,58,26,"state"],[83,33,58,31],[83,35,58,33,"options"],[83,42,58,40],[83,44,58,42],[84,4,59,2],[84,8,59,6,"state"],[84,13,59,11],[84,17,59,15],[84,21,59,19],[84,23,59,21],[85,6,60,4],[85,12,60,10,"Error"],[85,17,60,15],[85,18,60,16],[85,26,60,24,"String"],[85,32,60,30],[85,33,60,31,"state"],[85,38,60,36],[85,39,60,37],[85,104,60,102],[85,105,60,103],[86,4,61,2],[87,4,62,2],[87,8,62,6,"options"],[87,15,62,13],[87,17,62,15],[88,6,63,4],[88,7,63,5],[88,8,63,6],[88,10,63,8,"_validatePathConfig"],[88,29,63,27],[88,30,63,28,"validatePathConfig"],[88,48,63,46],[88,50,63,48,"options"],[88,57,63,55],[88,58,63,56],[89,4,64,2],[90,4,65,2],[90,8,65,8,"configs"],[90,15,65,15],[90,18,65,18,"getNormalizedConfigs"],[90,38,65,38],[90,39,65,39,"options"],[90,46,65,46],[90,47,65,47],[91,4,66,2],[91,8,66,6,"path"],[91,12,66,10],[91,15,66,13],[91,18,66,16],[92,4,67,2],[92,8,67,6,"current"],[92,15,67,13],[92,18,67,16,"state"],[92,23,67,21],[93,4,68,2],[93,8,68,8,"allParams"],[93,17,68,17],[93,20,68,20],[93,21,68,21],[93,22,68,22],[94,4,68,23],[94,8,68,23,"_loop"],[94,13,68,23],[94,25,68,23,"_loop"],[94,26,68,23],[94,28,69,18],[95,6,70,4],[95,10,70,8,"index"],[95,15,70,13],[95,18,70,16],[95,25,70,23,"current"],[95,32,70,30],[95,33,70,31,"index"],[95,38,70,36],[95,43,70,41],[95,51,70,49],[95,54,70,52,"current"],[95,61,70,59],[95,62,70,60,"index"],[95,67,70,65],[95,70,70,68],[95,71,70,69],[96,6,71,4],[96,10,71,8,"route"],[96,15,71,13],[96,18,71,16,"current"],[96,25,71,23],[96,26,71,24,"routes"],[96,32,71,30],[96,33,71,31,"index"],[96,38,71,36],[96,39,71,37],[97,6,72,4],[97,10,72,8,"parts"],[97,15,72,13],[98,6,73,4],[98,10,73,8,"focusedParams"],[98,23,73,21],[99,6,74,4],[99,10,74,8,"currentOptions"],[99,24,74,22],[99,27,74,25,"configs"],[99,34,74,32],[100,6,75,4],[100,10,75,10,"focusedRoute"],[100,22,75,22],[100,25,75,25,"getActiveRoute"],[100,39,75,39],[100,40,75,40,"state"],[100,45,75,45],[100,46,75,46],[102,6,77,4],[103,6,78,4],[103,10,78,10,"nestedRouteNames"],[103,26,78,26],[103,29,78,29],[103,31,78,31],[104,6,79,4],[104,10,79,8,"hasNext"],[104,17,79,15],[104,20,79,18],[104,24,79,22],[105,6,79,23],[105,10,79,23,"_loop2"],[105,16,79,23],[105,28,79,23,"_loop2"],[105,29,79,23],[105,31,80,52],[106,8,81,6,"parts"],[106,13,81,11],[106,16,81,14,"currentOptions"],[106,30,81,28],[106,31,81,29,"route"],[106,36,81,34],[106,37,81,35,"name"],[106,41,81,39],[106,42,81,40],[106,43,81,41,"parts"],[106,48,81,46],[107,8,82,6,"nestedRouteNames"],[107,24,82,22],[107,25,82,23,"push"],[107,29,82,27],[107,30,82,28,"route"],[107,35,82,33],[107,36,82,34,"name"],[107,40,82,38],[107,41,82,39],[108,8,83,6],[108,12,83,10,"route"],[108,17,83,15],[108,18,83,16,"params"],[108,24,83,22],[108,26,83,24],[109,10,84,8],[109,14,84,14,"stringify"],[109,23,84,23],[109,26,84,26,"currentOptions"],[109,40,84,40],[109,41,84,41,"route"],[109,46,84,46],[109,47,84,47,"name"],[109,51,84,51],[109,52,84,52],[109,54,84,54,"stringify"],[109,63,84,63],[110,10,85,8],[110,14,85,14,"currentParams"],[110,27,85,27],[110,30,85,30,"Object"],[110,36,85,36],[110,37,85,37,"fromEntries"],[110,48,85,48],[110,49,85,49,"Object"],[110,55,85,55],[110,56,85,56,"entries"],[110,63,85,63],[110,64,85,64,"route"],[110,69,85,69],[110,70,85,70,"params"],[110,76,85,76],[110,77,85,77],[110,78,85,78,"map"],[110,81,85,81],[110,82,85,82,"_ref4"],[110,87,85,82],[111,12,85,82],[111,16,85,82,"_ref5"],[111,21,85,82],[111,24,85,82,"_slicedToArray"],[111,38,85,82],[111,39,85,82,"_ref4"],[111,44,85,82],[112,14,85,84,"key"],[112,17,85,87],[112,20,85,87,"_ref5"],[112,25,85,87],[113,14,85,89,"value"],[113,19,85,94],[113,22,85,94,"_ref5"],[113,27,85,94],[114,12,85,94],[114,19,85,100],[114,20,85,101,"key"],[114,23,85,104],[114,25,85,106,"stringify"],[114,34,85,115],[114,37,85,118,"key"],[114,40,85,121],[114,41,85,122],[114,44,85,125,"stringify"],[114,53,85,134],[114,54,85,135,"key"],[114,57,85,138],[114,58,85,139],[114,59,85,140,"value"],[114,64,85,145],[114,65,85,146],[114,68,85,149,"String"],[114,74,85,155],[114,75,85,156,"value"],[114,80,85,161],[114,81,85,162],[114,82,85,163],[115,10,85,163],[115,12,85,164],[115,13,85,165],[116,10,86,8],[116,14,86,12,"parts"],[116,19,86,17],[116,21,86,19,"length"],[116,27,86,25],[116,29,86,27],[117,12,87,10,"Object"],[117,18,87,16],[117,19,87,17,"assign"],[117,25,87,23],[117,26,87,24,"allParams"],[117,35,87,33],[117,37,87,35,"currentParams"],[117,50,87,48],[117,51,87,49],[118,10,88,8],[119,10,89,8],[119,14,89,12,"focusedRoute"],[119,26,89,24],[119,31,89,29,"route"],[119,36,89,34],[119,38,89,36],[120,12,90,10],[121,12,91,10],[122,12,92,10,"focusedParams"],[122,25,92,23],[122,28,92,26],[123,14,93,12],[123,17,93,15,"currentParams"],[124,12,94,10],[124,13,94,11],[125,12,95,10,"parts"],[126,12,96,10],[127,12,96,10],[127,14,97,12,"forEach"],[127,21,97,19],[127,22,97,20,"_ref6"],[127,27,97,20],[127,31,99,16],[128,14,99,16],[128,18,98,12,"param"],[128,23,98,17],[128,26,98,17,"_ref6"],[128,31,98,17],[128,32,98,12,"param"],[128,37,98,17],[129,14,100,12],[129,18,100,16,"param"],[129,23,100,21],[129,25,100,23],[130,16,101,14],[131,16,102,14],[131,20,102,18,"focusedParams"],[131,33,102,31],[131,35,102,33],[132,18,103,16],[133,18,104,16],[133,25,104,23,"focusedParams"],[133,38,104,36],[133,39,104,37,"param"],[133,44,104,42],[133,45,104,43],[134,16,105,14],[135,14,106,12],[136,12,107,10],[136,13,107,11],[136,14,107,12],[137,10,108,8],[138,8,109,6],[140,8,111,6],[141,8,112,6],[141,12,112,10],[141,13,112,11,"currentOptions"],[141,27,112,25],[141,28,112,26,"route"],[141,33,112,31],[141,34,112,32,"name"],[141,38,112,36],[141,39,112,37],[141,40,112,38,"screens"],[141,47,112,45],[141,51,112,49,"route"],[141,56,112,54],[141,57,112,55,"state"],[141,62,112,60],[141,67,112,65,"undefined"],[141,76,112,74],[141,78,112,76],[142,10,113,8,"hasNext"],[142,17,113,15],[142,20,113,18],[142,25,113,23],[143,8,114,6],[143,9,114,7],[143,15,114,13],[144,10,115,8,"index"],[144,15,115,13],[144,18,115,16],[144,25,115,23,"route"],[144,30,115,28],[144,31,115,29,"state"],[144,36,115,34],[144,37,115,35,"index"],[144,42,115,40],[144,47,115,45],[144,55,115,53],[144,58,115,56,"route"],[144,63,115,61],[144,64,115,62,"state"],[144,69,115,67],[144,70,115,68,"index"],[144,75,115,73],[144,78,115,76,"route"],[144,83,115,81],[144,84,115,82,"state"],[144,89,115,87],[144,90,115,88,"routes"],[144,96,115,94],[144,97,115,95,"length"],[144,103,115,101],[144,106,115,104],[144,107,115,105],[145,10,116,8],[145,14,116,14,"nextRoute"],[145,23,116,23],[145,26,116,26,"route"],[145,31,116,31],[145,32,116,32,"state"],[145,37,116,37],[145,38,116,38,"routes"],[145,44,116,44],[145,45,116,45,"index"],[145,50,116,50],[145,51,116,51],[146,10,117,8],[146,14,117,14,"nestedConfig"],[146,26,117,26],[146,29,117,29,"currentOptions"],[146,43,117,43],[146,44,117,44,"route"],[146,49,117,49],[146,50,117,50,"name"],[146,54,117,54],[146,55,117,55],[146,56,117,56,"screens"],[146,63,117,63],[148,10,119,8],[149,10,120,8],[149,14,120,12,"nestedConfig"],[149,26,120,24],[149,30,120,28,"nextRoute"],[149,39,120,37],[149,40,120,38,"name"],[149,44,120,42],[149,48,120,46,"nestedConfig"],[149,60,120,58],[149,62,120,60],[150,12,121,10,"route"],[150,17,121,15],[150,20,121,18,"nextRoute"],[150,29,121,27],[151,12,122,10,"currentOptions"],[151,26,122,24],[151,29,122,27,"nestedConfig"],[151,41,122,39],[152,10,123,8],[152,11,123,9],[152,17,123,15],[153,12,124,10],[154,12,125,10,"hasNext"],[154,19,125,17],[154,22,125,20],[154,27,125,25],[155,10,126,8],[156,8,127,6],[157,6,128,4],[157,7,128,5],[158,6,80,4],[158,13,80,11,"route"],[158,18,80,16],[158,19,80,17,"name"],[158,23,80,21],[158,27,80,25,"currentOptions"],[158,41,80,39],[158,45,80,43,"hasNext"],[158,52,80,50],[159,8,80,50,"_loop2"],[159,14,80,50],[160,6,80,50],[161,6,129,4],[161,10,129,8,"currentOptions"],[161,24,129,22],[161,25,129,23,"route"],[161,30,129,28],[161,31,129,29,"name"],[161,35,129,33],[161,36,129,34],[161,41,129,39,"undefined"],[161,50,129,48],[161,52,129,50],[162,8,130,6,"path"],[162,12,130,10],[162,16,130,14,"parts"],[162,21,130,19],[162,23,130,21,"map"],[162,26,130,24],[162,27,130,25,"_ref"],[162,31,130,25],[162,35,134,12],[163,10,134,12],[163,14,131,8,"segment"],[163,21,131,15],[163,24,131,15,"_ref"],[163,28,131,15],[163,29,131,8,"segment"],[163,36,131,15],[164,12,132,8,"param"],[164,17,132,13],[164,20,132,13,"_ref"],[164,24,132,13],[164,25,132,8,"param"],[164,30,132,13],[165,12,133,8,"optional"],[165,20,133,16],[165,23,133,16,"_ref"],[165,27,133,16],[165,28,133,8,"optional"],[165,36,133,16],[166,10,135,8],[167,10,136,8],[168,10,137,8],[169,10,138,8],[169,14,138,12,"segment"],[169,21,138,19],[169,26,138,24],[169,29,138,27],[169,31,138,29],[170,12,139,10],[170,19,139,17,"route"],[170,24,139,22],[170,25,139,23,"name"],[170,29,139,27],[171,10,140,8],[173,10,142,8],[174,10,143,8],[174,14,143,12,"param"],[174,19,143,17],[174,21,143,19],[175,12,144,10],[175,16,144,16,"value"],[175,21,144,21],[175,24,144,24,"allParams"],[175,33,144,33],[175,34,144,34,"param"],[175,39,144,39],[175,40,144,40],[176,12,145,10],[176,16,145,14,"value"],[176,21,145,19],[176,26,145,24,"undefined"],[176,35,145,33],[176,39,145,37,"optional"],[176,47,145,45],[176,49,145,47],[177,14,146,12],[178,14,147,12],[178,21,147,19],[178,23,147,21],[179,12,148,10],[181,12,150,10],[182,12,151,10],[183,12,152,10],[183,19,152,17,"String"],[183,25,152,23],[183,26,152,24,"value"],[183,31,152,29],[183,32,152,30],[183,33,152,31,"replace"],[183,40,152,38],[183,41,152,39],[183,74,152,72],[183,76,152,74,"char"],[183,80,152,78],[183,84,152,82,"encodeURIComponent"],[183,102,152,100],[183,103,152,101,"char"],[183,107,152,105],[183,108,152,106],[183,109,152,107],[184,10,153,8],[185,10,154,8],[185,17,154,15,"encodeURIComponent"],[185,35,154,33],[185,36,154,34,"segment"],[185,43,154,41],[185,44,154,42],[186,8,155,6],[186,9,155,7],[186,10,155,8],[186,11,155,9,"join"],[186,15,155,13],[186,16,155,14],[186,19,155,17],[186,20,155,18],[187,6,156,4],[187,7,156,5],[187,13,156,11],[188,8,157,6,"path"],[188,12,157,10],[188,16,157,14,"encodeURIComponent"],[188,34,157,32],[188,35,157,33,"route"],[188,40,157,38],[188,41,157,39,"name"],[188,45,157,43],[188,46,157,44],[189,6,158,4],[190,6,159,4],[190,10,159,8],[190,11,159,9,"focusedParams"],[190,24,159,22],[190,28,159,26,"focusedRoute"],[190,40,159,38],[190,41,159,39,"params"],[190,47,159,45],[190,49,159,47],[191,8,160,6,"focusedParams"],[191,21,160,19],[191,24,160,22,"Object"],[191,30,160,28],[191,31,160,29,"fromEntries"],[191,42,160,40],[191,43,160,41,"Object"],[191,49,160,47],[191,50,160,48,"entries"],[191,57,160,55],[191,58,160,56,"focusedRoute"],[191,70,160,68],[191,71,160,69,"params"],[191,77,160,75],[191,78,160,76],[191,79,160,77,"map"],[191,82,160,80],[191,83,160,81,"_ref2"],[191,88,160,81],[192,10,160,81],[192,14,160,81,"_ref3"],[192,19,160,81],[192,22,160,81,"_slicedToArray"],[192,36,160,81],[192,37,160,81,"_ref2"],[192,42,160,81],[193,12,160,83,"key"],[193,15,160,86],[193,18,160,86,"_ref3"],[193,23,160,86],[194,12,160,88,"value"],[194,17,160,93],[194,20,160,93,"_ref3"],[194,25,160,93],[195,10,160,93],[195,17,160,99],[195,18,160,100,"key"],[195,21,160,103],[195,23,160,105,"String"],[195,29,160,111],[195,30,160,112,"value"],[195,35,160,117],[195,36,160,118],[195,37,160,119],[196,8,160,119],[196,10,160,120],[196,11,160,121],[197,6,161,4],[198,6,162,4],[198,10,162,8,"route"],[198,15,162,13],[198,16,162,14,"state"],[198,21,162,19],[198,23,162,21],[199,8,163,6,"path"],[199,12,163,10],[199,16,163,14],[199,19,163,17],[200,6,164,4],[200,7,164,5],[200,13,164,11],[200,17,164,15,"focusedParams"],[200,30,164,28],[200,32,164,30],[201,8,165,6],[201,13,165,11],[201,17,165,17,"param"],[201,22,165,22],[201,26,165,26,"focusedParams"],[201,39,165,39],[201,41,165,41],[202,10,166,8],[202,14,166,12,"focusedParams"],[202,27,166,25],[202,28,166,26,"param"],[202,33,166,31],[202,34,166,32],[202,39,166,37],[202,50,166,48],[202,52,166,50],[203,12,167,10],[204,12,168,10],[204,19,168,17,"focusedParams"],[204,32,168,30],[204,33,168,31,"param"],[204,38,168,36],[204,39,168,37],[205,10,169,8],[206,8,170,6],[207,8,171,6],[207,12,171,12,"query"],[207,17,171,17],[207,20,171,20,"queryString"],[207,31,171,31],[207,32,171,32,"stringify"],[207,41,171,41],[207,42,171,42,"focusedParams"],[207,55,171,55],[207,57,171,57],[208,10,172,8,"sort"],[208,14,172,12],[208,16,172,14],[209,8,173,6],[209,9,173,7],[209,10,173,8],[210,8,174,6],[210,12,174,10,"query"],[210,17,174,15],[210,19,174,17],[211,10,175,8,"path"],[211,14,175,12],[211,18,175,16],[211,22,175,20,"query"],[211,27,175,25],[211,29,175,27],[212,8,176,6],[213,6,177,4],[214,6,178,4,"current"],[214,13,178,11],[214,16,178,14,"route"],[214,21,178,19],[214,22,178,20,"state"],[214,27,178,25],[215,4,179,2],[215,5,179,3],[216,4,69,2],[216,11,69,9,"current"],[216,18,69,16],[217,6,69,16,"_loop"],[217,11,69,16],[218,4,69,16],[220,4,181,2],[221,4,182,2],[221,8,182,6,"options"],[221,15,182,13],[221,17,182,15,"path"],[221,21,182,19],[221,23,182,21],[222,6,183,4,"path"],[222,10,183,8],[222,13,183,11],[222,16,183,14,"options"],[222,23,183,21],[222,24,183,22,"path"],[222,28,183,26],[222,32,183,30,"path"],[222,36,183,34],[222,38,183,36],[223,4,184,2],[225,4,186,2],[226,4,187,2,"path"],[226,8,187,6],[226,11,187,9,"path"],[226,15,187,13],[226,16,187,14,"replace"],[226,23,187,21],[226,24,187,22],[226,30,187,28],[226,32,187,30],[226,35,187,33],[226,36,187,34],[227,4,188,2,"path"],[227,8,188,6],[227,11,188,9,"path"],[227,15,188,13],[227,16,188,14,"length"],[227,22,188,20],[227,25,188,23],[227,26,188,24],[227,29,188,27,"path"],[227,33,188,31],[227,34,188,32,"replace"],[227,41,188,39],[227,42,188,40],[227,47,188,45],[227,49,188,47],[227,51,188,49],[227,52,188,50],[227,55,188,53,"path"],[227,59,188,57],[229,4,190,2],[230,4,191,2],[231,4,192,2],[231,8,192,6],[231,9,192,7,"path"],[231,13,192,11],[231,14,192,12,"startsWith"],[231,24,192,22],[231,25,192,23],[231,28,192,26],[231,29,192,27],[231,31,192,29],[232,6,193,4,"path"],[232,10,193,8],[232,13,193,11],[232,17,193,15,"path"],[232,21,193,19],[232,23,193,21],[233,4,194,2],[234,4,195,2],[234,11,195,9,"path"],[234,15,195,13],[235,2,196,0],[236,2,197,0],[236,6,197,6,"createConfigItem"],[236,22,197,22],[236,25,197,25,"createConfigItem"],[236,26,197,26,"config"],[236,32,197,32],[236,34,197,34,"parentParts"],[236,45,197,45],[236,50,197,50],[237,4,198,2],[237,8,198,6],[237,15,198,13,"config"],[237,21,198,19],[237,26,198,24],[237,34,198,32],[237,36,198,34],[238,6,199,4],[239,6,200,4],[239,10,200,10,"parts"],[239,16,200,15],[239,19,200,18],[239,20,200,19],[239,21,200,20],[239,23,200,22,"_getPatternParts"],[239,39,200,38],[239,40,200,39,"getPatternParts"],[239,55,200,54],[239,57,200,56,"config"],[239,63,200,62],[239,64,200,63],[240,6,201,4],[240,10,201,8,"parentParts"],[240,21,201,19],[240,23,201,21],[241,8,202,6],[241,15,202,13],[242,10,203,8,"parts"],[242,15,203,13],[242,17,203,15],[242,18,203,16],[242,21,203,19,"parentParts"],[242,32,203,30],[242,34,203,32],[242,37,203,35,"parts"],[242,43,203,40],[243,8,204,6],[243,9,204,7],[244,6,205,4],[245,6,206,4],[245,13,206,11],[246,8,207,6,"parts"],[246,13,207,11],[246,15,207,6,"parts"],[247,6,208,4],[247,7,208,5],[248,4,209,2],[249,4,210,2],[249,8,210,6,"config"],[249,14,210,12],[249,15,210,13,"exact"],[249,20,210,18],[249,24,210,22,"config"],[249,30,210,28],[249,31,210,29,"path"],[249,35,210,33],[249,40,210,38,"undefined"],[249,49,210,47],[249,51,210,49],[250,6,211,4],[250,12,211,10],[250,16,211,14,"Error"],[250,21,211,19],[250,22,211,20],[250,172,211,170],[250,173,211,171],[251,4,212,2],[253,4,214,2],[254,4,215,2],[255,4,216,2],[255,8,216,8,"parts"],[255,13,216,13],[255,16,216,16,"config"],[255,22,216,22],[255,23,216,23,"exact"],[255,28,216,28],[255,33,216,33],[255,37,216,37],[255,40,216,40],[255,41,216,41],[255,45,216,45,"parentParts"],[255,56,216,56],[255,60,216,60],[255,62,216,62],[255,63,216,63],[255,65,216,65],[255,69,216,69,"config"],[255,75,216,75],[255,76,216,76,"path"],[255,80,216,80],[255,83,216,83],[255,84,216,84],[255,85,216,85],[255,87,216,87,"_getPatternParts"],[255,103,216,103],[255,104,216,104,"getPatternParts"],[255,119,216,119],[255,121,216,121,"config"],[255,127,216,127],[255,128,216,128,"path"],[255,132,216,132],[255,133,216,133],[255,136,216,136],[255,138,216,138],[255,139,216,139],[255,140,216,140],[255,143,216,143,"config"],[255,149,216,149],[255,150,216,150,"path"],[255,154,216,154],[255,157,216,157],[255,158,216,158],[255,159,216,159],[255,161,216,161,"_getPatternParts"],[255,177,216,177],[255,178,216,178,"getPatternParts"],[255,193,216,193],[255,195,216,195,"config"],[255,201,216,201],[255,202,216,202,"path"],[255,206,216,206],[255,207,216,207],[255,210,216,210,"undefined"],[255,219,216,219],[256,4,217,2],[256,8,217,8,"screens"],[256,15,217,15],[256,18,217,18,"config"],[256,24,217,24],[256,25,217,25,"screens"],[256,32,217,32],[256,35,217,35,"createNormalizedConfigs"],[256,58,217,58],[256,59,217,59,"config"],[256,65,217,65],[256,66,217,66,"screens"],[256,73,217,73],[256,75,217,75,"parts"],[256,80,217,80],[256,81,217,81],[256,84,217,84,"undefined"],[256,93,217,93],[257,4,218,2],[257,11,218,9],[258,6,219,4,"parts"],[258,11,219,9],[259,6,220,4,"stringify"],[259,15,220,13],[259,17,220,15,"config"],[259,23,220,21],[259,24,220,22,"stringify"],[259,33,220,31],[260,6,221,4,"screens"],[261,4,222,2],[261,5,222,3],[262,2,223,0],[262,3,223,1],[263,2,224,0],[263,6,224,6,"createNormalizedConfigs"],[263,29,224,29],[263,32,224,32,"createNormalizedConfigs"],[263,33,224,33,"options"],[263,40,224,40],[263,42,224,42,"parts"],[263,47,224,47],[263,52,224,52,"Object"],[263,58,224,58],[263,59,224,59,"fromEntries"],[263,70,224,70],[263,71,224,71,"Object"],[263,77,224,77],[263,78,224,78,"entries"],[263,85,224,85],[263,86,224,86,"options"],[263,93,224,93],[263,94,224,94],[263,95,224,95,"map"],[263,98,224,98],[263,99,224,99,"_ref7"],[263,104,224,99],[263,108,224,114],[264,4,224,114],[264,8,224,114,"_ref8"],[264,13,224,114],[264,16,224,114,"_slicedToArray"],[264,30,224,114],[264,31,224,114,"_ref7"],[264,36,224,114],[265,6,224,101,"name"],[265,10,224,105],[265,13,224,105,"_ref8"],[265,18,224,105],[266,6,224,107,"c"],[266,7,224,108],[266,10,224,108,"_ref8"],[266,15,224,108],[267,4,225,2],[267,8,225,8,"result"],[267,14,225,14],[267,17,225,17,"createConfigItem"],[267,33,225,33],[267,34,225,34,"c"],[267,35,225,35],[267,37,225,37,"parts"],[267,42,225,42],[267,43,225,43],[268,4,226,2],[268,11,226,9],[268,12,226,10,"name"],[268,16,226,14],[268,18,226,16,"result"],[268,24,226,22],[268,25,226,23],[269,2,227,0],[269,3,227,1],[269,4,227,2],[269,5,227,3],[270,0,227,4],[270,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;ACS,4MD;AEC,mkBF;uBGC;CHM;6BIE;CJO;AK+B;kFC2B,iFD;oBEY;WFU;yBGuB;0ECsB,gCD;OHG;iFCK,sCD;CLoC;yBUC;CV0B;gCWC,mEL;CKG,EX"}},"type":"js/module"}]}