{"dependencies":[{"name":"../errors/cursor.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":20,"index":134},"end":{"line":4,"column":50,"index":164}}],"key":"uYkFLnY6oOWlwIslY0jH2TZXIwE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createCursor = createCursor;\n  var cursor_js_1 = require(_dependencyMap[0], \"../errors/cursor.js\");\n  var staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n      if (this.recursiveReadCount >= this.recursiveReadLimit) throw new cursor_js_1.RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit\n      });\n    },\n    assertPosition(position) {\n      if (position < 0 || position > this.bytes.length - 1) throw new cursor_js_1.PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position\n      });\n    },\n    decrementPosition(offset) {\n      if (offset < 0) throw new cursor_js_1.NegativeOffsetError({\n        offset\n      });\n      var position = this.position - offset;\n      this.assertPosition(position);\n      this.position = position;\n    },\n    getReadCount(position) {\n      return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n      if (offset < 0) throw new cursor_js_1.NegativeOffsetError({\n        offset\n      });\n      var position = this.position + offset;\n      this.assertPosition(position);\n      this.position = position;\n    },\n    inspectByte(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position);\n      return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + length - 1);\n      return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position);\n      return this.bytes[position];\n    },\n    inspectUint16(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 1);\n      return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 2);\n      return (this.dataView.getUint16(position) << 8) + this.dataView.getUint8(position + 2);\n    },\n    inspectUint32(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 3);\n      return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n      this.assertPosition(this.position);\n      this.bytes[this.position] = byte;\n      this.position++;\n    },\n    pushBytes(bytes) {\n      this.assertPosition(this.position + bytes.length - 1);\n      this.bytes.set(bytes, this.position);\n      this.position += bytes.length;\n    },\n    pushUint8(value) {\n      this.assertPosition(this.position);\n      this.bytes[this.position] = value;\n      this.position++;\n    },\n    pushUint16(value) {\n      this.assertPosition(this.position + 1);\n      this.dataView.setUint16(this.position, value);\n      this.position += 2;\n    },\n    pushUint24(value) {\n      this.assertPosition(this.position + 2);\n      this.dataView.setUint16(this.position, value >> 8);\n      this.dataView.setUint8(this.position + 2, value & ~4294967040);\n      this.position += 3;\n    },\n    pushUint32(value) {\n      this.assertPosition(this.position + 3);\n      this.dataView.setUint32(this.position, value);\n      this.position += 4;\n    },\n    readByte() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectByte();\n      this.position++;\n      return value;\n    },\n    readBytes(length, size) {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectBytes(length);\n      this.position += size ?? length;\n      return value;\n    },\n    readUint8() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint8();\n      this.position += 1;\n      return value;\n    },\n    readUint16() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint16();\n      this.position += 2;\n      return value;\n    },\n    readUint24() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint24();\n      this.position += 3;\n      return value;\n    },\n    readUint32() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint32();\n      this.position += 4;\n      return value;\n    },\n    get remaining() {\n      return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n      var oldPosition = this.position;\n      this.assertPosition(position);\n      this.position = position;\n      return () => this.position = oldPosition;\n    },\n    _touch() {\n      if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;\n      var count = this.getReadCount();\n      this.positionReadCount.set(this.position, count + 1);\n      if (count > 0) this.recursiveReadCount++;\n    }\n  };\n  function createCursor(bytes) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$recursiveReadLim = _ref.recursiveReadLimit,\n      recursiveReadLimit = _ref$recursiveReadLim === void 0 ? 8_192 : _ref$recursiveReadLim;\n    var cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n  }\n});","lineCount":177,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"createCursor"],[7,22,3,20],[7,25,3,23,"createCursor"],[7,37,3,35],[8,2,4,0],[8,6,4,6,"cursor_js_1"],[8,17,4,17],[8,20,4,20,"require"],[8,27,4,27],[8,28,4,27,"_dependencyMap"],[8,42,4,27],[8,68,4,49],[8,69,4,50],[9,2,5,0],[9,6,5,6,"staticCursor"],[9,18,5,18],[9,21,5,21],[10,4,6,4,"bytes"],[10,9,6,9],[10,11,6,11],[10,15,6,15,"Uint8Array"],[10,25,6,25],[10,26,6,26],[10,27,6,27],[11,4,7,4,"dataView"],[11,12,7,12],[11,14,7,14],[11,18,7,18,"DataView"],[11,26,7,26],[11,27,7,27],[11,31,7,31,"ArrayBuffer"],[11,42,7,42],[11,43,7,43],[11,44,7,44],[11,45,7,45],[11,46,7,46],[12,4,8,4,"position"],[12,12,8,12],[12,14,8,14],[12,15,8,15],[13,4,9,4,"positionReadCount"],[13,21,9,21],[13,23,9,23],[13,27,9,27,"Map"],[13,30,9,30],[13,31,9,31],[13,32,9,32],[14,4,10,4,"recursiveReadCount"],[14,22,10,22],[14,24,10,24],[14,25,10,25],[15,4,11,4,"recursiveReadLimit"],[15,22,11,22],[15,24,11,24,"Number"],[15,30,11,30],[15,31,11,31,"POSITIVE_INFINITY"],[15,48,11,48],[16,4,12,4,"assertReadLimit"],[16,19,12,19,"assertReadLimit"],[16,20,12,19],[16,22,12,22],[17,6,13,8],[17,10,13,12],[17,14,13,16],[17,15,13,17,"recursiveReadCount"],[17,33,13,35],[17,37,13,39],[17,41,13,43],[17,42,13,44,"recursiveReadLimit"],[17,60,13,62],[17,62,14,12],[17,68,14,18],[17,72,14,22,"cursor_js_1"],[17,83,14,33],[17,84,14,34,"RecursiveReadLimitExceededError"],[17,115,14,65],[17,116,14,66],[18,8,15,16,"count"],[18,13,15,21],[18,15,15,23],[18,19,15,27],[18,20,15,28,"recursiveReadCount"],[18,38,15,46],[18,41,15,49],[18,42,15,50],[19,8,16,16,"limit"],[19,13,16,21],[19,15,16,23],[19,19,16,27],[19,20,16,28,"recursiveReadLimit"],[20,6,17,12],[20,7,17,13],[20,8,17,14],[21,4,18,4],[21,5,18,5],[22,4,19,4,"assertPosition"],[22,18,19,18,"assertPosition"],[22,19,19,19,"position"],[22,27,19,27],[22,29,19,29],[23,6,20,8],[23,10,20,12,"position"],[23,18,20,20],[23,21,20,23],[23,22,20,24],[23,26,20,28,"position"],[23,34,20,36],[23,37,20,39],[23,41,20,43],[23,42,20,44,"bytes"],[23,47,20,49],[23,48,20,50,"length"],[23,54,20,56],[23,57,20,59],[23,58,20,60],[23,60,21,12],[23,66,21,18],[23,70,21,22,"cursor_js_1"],[23,81,21,33],[23,82,21,34,"PositionOutOfBoundsError"],[23,106,21,58],[23,107,21,59],[24,8,22,16,"length"],[24,14,22,22],[24,16,22,24],[24,20,22,28],[24,21,22,29,"bytes"],[24,26,22,34],[24,27,22,35,"length"],[24,33,22,41],[25,8,23,16,"position"],[26,6,24,12],[26,7,24,13],[26,8,24,14],[27,4,25,4],[27,5,25,5],[28,4,26,4,"decrementPosition"],[28,21,26,21,"decrementPosition"],[28,22,26,22,"offset"],[28,28,26,28],[28,30,26,30],[29,6,27,8],[29,10,27,12,"offset"],[29,16,27,18],[29,19,27,21],[29,20,27,22],[29,22,28,12],[29,28,28,18],[29,32,28,22,"cursor_js_1"],[29,43,28,33],[29,44,28,34,"NegativeOffsetError"],[29,63,28,53],[29,64,28,54],[30,8,28,56,"offset"],[31,6,28,63],[31,7,28,64],[31,8,28,65],[32,6,29,8],[32,10,29,14,"position"],[32,18,29,22],[32,21,29,25],[32,25,29,29],[32,26,29,30,"position"],[32,34,29,38],[32,37,29,41,"offset"],[32,43,29,47],[33,6,30,8],[33,10,30,12],[33,11,30,13,"assertPosition"],[33,25,30,27],[33,26,30,28,"position"],[33,34,30,36],[33,35,30,37],[34,6,31,8],[34,10,31,12],[34,11,31,13,"position"],[34,19,31,21],[34,22,31,24,"position"],[34,30,31,32],[35,4,32,4],[35,5,32,5],[36,4,33,4,"getReadCount"],[36,16,33,16,"getReadCount"],[36,17,33,17,"position"],[36,25,33,25],[36,27,33,27],[37,6,34,8],[37,13,34,15],[37,17,34,19],[37,18,34,20,"positionReadCount"],[37,35,34,37],[37,36,34,38,"get"],[37,39,34,41],[37,40,34,42,"position"],[37,48,34,50],[37,52,34,54],[37,56,34,58],[37,57,34,59,"position"],[37,65,34,67],[37,66,34,68],[37,70,34,72],[37,71,34,73],[38,4,35,4],[38,5,35,5],[39,4,36,4,"incrementPosition"],[39,21,36,21,"incrementPosition"],[39,22,36,22,"offset"],[39,28,36,28],[39,30,36,30],[40,6,37,8],[40,10,37,12,"offset"],[40,16,37,18],[40,19,37,21],[40,20,37,22],[40,22,38,12],[40,28,38,18],[40,32,38,22,"cursor_js_1"],[40,43,38,33],[40,44,38,34,"NegativeOffsetError"],[40,63,38,53],[40,64,38,54],[41,8,38,56,"offset"],[42,6,38,63],[42,7,38,64],[42,8,38,65],[43,6,39,8],[43,10,39,14,"position"],[43,18,39,22],[43,21,39,25],[43,25,39,29],[43,26,39,30,"position"],[43,34,39,38],[43,37,39,41,"offset"],[43,43,39,47],[44,6,40,8],[44,10,40,12],[44,11,40,13,"assertPosition"],[44,25,40,27],[44,26,40,28,"position"],[44,34,40,36],[44,35,40,37],[45,6,41,8],[45,10,41,12],[45,11,41,13,"position"],[45,19,41,21],[45,22,41,24,"position"],[45,30,41,32],[46,4,42,4],[46,5,42,5],[47,4,43,4,"inspectByte"],[47,15,43,15,"inspectByte"],[47,16,43,16,"position_"],[47,25,43,25],[47,27,43,27],[48,6,44,8],[48,10,44,14,"position"],[48,18,44,22],[48,21,44,25,"position_"],[48,30,44,34],[48,34,44,38],[48,38,44,42],[48,39,44,43,"position"],[48,47,44,51],[49,6,45,8],[49,10,45,12],[49,11,45,13,"assertPosition"],[49,25,45,27],[49,26,45,28,"position"],[49,34,45,36],[49,35,45,37],[50,6,46,8],[50,13,46,15],[50,17,46,19],[50,18,46,20,"bytes"],[50,23,46,25],[50,24,46,26,"position"],[50,32,46,34],[50,33,46,35],[51,4,47,4],[51,5,47,5],[52,4,48,4,"inspectBytes"],[52,16,48,16,"inspectBytes"],[52,17,48,17,"length"],[52,23,48,23],[52,25,48,25,"position_"],[52,34,48,34],[52,36,48,36],[53,6,49,8],[53,10,49,14,"position"],[53,18,49,22],[53,21,49,25,"position_"],[53,30,49,34],[53,34,49,38],[53,38,49,42],[53,39,49,43,"position"],[53,47,49,51],[54,6,50,8],[54,10,50,12],[54,11,50,13,"assertPosition"],[54,25,50,27],[54,26,50,28,"position"],[54,34,50,36],[54,37,50,39,"length"],[54,43,50,45],[54,46,50,48],[54,47,50,49],[54,48,50,50],[55,6,51,8],[55,13,51,15],[55,17,51,19],[55,18,51,20,"bytes"],[55,23,51,25],[55,24,51,26,"subarray"],[55,32,51,34],[55,33,51,35,"position"],[55,41,51,43],[55,43,51,45,"position"],[55,51,51,53],[55,54,51,56,"length"],[55,60,51,62],[55,61,51,63],[56,4,52,4],[56,5,52,5],[57,4,53,4,"inspectUint8"],[57,16,53,16,"inspectUint8"],[57,17,53,17,"position_"],[57,26,53,26],[57,28,53,28],[58,6,54,8],[58,10,54,14,"position"],[58,18,54,22],[58,21,54,25,"position_"],[58,30,54,34],[58,34,54,38],[58,38,54,42],[58,39,54,43,"position"],[58,47,54,51],[59,6,55,8],[59,10,55,12],[59,11,55,13,"assertPosition"],[59,25,55,27],[59,26,55,28,"position"],[59,34,55,36],[59,35,55,37],[60,6,56,8],[60,13,56,15],[60,17,56,19],[60,18,56,20,"bytes"],[60,23,56,25],[60,24,56,26,"position"],[60,32,56,34],[60,33,56,35],[61,4,57,4],[61,5,57,5],[62,4,58,4,"inspectUint16"],[62,17,58,17,"inspectUint16"],[62,18,58,18,"position_"],[62,27,58,27],[62,29,58,29],[63,6,59,8],[63,10,59,14,"position"],[63,18,59,22],[63,21,59,25,"position_"],[63,30,59,34],[63,34,59,38],[63,38,59,42],[63,39,59,43,"position"],[63,47,59,51],[64,6,60,8],[64,10,60,12],[64,11,60,13,"assertPosition"],[64,25,60,27],[64,26,60,28,"position"],[64,34,60,36],[64,37,60,39],[64,38,60,40],[64,39,60,41],[65,6,61,8],[65,13,61,15],[65,17,61,19],[65,18,61,20,"dataView"],[65,26,61,28],[65,27,61,29,"getUint16"],[65,36,61,38],[65,37,61,39,"position"],[65,45,61,47],[65,46,61,48],[66,4,62,4],[66,5,62,5],[67,4,63,4,"inspectUint24"],[67,17,63,17,"inspectUint24"],[67,18,63,18,"position_"],[67,27,63,27],[67,29,63,29],[68,6,64,8],[68,10,64,14,"position"],[68,18,64,22],[68,21,64,25,"position_"],[68,30,64,34],[68,34,64,38],[68,38,64,42],[68,39,64,43,"position"],[68,47,64,51],[69,6,65,8],[69,10,65,12],[69,11,65,13,"assertPosition"],[69,25,65,27],[69,26,65,28,"position"],[69,34,65,36],[69,37,65,39],[69,38,65,40],[69,39,65,41],[70,6,66,8],[70,13,66,16],[70,14,66,17],[70,18,66,21],[70,19,66,22,"dataView"],[70,27,66,30],[70,28,66,31,"getUint16"],[70,37,66,40],[70,38,66,41,"position"],[70,46,66,49],[70,47,66,50],[70,51,66,54],[70,52,66,55],[70,56,67,12],[70,60,67,16],[70,61,67,17,"dataView"],[70,69,67,25],[70,70,67,26,"getUint8"],[70,78,67,34],[70,79,67,35,"position"],[70,87,67,43],[70,90,67,46],[70,91,67,47],[70,92,67,48],[71,4,68,4],[71,5,68,5],[72,4,69,4,"inspectUint32"],[72,17,69,17,"inspectUint32"],[72,18,69,18,"position_"],[72,27,69,27],[72,29,69,29],[73,6,70,8],[73,10,70,14,"position"],[73,18,70,22],[73,21,70,25,"position_"],[73,30,70,34],[73,34,70,38],[73,38,70,42],[73,39,70,43,"position"],[73,47,70,51],[74,6,71,8],[74,10,71,12],[74,11,71,13,"assertPosition"],[74,25,71,27],[74,26,71,28,"position"],[74,34,71,36],[74,37,71,39],[74,38,71,40],[74,39,71,41],[75,6,72,8],[75,13,72,15],[75,17,72,19],[75,18,72,20,"dataView"],[75,26,72,28],[75,27,72,29,"getUint32"],[75,36,72,38],[75,37,72,39,"position"],[75,45,72,47],[75,46,72,48],[76,4,73,4],[76,5,73,5],[77,4,74,4,"pushByte"],[77,12,74,12,"pushByte"],[77,13,74,13,"byte"],[77,17,74,17],[77,19,74,19],[78,6,75,8],[78,10,75,12],[78,11,75,13,"assertPosition"],[78,25,75,27],[78,26,75,28],[78,30,75,32],[78,31,75,33,"position"],[78,39,75,41],[78,40,75,42],[79,6,76,8],[79,10,76,12],[79,11,76,13,"bytes"],[79,16,76,18],[79,17,76,19],[79,21,76,23],[79,22,76,24,"position"],[79,30,76,32],[79,31,76,33],[79,34,76,36,"byte"],[79,38,76,40],[80,6,77,8],[80,10,77,12],[80,11,77,13,"position"],[80,19,77,21],[80,21,77,23],[81,4,78,4],[81,5,78,5],[82,4,79,4,"pushBytes"],[82,13,79,13,"pushBytes"],[82,14,79,14,"bytes"],[82,19,79,19],[82,21,79,21],[83,6,80,8],[83,10,80,12],[83,11,80,13,"assertPosition"],[83,25,80,27],[83,26,80,28],[83,30,80,32],[83,31,80,33,"position"],[83,39,80,41],[83,42,80,44,"bytes"],[83,47,80,49],[83,48,80,50,"length"],[83,54,80,56],[83,57,80,59],[83,58,80,60],[83,59,80,61],[84,6,81,8],[84,10,81,12],[84,11,81,13,"bytes"],[84,16,81,18],[84,17,81,19,"set"],[84,20,81,22],[84,21,81,23,"bytes"],[84,26,81,28],[84,28,81,30],[84,32,81,34],[84,33,81,35,"position"],[84,41,81,43],[84,42,81,44],[85,6,82,8],[85,10,82,12],[85,11,82,13,"position"],[85,19,82,21],[85,23,82,25,"bytes"],[85,28,82,30],[85,29,82,31,"length"],[85,35,82,37],[86,4,83,4],[86,5,83,5],[87,4,84,4,"pushUint8"],[87,13,84,13,"pushUint8"],[87,14,84,14,"value"],[87,19,84,19],[87,21,84,21],[88,6,85,8],[88,10,85,12],[88,11,85,13,"assertPosition"],[88,25,85,27],[88,26,85,28],[88,30,85,32],[88,31,85,33,"position"],[88,39,85,41],[88,40,85,42],[89,6,86,8],[89,10,86,12],[89,11,86,13,"bytes"],[89,16,86,18],[89,17,86,19],[89,21,86,23],[89,22,86,24,"position"],[89,30,86,32],[89,31,86,33],[89,34,86,36,"value"],[89,39,86,41],[90,6,87,8],[90,10,87,12],[90,11,87,13,"position"],[90,19,87,21],[90,21,87,23],[91,4,88,4],[91,5,88,5],[92,4,89,4,"pushUint16"],[92,14,89,14,"pushUint16"],[92,15,89,15,"value"],[92,20,89,20],[92,22,89,22],[93,6,90,8],[93,10,90,12],[93,11,90,13,"assertPosition"],[93,25,90,27],[93,26,90,28],[93,30,90,32],[93,31,90,33,"position"],[93,39,90,41],[93,42,90,44],[93,43,90,45],[93,44,90,46],[94,6,91,8],[94,10,91,12],[94,11,91,13,"dataView"],[94,19,91,21],[94,20,91,22,"setUint16"],[94,29,91,31],[94,30,91,32],[94,34,91,36],[94,35,91,37,"position"],[94,43,91,45],[94,45,91,47,"value"],[94,50,91,52],[94,51,91,53],[95,6,92,8],[95,10,92,12],[95,11,92,13,"position"],[95,19,92,21],[95,23,92,25],[95,24,92,26],[96,4,93,4],[96,5,93,5],[97,4,94,4,"pushUint24"],[97,14,94,14,"pushUint24"],[97,15,94,15,"value"],[97,20,94,20],[97,22,94,22],[98,6,95,8],[98,10,95,12],[98,11,95,13,"assertPosition"],[98,25,95,27],[98,26,95,28],[98,30,95,32],[98,31,95,33,"position"],[98,39,95,41],[98,42,95,44],[98,43,95,45],[98,44,95,46],[99,6,96,8],[99,10,96,12],[99,11,96,13,"dataView"],[99,19,96,21],[99,20,96,22,"setUint16"],[99,29,96,31],[99,30,96,32],[99,34,96,36],[99,35,96,37,"position"],[99,43,96,45],[99,45,96,47,"value"],[99,50,96,52],[99,54,96,56],[99,55,96,57],[99,56,96,58],[100,6,97,8],[100,10,97,12],[100,11,97,13,"dataView"],[100,19,97,21],[100,20,97,22,"setUint8"],[100,28,97,30],[100,29,97,31],[100,33,97,35],[100,34,97,36,"position"],[100,42,97,44],[100,45,97,47],[100,46,97,48],[100,48,97,50,"value"],[100,53,97,55],[100,56,97,58],[100,57,97,59],[100,67,97,69],[100,68,97,70],[101,6,98,8],[101,10,98,12],[101,11,98,13,"position"],[101,19,98,21],[101,23,98,25],[101,24,98,26],[102,4,99,4],[102,5,99,5],[103,4,100,4,"pushUint32"],[103,14,100,14,"pushUint32"],[103,15,100,15,"value"],[103,20,100,20],[103,22,100,22],[104,6,101,8],[104,10,101,12],[104,11,101,13,"assertPosition"],[104,25,101,27],[104,26,101,28],[104,30,101,32],[104,31,101,33,"position"],[104,39,101,41],[104,42,101,44],[104,43,101,45],[104,44,101,46],[105,6,102,8],[105,10,102,12],[105,11,102,13,"dataView"],[105,19,102,21],[105,20,102,22,"setUint32"],[105,29,102,31],[105,30,102,32],[105,34,102,36],[105,35,102,37,"position"],[105,43,102,45],[105,45,102,47,"value"],[105,50,102,52],[105,51,102,53],[106,6,103,8],[106,10,103,12],[106,11,103,13,"position"],[106,19,103,21],[106,23,103,25],[106,24,103,26],[107,4,104,4],[107,5,104,5],[108,4,105,4,"readByte"],[108,12,105,12,"readByte"],[108,13,105,12],[108,15,105,15],[109,6,106,8],[109,10,106,12],[109,11,106,13,"assertReadLimit"],[109,26,106,28],[109,27,106,29],[109,28,106,30],[110,6,107,8],[110,10,107,12],[110,11,107,13,"_touch"],[110,17,107,19],[110,18,107,20],[110,19,107,21],[111,6,108,8],[111,10,108,14,"value"],[111,15,108,19],[111,18,108,22],[111,22,108,26],[111,23,108,27,"inspectByte"],[111,34,108,38],[111,35,108,39],[111,36,108,40],[112,6,109,8],[112,10,109,12],[112,11,109,13,"position"],[112,19,109,21],[112,21,109,23],[113,6,110,8],[113,13,110,15,"value"],[113,18,110,20],[114,4,111,4],[114,5,111,5],[115,4,112,4,"readBytes"],[115,13,112,13,"readBytes"],[115,14,112,14,"length"],[115,20,112,20],[115,22,112,22,"size"],[115,26,112,26],[115,28,112,28],[116,6,113,8],[116,10,113,12],[116,11,113,13,"assertReadLimit"],[116,26,113,28],[116,27,113,29],[116,28,113,30],[117,6,114,8],[117,10,114,12],[117,11,114,13,"_touch"],[117,17,114,19],[117,18,114,20],[117,19,114,21],[118,6,115,8],[118,10,115,14,"value"],[118,15,115,19],[118,18,115,22],[118,22,115,26],[118,23,115,27,"inspectBytes"],[118,35,115,39],[118,36,115,40,"length"],[118,42,115,46],[118,43,115,47],[119,6,116,8],[119,10,116,12],[119,11,116,13,"position"],[119,19,116,21],[119,23,116,25,"size"],[119,27,116,29],[119,31,116,33,"length"],[119,37,116,39],[120,6,117,8],[120,13,117,15,"value"],[120,18,117,20],[121,4,118,4],[121,5,118,5],[122,4,119,4,"readUint8"],[122,13,119,13,"readUint8"],[122,14,119,13],[122,16,119,16],[123,6,120,8],[123,10,120,12],[123,11,120,13,"assertReadLimit"],[123,26,120,28],[123,27,120,29],[123,28,120,30],[124,6,121,8],[124,10,121,12],[124,11,121,13,"_touch"],[124,17,121,19],[124,18,121,20],[124,19,121,21],[125,6,122,8],[125,10,122,14,"value"],[125,15,122,19],[125,18,122,22],[125,22,122,26],[125,23,122,27,"inspectUint8"],[125,35,122,39],[125,36,122,40],[125,37,122,41],[126,6,123,8],[126,10,123,12],[126,11,123,13,"position"],[126,19,123,21],[126,23,123,25],[126,24,123,26],[127,6,124,8],[127,13,124,15,"value"],[127,18,124,20],[128,4,125,4],[128,5,125,5],[129,4,126,4,"readUint16"],[129,14,126,14,"readUint16"],[129,15,126,14],[129,17,126,17],[130,6,127,8],[130,10,127,12],[130,11,127,13,"assertReadLimit"],[130,26,127,28],[130,27,127,29],[130,28,127,30],[131,6,128,8],[131,10,128,12],[131,11,128,13,"_touch"],[131,17,128,19],[131,18,128,20],[131,19,128,21],[132,6,129,8],[132,10,129,14,"value"],[132,15,129,19],[132,18,129,22],[132,22,129,26],[132,23,129,27,"inspectUint16"],[132,36,129,40],[132,37,129,41],[132,38,129,42],[133,6,130,8],[133,10,130,12],[133,11,130,13,"position"],[133,19,130,21],[133,23,130,25],[133,24,130,26],[134,6,131,8],[134,13,131,15,"value"],[134,18,131,20],[135,4,132,4],[135,5,132,5],[136,4,133,4,"readUint24"],[136,14,133,14,"readUint24"],[136,15,133,14],[136,17,133,17],[137,6,134,8],[137,10,134,12],[137,11,134,13,"assertReadLimit"],[137,26,134,28],[137,27,134,29],[137,28,134,30],[138,6,135,8],[138,10,135,12],[138,11,135,13,"_touch"],[138,17,135,19],[138,18,135,20],[138,19,135,21],[139,6,136,8],[139,10,136,14,"value"],[139,15,136,19],[139,18,136,22],[139,22,136,26],[139,23,136,27,"inspectUint24"],[139,36,136,40],[139,37,136,41],[139,38,136,42],[140,6,137,8],[140,10,137,12],[140,11,137,13,"position"],[140,19,137,21],[140,23,137,25],[140,24,137,26],[141,6,138,8],[141,13,138,15,"value"],[141,18,138,20],[142,4,139,4],[142,5,139,5],[143,4,140,4,"readUint32"],[143,14,140,14,"readUint32"],[143,15,140,14],[143,17,140,17],[144,6,141,8],[144,10,141,12],[144,11,141,13,"assertReadLimit"],[144,26,141,28],[144,27,141,29],[144,28,141,30],[145,6,142,8],[145,10,142,12],[145,11,142,13,"_touch"],[145,17,142,19],[145,18,142,20],[145,19,142,21],[146,6,143,8],[146,10,143,14,"value"],[146,15,143,19],[146,18,143,22],[146,22,143,26],[146,23,143,27,"inspectUint32"],[146,36,143,40],[146,37,143,41],[146,38,143,42],[147,6,144,8],[147,10,144,12],[147,11,144,13,"position"],[147,19,144,21],[147,23,144,25],[147,24,144,26],[148,6,145,8],[148,13,145,15,"value"],[148,18,145,20],[149,4,146,4],[149,5,146,5],[150,4,147,4],[150,8,147,8,"remaining"],[150,17,147,17,"remaining"],[150,18,147,17],[150,20,147,20],[151,6,148,8],[151,13,148,15],[151,17,148,19],[151,18,148,20,"bytes"],[151,23,148,25],[151,24,148,26,"length"],[151,30,148,32],[151,33,148,35],[151,37,148,39],[151,38,148,40,"position"],[151,46,148,48],[152,4,149,4],[152,5,149,5],[153,4,150,4,"setPosition"],[153,15,150,15,"setPosition"],[153,16,150,16,"position"],[153,24,150,24],[153,26,150,26],[154,6,151,8],[154,10,151,14,"oldPosition"],[154,21,151,25],[154,24,151,28],[154,28,151,32],[154,29,151,33,"position"],[154,37,151,41],[155,6,152,8],[155,10,152,12],[155,11,152,13,"assertPosition"],[155,25,152,27],[155,26,152,28,"position"],[155,34,152,36],[155,35,152,37],[156,6,153,8],[156,10,153,12],[156,11,153,13,"position"],[156,19,153,21],[156,22,153,24,"position"],[156,30,153,32],[157,6,154,8],[157,13,154,15],[157,19,154,22],[157,23,154,26],[157,24,154,27,"position"],[157,32,154,35],[157,35,154,38,"oldPosition"],[157,46,154,50],[158,4,155,4],[158,5,155,5],[159,4,156,4,"_touch"],[159,10,156,10,"_touch"],[159,11,156,10],[159,13,156,13],[160,6,157,8],[160,10,157,12],[160,14,157,16],[160,15,157,17,"recursiveReadLimit"],[160,33,157,35],[160,38,157,40,"Number"],[160,44,157,46],[160,45,157,47,"POSITIVE_INFINITY"],[160,62,157,64],[160,64,158,12],[161,6,159,8],[161,10,159,14,"count"],[161,15,159,19],[161,18,159,22],[161,22,159,26],[161,23,159,27,"getReadCount"],[161,35,159,39],[161,36,159,40],[161,37,159,41],[162,6,160,8],[162,10,160,12],[162,11,160,13,"positionReadCount"],[162,28,160,30],[162,29,160,31,"set"],[162,32,160,34],[162,33,160,35],[162,37,160,39],[162,38,160,40,"position"],[162,46,160,48],[162,48,160,50,"count"],[162,53,160,55],[162,56,160,58],[162,57,160,59],[162,58,160,60],[163,6,161,8],[163,10,161,12,"count"],[163,15,161,17],[163,18,161,20],[163,19,161,21],[163,21,162,12],[163,25,162,16],[163,26,162,17,"recursiveReadCount"],[163,44,162,35],[163,46,162,37],[164,4,163,4],[165,2,164,0],[165,3,164,1],[166,2,165,0],[166,11,165,9,"createCursor"],[166,23,165,21,"createCursor"],[166,24,165,22,"bytes"],[166,29,165,27],[166,31,165,66],[167,4,165,66],[167,8,165,66,"_ref"],[167,12,165,66],[167,15,165,66,"arguments"],[167,24,165,66],[167,25,165,66,"length"],[167,31,165,66],[167,39,165,66,"arguments"],[167,48,165,66],[167,56,165,66,"undefined"],[167,65,165,66],[167,68,165,66,"arguments"],[167,77,165,66],[167,83,165,62],[167,84,165,63],[167,85,165,64],[168,6,165,64,"_ref$recursiveReadLim"],[168,27,165,64],[168,30,165,64,"_ref"],[168,34,165,64],[168,35,165,31,"recursiveReadLimit"],[168,53,165,49],[169,6,165,31,"recursiveReadLimit"],[169,24,165,49],[169,27,165,49,"_ref$recursiveReadLim"],[169,48,165,49],[169,62,165,52],[169,67,165,57],[169,70,165,57,"_ref$recursiveReadLim"],[169,91,165,57],[170,4,166,4],[170,8,166,10,"cursor"],[170,14,166,16],[170,17,166,19,"Object"],[170,23,166,25],[170,24,166,26,"create"],[170,30,166,32],[170,31,166,33,"staticCursor"],[170,43,166,45],[170,44,166,46],[171,4,167,4,"cursor"],[171,10,167,10],[171,11,167,11,"bytes"],[171,16,167,16],[171,19,167,19,"bytes"],[171,24,167,24],[172,4,168,4,"cursor"],[172,10,168,10],[172,11,168,11,"dataView"],[172,19,168,19],[172,22,168,22],[172,26,168,26,"DataView"],[172,34,168,34],[172,35,168,35,"bytes"],[172,40,168,40],[172,41,168,41,"buffer"],[172,47,168,47],[172,49,168,49,"bytes"],[172,54,168,54],[172,55,168,55,"byteOffset"],[172,65,168,65],[172,67,168,67,"bytes"],[172,72,168,72],[172,73,168,73,"byteLength"],[172,83,168,83],[172,84,168,84],[173,4,169,4,"cursor"],[173,10,169,10],[173,11,169,11,"positionReadCount"],[173,28,169,28],[173,31,169,31],[173,35,169,35,"Map"],[173,38,169,38],[173,39,169,39],[173,40,169,40],[174,4,170,4,"cursor"],[174,10,170,10],[174,11,170,11,"recursiveReadLimit"],[174,29,170,29],[174,32,170,32,"recursiveReadLimit"],[174,50,170,50],[175,4,171,4],[175,11,171,11,"cursor"],[175,17,171,17],[176,2,172,0],[177,0,172,1],[177,3]],"functionMap":{"names":["<global>","staticCursor.assertReadLimit","staticCursor.assertPosition","staticCursor.decrementPosition","staticCursor.getReadCount","staticCursor.incrementPosition","staticCursor.inspectByte","staticCursor.inspectBytes","staticCursor.inspectUint8","staticCursor.inspectUint16","staticCursor.inspectUint24","staticCursor.inspectUint32","staticCursor.pushByte","staticCursor.pushBytes","staticCursor.pushUint8","staticCursor.pushUint16","staticCursor.pushUint24","staticCursor.pushUint32","staticCursor.readByte","staticCursor.readBytes","staticCursor.readUint8","staticCursor.readUint16","staticCursor.readUint24","staticCursor.readUint32","staticCursor.get__remaining","staticCursor.setPosition","<anonymous>","staticCursor._touch","createCursor"],"mappings":"AAA;ICW;KDM;IEC;KFM;IGC;KHM;IIC;KJE;IKC;KLM;IMC;KNI;IOC;KPI;IQC;KRI;ISC;KTI;IUC;KVK;IWC;KXI;IYC;KZI;IaC;KbI;IcC;KdI;IeC;KfI;IgBC;KhBK;IiBC;KjBI;IkBC;KlBM;ImBC;KnBM;IoBC;KpBM;IqBC;KrBM;IsBC;KtBM;IuBC;KvBM;IwBC;KxBE;IyBC;eCI,mCD;KzBC;I2BC;K3BO;A4BE;C5BO"}},"type":"js/module"}]}