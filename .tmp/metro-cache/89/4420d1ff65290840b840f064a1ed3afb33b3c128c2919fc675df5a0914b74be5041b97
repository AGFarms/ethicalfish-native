{"dependencies":[{"name":"@onflow/fcl","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"Ea+7M6u9UlCxV6vTUSMx5Z3nMAU="}},{"name":"./crypto","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":29,"index":64}}],"key":"wuls63NcJvhNXVwIvy5TTpxcQ1c="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authz = authz;\n  var fcl = _interopRequireWildcard(require(_dependencyMap[0], \"@onflow/fcl\"));\n  var _crypto = require(_dependencyMap[1], \"./crypto\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  // alias Hex = String\n  // type signable = { message: Hex, voucher: voucher }\n  // type compositeSignature = { addr: String, keyId: Number, signature: Hex }\n  // signingFunction :: signable -> compositeSignature\n  // type account = { tempId: String, addr: String, keyId: Number, signingFunction: signingFunction }\n  // authz :: account -> account\n\n  function authz(flowAccountAddress, flowAccountKeyId, flowAccountPrivateKey) {\n    return account => {\n      return {\n        // there is stuff in the account that is passed in\n        // you need to make sure its part of what is returned\n        ...account,\n        // the tempId here is a very special and specific case.\n        // what you are usually looking for in a tempId value is a unique string for the address and keyId as a pair\n        // if you have no idea what this is doing, or what it does, or are getting an error in your own\n        // implementation of an authorization function it is recommended that you use a string with the address and keyId in it.\n        // something like... tempId: `${address}-${keyId}`\n        tempId: \"SERVICE_ACCOUNT\",\n        addr: fcl.sansPrefix(flowAccountAddress),\n        // eventually it wont matter if this address has a prefix or not, sadly :'( currently it does matter.\n        keyId: Number(flowAccountKeyId),\n        // must be a number\n        signingFunction: signable => ({\n          addr: fcl.withPrefix(flowAccountAddress),\n          // must match the address that requested the signature, but with a prefix\n          keyId: Number(flowAccountKeyId),\n          // must match the keyId in the account that requested the signature\n          signature: (0, _crypto.sign)(flowAccountPrivateKey, signable.message) // signable.message |> hexToBinArray |> hash |> sign |> binArrayToHex\n          // if you arent in control of the transaction that is being signed we recommend constructing the\n          // message from signable.voucher using the @onflow/encode module\n        })\n      };\n    };\n  }\n});","lineCount":45,"map":[[6,2,1,0],[6,6,1,0,"fcl"],[6,9,1,0],[6,12,1,0,"_interopRequireWildcard"],[6,35,1,0],[6,36,1,0,"require"],[6,43,1,0],[6,44,1,0,"_dependencyMap"],[6,58,1,0],[7,2,2,0],[7,6,2,0,"_crypto"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,2,29],[8,11,2,29,"_getRequireWildcardCache"],[8,36,2,29,"e"],[8,37,2,29],[8,66,2,29,"WeakMap"],[8,73,2,29],[8,92,2,29,"r"],[8,93,2,29],[8,100,2,29,"WeakMap"],[8,107,2,29],[8,111,2,29,"t"],[8,112,2,29],[8,119,2,29,"WeakMap"],[8,126,2,29],[8,138,2,29,"_getRequireWildcardCache"],[8,162,2,29],[8,174,2,29,"_getRequireWildcardCache"],[8,175,2,29,"e"],[8,176,2,29],[8,187,2,29,"e"],[8,188,2,29],[8,191,2,29,"t"],[8,192,2,29],[8,195,2,29,"r"],[8,196,2,29],[8,201,2,29,"e"],[8,202,2,29],[9,2,2,29],[9,11,2,29,"_interopRequireWildcard"],[9,35,2,29,"e"],[9,36,2,29],[9,38,2,29,"r"],[9,39,2,29],[9,48,2,29,"r"],[9,49,2,29],[9,53,2,29,"e"],[9,54,2,29],[9,58,2,29,"e"],[9,59,2,29],[9,60,2,29,"__esModule"],[9,70,2,29],[9,79,2,29,"e"],[9,80,2,29],[9,95,2,29,"e"],[9,96,2,29],[9,119,2,29,"e"],[9,120,2,29],[9,145,2,29,"e"],[9,146,2,29],[9,157,2,29,"default"],[9,164,2,29],[9,166,2,29,"e"],[9,167,2,29],[9,175,2,29,"t"],[9,176,2,29],[9,179,2,29,"_getRequireWildcardCache"],[9,203,2,29],[9,204,2,29,"r"],[9,205,2,29],[9,212,2,29,"t"],[9,213,2,29],[9,217,2,29,"t"],[9,218,2,29],[9,219,2,29,"has"],[9,222,2,29],[9,223,2,29,"e"],[9,224,2,29],[9,234,2,29,"t"],[9,235,2,29],[9,236,2,29,"get"],[9,239,2,29],[9,240,2,29,"e"],[9,241,2,29],[9,248,2,29,"n"],[9,249,2,29],[9,254,2,29,"__proto__"],[9,263,2,29],[9,273,2,29,"a"],[9,274,2,29],[9,277,2,29,"Object"],[9,283,2,29],[9,284,2,29,"defineProperty"],[9,298,2,29],[9,302,2,29,"Object"],[9,308,2,29],[9,309,2,29,"getOwnPropertyDescriptor"],[9,333,2,29],[9,344,2,29,"u"],[9,345,2,29],[9,349,2,29,"e"],[9,350,2,29],[9,370,2,29,"u"],[9,371,2,29],[9,378,2,29,"hasOwnProperty"],[9,392,2,29],[9,393,2,29,"call"],[9,397,2,29],[9,398,2,29,"e"],[9,399,2,29],[9,401,2,29,"u"],[9,402,2,29],[9,411,2,29,"i"],[9,412,2,29],[9,415,2,29,"a"],[9,416,2,29],[9,419,2,29,"Object"],[9,425,2,29],[9,426,2,29,"getOwnPropertyDescriptor"],[9,450,2,29],[9,451,2,29,"e"],[9,452,2,29],[9,454,2,29,"u"],[9,455,2,29],[9,465,2,29,"i"],[9,466,2,29],[9,471,2,29,"i"],[9,472,2,29],[9,473,2,29,"get"],[9,476,2,29],[9,480,2,29,"i"],[9,481,2,29],[9,482,2,29,"set"],[9,485,2,29],[9,489,2,29,"Object"],[9,495,2,29],[9,496,2,29,"defineProperty"],[9,510,2,29],[9,511,2,29,"n"],[9,512,2,29],[9,514,2,29,"u"],[9,515,2,29],[9,517,2,29,"i"],[9,518,2,29],[9,522,2,29,"n"],[9,523,2,29],[9,524,2,29,"u"],[9,525,2,29],[9,529,2,29,"e"],[9,530,2,29],[9,531,2,29,"u"],[9,532,2,29],[9,544,2,29,"n"],[9,545,2,29],[9,546,2,29,"default"],[9,553,2,29],[9,556,2,29,"e"],[9,557,2,29],[9,559,2,29,"t"],[9,560,2,29],[9,564,2,29,"t"],[9,565,2,29],[9,566,2,29,"set"],[9,569,2,29],[9,570,2,29,"e"],[9,571,2,29],[9,573,2,29,"n"],[9,574,2,29],[9,577,2,29,"n"],[9,578,2,29],[10,2,4,0],[11,2,5,0],[12,2,6,0],[13,2,7,0],[14,2,8,0],[15,2,9,0],[17,2,11,7],[17,11,11,16,"authz"],[17,16,11,21,"authz"],[17,17,12,2,"flowAccountAddress"],[17,35,12,28],[17,37,13,2,"flowAccountKeyId"],[17,53,13,26],[17,55,14,2,"flowAccountPrivateKey"],[17,76,14,31],[17,78,15,2],[18,4,16,2],[18,11,16,10,"account"],[18,18,16,22],[18,22,16,27],[19,6,17,4],[19,13,17,11],[20,8,18,6],[21,8,19,6],[22,8,20,6],[22,11,20,9,"account"],[22,18,20,16],[23,8,21,6],[24,8,22,6],[25,8,23,6],[26,8,24,6],[27,8,25,6],[28,8,26,6,"tempId"],[28,14,26,12],[28,16,26,14],[28,33,26,31],[29,8,27,6,"addr"],[29,12,27,10],[29,14,27,12,"fcl"],[29,17,27,15],[29,18,27,16,"sansPrefix"],[29,28,27,26],[29,29,27,27,"flowAccountAddress"],[29,47,27,45],[29,48,27,46],[30,8,27,48],[31,8,28,6,"keyId"],[31,13,28,11],[31,15,28,13,"Number"],[31,21,28,19],[31,22,28,20,"flowAccountKeyId"],[31,38,28,36],[31,39,28,37],[32,8,28,39],[33,8,29,6,"signingFunction"],[33,23,29,21],[33,25,29,24,"signable"],[33,33,29,51],[33,38,29,57],[34,10,30,8,"addr"],[34,14,30,12],[34,16,30,14,"fcl"],[34,19,30,17],[34,20,30,18,"withPrefix"],[34,30,30,28],[34,31,30,29,"flowAccountAddress"],[34,49,30,47],[34,50,30,48],[35,10,30,50],[36,10,31,8,"keyId"],[36,15,31,13],[36,17,31,15,"Number"],[36,23,31,21],[36,24,31,22,"flowAccountKeyId"],[36,40,31,38],[36,41,31,39],[37,10,31,41],[38,10,32,8,"signature"],[38,19,32,17],[38,21,32,19],[38,25,32,19,"sign"],[38,37,32,23],[38,39,32,24,"flowAccountPrivateKey"],[38,60,32,45],[38,62,32,47,"signable"],[38,70,32,55],[38,71,32,56,"message"],[38,78,32,63],[38,79,32,64],[38,80,32,66],[39,10,33,8],[40,10,34,8],[41,8,35,6],[41,9,35,7],[42,6,36,4],[42,7,36,5],[43,4,37,2],[43,5,37,3],[44,2,38,0],[45,0,38,1],[45,3]],"functionMap":{"names":["<global>","authz","<anonymous>","signingFunction"],"mappings":"AAA;OCU;SCK;uBCa;QDM;GDE"}},"type":"js/module"}]}