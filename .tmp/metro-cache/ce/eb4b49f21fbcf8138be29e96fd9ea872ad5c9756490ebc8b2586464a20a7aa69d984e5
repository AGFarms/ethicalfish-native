{"dependencies":[{"name":"../../errors/encoding.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":22,"index":295},"end":{"line":9,"column":57,"index":330}}],"key":"lnPLkJE3anL8Xkoa6kTdC5TXMoA="}},{"name":"../data/size.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":18,"index":350},"end":{"line":10,"column":44,"index":376}}],"key":"uK235wG1wZFW6oRuDA272PNOCBw="}},{"name":"../data/trim.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":18,"index":396},"end":{"line":11,"column":44,"index":422}}],"key":"IygFXf04/ijp2QeGdf2IfJdE61E="}},{"name":"./toBytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":21,"index":445},"end":{"line":12,"column":44,"index":468}}],"key":"hXL/BcqNZ135HrLcNCeelqhROcI="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.assertSize = assertSize;\n  exports.fromHex = fromHex;\n  exports.hexToBigInt = hexToBigInt;\n  exports.hexToBool = hexToBool;\n  exports.hexToNumber = hexToNumber;\n  exports.hexToString = hexToString;\n  var encoding_js_1 = require(_dependencyMap[0], \"../../errors/encoding.js\");\n  var size_js_1 = require(_dependencyMap[1], \"../data/size.js\");\n  var trim_js_1 = require(_dependencyMap[2], \"../data/trim.js\");\n  var toBytes_js_1 = require(_dependencyMap[3], \"./toBytes.js\");\n  function assertSize(hexOrBytes, _ref) {\n    var size = _ref.size;\n    if ((0, size_js_1.size)(hexOrBytes) > size) throw new encoding_js_1.SizeOverflowError({\n      givenSize: (0, size_js_1.size)(hexOrBytes),\n      maxSize: size\n    });\n  }\n  function fromHex(hex, toOrOpts) {\n    var opts = typeof toOrOpts === 'string' ? {\n      to: toOrOpts\n    } : toOrOpts;\n    var to = opts.to;\n    if (to === 'number') return hexToNumber(hex, opts);\n    if (to === 'bigint') return hexToBigInt(hex, opts);\n    if (to === 'string') return hexToString(hex, opts);\n    if (to === 'boolean') return hexToBool(hex, opts);\n    return (0, toBytes_js_1.hexToBytes)(hex, opts);\n  }\n  function hexToBigInt(hex) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var signed = opts.signed;\n    if (opts.size) assertSize(hex, {\n      size: opts.size\n    });\n    var value = BigInt(hex);\n    if (!signed) return value;\n    var size = (hex.length - 2) / 2;\n    var max = (1n << BigInt(size) * 8n - 1n) - 1n;\n    if (value <= max) return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n  }\n  function hexToBool(hex_) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var hex = hex_;\n    if (opts.size) {\n      assertSize(hex, {\n        size: opts.size\n      });\n      hex = (0, trim_js_1.trim)(hex);\n    }\n    if ((0, trim_js_1.trim)(hex) === '0x00') return false;\n    if ((0, trim_js_1.trim)(hex) === '0x01') return true;\n    throw new encoding_js_1.InvalidHexBooleanError(hex);\n  }\n  function hexToNumber(hex) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return Number(hexToBigInt(hex, opts));\n  }\n  function hexToString(hex) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var bytes = (0, toBytes_js_1.hexToBytes)(hex);\n    if (opts.size) {\n      assertSize(bytes, {\n        size: opts.size\n      });\n      bytes = (0, trim_js_1.trim)(bytes, {\n        dir: 'right'\n      });\n    }\n    return new TextDecoder().decode(bytes);\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"assertSize"],[7,20,3,18],[7,23,3,21,"assertSize"],[7,33,3,31],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"fromHex"],[8,17,4,15],[8,20,4,18,"fromHex"],[8,27,4,25],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"hexToBigInt"],[9,21,5,19],[9,24,5,22,"hexToBigInt"],[9,35,5,33],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"hexToBool"],[10,19,6,17],[10,22,6,20,"hexToBool"],[10,31,6,29],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"hexToNumber"],[11,21,7,19],[11,24,7,22,"hexToNumber"],[11,35,7,33],[12,2,8,0,"exports"],[12,9,8,7],[12,10,8,8,"hexToString"],[12,21,8,19],[12,24,8,22,"hexToString"],[12,35,8,33],[13,2,9,0],[13,6,9,6,"encoding_js_1"],[13,19,9,19],[13,22,9,22,"require"],[13,29,9,29],[13,30,9,29,"_dependencyMap"],[13,44,9,29],[13,75,9,56],[13,76,9,57],[14,2,10,0],[14,6,10,6,"size_js_1"],[14,15,10,15],[14,18,10,18,"require"],[14,25,10,25],[14,26,10,25,"_dependencyMap"],[14,40,10,25],[14,62,10,43],[14,63,10,44],[15,2,11,0],[15,6,11,6,"trim_js_1"],[15,15,11,15],[15,18,11,18,"require"],[15,25,11,25],[15,26,11,25,"_dependencyMap"],[15,40,11,25],[15,62,11,43],[15,63,11,44],[16,2,12,0],[16,6,12,6,"toBytes_js_1"],[16,18,12,18],[16,21,12,21,"require"],[16,28,12,28],[16,29,12,28,"_dependencyMap"],[16,43,12,28],[16,62,12,43],[16,63,12,44],[17,2,13,0],[17,11,13,9,"assertSize"],[17,21,13,19,"assertSize"],[17,22,13,20,"hexOrBytes"],[17,32,13,30],[17,34,13,30,"_ref"],[17,38,13,30],[17,40,13,42],[18,4,13,42],[18,8,13,34,"size"],[18,12,13,38],[18,15,13,38,"_ref"],[18,19,13,38],[18,20,13,34,"size"],[18,24,13,38],[19,4,14,4],[19,8,14,8],[19,9,14,9],[19,10,14,10],[19,12,14,12,"size_js_1"],[19,21,14,21],[19,22,14,22,"size"],[19,26,14,26],[19,28,14,28,"hexOrBytes"],[19,38,14,38],[19,39,14,39],[19,42,14,42,"size"],[19,46,14,46],[19,48,15,8],[19,54,15,14],[19,58,15,18,"encoding_js_1"],[19,71,15,31],[19,72,15,32,"SizeOverflowError"],[19,89,15,49],[19,90,15,50],[20,6,16,12,"givenSize"],[20,15,16,21],[20,17,16,23],[20,18,16,24],[20,19,16,25],[20,21,16,27,"size_js_1"],[20,30,16,36],[20,31,16,37,"size"],[20,35,16,41],[20,37,16,43,"hexOrBytes"],[20,47,16,53],[20,48,16,54],[21,6,17,12,"maxSize"],[21,13,17,19],[21,15,17,21,"size"],[22,4,18,8],[22,5,18,9],[22,6,18,10],[23,2,19,0],[24,2,20,0],[24,11,20,9,"fromHex"],[24,18,20,16,"fromHex"],[24,19,20,17,"hex"],[24,22,20,20],[24,24,20,22,"toOrOpts"],[24,32,20,30],[24,34,20,32],[25,4,21,4],[25,8,21,10,"opts"],[25,12,21,14],[25,15,21,17],[25,22,21,24,"toOrOpts"],[25,30,21,32],[25,35,21,37],[25,43,21,45],[25,46,21,48],[26,6,21,50,"to"],[26,8,21,52],[26,10,21,54,"toOrOpts"],[27,4,21,63],[27,5,21,64],[27,8,21,67,"toOrOpts"],[27,16,21,75],[28,4,22,4],[28,8,22,10,"to"],[28,10,22,12],[28,13,22,15,"opts"],[28,17,22,19],[28,18,22,20,"to"],[28,20,22,22],[29,4,23,4],[29,8,23,8,"to"],[29,10,23,10],[29,15,23,15],[29,23,23,23],[29,25,24,8],[29,32,24,15,"hexToNumber"],[29,43,24,26],[29,44,24,27,"hex"],[29,47,24,30],[29,49,24,32,"opts"],[29,53,24,36],[29,54,24,37],[30,4,25,4],[30,8,25,8,"to"],[30,10,25,10],[30,15,25,15],[30,23,25,23],[30,25,26,8],[30,32,26,15,"hexToBigInt"],[30,43,26,26],[30,44,26,27,"hex"],[30,47,26,30],[30,49,26,32,"opts"],[30,53,26,36],[30,54,26,37],[31,4,27,4],[31,8,27,8,"to"],[31,10,27,10],[31,15,27,15],[31,23,27,23],[31,25,28,8],[31,32,28,15,"hexToString"],[31,43,28,26],[31,44,28,27,"hex"],[31,47,28,30],[31,49,28,32,"opts"],[31,53,28,36],[31,54,28,37],[32,4,29,4],[32,8,29,8,"to"],[32,10,29,10],[32,15,29,15],[32,24,29,24],[32,26,30,8],[32,33,30,15,"hexToBool"],[32,42,30,24],[32,43,30,25,"hex"],[32,46,30,28],[32,48,30,30,"opts"],[32,52,30,34],[32,53,30,35],[33,4,31,4],[33,11,31,11],[33,12,31,12],[33,13,31,13],[33,15,31,15,"toBytes_js_1"],[33,27,31,27],[33,28,31,28,"hexToBytes"],[33,38,31,38],[33,40,31,40,"hex"],[33,43,31,43],[33,45,31,45,"opts"],[33,49,31,49],[33,50,31,50],[34,2,32,0],[35,2,33,0],[35,11,33,9,"hexToBigInt"],[35,22,33,20,"hexToBigInt"],[35,23,33,21,"hex"],[35,26,33,24],[35,28,33,37],[36,4,33,37],[36,8,33,26,"opts"],[36,12,33,30],[36,15,33,30,"arguments"],[36,24,33,30],[36,25,33,30,"length"],[36,31,33,30],[36,39,33,30,"arguments"],[36,48,33,30],[36,56,33,30,"undefined"],[36,65,33,30],[36,68,33,30,"arguments"],[36,77,33,30],[36,83,33,33],[36,84,33,34],[36,85,33,35],[37,4,34,4],[37,8,34,12,"signed"],[37,14,34,18],[37,17,34,23,"opts"],[37,21,34,27],[37,22,34,12,"signed"],[37,28,34,18],[38,4,35,4],[38,8,35,8,"opts"],[38,12,35,12],[38,13,35,13,"size"],[38,17,35,17],[38,19,36,8,"assertSize"],[38,29,36,18],[38,30,36,19,"hex"],[38,33,36,22],[38,35,36,24],[39,6,36,26,"size"],[39,10,36,30],[39,12,36,32,"opts"],[39,16,36,36],[39,17,36,37,"size"],[40,4,36,42],[40,5,36,43],[40,6,36,44],[41,4,37,4],[41,8,37,10,"value"],[41,13,37,15],[41,16,37,18,"BigInt"],[41,22,37,24],[41,23,37,25,"hex"],[41,26,37,28],[41,27,37,29],[42,4,38,4],[42,8,38,8],[42,9,38,9,"signed"],[42,15,38,15],[42,17,39,8],[42,24,39,15,"value"],[42,29,39,20],[43,4,40,4],[43,8,40,10,"size"],[43,12,40,14],[43,15,40,17],[43,16,40,18,"hex"],[43,19,40,21],[43,20,40,22,"length"],[43,26,40,28],[43,29,40,31],[43,30,40,32],[43,34,40,36],[43,35,40,37],[44,4,41,4],[44,8,41,10,"max"],[44,11,41,13],[44,14,41,16],[44,15,41,17],[44,17,41,19],[44,21,41,24,"BigInt"],[44,27,41,30],[44,28,41,31,"size"],[44,32,41,35],[44,33,41,36],[44,36,41,39],[44,38,41,41],[44,41,41,44],[44,43,41,47],[44,47,41,51],[44,49,41,53],[45,4,42,4],[45,8,42,8,"value"],[45,13,42,13],[45,17,42,17,"max"],[45,20,42,20],[45,22,43,8],[45,29,43,15,"value"],[45,34,43,20],[46,4,44,4],[46,11,44,11,"value"],[46,16,44,16],[46,19,44,19,"BigInt"],[46,25,44,25],[46,26,44,26],[46,31,44,31],[46,34,44,34],[46,35,44,35,"padStart"],[46,43,44,43],[46,44,44,44,"size"],[46,48,44,48],[46,51,44,51],[46,52,44,52],[46,54,44,54],[46,57,44,57],[46,58,44,58],[46,60,44,60],[46,61,44,61],[46,64,44,64],[46,66,44,66],[47,2,45,0],[48,2,46,0],[48,11,46,9,"hexToBool"],[48,20,46,18,"hexToBool"],[48,21,46,19,"hex_"],[48,25,46,23],[48,27,46,36],[49,4,46,36],[49,8,46,25,"opts"],[49,12,46,29],[49,15,46,29,"arguments"],[49,24,46,29],[49,25,46,29,"length"],[49,31,46,29],[49,39,46,29,"arguments"],[49,48,46,29],[49,56,46,29,"undefined"],[49,65,46,29],[49,68,46,29,"arguments"],[49,77,46,29],[49,83,46,32],[49,84,46,33],[49,85,46,34],[50,4,47,4],[50,8,47,8,"hex"],[50,11,47,11],[50,14,47,14,"hex_"],[50,18,47,18],[51,4,48,4],[51,8,48,8,"opts"],[51,12,48,12],[51,13,48,13,"size"],[51,17,48,17],[51,19,48,19],[52,6,49,8,"assertSize"],[52,16,49,18],[52,17,49,19,"hex"],[52,20,49,22],[52,22,49,24],[53,8,49,26,"size"],[53,12,49,30],[53,14,49,32,"opts"],[53,18,49,36],[53,19,49,37,"size"],[54,6,49,42],[54,7,49,43],[54,8,49,44],[55,6,50,8,"hex"],[55,9,50,11],[55,12,50,14],[55,13,50,15],[55,14,50,16],[55,16,50,18,"trim_js_1"],[55,25,50,27],[55,26,50,28,"trim"],[55,30,50,32],[55,32,50,34,"hex"],[55,35,50,37],[55,36,50,38],[56,4,51,4],[57,4,52,4],[57,8,52,8],[57,9,52,9],[57,10,52,10],[57,12,52,12,"trim_js_1"],[57,21,52,21],[57,22,52,22,"trim"],[57,26,52,26],[57,28,52,28,"hex"],[57,31,52,31],[57,32,52,32],[57,37,52,37],[57,43,52,43],[57,45,53,8],[57,52,53,15],[57,57,53,20],[58,4,54,4],[58,8,54,8],[58,9,54,9],[58,10,54,10],[58,12,54,12,"trim_js_1"],[58,21,54,21],[58,22,54,22,"trim"],[58,26,54,26],[58,28,54,28,"hex"],[58,31,54,31],[58,32,54,32],[58,37,54,37],[58,43,54,43],[58,45,55,8],[58,52,55,15],[58,56,55,19],[59,4,56,4],[59,10,56,10],[59,14,56,14,"encoding_js_1"],[59,27,56,27],[59,28,56,28,"InvalidHexBooleanError"],[59,50,56,50],[59,51,56,51,"hex"],[59,54,56,54],[59,55,56,55],[60,2,57,0],[61,2,58,0],[61,11,58,9,"hexToNumber"],[61,22,58,20,"hexToNumber"],[61,23,58,21,"hex"],[61,26,58,24],[61,28,58,37],[62,4,58,37],[62,8,58,26,"opts"],[62,12,58,30],[62,15,58,30,"arguments"],[62,24,58,30],[62,25,58,30,"length"],[62,31,58,30],[62,39,58,30,"arguments"],[62,48,58,30],[62,56,58,30,"undefined"],[62,65,58,30],[62,68,58,30,"arguments"],[62,77,58,30],[62,83,58,33],[62,84,58,34],[62,85,58,35],[63,4,59,4],[63,11,59,11,"Number"],[63,17,59,17],[63,18,59,18,"hexToBigInt"],[63,29,59,29],[63,30,59,30,"hex"],[63,33,59,33],[63,35,59,35,"opts"],[63,39,59,39],[63,40,59,40],[63,41,59,41],[64,2,60,0],[65,2,61,0],[65,11,61,9,"hexToString"],[65,22,61,20,"hexToString"],[65,23,61,21,"hex"],[65,26,61,24],[65,28,61,37],[66,4,61,37],[66,8,61,26,"opts"],[66,12,61,30],[66,15,61,30,"arguments"],[66,24,61,30],[66,25,61,30,"length"],[66,31,61,30],[66,39,61,30,"arguments"],[66,48,61,30],[66,56,61,30,"undefined"],[66,65,61,30],[66,68,61,30,"arguments"],[66,77,61,30],[66,83,61,33],[66,84,61,34],[66,85,61,35],[67,4,62,4],[67,8,62,8,"bytes"],[67,13,62,13],[67,16,62,16],[67,17,62,17],[67,18,62,18],[67,20,62,20,"toBytes_js_1"],[67,32,62,32],[67,33,62,33,"hexToBytes"],[67,43,62,43],[67,45,62,45,"hex"],[67,48,62,48],[67,49,62,49],[68,4,63,4],[68,8,63,8,"opts"],[68,12,63,12],[68,13,63,13,"size"],[68,17,63,17],[68,19,63,19],[69,6,64,8,"assertSize"],[69,16,64,18],[69,17,64,19,"bytes"],[69,22,64,24],[69,24,64,26],[70,8,64,28,"size"],[70,12,64,32],[70,14,64,34,"opts"],[70,18,64,38],[70,19,64,39,"size"],[71,6,64,44],[71,7,64,45],[71,8,64,46],[72,6,65,8,"bytes"],[72,11,65,13],[72,14,65,16],[72,15,65,17],[72,16,65,18],[72,18,65,20,"trim_js_1"],[72,27,65,29],[72,28,65,30,"trim"],[72,32,65,34],[72,34,65,36,"bytes"],[72,39,65,41],[72,41,65,43],[73,8,65,45,"dir"],[73,11,65,48],[73,13,65,50],[74,6,65,58],[74,7,65,59],[74,8,65,60],[75,4,66,4],[76,4,67,4],[76,11,67,11],[76,15,67,15,"TextDecoder"],[76,26,67,26],[76,27,67,27],[76,28,67,28],[76,29,67,29,"decode"],[76,35,67,35],[76,36,67,36,"bytes"],[76,41,67,41],[76,42,67,42],[77,2,68,0],[78,0,68,1],[78,3]],"functionMap":{"names":["<global>","assertSize","fromHex","hexToBigInt","hexToBool","hexToNumber","hexToString"],"mappings":"AAA;ACY;CDM;AEC;CFY;AGC;CHY;AIC;CJW;AKC;CLE;AMC;CNO"}},"type":"js/module"}]}