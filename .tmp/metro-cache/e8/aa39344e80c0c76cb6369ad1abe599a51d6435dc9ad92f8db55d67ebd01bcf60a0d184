{"dependencies":[{"name":"../data/concat.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":20,"index":126},"end":{"line":4,"column":48,"index":154}}],"key":"/Jt4qeKCErddWi6AKlnb9At1fi4="}},{"name":"../encoding/toBytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":21,"index":177},"end":{"line":5,"column":54,"index":210}}],"key":"IH3Jqmew4P7fKnssnSnuakMjJtk="}},{"name":"../encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":19,"index":231},"end":{"line":6,"column":50,"index":262}}],"key":"bRt+1vooOX12K5i1W+v01PrrHLA="}},{"name":"../hash/keccak256.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":23,"index":287},"end":{"line":7,"column":54,"index":318}}],"key":"hVdRuF9I2m+y185iahTUOhPDZBM="}},{"name":"./encodedLabelToLabelhash.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":37,"index":357},"end":{"line":8,"column":76,"index":396}}],"key":"KRnGOOHZMSEirABy44ZA1pibN+w="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.namehash = namehash;\n  var concat_js_1 = require(_dependencyMap[0], \"../data/concat.js\");\n  var toBytes_js_1 = require(_dependencyMap[1], \"../encoding/toBytes.js\");\n  var toHex_js_1 = require(_dependencyMap[2], \"../encoding/toHex.js\");\n  var keccak256_js_1 = require(_dependencyMap[3], \"../hash/keccak256.js\");\n  var encodedLabelToLabelhash_js_1 = require(_dependencyMap[4], \"./encodedLabelToLabelhash.js\");\n  function namehash(name) {\n    var result = new Uint8Array(32).fill(0);\n    if (!name) return (0, toHex_js_1.bytesToHex)(result);\n    var labels = name.split('.');\n    for (var i = labels.length - 1; i >= 0; i -= 1) {\n      var hashFromEncodedLabel = (0, encodedLabelToLabelhash_js_1.encodedLabelToLabelhash)(labels[i]);\n      var hashed = hashFromEncodedLabel ? (0, toBytes_js_1.toBytes)(hashFromEncodedLabel) : (0, keccak256_js_1.keccak256)((0, toBytes_js_1.stringToBytes)(labels[i]), 'bytes');\n      result = (0, keccak256_js_1.keccak256)((0, concat_js_1.concat)([result, hashed]), 'bytes');\n    }\n    return (0, toHex_js_1.bytesToHex)(result);\n  }\n});","lineCount":24,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"namehash"],[7,18,3,16],[7,21,3,19,"namehash"],[7,29,3,27],[8,2,4,0],[8,6,4,6,"concat_js_1"],[8,17,4,17],[8,20,4,20,"require"],[8,27,4,27],[8,28,4,27,"_dependencyMap"],[8,42,4,27],[8,66,4,47],[8,67,4,48],[9,2,5,0],[9,6,5,6,"toBytes_js_1"],[9,18,5,18],[9,21,5,21,"require"],[9,28,5,28],[9,29,5,28,"_dependencyMap"],[9,43,5,28],[9,72,5,53],[9,73,5,54],[10,2,6,0],[10,6,6,6,"toHex_js_1"],[10,16,6,16],[10,19,6,19,"require"],[10,26,6,26],[10,27,6,26,"_dependencyMap"],[10,41,6,26],[10,68,6,49],[10,69,6,50],[11,2,7,0],[11,6,7,6,"keccak256_js_1"],[11,20,7,20],[11,23,7,23,"require"],[11,30,7,30],[11,31,7,30,"_dependencyMap"],[11,45,7,30],[11,72,7,53],[11,73,7,54],[12,2,8,0],[12,6,8,6,"encodedLabelToLabelhash_js_1"],[12,34,8,34],[12,37,8,37,"require"],[12,44,8,44],[12,45,8,44,"_dependencyMap"],[12,59,8,44],[12,94,8,75],[12,95,8,76],[13,2,9,0],[13,11,9,9,"namehash"],[13,19,9,17,"namehash"],[13,20,9,18,"name"],[13,24,9,22],[13,26,9,24],[14,4,10,4],[14,8,10,8,"result"],[14,14,10,14],[14,17,10,17],[14,21,10,21,"Uint8Array"],[14,31,10,31],[14,32,10,32],[14,34,10,34],[14,35,10,35],[14,36,10,36,"fill"],[14,40,10,40],[14,41,10,41],[14,42,10,42],[14,43,10,43],[15,4,11,4],[15,8,11,8],[15,9,11,9,"name"],[15,13,11,13],[15,15,12,8],[15,22,12,15],[15,23,12,16],[15,24,12,17],[15,26,12,19,"toHex_js_1"],[15,36,12,29],[15,37,12,30,"bytesToHex"],[15,47,12,40],[15,49,12,42,"result"],[15,55,12,48],[15,56,12,49],[16,4,13,4],[16,8,13,10,"labels"],[16,14,13,16],[16,17,13,19,"name"],[16,21,13,23],[16,22,13,24,"split"],[16,27,13,29],[16,28,13,30],[16,31,13,33],[16,32,13,34],[17,4,14,4],[17,9,14,9],[17,13,14,13,"i"],[17,14,14,14],[17,17,14,17,"labels"],[17,23,14,23],[17,24,14,24,"length"],[17,30,14,30],[17,33,14,33],[17,34,14,34],[17,36,14,36,"i"],[17,37,14,37],[17,41,14,41],[17,42,14,42],[17,44,14,44,"i"],[17,45,14,45],[17,49,14,49],[17,50,14,50],[17,52,14,52],[18,6,15,8],[18,10,15,14,"hashFromEncodedLabel"],[18,30,15,34],[18,33,15,37],[18,34,15,38],[18,35,15,39],[18,37,15,41,"encodedLabelToLabelhash_js_1"],[18,65,15,69],[18,66,15,70,"encodedLabelToLabelhash"],[18,89,15,93],[18,91,15,95,"labels"],[18,97,15,101],[18,98,15,102,"i"],[18,99,15,103],[18,100,15,104],[18,101,15,105],[19,6,16,8],[19,10,16,14,"hashed"],[19,16,16,20],[19,19,16,23,"hashFromEncodedLabel"],[19,39,16,43],[19,42,17,14],[19,43,17,15],[19,44,17,16],[19,46,17,18,"toBytes_js_1"],[19,58,17,30],[19,59,17,31,"toBytes"],[19,66,17,38],[19,68,17,40,"hashFromEncodedLabel"],[19,88,17,60],[19,89,17,61],[19,92,18,14],[19,93,18,15],[19,94,18,16],[19,96,18,18,"keccak256_js_1"],[19,110,18,32],[19,111,18,33,"keccak256"],[19,120,18,42],[19,122,18,44],[19,123,18,45],[19,124,18,46],[19,126,18,48,"toBytes_js_1"],[19,138,18,60],[19,139,18,61,"stringToBytes"],[19,152,18,74],[19,154,18,76,"labels"],[19,160,18,82],[19,161,18,83,"i"],[19,162,18,84],[19,163,18,85],[19,164,18,86],[19,166,18,88],[19,173,18,95],[19,174,18,96],[20,6,19,8,"result"],[20,12,19,14],[20,15,19,17],[20,16,19,18],[20,17,19,19],[20,19,19,21,"keccak256_js_1"],[20,33,19,35],[20,34,19,36,"keccak256"],[20,43,19,45],[20,45,19,47],[20,46,19,48],[20,47,19,49],[20,49,19,51,"concat_js_1"],[20,60,19,62],[20,61,19,63,"concat"],[20,67,19,69],[20,69,19,71],[20,70,19,72,"result"],[20,76,19,78],[20,78,19,80,"hashed"],[20,84,19,86],[20,85,19,87],[20,86,19,88],[20,88,19,90],[20,95,19,97],[20,96,19,98],[21,4,20,4],[22,4,21,4],[22,11,21,11],[22,12,21,12],[22,13,21,13],[22,15,21,15,"toHex_js_1"],[22,25,21,25],[22,26,21,26,"bytesToHex"],[22,36,21,36],[22,38,21,38,"result"],[22,44,21,44],[22,45,21,45],[23,2,22,0],[24,0,22,1],[24,3]],"functionMap":{"names":["<global>","namehash"],"mappings":"AAA;ACQ;CDa"}},"type":"js/module"}]}