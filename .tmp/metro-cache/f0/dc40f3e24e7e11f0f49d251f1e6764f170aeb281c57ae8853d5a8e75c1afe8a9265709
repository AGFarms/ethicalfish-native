{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":119,"column":37,"index":4688}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../errors/abi.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":17,"index":292},"end":{"line":7,"column":44,"index":319}}],"key":"jjmcccdykBzPIURx1uSO/XM1Ahk="}},{"name":"../errors/address.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":21,"index":342},"end":{"line":8,"column":52,"index":373}}],"key":"KwcJppp46IqqumneHCs3L8Ea/sk="}},{"name":"../errors/typedData.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":23,"index":398},"end":{"line":9,"column":56,"index":431}}],"key":"p7PPXqdUhtjZvToIx0Dx+M4B8EE="}},{"name":"./address/isAddress.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":23,"index":456},"end":{"line":10,"column":56,"index":489}}],"key":"HEmole2XyCjNi0JP4cD6HQGzL0g="}},{"name":"./data/size.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":18,"index":509},"end":{"line":11,"column":43,"index":534}}],"key":"4JcXTSP2im/ci2xxC8slzbsQuQM="}},{"name":"./encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":19,"index":555},"end":{"line":12,"column":49,"index":585}}],"key":"7EkOWM1MqK8rEUnmEWGZc/rtrbU="}},{"name":"./regex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":19,"index":606},"end":{"line":13,"column":40,"index":627}}],"key":"62vmTAL+krgktcwZxaPN42ga5js="}},{"name":"./signature/hashTypedData.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":27,"index":656},"end":{"line":14,"column":66,"index":695}}],"key":"JyIvPZed+hT4HJ+1Jxppoh9nSo4="}},{"name":"./stringify.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":23,"index":720},"end":{"line":15,"column":48,"index":745}}],"key":"GJQ/K20/vax8KG5LBpoUpzK/Tts="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.serializeTypedData = serializeTypedData;\n  exports.validateTypedData = validateTypedData;\n  exports.getTypesForEIP712Domain = getTypesForEIP712Domain;\n  exports.domainSeparator = domainSeparator;\n  var abi_js_1 = require(_dependencyMap[1], \"../errors/abi.js\");\n  var address_js_1 = require(_dependencyMap[2], \"../errors/address.js\");\n  var typedData_js_1 = require(_dependencyMap[3], \"../errors/typedData.js\");\n  var isAddress_js_1 = require(_dependencyMap[4], \"./address/isAddress.js\");\n  var size_js_1 = require(_dependencyMap[5], \"./data/size.js\");\n  var toHex_js_1 = require(_dependencyMap[6], \"./encoding/toHex.js\");\n  var regex_js_1 = require(_dependencyMap[7], \"./regex.js\");\n  var hashTypedData_js_1 = require(_dependencyMap[8], \"./signature/hashTypedData.js\");\n  var stringify_js_1 = require(_dependencyMap[9], \"./stringify.js\");\n  function serializeTypedData(parameters) {\n    var domain_ = parameters.domain,\n      message_ = parameters.message,\n      primaryType = parameters.primaryType,\n      types = parameters.types;\n    var normalizeData = (struct, data_) => {\n      var data = {\n        ...data_\n      };\n      for (var param of struct) {\n        var name = param.name,\n          type = param.type;\n        if (type === 'address') data[name] = data[name].toLowerCase();\n      }\n      return data;\n    };\n    var domain = (() => {\n      if (!types.EIP712Domain) return {};\n      if (!domain_) return {};\n      return normalizeData(types.EIP712Domain, domain_);\n    })();\n    var message = (() => {\n      if (primaryType === 'EIP712Domain') return undefined;\n      return normalizeData(types[primaryType], message_);\n    })();\n    return (0, stringify_js_1.stringify)({\n      domain,\n      message,\n      primaryType,\n      types\n    });\n  }\n  function validateTypedData(parameters) {\n    var domain = parameters.domain,\n      message = parameters.message,\n      primaryType = parameters.primaryType,\n      types = parameters.types;\n    var validateData = (struct, data) => {\n      for (var param of struct) {\n        var name = param.name,\n          type = param.type;\n        var value = data[name];\n        var integerMatch = type.match(regex_js_1.integerRegex);\n        if (integerMatch && (typeof value === 'number' || typeof value === 'bigint')) {\n          var _integerMatch = _slicedToArray(integerMatch, 3),\n            _type = _integerMatch[0],\n            base = _integerMatch[1],\n            size_ = _integerMatch[2];\n          (0, toHex_js_1.numberToHex)(value, {\n            signed: base === 'int',\n            size: Number.parseInt(size_) / 8\n          });\n        }\n        if (type === 'address' && typeof value === 'string' && !(0, isAddress_js_1.isAddress)(value)) throw new address_js_1.InvalidAddressError({\n          address: value\n        });\n        var bytesMatch = type.match(regex_js_1.bytesRegex);\n        if (bytesMatch) {\n          var _bytesMatch = _slicedToArray(bytesMatch, 2),\n            _type2 = _bytesMatch[0],\n            _size_ = _bytesMatch[1];\n          if (_size_ && (0, size_js_1.size)(value) !== Number.parseInt(_size_)) throw new abi_js_1.BytesSizeMismatchError({\n            expectedSize: Number.parseInt(_size_),\n            givenSize: (0, size_js_1.size)(value)\n          });\n        }\n        var _struct = types[type];\n        if (_struct) {\n          validateReference(type);\n          validateData(_struct, value);\n        }\n      }\n    };\n    if (types.EIP712Domain && domain) {\n      if (typeof domain !== 'object') throw new typedData_js_1.InvalidDomainError({\n        domain\n      });\n      validateData(types.EIP712Domain, domain);\n    }\n    if (primaryType !== 'EIP712Domain') {\n      if (types[primaryType]) validateData(types[primaryType], message);else throw new typedData_js_1.InvalidPrimaryTypeError({\n        primaryType,\n        types\n      });\n    }\n  }\n  function getTypesForEIP712Domain(_ref) {\n    var domain = _ref.domain;\n    return [typeof domain?.name === 'string' && {\n      name: 'name',\n      type: 'string'\n    }, domain?.version && {\n      name: 'version',\n      type: 'string'\n    }, (typeof domain?.chainId === 'number' || typeof domain?.chainId === 'bigint') && {\n      name: 'chainId',\n      type: 'uint256'\n    }, domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address'\n    }, domain?.salt && {\n      name: 'salt',\n      type: 'bytes32'\n    }].filter(Boolean);\n  }\n  function domainSeparator(_ref2) {\n    var domain = _ref2.domain;\n    return (0, hashTypedData_js_1.hashDomain)({\n      domain,\n      types: {\n        EIP712Domain: getTypesForEIP712Domain({\n          domain\n        })\n      }\n    });\n  }\n  function validateReference(type) {\n    if (type === 'address' || type === 'bool' || type === 'string' || type.startsWith('bytes') || type.startsWith('uint') || type.startsWith('int')) throw new typedData_js_1.InvalidStructTypeError({\n      type\n    });\n  }\n});","lineCount":142,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"serializeTypedData"],[8,28,3,26],[8,31,3,29,"serializeTypedData"],[8,49,3,47],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"validateTypedData"],[9,27,4,25],[9,30,4,28,"validateTypedData"],[9,47,4,45],[10,2,5,0,"exports"],[10,9,5,7],[10,10,5,8,"getTypesForEIP712Domain"],[10,33,5,31],[10,36,5,34,"getTypesForEIP712Domain"],[10,59,5,57],[11,2,6,0,"exports"],[11,9,6,7],[11,10,6,8,"domainSeparator"],[11,25,6,23],[11,28,6,26,"domainSeparator"],[11,43,6,41],[12,2,7,0],[12,6,7,6,"abi_js_1"],[12,14,7,14],[12,17,7,17,"require"],[12,24,7,24],[12,25,7,24,"_dependencyMap"],[12,39,7,24],[12,62,7,43],[12,63,7,44],[13,2,8,0],[13,6,8,6,"address_js_1"],[13,18,8,18],[13,21,8,21,"require"],[13,28,8,28],[13,29,8,28,"_dependencyMap"],[13,43,8,28],[13,70,8,51],[13,71,8,52],[14,2,9,0],[14,6,9,6,"typedData_js_1"],[14,20,9,20],[14,23,9,23,"require"],[14,30,9,30],[14,31,9,30,"_dependencyMap"],[14,45,9,30],[14,74,9,55],[14,75,9,56],[15,2,10,0],[15,6,10,6,"isAddress_js_1"],[15,20,10,20],[15,23,10,23,"require"],[15,30,10,30],[15,31,10,30,"_dependencyMap"],[15,45,10,30],[15,74,10,55],[15,75,10,56],[16,2,11,0],[16,6,11,6,"size_js_1"],[16,15,11,15],[16,18,11,18,"require"],[16,25,11,25],[16,26,11,25,"_dependencyMap"],[16,40,11,25],[16,61,11,42],[16,62,11,43],[17,2,12,0],[17,6,12,6,"toHex_js_1"],[17,16,12,16],[17,19,12,19,"require"],[17,26,12,26],[17,27,12,26,"_dependencyMap"],[17,41,12,26],[17,67,12,48],[17,68,12,49],[18,2,13,0],[18,6,13,6,"regex_js_1"],[18,16,13,16],[18,19,13,19,"require"],[18,26,13,26],[18,27,13,26,"_dependencyMap"],[18,41,13,26],[18,58,13,39],[18,59,13,40],[19,2,14,0],[19,6,14,6,"hashTypedData_js_1"],[19,24,14,24],[19,27,14,27,"require"],[19,34,14,34],[19,35,14,34,"_dependencyMap"],[19,49,14,34],[19,84,14,65],[19,85,14,66],[20,2,15,0],[20,6,15,6,"stringify_js_1"],[20,20,15,20],[20,23,15,23,"require"],[20,30,15,30],[20,31,15,30,"_dependencyMap"],[20,45,15,30],[20,66,15,47],[20,67,15,48],[21,2,16,0],[21,11,16,9,"serializeTypedData"],[21,29,16,27,"serializeTypedData"],[21,30,16,28,"parameters"],[21,40,16,38],[21,42,16,40],[22,4,17,4],[22,8,17,20,"domain_"],[22,15,17,27],[22,18,17,72,"parameters"],[22,28,17,82],[22,29,17,12,"domain"],[22,35,17,18],[23,6,17,38,"message_"],[23,14,17,46],[23,17,17,72,"parameters"],[23,27,17,82],[23,28,17,29,"message"],[23,35,17,36],[24,6,17,48,"primaryType"],[24,17,17,59],[24,20,17,72,"parameters"],[24,30,17,82],[24,31,17,48,"primaryType"],[24,42,17,59],[25,6,17,61,"types"],[25,11,17,66],[25,14,17,72,"parameters"],[25,24,17,82],[25,25,17,61,"types"],[25,30,17,66],[26,4,18,4],[26,8,18,10,"normalizeData"],[26,21,18,23],[26,24,18,26,"normalizeData"],[26,25,18,27,"struct"],[26,31,18,33],[26,33,18,35,"data_"],[26,38,18,40],[26,43,18,45],[27,6,19,8],[27,10,19,14,"data"],[27,14,19,18],[27,17,19,21],[28,8,19,23],[28,11,19,26,"data_"],[29,6,19,32],[29,7,19,33],[30,6,20,8],[30,11,20,13],[30,15,20,19,"param"],[30,20,20,24],[30,24,20,28,"struct"],[30,30,20,34],[30,32,20,36],[31,8,21,12],[31,12,21,20,"name"],[31,16,21,24],[31,19,21,35,"param"],[31,24,21,40],[31,25,21,20,"name"],[31,29,21,24],[32,10,21,26,"type"],[32,14,21,30],[32,17,21,35,"param"],[32,22,21,40],[32,23,21,26,"type"],[32,27,21,30],[33,8,22,12],[33,12,22,16,"type"],[33,16,22,20],[33,21,22,25],[33,30,22,34],[33,32,23,16,"data"],[33,36,23,20],[33,37,23,21,"name"],[33,41,23,25],[33,42,23,26],[33,45,23,29,"data"],[33,49,23,33],[33,50,23,34,"name"],[33,54,23,38],[33,55,23,39],[33,56,23,40,"toLowerCase"],[33,67,23,51],[33,68,23,52],[33,69,23,53],[34,6,24,8],[35,6,25,8],[35,13,25,15,"data"],[35,17,25,19],[36,4,26,4],[36,5,26,5],[37,4,27,4],[37,8,27,10,"domain"],[37,14,27,16],[37,17,27,19],[37,18,27,20],[37,24,27,26],[38,6,28,8],[38,10,28,12],[38,11,28,13,"types"],[38,16,28,18],[38,17,28,19,"EIP712Domain"],[38,29,28,31],[38,31,29,12],[38,38,29,19],[38,39,29,20],[38,40,29,21],[39,6,30,8],[39,10,30,12],[39,11,30,13,"domain_"],[39,18,30,20],[39,20,31,12],[39,27,31,19],[39,28,31,20],[39,29,31,21],[40,6,32,8],[40,13,32,15,"normalizeData"],[40,26,32,28],[40,27,32,29,"types"],[40,32,32,34],[40,33,32,35,"EIP712Domain"],[40,45,32,47],[40,47,32,49,"domain_"],[40,54,32,56],[40,55,32,57],[41,4,33,4],[41,5,33,5],[41,7,33,7],[41,8,33,8],[42,4,34,4],[42,8,34,10,"message"],[42,15,34,17],[42,18,34,20],[42,19,34,21],[42,25,34,27],[43,6,35,8],[43,10,35,12,"primaryType"],[43,21,35,23],[43,26,35,28],[43,40,35,42],[43,42,36,12],[43,49,36,19,"undefined"],[43,58,36,28],[44,6,37,8],[44,13,37,15,"normalizeData"],[44,26,37,28],[44,27,37,29,"types"],[44,32,37,34],[44,33,37,35,"primaryType"],[44,44,37,46],[44,45,37,47],[44,47,37,49,"message_"],[44,55,37,57],[44,56,37,58],[45,4,38,4],[45,5,38,5],[45,7,38,7],[45,8,38,8],[46,4,39,4],[46,11,39,11],[46,12,39,12],[46,13,39,13],[46,15,39,15,"stringify_js_1"],[46,29,39,29],[46,30,39,30,"stringify"],[46,39,39,39],[46,41,39,41],[47,6,39,43,"domain"],[47,12,39,49],[48,6,39,51,"message"],[48,13,39,58],[49,6,39,60,"primaryType"],[49,17,39,71],[50,6,39,73,"types"],[51,4,39,79],[51,5,39,80],[51,6,39,81],[52,2,40,0],[53,2,41,0],[53,11,41,9,"validateTypedData"],[53,28,41,26,"validateTypedData"],[53,29,41,27,"parameters"],[53,39,41,37],[53,41,41,39],[54,4,42,4],[54,8,42,12,"domain"],[54,14,42,18],[54,17,42,52,"parameters"],[54,27,42,62],[54,28,42,12,"domain"],[54,34,42,18],[55,6,42,20,"message"],[55,13,42,27],[55,16,42,52,"parameters"],[55,26,42,62],[55,27,42,20,"message"],[55,34,42,27],[56,6,42,29,"primaryType"],[56,17,42,40],[56,20,42,52,"parameters"],[56,30,42,62],[56,31,42,29,"primaryType"],[56,42,42,40],[57,6,42,42,"types"],[57,11,42,47],[57,14,42,52,"parameters"],[57,24,42,62],[57,25,42,42,"types"],[57,30,42,47],[58,4,43,4],[58,8,43,10,"validateData"],[58,20,43,22],[58,23,43,25,"validateData"],[58,24,43,26,"struct"],[58,30,43,32],[58,32,43,34,"data"],[58,36,43,38],[58,41,43,43],[59,6,44,8],[59,11,44,13],[59,15,44,19,"param"],[59,20,44,24],[59,24,44,28,"struct"],[59,30,44,34],[59,32,44,36],[60,8,45,12],[60,12,45,20,"name"],[60,16,45,24],[60,19,45,35,"param"],[60,24,45,40],[60,25,45,20,"name"],[60,29,45,24],[61,10,45,26,"type"],[61,14,45,30],[61,17,45,35,"param"],[61,22,45,40],[61,23,45,26,"type"],[61,27,45,30],[62,8,46,12],[62,12,46,18,"value"],[62,17,46,23],[62,20,46,26,"data"],[62,24,46,30],[62,25,46,31,"name"],[62,29,46,35],[62,30,46,36],[63,8,47,12],[63,12,47,18,"integerMatch"],[63,24,47,30],[63,27,47,33,"type"],[63,31,47,37],[63,32,47,38,"match"],[63,37,47,43],[63,38,47,44,"regex_js_1"],[63,48,47,54],[63,49,47,55,"integerRegex"],[63,61,47,67],[63,62,47,68],[64,8,48,12],[64,12,48,16,"integerMatch"],[64,24,48,28],[64,29,49,17],[64,36,49,24,"value"],[64,41,49,29],[64,46,49,34],[64,54,49,42],[64,58,49,46],[64,65,49,53,"value"],[64,70,49,58],[64,75,49,63],[64,83,49,71],[64,84,49,72],[64,86,49,74],[65,10,50,16],[65,14,50,16,"_integerMatch"],[65,27,50,16],[65,30,50,16,"_slicedToArray"],[65,44,50,16],[65,45,50,45,"integerMatch"],[65,57,50,57],[66,12,50,23,"_type"],[66,17,50,28],[66,20,50,28,"_integerMatch"],[66,33,50,28],[67,12,50,30,"base"],[67,16,50,34],[67,19,50,34,"_integerMatch"],[67,32,50,34],[68,12,50,36,"size_"],[68,17,50,41],[68,20,50,41,"_integerMatch"],[68,33,50,41],[69,10,51,16],[69,11,51,17],[69,12,51,18],[69,14,51,20,"toHex_js_1"],[69,24,51,30],[69,25,51,31,"numberToHex"],[69,36,51,42],[69,38,51,44,"value"],[69,43,51,49],[69,45,51,51],[70,12,52,20,"signed"],[70,18,52,26],[70,20,52,28,"base"],[70,24,52,32],[70,29,52,37],[70,34,52,42],[71,12,53,20,"size"],[71,16,53,24],[71,18,53,26,"Number"],[71,24,53,32],[71,25,53,33,"parseInt"],[71,33,53,41],[71,34,53,42,"size_"],[71,39,53,47],[71,40,53,48],[71,43,53,51],[72,10,54,16],[72,11,54,17],[72,12,54,18],[73,8,55,12],[74,8,56,12],[74,12,56,16,"type"],[74,16,56,20],[74,21,56,25],[74,30,56,34],[74,34,56,38],[74,41,56,45,"value"],[74,46,56,50],[74,51,56,55],[74,59,56,63],[74,63,56,67],[74,64,56,68],[74,65,56,69],[74,66,56,70],[74,68,56,72,"isAddress_js_1"],[74,82,56,86],[74,83,56,87,"isAddress"],[74,92,56,96],[74,94,56,98,"value"],[74,99,56,103],[74,100,56,104],[74,102,57,16],[74,108,57,22],[74,112,57,26,"address_js_1"],[74,124,57,38],[74,125,57,39,"InvalidAddressError"],[74,144,57,58],[74,145,57,59],[75,10,57,61,"address"],[75,17,57,68],[75,19,57,70,"value"],[76,8,57,76],[76,9,57,77],[76,10,57,78],[77,8,58,12],[77,12,58,18,"bytesMatch"],[77,22,58,28],[77,25,58,31,"type"],[77,29,58,35],[77,30,58,36,"match"],[77,35,58,41],[77,36,58,42,"regex_js_1"],[77,46,58,52],[77,47,58,53,"bytesRegex"],[77,57,58,63],[77,58,58,64],[78,8,59,12],[78,12,59,16,"bytesMatch"],[78,22,59,26],[78,24,59,28],[79,10,60,16],[79,14,60,16,"_bytesMatch"],[79,25,60,16],[79,28,60,16,"_slicedToArray"],[79,42,60,16],[79,43,60,39,"bytesMatch"],[79,53,60,49],[80,12,60,23,"_type"],[80,18,60,28],[80,21,60,28,"_bytesMatch"],[80,32,60,28],[81,12,60,30,"size_"],[81,18,60,35],[81,21,60,35,"_bytesMatch"],[81,32,60,35],[82,10,61,16],[82,14,61,20,"size_"],[82,20,61,25],[82,24,61,29],[82,25,61,30],[82,26,61,31],[82,28,61,33,"size_js_1"],[82,37,61,42],[82,38,61,43,"size"],[82,42,61,47],[82,44,61,49,"value"],[82,49,61,54],[82,50,61,55],[82,55,61,60,"Number"],[82,61,61,66],[82,62,61,67,"parseInt"],[82,70,61,75],[82,71,61,76,"size_"],[82,77,61,81],[82,78,61,82],[82,80,62,20],[82,86,62,26],[82,90,62,30,"abi_js_1"],[82,98,62,38],[82,99,62,39,"BytesSizeMismatchError"],[82,121,62,61],[82,122,62,62],[83,12,63,24,"expectedSize"],[83,24,63,36],[83,26,63,38,"Number"],[83,32,63,44],[83,33,63,45,"parseInt"],[83,41,63,53],[83,42,63,54,"size_"],[83,48,63,59],[83,49,63,60],[84,12,64,24,"givenSize"],[84,21,64,33],[84,23,64,35],[84,24,64,36],[84,25,64,37],[84,27,64,39,"size_js_1"],[84,36,64,48],[84,37,64,49,"size"],[84,41,64,53],[84,43,64,55,"value"],[84,48,64,60],[85,10,65,20],[85,11,65,21],[85,12,65,22],[86,8,66,12],[87,8,67,12],[87,12,67,18,"struct"],[87,19,67,24],[87,22,67,27,"types"],[87,27,67,32],[87,28,67,33,"type"],[87,32,67,37],[87,33,67,38],[88,8,68,12],[88,12,68,16,"struct"],[88,19,68,22],[88,21,68,24],[89,10,69,16,"validateReference"],[89,27,69,33],[89,28,69,34,"type"],[89,32,69,38],[89,33,69,39],[90,10,70,16,"validateData"],[90,22,70,28],[90,23,70,29,"struct"],[90,30,70,35],[90,32,70,37,"value"],[90,37,70,42],[90,38,70,43],[91,8,71,12],[92,6,72,8],[93,4,73,4],[93,5,73,5],[94,4,74,4],[94,8,74,8,"types"],[94,13,74,13],[94,14,74,14,"EIP712Domain"],[94,26,74,26],[94,30,74,30,"domain"],[94,36,74,36],[94,38,74,38],[95,6,75,8],[95,10,75,12],[95,17,75,19,"domain"],[95,23,75,25],[95,28,75,30],[95,36,75,38],[95,38,76,12],[95,44,76,18],[95,48,76,22,"typedData_js_1"],[95,62,76,36],[95,63,76,37,"InvalidDomainError"],[95,81,76,55],[95,82,76,56],[96,8,76,58,"domain"],[97,6,76,65],[97,7,76,66],[97,8,76,67],[98,6,77,8,"validateData"],[98,18,77,20],[98,19,77,21,"types"],[98,24,77,26],[98,25,77,27,"EIP712Domain"],[98,37,77,39],[98,39,77,41,"domain"],[98,45,77,47],[98,46,77,48],[99,4,78,4],[100,4,79,4],[100,8,79,8,"primaryType"],[100,19,79,19],[100,24,79,24],[100,38,79,38],[100,40,79,40],[101,6,80,8],[101,10,80,12,"types"],[101,15,80,17],[101,16,80,18,"primaryType"],[101,27,80,29],[101,28,80,30],[101,30,81,12,"validateData"],[101,42,81,24],[101,43,81,25,"types"],[101,48,81,30],[101,49,81,31,"primaryType"],[101,60,81,42],[101,61,81,43],[101,63,81,45,"message"],[101,70,81,52],[101,71,81,53],[101,72,81,54],[101,77,83,12],[101,83,83,18],[101,87,83,22,"typedData_js_1"],[101,101,83,36],[101,102,83,37,"InvalidPrimaryTypeError"],[101,125,83,60],[101,126,83,61],[102,8,83,63,"primaryType"],[102,19,83,74],[103,8,83,76,"types"],[104,6,83,82],[104,7,83,83],[104,8,83,84],[105,4,84,4],[106,2,85,0],[107,2,86,0],[107,11,86,9,"getTypesForEIP712Domain"],[107,34,86,32,"getTypesForEIP712Domain"],[107,35,86,32,"_ref"],[107,39,86,32],[107,41,86,46],[108,4,86,46],[108,8,86,35,"domain"],[108,14,86,41],[108,17,86,41,"_ref"],[108,21,86,41],[108,22,86,35,"domain"],[108,28,86,41],[109,4,87,4],[109,11,87,11],[109,12,88,8],[109,19,88,15,"domain"],[109,25,88,21],[109,27,88,23,"name"],[109,31,88,27],[109,36,88,32],[109,44,88,40],[109,48,88,44],[110,6,88,46,"name"],[110,10,88,50],[110,12,88,52],[110,18,88,58],[111,6,88,60,"type"],[111,10,88,64],[111,12,88,66],[112,4,88,75],[112,5,88,76],[112,7,89,8,"domain"],[112,13,89,14],[112,15,89,16,"version"],[112,22,89,23],[112,26,89,27],[113,6,89,29,"name"],[113,10,89,33],[113,12,89,35],[113,21,89,44],[114,6,89,46,"type"],[114,10,89,50],[114,12,89,52],[115,4,89,61],[115,5,89,62],[115,7,90,8],[115,8,90,9],[115,15,90,16,"domain"],[115,21,90,22],[115,23,90,24,"chainId"],[115,30,90,31],[115,35,90,36],[115,43,90,44],[115,47,91,12],[115,54,91,19,"domain"],[115,60,91,25],[115,62,91,27,"chainId"],[115,69,91,34],[115,74,91,39],[115,82,91,47],[115,87,91,52],[116,6,92,12,"name"],[116,10,92,16],[116,12,92,18],[116,21,92,27],[117,6,93,12,"type"],[117,10,93,16],[117,12,93,18],[118,4,94,8],[118,5,94,9],[118,7,95,8,"domain"],[118,13,95,14],[118,15,95,16,"verifyingContract"],[118,32,95,33],[118,36,95,37],[119,6,96,12,"name"],[119,10,96,16],[119,12,96,18],[119,31,96,37],[120,6,97,12,"type"],[120,10,97,16],[120,12,97,18],[121,4,98,8],[121,5,98,9],[121,7,99,8,"domain"],[121,13,99,14],[121,15,99,16,"salt"],[121,19,99,20],[121,23,99,24],[122,6,99,26,"name"],[122,10,99,30],[122,12,99,32],[122,18,99,38],[123,6,99,40,"type"],[123,10,99,44],[123,12,99,46],[124,4,99,56],[124,5,99,57],[124,6,100,5],[124,7,100,6,"filter"],[124,13,100,12],[124,14,100,13,"Boolean"],[124,21,100,20],[124,22,100,21],[125,2,101,0],[126,2,102,0],[126,11,102,9,"domainSeparator"],[126,26,102,24,"domainSeparator"],[126,27,102,24,"_ref2"],[126,32,102,24],[126,34,102,37],[127,4,102,37],[127,8,102,27,"domain"],[127,14,102,33],[127,17,102,33,"_ref2"],[127,22,102,33],[127,23,102,27,"domain"],[127,29,102,33],[128,4,103,4],[128,11,103,11],[128,12,103,12],[128,13,103,13],[128,15,103,15,"hashTypedData_js_1"],[128,33,103,33],[128,34,103,34,"hashDomain"],[128,44,103,44],[128,46,103,46],[129,6,104,8,"domain"],[129,12,104,14],[130,6,105,8,"types"],[130,11,105,13],[130,13,105,15],[131,8,106,12,"EIP712Domain"],[131,20,106,24],[131,22,106,26,"getTypesForEIP712Domain"],[131,45,106,49],[131,46,106,50],[132,10,106,52,"domain"],[133,8,106,59],[133,9,106,60],[134,6,107,8],[135,4,108,4],[135,5,108,5],[135,6,108,6],[136,2,109,0],[137,2,110,0],[137,11,110,9,"validateReference"],[137,28,110,26,"validateReference"],[137,29,110,27,"type"],[137,33,110,31],[137,35,110,33],[138,4,111,4],[138,8,111,8,"type"],[138,12,111,12],[138,17,111,17],[138,26,111,26],[138,30,112,8,"type"],[138,34,112,12],[138,39,112,17],[138,45,112,23],[138,49,113,8,"type"],[138,53,113,12],[138,58,113,17],[138,66,113,25],[138,70,114,8,"type"],[138,74,114,12],[138,75,114,13,"startsWith"],[138,85,114,23],[138,86,114,24],[138,93,114,31],[138,94,114,32],[138,98,115,8,"type"],[138,102,115,12],[138,103,115,13,"startsWith"],[138,113,115,23],[138,114,115,24],[138,120,115,30],[138,121,115,31],[138,125,116,8,"type"],[138,129,116,12],[138,130,116,13,"startsWith"],[138,140,116,23],[138,141,116,24],[138,146,116,29],[138,147,116,30],[138,149,117,8],[138,155,117,14],[138,159,117,18,"typedData_js_1"],[138,173,117,32],[138,174,117,33,"InvalidStructTypeError"],[138,196,117,55],[138,197,117,56],[139,6,117,58,"type"],[140,4,117,63],[140,5,117,64],[140,6,117,65],[141,2,118,0],[142,0,118,1],[142,3]],"functionMap":{"names":["<global>","serializeTypedData","normalizeData","<anonymous>","validateTypedData","validateData","getTypesForEIP712Domain","domainSeparator","validateReference"],"mappings":"AAA;ACe;0BCE;KDQ;oBEC;KFM;qBEC;KFI;CDE;AIC;yBCE;KD8B;CJY;AMC;CNe;AOC;CPO;AQC;CRQ"}},"type":"js/module"}]}