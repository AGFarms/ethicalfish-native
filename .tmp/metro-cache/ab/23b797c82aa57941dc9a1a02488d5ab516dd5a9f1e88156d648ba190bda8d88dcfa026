{"dependencies":[{"name":"../../errors/data.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":18,"index":168},"end":{"line":6,"column":49,"index":199}}],"key":"z5e+MyiTvqv8ZsjGYixElgqY1ro="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.pad = pad;\n  exports.padHex = padHex;\n  exports.padBytes = padBytes;\n  var data_js_1 = require(_dependencyMap[0], \"../../errors/data.js\");\n  function pad(hexOrBytes) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      dir = _ref.dir,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 32 : _ref$size;\n    if (typeof hexOrBytes === 'string') return padHex(hexOrBytes, {\n      dir,\n      size\n    });\n    return padBytes(hexOrBytes, {\n      dir,\n      size\n    });\n  }\n  function padHex(hex_) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      dir = _ref2.dir,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? 32 : _ref2$size;\n    if (size === null) return hex_;\n    var hex = hex_.replace('0x', '');\n    if (hex.length > size * 2) throw new data_js_1.SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex'\n    });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n  }\n  function padBytes(bytes) {\n    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      dir = _ref3.dir,\n      _ref3$size = _ref3.size,\n      size = _ref3$size === void 0 ? 32 : _ref3$size;\n    if (size === null) return bytes;\n    if (bytes.length > size) throw new data_js_1.SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes'\n    });\n    var paddedBytes = new Uint8Array(size);\n    for (var i = 0; i < size; i++) {\n      var padEnd = dir === 'right';\n      paddedBytes[padEnd ? i : size - i - 1] = bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n  }\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"pad"],[7,13,3,11],[7,16,3,14,"pad"],[7,19,3,17],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"padHex"],[8,16,4,14],[8,19,4,17,"padHex"],[8,25,4,23],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"padBytes"],[9,18,5,16],[9,21,5,19,"padBytes"],[9,29,5,27],[10,2,6,0],[10,6,6,6,"data_js_1"],[10,15,6,15],[10,18,6,18,"require"],[10,25,6,25],[10,26,6,25,"_dependencyMap"],[10,40,6,25],[10,67,6,48],[10,68,6,49],[11,2,7,0],[11,11,7,9,"pad"],[11,14,7,12,"pad"],[11,15,7,13,"hexOrBytes"],[11,25,7,23],[11,27,7,50],[12,4,7,50],[12,8,7,50,"_ref"],[12,12,7,50],[12,15,7,50,"arguments"],[12,24,7,50],[12,25,7,50,"length"],[12,31,7,50],[12,39,7,50,"arguments"],[12,48,7,50],[12,56,7,50,"undefined"],[12,65,7,50],[12,68,7,50,"arguments"],[12,77,7,50],[12,83,7,46],[12,84,7,47],[12,85,7,48],[13,6,7,27,"dir"],[13,9,7,30],[13,12,7,30,"_ref"],[13,16,7,30],[13,17,7,27,"dir"],[13,20,7,30],[14,6,7,30,"_ref$size"],[14,15,7,30],[14,18,7,30,"_ref"],[14,22,7,30],[14,23,7,32,"size"],[14,27,7,36],[15,6,7,32,"size"],[15,10,7,36],[15,13,7,36,"_ref$size"],[15,22,7,36],[15,36,7,39],[15,38,7,41],[15,41,7,41,"_ref$size"],[15,50,7,41],[16,4,8,4],[16,8,8,8],[16,15,8,15,"hexOrBytes"],[16,25,8,25],[16,30,8,30],[16,38,8,38],[16,40,9,8],[16,47,9,15,"padHex"],[16,53,9,21],[16,54,9,22,"hexOrBytes"],[16,64,9,32],[16,66,9,34],[17,6,9,36,"dir"],[17,9,9,39],[18,6,9,41,"size"],[19,4,9,46],[19,5,9,47],[19,6,9,48],[20,4,10,4],[20,11,10,11,"padBytes"],[20,19,10,19],[20,20,10,20,"hexOrBytes"],[20,30,10,30],[20,32,10,32],[21,6,10,34,"dir"],[21,9,10,37],[22,6,10,39,"size"],[23,4,10,44],[23,5,10,45],[23,6,10,46],[24,2,11,0],[25,2,12,0],[25,11,12,9,"padHex"],[25,17,12,15,"padHex"],[25,18,12,16,"hex_"],[25,22,12,20],[25,24,12,47],[26,4,12,47],[26,8,12,47,"_ref2"],[26,13,12,47],[26,16,12,47,"arguments"],[26,25,12,47],[26,26,12,47,"length"],[26,32,12,47],[26,40,12,47,"arguments"],[26,49,12,47],[26,57,12,47,"undefined"],[26,66,12,47],[26,69,12,47,"arguments"],[26,78,12,47],[26,84,12,43],[26,85,12,44],[26,86,12,45],[27,6,12,24,"dir"],[27,9,12,27],[27,12,12,27,"_ref2"],[27,17,12,27],[27,18,12,24,"dir"],[27,21,12,27],[28,6,12,27,"_ref2$size"],[28,16,12,27],[28,19,12,27,"_ref2"],[28,24,12,27],[28,25,12,29,"size"],[28,29,12,33],[29,6,12,29,"size"],[29,10,12,33],[29,13,12,33,"_ref2$size"],[29,23,12,33],[29,37,12,36],[29,39,12,38],[29,42,12,38,"_ref2$size"],[29,52,12,38],[30,4,13,4],[30,8,13,8,"size"],[30,12,13,12],[30,17,13,17],[30,21,13,21],[30,23,14,8],[30,30,14,15,"hex_"],[30,34,14,19],[31,4,15,4],[31,8,15,10,"hex"],[31,11,15,13],[31,14,15,16,"hex_"],[31,18,15,20],[31,19,15,21,"replace"],[31,26,15,28],[31,27,15,29],[31,31,15,33],[31,33,15,35],[31,35,15,37],[31,36,15,38],[32,4,16,4],[32,8,16,8,"hex"],[32,11,16,11],[32,12,16,12,"length"],[32,18,16,18],[32,21,16,21,"size"],[32,25,16,25],[32,28,16,28],[32,29,16,29],[32,31,17,8],[32,37,17,14],[32,41,17,18,"data_js_1"],[32,50,17,27],[32,51,17,28,"SizeExceedsPaddingSizeError"],[32,78,17,55],[32,79,17,56],[33,6,18,12,"size"],[33,10,18,16],[33,12,18,18,"Math"],[33,16,18,22],[33,17,18,23,"ceil"],[33,21,18,27],[33,22,18,28,"hex"],[33,25,18,31],[33,26,18,32,"length"],[33,32,18,38],[33,35,18,41],[33,36,18,42],[33,37,18,43],[34,6,19,12,"targetSize"],[34,16,19,22],[34,18,19,24,"size"],[34,22,19,28],[35,6,20,12,"type"],[35,10,20,16],[35,12,20,18],[36,4,21,8],[36,5,21,9],[36,6,21,10],[37,4,22,4],[37,11,22,11],[37,16,22,16,"hex"],[37,19,22,19],[37,20,22,20,"dir"],[37,23,22,23],[37,28,22,28],[37,35,22,35],[37,38,22,38],[37,46,22,46],[37,49,22,49],[37,59,22,59],[37,60,22,60],[37,61,22,61,"size"],[37,65,22,65],[37,68,22,68],[37,69,22,69],[37,71,22,71],[37,74,22,74],[37,75,22,75],[37,77,22,77],[38,2,23,0],[39,2,24,0],[39,11,24,9,"padBytes"],[39,19,24,17,"padBytes"],[39,20,24,18,"bytes"],[39,25,24,23],[39,27,24,50],[40,4,24,50],[40,8,24,50,"_ref3"],[40,13,24,50],[40,16,24,50,"arguments"],[40,25,24,50],[40,26,24,50,"length"],[40,32,24,50],[40,40,24,50,"arguments"],[40,49,24,50],[40,57,24,50,"undefined"],[40,66,24,50],[40,69,24,50,"arguments"],[40,78,24,50],[40,84,24,46],[40,85,24,47],[40,86,24,48],[41,6,24,27,"dir"],[41,9,24,30],[41,12,24,30,"_ref3"],[41,17,24,30],[41,18,24,27,"dir"],[41,21,24,30],[42,6,24,30,"_ref3$size"],[42,16,24,30],[42,19,24,30,"_ref3"],[42,24,24,30],[42,25,24,32,"size"],[42,29,24,36],[43,6,24,32,"size"],[43,10,24,36],[43,13,24,36,"_ref3$size"],[43,23,24,36],[43,37,24,39],[43,39,24,41],[43,42,24,41,"_ref3$size"],[43,52,24,41],[44,4,25,4],[44,8,25,8,"size"],[44,12,25,12],[44,17,25,17],[44,21,25,21],[44,23,26,8],[44,30,26,15,"bytes"],[44,35,26,20],[45,4,27,4],[45,8,27,8,"bytes"],[45,13,27,13],[45,14,27,14,"length"],[45,20,27,20],[45,23,27,23,"size"],[45,27,27,27],[45,29,28,8],[45,35,28,14],[45,39,28,18,"data_js_1"],[45,48,28,27],[45,49,28,28,"SizeExceedsPaddingSizeError"],[45,76,28,55],[45,77,28,56],[46,6,29,12,"size"],[46,10,29,16],[46,12,29,18,"bytes"],[46,17,29,23],[46,18,29,24,"length"],[46,24,29,30],[47,6,30,12,"targetSize"],[47,16,30,22],[47,18,30,24,"size"],[47,22,30,28],[48,6,31,12,"type"],[48,10,31,16],[48,12,31,18],[49,4,32,8],[49,5,32,9],[49,6,32,10],[50,4,33,4],[50,8,33,10,"paddedBytes"],[50,19,33,21],[50,22,33,24],[50,26,33,28,"Uint8Array"],[50,36,33,38],[50,37,33,39,"size"],[50,41,33,43],[50,42,33,44],[51,4,34,4],[51,9,34,9],[51,13,34,13,"i"],[51,14,34,14],[51,17,34,17],[51,18,34,18],[51,20,34,20,"i"],[51,21,34,21],[51,24,34,24,"size"],[51,28,34,28],[51,30,34,30,"i"],[51,31,34,31],[51,33,34,33],[51,35,34,35],[52,6,35,8],[52,10,35,14,"padEnd"],[52,16,35,20],[52,19,35,23,"dir"],[52,22,35,26],[52,27,35,31],[52,34,35,38],[53,6,36,8,"paddedBytes"],[53,17,36,19],[53,18,36,20,"padEnd"],[53,24,36,26],[53,27,36,29,"i"],[53,28,36,30],[53,31,36,33,"size"],[53,35,36,37],[53,38,36,40,"i"],[53,39,36,41],[53,42,36,44],[53,43,36,45],[53,44,36,46],[53,47,37,12,"bytes"],[53,52,37,17],[53,53,37,18,"padEnd"],[53,59,37,24],[53,62,37,27,"i"],[53,63,37,28],[53,66,37,31,"bytes"],[53,71,37,36],[53,72,37,37,"length"],[53,78,37,43],[53,81,37,46,"i"],[53,82,37,47],[53,85,37,50],[53,86,37,51],[53,87,37,52],[54,4,38,4],[55,4,39,4],[55,11,39,11,"paddedBytes"],[55,22,39,22],[56,2,40,0],[57,0,40,1],[57,3]],"functionMap":{"names":["<global>","pad","padHex","padBytes"],"mappings":"AAA;ACM;CDI;AEC;CFW;AGC;CHgB"}},"type":"js/module"}]}