{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isValidDefaultRoute = isValidDefaultRoute;\n  exports.isValidLeadingWildcardRoute = isValidLeadingWildcardRoute;\n  exports.isValidRoute = isValidRoute;\n  exports.isValidTrailingWildcardRoute = isValidTrailingWildcardRoute;\n  exports.isValidWildcardRoute = isValidWildcardRoute;\n  function isValidRoute(route) {\n    if (route.includes(\"*\")) {\n      return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n      return false;\n    }\n    return true;\n  }\n  function isValidDefaultRoute(route) {\n    return route === \"*\";\n  }\n  function isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n      return true;\n    }\n    if (!route.includes(\"*\")) {\n      return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n      return false;\n    }\n    if (route.split(\"*\").filter(x => x.trim() === \"\").length !== 1) {\n      return false;\n    }\n    return true;\n  }\n  function isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n  }\n  function isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n  }\n});","lineCount":43,"map":[[10,2,1,7],[10,11,1,16,"isValidRoute"],[10,23,1,28,"isValidRoute"],[10,24,1,29,"route"],[10,29,1,34],[10,31,1,36],[11,4,2,4],[11,8,2,8,"route"],[11,13,2,13],[11,14,2,14,"includes"],[11,22,2,22],[11,23,2,23],[11,26,2,26],[11,27,2,27],[11,29,2,29],[12,6,3,8],[12,13,3,15,"isValidWildcardRoute"],[12,33,3,35],[12,34,3,36,"route"],[12,39,3,41],[12,40,3,42],[13,4,4,4],[14,4,5,4],[14,8,5,8],[14,13,5,13],[14,14,5,14,"test"],[14,18,5,18],[14,19,5,19,"route"],[14,24,5,24],[14,25,5,25],[14,27,5,27],[15,6,6,8],[15,13,6,15],[15,18,6,20],[16,4,7,4],[17,4,8,4],[17,11,8,11],[17,15,8,15],[18,2,9,0],[19,2,10,7],[19,11,10,16,"isValidDefaultRoute"],[19,30,10,35,"isValidDefaultRoute"],[19,31,10,36,"route"],[19,36,10,41],[19,38,10,43],[20,4,11,4],[20,11,11,11,"route"],[20,16,11,16],[20,21,11,21],[20,24,11,24],[21,2,12,0],[22,2,13,7],[22,11,13,16,"isValidWildcardRoute"],[22,31,13,36,"isValidWildcardRoute"],[22,32,13,37,"route"],[22,37,13,42],[22,39,13,44],[23,4,14,4],[23,8,14,8,"isValidDefaultRoute"],[23,27,14,27],[23,28,14,28,"route"],[23,33,14,33],[23,34,14,34],[23,36,14,36],[24,6,15,8],[24,13,15,15],[24,17,15,19],[25,4,16,4],[26,4,17,4],[26,8,17,8],[26,9,17,9,"route"],[26,14,17,14],[26,15,17,15,"includes"],[26,23,17,23],[26,24,17,24],[26,27,17,27],[26,28,17,28],[26,30,17,30],[27,6,18,8],[27,13,18,15],[27,18,18,20],[28,4,19,4],[29,4,20,4],[29,8,20,8,"route"],[29,13,20,13],[29,14,20,14,"split"],[29,19,20,19],[29,20,20,20],[29,23,20,23],[29,24,20,24],[29,25,20,25,"length"],[29,31,20,31],[29,36,20,36],[29,37,20,37],[29,39,20,39],[30,6,21,8],[30,13,21,15],[30,18,21,20],[31,4,22,4],[32,4,23,4],[32,8,23,8,"route"],[32,13,23,13],[32,14,23,14,"split"],[32,19,23,19],[32,20,23,20],[32,23,23,23],[32,24,23,24],[32,25,23,25,"filter"],[32,31,23,31],[32,32,23,32,"x"],[32,33,23,33],[32,37,23,37,"x"],[32,38,23,38],[32,39,23,39,"trim"],[32,43,23,43],[32,44,23,44],[32,45,23,45],[32,50,23,50],[32,52,23,52],[32,53,23,53],[32,54,23,54,"length"],[32,60,23,60],[32,65,23,65],[32,66,23,66],[32,68,23,68],[33,6,24,8],[33,13,24,15],[33,18,24,20],[34,4,25,4],[35,4,26,4],[35,11,26,11],[35,15,26,15],[36,2,27,0],[37,2,28,7],[37,11,28,16,"isValidLeadingWildcardRoute"],[37,38,28,43,"isValidLeadingWildcardRoute"],[37,39,28,44,"route"],[37,44,28,49],[37,46,28,51],[38,4,29,4],[38,11,29,11],[38,12,29,12,"isValidDefaultRoute"],[38,31,29,31],[38,32,29,32,"route"],[38,37,29,37],[38,38,29,38],[38,42,29,42,"isValidWildcardRoute"],[38,62,29,62],[38,63,29,63,"route"],[38,68,29,68],[38,69,29,69],[38,73,29,73],[38,74,29,74,"route"],[38,79,29,79],[38,80,29,80,"split"],[38,85,29,85],[38,86,29,86],[38,89,29,89],[38,90,29,90],[38,91,29,91],[38,92,29,92],[38,93,29,93],[38,94,29,94,"trim"],[38,98,29,98],[38,99,29,99],[38,100,29,100],[39,2,30,0],[40,2,31,7],[40,11,31,16,"isValidTrailingWildcardRoute"],[40,39,31,44,"isValidTrailingWildcardRoute"],[40,40,31,45,"route"],[40,45,31,50],[40,47,31,52],[41,4,32,4],[41,11,32,11],[41,12,32,12,"isValidDefaultRoute"],[41,31,32,31],[41,32,32,32,"route"],[41,37,32,37],[41,38,32,38],[41,42,32,42,"isValidWildcardRoute"],[41,62,32,62],[41,63,32,63,"route"],[41,68,32,68],[41,69,32,69],[41,73,32,73],[41,74,32,74,"route"],[41,79,32,79],[41,80,32,80,"split"],[41,85,32,85],[41,86,32,86],[41,89,32,89],[41,90,32,90],[41,91,32,91],[41,92,32,92],[41,93,32,93],[41,94,32,94,"trim"],[41,98,32,98],[41,99,32,99],[41,100,32,100],[42,2,33,0],[43,0,33,1],[43,3]],"functionMap":{"names":["<global>","isValidRoute","isValidDefaultRoute","isValidWildcardRoute","route.split.filter$argument_0","isValidLeadingWildcardRoute","isValidTrailingWildcardRoute"],"mappings":"AAA,OC;CDQ;OEC;CFE;OGC;gCCU,oBD;CHI;OKC;CLE;OMC;CNE"}},"type":"js/module"}]}