{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":103,"column":44,"index":4448}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"../../utils/encoding/fromHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":21,"index":143},"end":{"line":4,"column":63,"index":185}}],"key":"H+p7ULpcfNCtaULfe+Ir2c2gHUM="}},{"name":"../../utils/getAction.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":23,"index":210},"end":{"line":5,"column":58,"index":245}}],"key":"Y/n4m+r52hYXgM0UylfgsDfMHzI="}},{"name":"../../utils/observe.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":21,"index":268},"end":{"line":6,"column":54,"index":301}}],"key":"9z050nEdFILKTMfymV7zJZ6lURs="}},{"name":"../../utils/poll.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":18,"index":321},"end":{"line":7,"column":48,"index":351}}],"key":"aFz40K9Gats0dF3I4D9bTgnkP2g="}},{"name":"../../utils/stringify.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":23,"index":376},"end":{"line":8,"column":58,"index":411}}],"key":"BiwI/CxF6p7AvUS4qiSnljjpNnY="}},{"name":"./getBlockNumber.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":28,"index":441},"end":{"line":9,"column":58,"index":471}}],"key":"DKf/0JTRb95eE/l+HfFQeZb4Uxw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.watchBlockNumber = watchBlockNumber;\n  var fromHex_js_1 = require(_dependencyMap[1], \"../../utils/encoding/fromHex.js\");\n  var getAction_js_1 = require(_dependencyMap[2], \"../../utils/getAction.js\");\n  var observe_js_1 = require(_dependencyMap[3], \"../../utils/observe.js\");\n  var poll_js_1 = require(_dependencyMap[4], \"../../utils/poll.js\");\n  var stringify_js_1 = require(_dependencyMap[5], \"../../utils/stringify.js\");\n  var getBlockNumber_js_1 = require(_dependencyMap[6], \"./getBlockNumber.js\");\n  function watchBlockNumber(client, _ref) {\n    var _ref$emitOnBegin = _ref.emitOnBegin,\n      emitOnBegin = _ref$emitOnBegin === void 0 ? false : _ref$emitOnBegin,\n      _ref$emitMissed = _ref.emitMissed,\n      emitMissed = _ref$emitMissed === void 0 ? false : _ref$emitMissed,\n      onBlockNumber = _ref.onBlockNumber,\n      onError = _ref.onError,\n      poll_ = _ref.poll,\n      _ref$pollingInterval = _ref.pollingInterval,\n      pollingInterval = _ref$pollingInterval === void 0 ? client.pollingInterval : _ref$pollingInterval;\n    var enablePolling = (() => {\n      if (typeof poll_ !== 'undefined') return poll_;\n      if (client.transport.type === 'webSocket') return false;\n      if (client.transport.type === 'fallback' && client.transport.transports[0].config.type === 'webSocket') return false;\n      return true;\n    })();\n    var prevBlockNumber;\n    var pollBlockNumber = () => {\n      var observerId = (0, stringify_js_1.stringify)(['watchBlockNumber', client.uid, emitOnBegin, emitMissed, pollingInterval]);\n      return (0, observe_js_1.observe)(observerId, {\n        onBlockNumber,\n        onError\n      }, emit => (0, poll_js_1.poll)(/*#__PURE__*/_asyncToGenerator(function* () {\n        try {\n          var blockNumber = yield (0, getAction_js_1.getAction)(client, getBlockNumber_js_1.getBlockNumber, 'getBlockNumber')({\n            cacheTime: 0\n          });\n          if (prevBlockNumber) {\n            if (blockNumber === prevBlockNumber) return;\n            if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n              for (var i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                emit.onBlockNumber(i, prevBlockNumber);\n                prevBlockNumber = i;\n              }\n            }\n          }\n          if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n            emit.onBlockNumber(blockNumber, prevBlockNumber);\n            prevBlockNumber = blockNumber;\n          }\n        } catch (err) {\n          emit.onError?.(err);\n        }\n      }), {\n        emitOnBegin,\n        interval: pollingInterval\n      }));\n    };\n    var subscribeBlockNumber = () => {\n      var observerId = (0, stringify_js_1.stringify)(['watchBlockNumber', client.uid, emitOnBegin, emitMissed]);\n      return (0, observe_js_1.observe)(observerId, {\n        onBlockNumber,\n        onError\n      }, emit => {\n        var active = true;\n        var unsubscribe = () => active = false;\n        _asyncToGenerator(function* () {\n          try {\n            var transport = (() => {\n              if (client.transport.type === 'fallback') {\n                var _transport = client.transport.transports.find(transport => transport.config.type === 'webSocket');\n                if (!_transport) return client.transport;\n                return _transport.value;\n              }\n              return client.transport;\n            })();\n            var _yield$transport$subs = yield transport.subscribe({\n                params: ['newHeads'],\n                onData(data) {\n                  if (!active) return;\n                  var blockNumber = (0, fromHex_js_1.hexToBigInt)(data.result?.number);\n                  emit.onBlockNumber(blockNumber, prevBlockNumber);\n                  prevBlockNumber = blockNumber;\n                },\n                onError(error) {\n                  emit.onError?.(error);\n                }\n              }),\n              unsubscribe_ = _yield$transport$subs.unsubscribe;\n            unsubscribe = unsubscribe_;\n            if (!active) unsubscribe();\n          } catch (err) {\n            onError?.(err);\n          }\n        })();\n        return () => unsubscribe();\n      });\n    };\n    return enablePolling ? pollBlockNumber() : subscribeBlockNumber();\n  }\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"watchBlockNumber"],[8,26,3,24],[8,29,3,27,"watchBlockNumber"],[8,45,3,43],[9,2,4,0],[9,6,4,6,"fromHex_js_1"],[9,18,4,18],[9,21,4,21,"require"],[9,28,4,28],[9,29,4,28,"_dependencyMap"],[9,43,4,28],[9,81,4,62],[9,82,4,63],[10,2,5,0],[10,6,5,6,"getAction_js_1"],[10,20,5,20],[10,23,5,23,"require"],[10,30,5,30],[10,31,5,30,"_dependencyMap"],[10,45,5,30],[10,76,5,57],[10,77,5,58],[11,2,6,0],[11,6,6,6,"observe_js_1"],[11,18,6,18],[11,21,6,21,"require"],[11,28,6,28],[11,29,6,28,"_dependencyMap"],[11,43,6,28],[11,72,6,53],[11,73,6,54],[12,2,7,0],[12,6,7,6,"poll_js_1"],[12,15,7,15],[12,18,7,18,"require"],[12,25,7,25],[12,26,7,25,"_dependencyMap"],[12,40,7,25],[12,66,7,47],[12,67,7,48],[13,2,8,0],[13,6,8,6,"stringify_js_1"],[13,20,8,20],[13,23,8,23,"require"],[13,30,8,30],[13,31,8,30,"_dependencyMap"],[13,45,8,30],[13,76,8,57],[13,77,8,58],[14,2,9,0],[14,6,9,6,"getBlockNumber_js_1"],[14,25,9,25],[14,28,9,28,"require"],[14,35,9,35],[14,36,9,35,"_dependencyMap"],[14,50,9,35],[14,76,9,57],[14,77,9,58],[15,2,10,0],[15,11,10,9,"watchBlockNumber"],[15,27,10,25,"watchBlockNumber"],[15,28,10,26,"client"],[15,34,10,32],[15,36,10,32,"_ref"],[15,40,10,32],[15,42,10,159],[16,4,10,159],[16,8,10,159,"_ref$emitOnBegin"],[16,24,10,159],[16,27,10,159,"_ref"],[16,31,10,159],[16,32,10,36,"emitOnBegin"],[16,43,10,47],[17,6,10,36,"emitOnBegin"],[17,17,10,47],[17,20,10,47,"_ref$emitOnBegin"],[17,36,10,47],[17,50,10,50],[17,55,10,55],[17,58,10,55,"_ref$emitOnBegin"],[17,74,10,55],[18,6,10,55,"_ref$emitMissed"],[18,21,10,55],[18,24,10,55,"_ref"],[18,28,10,55],[18,29,10,57,"emitMissed"],[18,39,10,67],[19,6,10,57,"emitMissed"],[19,16,10,67],[19,19,10,67,"_ref$emitMissed"],[19,34,10,67],[19,48,10,70],[19,53,10,75],[19,56,10,75,"_ref$emitMissed"],[19,71,10,75],[20,6,10,77,"onBlockNumber"],[20,19,10,90],[20,22,10,90,"_ref"],[20,26,10,90],[20,27,10,77,"onBlockNumber"],[20,40,10,90],[21,6,10,92,"onError"],[21,13,10,99],[21,16,10,99,"_ref"],[21,20,10,99],[21,21,10,92,"onError"],[21,28,10,99],[22,6,10,107,"poll_"],[22,11,10,112],[22,14,10,112,"_ref"],[22,18,10,112],[22,19,10,101,"poll"],[22,23,10,105],[23,6,10,105,"_ref$pollingInterval"],[23,26,10,105],[23,29,10,105,"_ref"],[23,33,10,105],[23,34,10,114,"pollingInterval"],[23,49,10,129],[24,6,10,114,"pollingInterval"],[24,21,10,129],[24,24,10,129,"_ref$pollingInterval"],[24,44,10,129],[24,58,10,132,"client"],[24,64,10,138],[24,65,10,139,"pollingInterval"],[24,80,10,154],[24,83,10,154,"_ref$pollingInterval"],[24,103,10,154],[25,4,11,4],[25,8,11,10,"enablePolling"],[25,21,11,23],[25,24,11,26],[25,25,11,27],[25,31,11,33],[26,6,12,8],[26,10,12,12],[26,17,12,19,"poll_"],[26,22,12,24],[26,27,12,29],[26,38,12,40],[26,40,13,12],[26,47,13,19,"poll_"],[26,52,13,24],[27,6,14,8],[27,10,14,12,"client"],[27,16,14,18],[27,17,14,19,"transport"],[27,26,14,28],[27,27,14,29,"type"],[27,31,14,33],[27,36,14,38],[27,47,14,49],[27,49,15,12],[27,56,15,19],[27,61,15,24],[28,6,16,8],[28,10,16,12,"client"],[28,16,16,18],[28,17,16,19,"transport"],[28,26,16,28],[28,27,16,29,"type"],[28,31,16,33],[28,36,16,38],[28,46,16,48],[28,50,17,12,"client"],[28,56,17,18],[28,57,17,19,"transport"],[28,66,17,28],[28,67,17,29,"transports"],[28,77,17,39],[28,78,17,40],[28,79,17,41],[28,80,17,42],[28,81,17,43,"config"],[28,87,17,49],[28,88,17,50,"type"],[28,92,17,54],[28,97,17,59],[28,108,17,70],[28,110,18,12],[28,117,18,19],[28,122,18,24],[29,6,19,8],[29,13,19,15],[29,17,19,19],[30,4,20,4],[30,5,20,5],[30,7,20,7],[30,8,20,8],[31,4,21,4],[31,8,21,8,"prevBlockNumber"],[31,23,21,23],[32,4,22,4],[32,8,22,10,"pollBlockNumber"],[32,23,22,25],[32,26,22,28,"pollBlockNumber"],[32,27,22,28],[32,32,22,34],[33,6,23,8],[33,10,23,14,"observerId"],[33,20,23,24],[33,23,23,27],[33,24,23,28],[33,25,23,29],[33,27,23,31,"stringify_js_1"],[33,41,23,45],[33,42,23,46,"stringify"],[33,51,23,55],[33,53,23,57],[33,54,24,12],[33,72,24,30],[33,74,25,12,"client"],[33,80,25,18],[33,81,25,19,"uid"],[33,84,25,22],[33,86,26,12,"emitOnBegin"],[33,97,26,23],[33,99,27,12,"emitMissed"],[33,109,27,22],[33,111,28,12,"pollingInterval"],[33,126,28,27],[33,127,29,9],[33,128,29,10],[34,6,30,8],[34,13,30,15],[34,14,30,16],[34,15,30,17],[34,17,30,19,"observe_js_1"],[34,29,30,31],[34,30,30,32,"observe"],[34,37,30,39],[34,39,30,41,"observerId"],[34,49,30,51],[34,51,30,53],[35,8,30,55,"onBlockNumber"],[35,21,30,68],[36,8,30,70,"onError"],[37,6,30,78],[37,7,30,79],[37,9,30,82,"emit"],[37,13,30,86],[37,17,30,91],[37,18,30,92],[37,19,30,93],[37,21,30,95,"poll_js_1"],[37,30,30,104],[37,31,30,105,"poll"],[37,35,30,109],[37,50,30,109,"_asyncToGenerator"],[37,67,30,109],[37,68,30,111],[37,81,30,123],[38,8,31,12],[38,12,31,16],[39,10,32,16],[39,14,32,22,"blockNumber"],[39,25,32,33],[39,34,32,42],[39,35,32,43],[39,36,32,44],[39,38,32,46,"getAction_js_1"],[39,52,32,60],[39,53,32,61,"getAction"],[39,62,32,70],[39,64,32,72,"client"],[39,70,32,78],[39,72,32,80,"getBlockNumber_js_1"],[39,91,32,99],[39,92,32,100,"getBlockNumber"],[39,106,32,114],[39,108,32,116],[39,124,32,132],[39,125,32,133],[39,126,32,134],[40,12,32,136,"cacheTime"],[40,21,32,145],[40,23,32,147],[41,10,32,149],[41,11,32,150],[41,12,32,151],[42,10,33,16],[42,14,33,20,"prevBlockNumber"],[42,29,33,35],[42,31,33,37],[43,12,34,20],[43,16,34,24,"blockNumber"],[43,27,34,35],[43,32,34,40,"prevBlockNumber"],[43,47,34,55],[43,49,35,24],[44,12,36,20],[44,16,36,24,"blockNumber"],[44,27,36,35],[44,30,36,38,"prevBlockNumber"],[44,45,36,53],[44,48,36,56],[44,49,36,57],[44,53,36,61,"emitMissed"],[44,63,36,71],[44,65,36,73],[45,14,37,24],[45,19,37,29],[45,23,37,33,"i"],[45,24,37,34],[45,27,37,37,"prevBlockNumber"],[45,42,37,52],[45,45,37,55],[45,47,37,57],[45,49,37,59,"i"],[45,50,37,60],[45,53,37,63,"blockNumber"],[45,64,37,74],[45,66,37,76,"i"],[45,67,37,77],[45,69,37,79],[45,71,37,81],[46,16,38,28,"emit"],[46,20,38,32],[46,21,38,33,"onBlockNumber"],[46,34,38,46],[46,35,38,47,"i"],[46,36,38,48],[46,38,38,50,"prevBlockNumber"],[46,53,38,65],[46,54,38,66],[47,16,39,28,"prevBlockNumber"],[47,31,39,43],[47,34,39,46,"i"],[47,35,39,47],[48,14,40,24],[49,12,41,20],[50,10,42,16],[51,10,43,16],[51,14,43,20],[51,15,43,21,"prevBlockNumber"],[51,30,43,36],[51,34,43,40,"blockNumber"],[51,45,43,51],[51,48,43,54,"prevBlockNumber"],[51,63,43,69],[51,65,43,71],[52,12,44,20,"emit"],[52,16,44,24],[52,17,44,25,"onBlockNumber"],[52,30,44,38],[52,31,44,39,"blockNumber"],[52,42,44,50],[52,44,44,52,"prevBlockNumber"],[52,59,44,67],[52,60,44,68],[53,12,45,20,"prevBlockNumber"],[53,27,45,35],[53,30,45,38,"blockNumber"],[53,41,45,49],[54,10,46,16],[55,8,47,12],[55,9,47,13],[55,10,48,12],[55,17,48,19,"err"],[55,20,48,22],[55,22,48,24],[56,10,49,16,"emit"],[56,14,49,20],[56,15,49,21,"onError"],[56,22,49,28],[56,25,49,31,"err"],[56,28,49,34],[56,29,49,35],[57,8,50,12],[58,6,51,8],[58,7,51,9],[58,10,51,11],[59,8,52,12,"emitOnBegin"],[59,19,52,23],[60,8,53,12,"interval"],[60,16,53,20],[60,18,53,22,"pollingInterval"],[61,6,54,8],[61,7,54,9],[61,8,54,10],[61,9,54,11],[62,4,55,4],[62,5,55,5],[63,4,56,4],[63,8,56,10,"subscribeBlockNumber"],[63,28,56,30],[63,31,56,33,"subscribeBlockNumber"],[63,32,56,33],[63,37,56,39],[64,6,57,8],[64,10,57,14,"observerId"],[64,20,57,24],[64,23,57,27],[64,24,57,28],[64,25,57,29],[64,27,57,31,"stringify_js_1"],[64,41,57,45],[64,42,57,46,"stringify"],[64,51,57,55],[64,53,57,57],[64,54,58,12],[64,72,58,30],[64,74,59,12,"client"],[64,80,59,18],[64,81,59,19,"uid"],[64,84,59,22],[64,86,60,12,"emitOnBegin"],[64,97,60,23],[64,99,61,12,"emitMissed"],[64,109,61,22],[64,110,62,9],[64,111,62,10],[65,6,63,8],[65,13,63,15],[65,14,63,16],[65,15,63,17],[65,17,63,19,"observe_js_1"],[65,29,63,31],[65,30,63,32,"observe"],[65,37,63,39],[65,39,63,41,"observerId"],[65,49,63,51],[65,51,63,53],[66,8,63,55,"onBlockNumber"],[66,21,63,68],[67,8,63,70,"onError"],[68,6,63,78],[68,7,63,79],[68,9,63,82,"emit"],[68,13,63,86],[68,17,63,91],[69,8,64,12],[69,12,64,16,"active"],[69,18,64,22],[69,21,64,25],[69,25,64,29],[70,8,65,12],[70,12,65,16,"unsubscribe"],[70,23,65,27],[70,26,65,30,"unsubscribe"],[70,27,65,30],[70,32,65,37,"active"],[70,38,65,43],[70,41,65,46],[70,46,65,52],[71,8,66,12,"_asyncToGenerator"],[71,25,66,12],[71,26,66,13],[71,39,66,25],[72,10,67,16],[72,14,67,20],[73,12,68,20],[73,16,68,26,"transport"],[73,25,68,35],[73,28,68,38],[73,29,68,39],[73,35,68,45],[74,14,69,24],[74,18,69,28,"client"],[74,24,69,34],[74,25,69,35,"transport"],[74,34,69,44],[74,35,69,45,"type"],[74,39,69,49],[74,44,69,54],[74,54,69,64],[74,56,69,66],[75,16,70,28],[75,20,70,34,"transport"],[75,30,70,43],[75,33,70,46,"client"],[75,39,70,52],[75,40,70,53,"transport"],[75,49,70,62],[75,50,70,63,"transports"],[75,60,70,73],[75,61,70,74,"find"],[75,65,70,78],[75,66,70,80,"transport"],[75,75,70,89],[75,79,70,94,"transport"],[75,88,70,103],[75,89,70,104,"config"],[75,95,70,110],[75,96,70,111,"type"],[75,100,70,115],[75,105,70,120],[75,116,70,131],[75,117,70,132],[76,16,71,28],[76,20,71,32],[76,21,71,33,"transport"],[76,31,71,42],[76,33,72,32],[76,40,72,39,"client"],[76,46,72,45],[76,47,72,46,"transport"],[76,56,72,55],[77,16,73,28],[77,23,73,35,"transport"],[77,33,73,44],[77,34,73,45,"value"],[77,39,73,50],[78,14,74,24],[79,14,75,24],[79,21,75,31,"client"],[79,27,75,37],[79,28,75,38,"transport"],[79,37,75,47],[80,12,76,20],[80,13,76,21],[80,15,76,23],[80,16,76,24],[81,12,77,20],[81,16,77,20,"_yield$transport$subs"],[81,37,77,20],[81,46,77,64,"transport"],[81,55,77,73],[81,56,77,74,"subscribe"],[81,65,77,83],[81,66,77,84],[82,16,78,24,"params"],[82,22,78,30],[82,24,78,32],[82,25,78,33],[82,35,78,43],[82,36,78,44],[83,16,79,24,"onData"],[83,22,79,30,"onData"],[83,23,79,31,"data"],[83,27,79,35],[83,29,79,37],[84,18,80,28],[84,22,80,32],[84,23,80,33,"active"],[84,29,80,39],[84,31,81,32],[85,18,82,28],[85,22,82,34,"blockNumber"],[85,33,82,45],[85,36,82,48],[85,37,82,49],[85,38,82,50],[85,40,82,52,"fromHex_js_1"],[85,52,82,64],[85,53,82,65,"hexToBigInt"],[85,64,82,76],[85,66,82,78,"data"],[85,70,82,82],[85,71,82,83,"result"],[85,77,82,89],[85,79,82,91,"number"],[85,85,82,97],[85,86,82,98],[86,18,83,28,"emit"],[86,22,83,32],[86,23,83,33,"onBlockNumber"],[86,36,83,46],[86,37,83,47,"blockNumber"],[86,48,83,58],[86,50,83,60,"prevBlockNumber"],[86,65,83,75],[86,66,83,76],[87,18,84,28,"prevBlockNumber"],[87,33,84,43],[87,36,84,46,"blockNumber"],[87,47,84,57],[88,16,85,24],[88,17,85,25],[89,16,86,24,"onError"],[89,23,86,31,"onError"],[89,24,86,32,"error"],[89,29,86,37],[89,31,86,39],[90,18,87,28,"emit"],[90,22,87,32],[90,23,87,33,"onError"],[90,30,87,40],[90,33,87,43,"error"],[90,38,87,48],[90,39,87,49],[91,16,88,24],[92,14,89,20],[92,15,89,21],[92,16,89,22],[93,14,77,41,"unsubscribe_"],[93,26,77,53],[93,29,77,53,"_yield$transport$subs"],[93,50,77,53],[93,51,77,28,"unsubscribe"],[93,62,77,39],[94,12,90,20,"unsubscribe"],[94,23,90,31],[94,26,90,34,"unsubscribe_"],[94,38,90,46],[95,12,91,20],[95,16,91,24],[95,17,91,25,"active"],[95,23,91,31],[95,25,92,24,"unsubscribe"],[95,36,92,35],[95,37,92,36],[95,38,92,37],[96,10,93,16],[96,11,93,17],[96,12,94,16],[96,19,94,23,"err"],[96,22,94,26],[96,24,94,28],[97,12,95,20,"onError"],[97,19,95,27],[97,22,95,30,"err"],[97,25,95,33],[97,26,95,34],[98,10,96,16],[99,8,97,12],[99,9,97,13],[99,11,97,15],[99,12,97,16],[100,8,98,12],[100,15,98,19],[100,21,98,25,"unsubscribe"],[100,32,98,36],[100,33,98,37],[100,34,98,38],[101,6,99,8],[101,7,99,9],[101,8,99,10],[102,4,100,4],[102,5,100,5],[103,4,101,4],[103,11,101,11,"enablePolling"],[103,24,101,24],[103,27,101,27,"pollBlockNumber"],[103,42,101,42],[103,43,101,43],[103,44,101,44],[103,47,101,47,"subscribeBlockNumber"],[103,67,101,67],[103,68,101,68],[103,69,101,69],[104,2,102,0],[105,0,102,1],[105,3]],"functionMap":{"names":["<global>","watchBlockNumber","<anonymous>","pollBlockNumber","subscribeBlockNumber","unsubscribe","client.transport.transports.find$argument_0","transport.subscribe$argument_0.onData","transport.subscribe$argument_0.onError"],"mappings":"AAA;ACS;2BCC;KDS;4BEE;iFDQ;UCwB;KFC;iCGC;iFFO;8BGE,sBH;+EIK,oDJ;wBKS;yBLM;wBMC;yBNE;SEW;KHC;CDE"}},"type":"js/module"}]}