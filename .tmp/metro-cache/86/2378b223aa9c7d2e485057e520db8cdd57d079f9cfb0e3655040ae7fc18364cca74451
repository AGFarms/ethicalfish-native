{"dependencies":[{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":66,"column":0,"index":2024}}],"key":"a2e2WuN0nsyoYHmbhhqVj9wNw7E="}},{"name":"@onflow/util-logger","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":47,"index":62}}],"key":"bxFWu8AjdigVB2eil6IJfVhl99k="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toArray\");\n  var utilLogger = require(_dependencyMap[1], \"@onflow/util-logger\");\n\n  /**\n   * Interleaves two arrays\n   * @param a - The first array\n   * @param b - The second array\n   * @param c - The target array\n   * @returns The interleaved array\n   */\n  function interleave() {\n    var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (!a.length && !b.length) return c;\n    if (!a.length) return c;\n    if (!b.length) {\n      c.push(...a);\n      return c;\n    }\n    var _a = _toArray(a),\n      aHead = _a[0],\n      aRest = _a.slice(1);\n    var _b = _toArray(b),\n      bHead = _b[0],\n      bRest = _b.slice(1);\n    if (aHead !== undefined) c.push(aHead);\n    if (bHead !== undefined) c.push(bHead);\n    return interleave(aRest, bRest, c);\n  }\n\n  /**\n   * Recursively apply a value to a function\n   * @param d - The value to apply\n   * @returns A function that takes a function and applies the value to it\n   */\n  function recApply(d) {\n    return function (arg1) {\n      if (typeof arg1 === \"function\") {\n        utilLogger.log.deprecate({\n          pkg: \"FCL/SDK\",\n          subject: \"Interopolation of functions into template literals\",\n          transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\"\n        });\n        return recApply(d)(arg1(d));\n      }\n      return String(arg1);\n    };\n  }\n\n  /**\n   * Creates a template function\n   * @param head - A string, template string array, or template function\n   * @param rest - The rest of the arguments\n   * @returns A template function\n   */\n  function template(head) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (typeof head === \"string\") return () => head;\n    if (typeof head === \"function\") return head;\n    return x => interleave([...head], rest.map(recApply(x))).join(\"\").trim();\n  }\n  exports.interleave = interleave;\n  exports.template = template;\n});","lineCount":70,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toArray"],[4,14,1,13],[4,17,1,13,"require"],[4,24,1,13],[4,25,1,13,"_dependencyMap"],[4,39,1,13],[5,2,3,0],[5,6,3,4,"utilLogger"],[5,16,3,14],[5,19,3,17,"require"],[5,26,3,24],[5,27,3,24,"_dependencyMap"],[5,41,3,24],[5,67,3,46],[5,68,3,47],[7,2,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,2,12,0],[14,11,12,9,"interleave"],[14,21,12,19,"interleave"],[14,22,12,19],[14,24,12,22],[15,4,13,2],[15,8,13,6,"a"],[15,9,13,7],[15,12,13,10,"arguments"],[15,21,13,19],[15,22,13,20,"length"],[15,28,13,26],[15,31,13,29],[15,32,13,30],[15,36,13,34,"arguments"],[15,45,13,43],[15,46,13,44],[15,47,13,45],[15,48,13,46],[15,53,13,51,"undefined"],[15,62,13,60],[15,65,13,63,"arguments"],[15,74,13,72],[15,75,13,73],[15,76,13,74],[15,77,13,75],[15,80,13,78],[15,82,13,80],[16,4,14,2],[16,8,14,6,"b"],[16,9,14,7],[16,12,14,10,"arguments"],[16,21,14,19],[16,22,14,20,"length"],[16,28,14,26],[16,31,14,29],[16,32,14,30],[16,36,14,34,"arguments"],[16,45,14,43],[16,46,14,44],[16,47,14,45],[16,48,14,46],[16,53,14,51,"undefined"],[16,62,14,60],[16,65,14,63,"arguments"],[16,74,14,72],[16,75,14,73],[16,76,14,74],[16,77,14,75],[16,80,14,78],[16,82,14,80],[17,4,15,2],[17,8,15,6,"c"],[17,9,15,7],[17,12,15,10,"arguments"],[17,21,15,19],[17,22,15,20,"length"],[17,28,15,26],[17,31,15,29],[17,32,15,30],[17,36,15,34,"arguments"],[17,45,15,43],[17,46,15,44],[17,47,15,45],[17,48,15,46],[17,53,15,51,"undefined"],[17,62,15,60],[17,65,15,63,"arguments"],[17,74,15,72],[17,75,15,73],[17,76,15,74],[17,77,15,75],[17,80,15,78],[17,82,15,80],[18,4,16,2],[18,8,16,6],[18,9,16,7,"a"],[18,10,16,8],[18,11,16,9,"length"],[18,17,16,15],[18,21,16,19],[18,22,16,20,"b"],[18,23,16,21],[18,24,16,22,"length"],[18,30,16,28],[18,32,16,30],[18,39,16,37,"c"],[18,40,16,38],[19,4,17,2],[19,8,17,6],[19,9,17,7,"a"],[19,10,17,8],[19,11,17,9,"length"],[19,17,17,15],[19,19,17,17],[19,26,17,24,"c"],[19,27,17,25],[20,4,18,2],[20,8,18,6],[20,9,18,7,"b"],[20,10,18,8],[20,11,18,9,"length"],[20,17,18,15],[20,19,18,17],[21,6,19,4,"c"],[21,7,19,5],[21,8,19,6,"push"],[21,12,19,10],[21,13,19,11],[21,16,19,14,"a"],[21,17,19,15],[21,18,19,16],[22,6,20,4],[22,13,20,11,"c"],[22,14,20,12],[23,4,21,2],[24,4,22,2],[24,8,22,2,"_a"],[24,10,22,2],[24,13,22,2,"_toArray"],[24,21,22,2],[24,22,22,28,"a"],[24,23,22,29],[25,6,22,9,"aHead"],[25,11,22,14],[25,14,22,14,"_a"],[25,16,22,14],[26,6,22,19,"aRest"],[26,11,22,24],[26,14,22,24,"_a"],[26,16,22,24],[26,17,22,24,"slice"],[26,22,22,24],[27,4,23,2],[27,8,23,2,"_b"],[27,10,23,2],[27,13,23,2,"_toArray"],[27,21,23,2],[27,22,23,28,"b"],[27,23,23,29],[28,6,23,9,"bHead"],[28,11,23,14],[28,14,23,14,"_b"],[28,16,23,14],[29,6,23,19,"bRest"],[29,11,23,24],[29,14,23,24,"_b"],[29,16,23,24],[29,17,23,24,"slice"],[29,22,23,24],[30,4,24,2],[30,8,24,6,"aHead"],[30,13,24,11],[30,18,24,16,"undefined"],[30,27,24,25],[30,29,24,27,"c"],[30,30,24,28],[30,31,24,29,"push"],[30,35,24,33],[30,36,24,34,"aHead"],[30,41,24,39],[30,42,24,40],[31,4,25,2],[31,8,25,6,"bHead"],[31,13,25,11],[31,18,25,16,"undefined"],[31,27,25,25],[31,29,25,27,"c"],[31,30,25,28],[31,31,25,29,"push"],[31,35,25,33],[31,36,25,34,"bHead"],[31,41,25,39],[31,42,25,40],[32,4,26,2],[32,11,26,9,"interleave"],[32,21,26,19],[32,22,26,20,"aRest"],[32,27,26,25],[32,29,26,27,"bRest"],[32,34,26,32],[32,36,26,34,"c"],[32,37,26,35],[32,38,26,36],[33,2,27,0],[35,2,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,2,34,0],[40,11,34,9,"recApply"],[40,19,34,17,"recApply"],[40,20,34,18,"d"],[40,21,34,19],[40,23,34,21],[41,4,35,2],[41,11,35,9],[41,21,35,19,"arg1"],[41,25,35,23],[41,27,35,25],[42,6,36,4],[42,10,36,8],[42,17,36,15,"arg1"],[42,21,36,19],[42,26,36,24],[42,36,36,34],[42,38,36,36],[43,8,37,6,"utilLogger"],[43,18,37,16],[43,19,37,17,"log"],[43,22,37,20],[43,23,37,21,"deprecate"],[43,32,37,30],[43,33,37,31],[44,10,38,8,"pkg"],[44,13,38,11],[44,15,38,13],[44,24,38,22],[45,10,39,8,"subject"],[45,17,39,15],[45,19,39,17],[45,71,39,69],[46,10,40,8,"transition"],[46,20,40,18],[46,22,40,20],[47,8,41,6],[47,9,41,7],[47,10,41,8],[48,8,42,6],[48,15,42,13,"recApply"],[48,23,42,21],[48,24,42,22,"d"],[48,25,42,23],[48,26,42,24],[48,27,42,25,"arg1"],[48,31,42,29],[48,32,42,30,"d"],[48,33,42,31],[48,34,42,32],[48,35,42,33],[49,6,43,4],[50,6,44,4],[50,13,44,11,"String"],[50,19,44,17],[50,20,44,18,"arg1"],[50,24,44,22],[50,25,44,23],[51,4,45,2],[51,5,45,3],[52,2,46,0],[54,2,48,0],[55,0,49,0],[56,0,50,0],[57,0,51,0],[58,0,52,0],[59,0,53,0],[60,2,54,0],[60,11,54,9,"template"],[60,19,54,17,"template"],[60,20,54,18,"head"],[60,24,54,22],[60,26,54,24],[61,4,55,2],[61,9,55,7],[61,13,55,11,"_len"],[61,17,55,15],[61,20,55,18,"arguments"],[61,29,55,27],[61,30,55,28,"length"],[61,36,55,34],[61,38,55,36,"rest"],[61,42,55,40],[61,45,55,43],[61,49,55,47,"Array"],[61,54,55,52],[61,55,55,53,"_len"],[61,59,55,57],[61,62,55,60],[61,63,55,61],[61,66,55,64,"_len"],[61,70,55,68],[61,73,55,71],[61,74,55,72],[61,77,55,75],[61,78,55,76],[61,79,55,77],[61,81,55,79,"_key"],[61,85,55,83],[61,88,55,86],[61,89,55,87],[61,91,55,89,"_key"],[61,95,55,93],[61,98,55,96,"_len"],[61,102,55,100],[61,104,55,102,"_key"],[61,108,55,106],[61,110,55,108],[61,112,55,110],[62,6,56,4,"rest"],[62,10,56,8],[62,11,56,9,"_key"],[62,15,56,13],[62,18,56,16],[62,19,56,17],[62,20,56,18],[62,23,56,21,"arguments"],[62,32,56,30],[62,33,56,31,"_key"],[62,37,56,35],[62,38,56,36],[63,4,57,2],[64,4,58,2],[64,8,58,6],[64,15,58,13,"head"],[64,19,58,17],[64,24,58,22],[64,32,58,30],[64,34,58,32],[64,41,58,39],[64,47,58,45,"head"],[64,51,58,49],[65,4,59,2],[65,8,59,6],[65,15,59,13,"head"],[65,19,59,17],[65,24,59,22],[65,34,59,32],[65,36,59,34],[65,43,59,41,"head"],[65,47,59,45],[66,4,60,2],[66,11,60,9,"x"],[66,12,60,10],[66,16,60,14,"interleave"],[66,26,60,24],[66,27,60,25],[66,28,60,26],[66,31,60,29,"head"],[66,35,60,33],[66,36,60,34],[66,38,60,36,"rest"],[66,42,60,40],[66,43,60,41,"map"],[66,46,60,44],[66,47,60,45,"recApply"],[66,55,60,53],[66,56,60,54,"x"],[66,57,60,55],[66,58,60,56],[66,59,60,57],[66,60,60,58],[66,61,60,59,"join"],[66,65,60,63],[66,66,60,64],[66,68,60,66],[66,69,60,67],[66,70,60,68,"trim"],[66,74,60,72],[66,75,60,73],[66,76,60,74],[67,2,61,0],[68,2,63,0,"exports"],[68,9,63,7],[68,10,63,8,"interleave"],[68,20,63,18],[68,23,63,21,"interleave"],[68,33,63,31],[69,2,64,0,"exports"],[69,9,64,7],[69,10,64,8,"template"],[69,18,64,16],[69,21,64,19,"template"],[69,29,64,27],[70,0,64,28],[70,3]],"functionMap":{"names":["<global>","interleave","recApply","<anonymous>","template"],"mappings":"AAA;ACW;CDe;AEO;SCC;GDU;CFC;AIQ;uCDI,UC;SDE,iEC;CJC"}},"type":"js/module"}]}