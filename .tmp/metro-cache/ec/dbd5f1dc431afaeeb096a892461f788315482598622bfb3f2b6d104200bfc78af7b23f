{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":28,"column":37,"index":1058}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"../wait.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":18,"index":126},"end":{"line":4,"column":39,"index":147}}],"key":"pL9xKnHtPHiPTY9B7X8rpP+veu4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withRetry = withRetry;\n  var wait_js_1 = require(_dependencyMap[1], \"../wait.js\");\n  function withRetry(fn) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$delay = _ref.delay,\n      delay_ = _ref$delay === void 0 ? 100 : _ref$delay,\n      _ref$retryCount = _ref.retryCount,\n      retryCount = _ref$retryCount === void 0 ? 2 : _ref$retryCount,\n      _ref$shouldRetry = _ref.shouldRetry,\n      shouldRetry = _ref$shouldRetry === void 0 ? () => true : _ref$shouldRetry;\n    return new Promise((resolve, reject) => {\n      var _attemptRetry = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref3$count = _ref3.count,\n            count = _ref3$count === void 0 ? 0 : _ref3$count;\n          var retry = /*#__PURE__*/function () {\n            var _ref5 = _asyncToGenerator(function* (_ref4) {\n              var error = _ref4.error;\n              var delay = typeof delay_ === 'function' ? delay_({\n                count,\n                error\n              }) : delay_;\n              if (delay) yield (0, wait_js_1.wait)(delay);\n              _attemptRetry({\n                count: count + 1\n              });\n            });\n            return function retry(_x) {\n              return _ref5.apply(this, arguments);\n            };\n          }();\n          try {\n            var data = yield fn();\n            resolve(data);\n          } catch (err) {\n            if (count < retryCount && (yield shouldRetry({\n              count,\n              error: err\n            }))) return retry({\n              error: err\n            });\n            reject(err);\n          }\n        });\n        return function attemptRetry() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      _attemptRetry();\n    });\n  }\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"withRetry"],[8,19,3,17],[8,22,3,20,"withRetry"],[8,31,3,29],[9,2,4,0],[9,6,4,6,"wait_js_1"],[9,15,4,15],[9,18,4,18,"require"],[9,25,4,25],[9,26,4,25,"_dependencyMap"],[9,40,4,25],[9,57,4,38],[9,58,4,39],[10,2,5,0],[10,11,5,9,"withRetry"],[10,20,5,18,"withRetry"],[10,21,5,19,"fn"],[10,23,5,21],[10,25,5,96],[11,4,5,96],[11,8,5,96,"_ref"],[11,12,5,96],[11,15,5,96,"arguments"],[11,24,5,96],[11,25,5,96,"length"],[11,31,5,96],[11,39,5,96,"arguments"],[11,48,5,96],[11,56,5,96,"undefined"],[11,65,5,96],[11,68,5,96,"arguments"],[11,77,5,96],[11,83,5,92],[11,84,5,93],[11,85,5,94],[12,6,5,94,"_ref$delay"],[12,16,5,94],[12,19,5,94,"_ref"],[12,23,5,94],[12,24,5,25,"delay"],[12,29,5,30],[13,6,5,32,"delay_"],[13,12,5,38],[13,15,5,38,"_ref$delay"],[13,25,5,38],[13,39,5,41],[13,42,5,44],[13,45,5,44,"_ref$delay"],[13,55,5,44],[14,6,5,44,"_ref$retryCount"],[14,21,5,44],[14,24,5,44,"_ref"],[14,28,5,44],[14,29,5,46,"retryCount"],[14,39,5,56],[15,6,5,46,"retryCount"],[15,16,5,56],[15,19,5,56,"_ref$retryCount"],[15,34,5,56],[15,48,5,59],[15,49,5,60],[15,52,5,60,"_ref$retryCount"],[15,67,5,60],[16,6,5,60,"_ref$shouldRetry"],[16,22,5,60],[16,25,5,60,"_ref"],[16,29,5,60],[16,30,5,62,"shouldRetry"],[16,41,5,73],[17,6,5,62,"shouldRetry"],[17,17,5,73],[17,20,5,73,"_ref$shouldRetry"],[17,36,5,73],[17,50,5,76],[17,56,5,82],[17,60,5,86],[17,63,5,86,"_ref$shouldRetry"],[17,79,5,86],[18,4,6,4],[18,11,6,11],[18,15,6,15,"Promise"],[18,22,6,22],[18,23,6,23],[18,24,6,24,"resolve"],[18,31,6,31],[18,33,6,33,"reject"],[18,39,6,39],[18,44,6,44],[19,6,7,8],[19,10,7,14,"attemptRetry"],[19,23,7,26],[20,8,7,26],[20,12,7,26,"_ref2"],[20,17,7,26],[20,20,7,26,"_asyncToGenerator"],[20,37,7,26],[20,38,7,29],[20,51,7,59],[21,10,7,59],[21,14,7,59,"_ref3"],[21,19,7,59],[21,22,7,59,"arguments"],[21,31,7,59],[21,32,7,59,"length"],[21,38,7,59],[21,46,7,59,"arguments"],[21,55,7,59],[21,63,7,59,"undefined"],[21,72,7,59],[21,75,7,59,"arguments"],[21,84,7,59],[21,90,7,52],[21,91,7,53],[21,92,7,54],[22,12,7,54,"_ref3$count"],[22,23,7,54],[22,26,7,54,"_ref3"],[22,31,7,54],[22,32,7,38,"count"],[22,37,7,43],[23,12,7,38,"count"],[23,17,7,43],[23,20,7,43,"_ref3$count"],[23,31,7,43],[23,45,7,46],[23,46,7,47],[23,49,7,47,"_ref3$count"],[23,60,7,47],[24,10,8,12],[24,14,8,18,"retry"],[24,19,8,23],[25,12,8,23],[25,16,8,23,"_ref5"],[25,21,8,23],[25,24,8,23,"_asyncToGenerator"],[25,41,8,23],[25,42,8,26],[25,53,8,26,"_ref4"],[25,58,8,26],[25,60,8,47],[26,14,8,47],[26,18,8,35,"error"],[26,23,8,40],[26,26,8,40,"_ref4"],[26,31,8,40],[26,32,8,35,"error"],[26,37,8,40],[27,14,9,16],[27,18,9,22,"delay"],[27,23,9,27],[27,26,9,30],[27,33,9,37,"delay_"],[27,39,9,43],[27,44,9,48],[27,54,9,58],[27,57,9,61,"delay_"],[27,63,9,67],[27,64,9,68],[28,16,9,70,"count"],[28,21,9,75],[29,16,9,77,"error"],[30,14,9,83],[30,15,9,84],[30,16,9,85],[30,19,9,88,"delay_"],[30,25,9,94],[31,14,10,16],[31,18,10,20,"delay"],[31,23,10,25],[31,25,11,20],[31,31,11,26],[31,32,11,27],[31,33,11,28],[31,35,11,30,"wait_js_1"],[31,44,11,39],[31,45,11,40,"wait"],[31,49,11,44],[31,51,11,46,"delay"],[31,56,11,51],[31,57,11,52],[32,14,12,16,"attemptRetry"],[32,27,12,28],[32,28,12,29],[33,16,12,31,"count"],[33,21,12,36],[33,23,12,38,"count"],[33,28,12,43],[33,31,12,46],[34,14,12,48],[34,15,12,49],[34,16,12,50],[35,12,13,12],[35,13,13,13],[36,12,13,13],[36,28,8,18,"retry"],[36,33,8,23,"retry"],[36,34,8,23,"_x"],[36,36,8,23],[37,14,8,23],[37,21,8,23,"_ref5"],[37,26,8,23],[37,27,8,23,"apply"],[37,32,8,23],[37,39,8,23,"arguments"],[37,48,8,23],[38,12,8,23],[39,10,8,23],[39,13,13,13],[40,10,14,12],[40,14,14,16],[41,12,15,16],[41,16,15,22,"data"],[41,20,15,26],[41,29,15,35,"fn"],[41,31,15,37],[41,32,15,38],[41,33,15,39],[42,12,16,16,"resolve"],[42,19,16,23],[42,20,16,24,"data"],[42,24,16,28],[42,25,16,29],[43,10,17,12],[43,11,17,13],[43,12,18,12],[43,19,18,19,"err"],[43,22,18,22],[43,24,18,24],[44,12,19,16],[44,16,19,20,"count"],[44,21,19,25],[44,24,19,28,"retryCount"],[44,34,19,38],[44,45,20,27,"shouldRetry"],[44,56,20,38],[44,57,20,39],[45,14,20,41,"count"],[45,19,20,46],[46,14,20,48,"error"],[46,19,20,53],[46,21,20,55,"err"],[47,12,20,59],[47,13,20,60],[47,14,20,61],[47,15,20,62],[47,17,21,20],[47,24,21,27,"retry"],[47,29,21,32],[47,30,21,33],[48,14,21,35,"error"],[48,19,21,40],[48,21,21,42,"err"],[49,12,21,46],[49,13,21,47],[49,14,21,48],[50,12,22,16,"reject"],[50,18,22,22],[50,19,22,23,"err"],[50,22,22,26],[50,23,22,27],[51,10,23,12],[52,8,24,8],[52,9,24,9],[53,8,24,9],[53,24,7,14,"attemptRetry"],[53,36,7,26,"attemptRetry"],[53,37,7,26],[54,10,7,26],[54,17,7,26,"_ref2"],[54,22,7,26],[54,23,7,26,"apply"],[54,28,7,26],[54,35,7,26,"arguments"],[54,44,7,26],[55,8,7,26],[56,6,7,26],[56,9,24,9],[57,6,25,8,"attemptRetry"],[57,19,25,20],[57,20,25,21],[57,21,25,22],[58,4,26,4],[58,5,26,5],[58,6,26,6],[59,2,27,0],[60,0,27,1],[60,3]],"functionMap":{"names":["<global>","withRetry","<anonymous>","Promise$argument_0","attemptRetry","retry"],"mappings":"AAA;ACI,4EC,UD;uBEC;6BCC;0BCC;aDK;SDW;KFE;CDC"}},"type":"js/module"}]}