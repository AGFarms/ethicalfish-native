{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":35,"index":3873}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":35,"index":3873}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":35,"index":3873}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":35,"index":3873}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":35,"index":3873}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./Bytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":14,"index":358},"end":{"line":10,"column":35,"index":379}}],"key":"rNRwa7Zf7ZARCnEg8u+ewpd4GVM="}},{"name":"./Caches.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":15,"index":396},"end":{"line":11,"column":37,"index":418}}],"key":"eb4j3K7CvdhRD5R7wvhTf3tVh5E="}},{"name":"./Errors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":15,"index":435},"end":{"line":12,"column":37,"index":457}}],"key":"aRDieYW4zCqFaYB2G3UoFMFCzB8="}},{"name":"./Hash.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":13,"index":472},"end":{"line":13,"column":33,"index":492}}],"key":"+bj80+/JIbknnPhgnDSl9yG3hOw="}},{"name":"./PublicKey.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":18,"index":512},"end":{"line":14,"column":43,"index":537}}],"key":"UppadQJlJgdwmFJZZ1XUX6V+nkw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = require(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = require(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.InvalidChecksumError = exports.InvalidInputError = exports.InvalidAddressError = void 0;\n  exports.assert = assert;\n  exports.checksum = checksum;\n  exports.from = from;\n  exports.fromPublicKey = fromPublicKey;\n  exports.isEqual = isEqual;\n  exports.validate = validate;\n  var Bytes = require(_dependencyMap[5], \"./Bytes.js\");\n  var Caches = require(_dependencyMap[6], \"./Caches.js\");\n  var Errors = require(_dependencyMap[7], \"./Errors.js\");\n  var Hash = require(_dependencyMap[8], \"./Hash.js\");\n  var PublicKey = require(_dependencyMap[9], \"./PublicKey.js\");\n  var addressRegex = /^0x[a-fA-F0-9]{40}$/;\n  function assert(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$strict = options.strict,\n      strict = _options$strict === void 0 ? true : _options$strict;\n    if (!addressRegex.test(value)) throw new InvalidAddressError({\n      address: value,\n      cause: new InvalidInputError()\n    });\n    if (strict) {\n      if (value.toLowerCase() === value) return;\n      if (checksum(value) !== value) throw new InvalidAddressError({\n        address: value,\n        cause: new InvalidChecksumError()\n      });\n    }\n  }\n  function checksum(address) {\n    if (Caches.checksum.has(address)) return Caches.checksum.get(address);\n    assert(address, {\n      strict: false\n    });\n    var hexAddress = address.substring(2).toLowerCase();\n    var hash = Hash.keccak256(Bytes.fromString(hexAddress), {\n      as: 'Bytes'\n    });\n    var characters = hexAddress.split('');\n    for (var i = 0; i < 40; i += 2) {\n      if (hash[i >> 1] >> 4 >= 8 && characters[i]) {\n        characters[i] = characters[i].toUpperCase();\n      }\n      if ((hash[i >> 1] & 0x0f) >= 8 && characters[i + 1]) {\n        characters[i + 1] = characters[i + 1].toUpperCase();\n      }\n    }\n    var result = `0x${characters.join('')}`;\n    Caches.checksum.set(address, result);\n    return result;\n  }\n  function from(address) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$checksum = options.checksum,\n      checksumVal = _options$checksum === void 0 ? false : _options$checksum;\n    assert(address);\n    if (checksumVal) return checksum(address);\n    return address;\n  }\n  function fromPublicKey(publicKey) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var address = Hash.keccak256(`0x${PublicKey.toHex(publicKey).slice(4)}`).substring(26);\n    return from(`0x${address}`, options);\n  }\n  function isEqual(addressA, addressB) {\n    assert(addressA, {\n      strict: false\n    });\n    assert(addressB, {\n      strict: false\n    });\n    return addressA.toLowerCase() === addressB.toLowerCase();\n  }\n  function validate(address) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _ref = options ?? {},\n      _ref$strict = _ref.strict,\n      strict = _ref$strict === void 0 ? true : _ref$strict;\n    try {\n      assert(address, {\n        strict\n      });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  var InvalidAddressError = /*#__PURE__*/function (_Errors$BaseError) {\n    function InvalidAddressError(_ref2) {\n      var _this;\n      var address = _ref2.address,\n        cause = _ref2.cause;\n      _classCallCheck(this, InvalidAddressError);\n      _this = _callSuper(this, InvalidAddressError, [`Address \"${address}\" is invalid.`, {\n        cause\n      }]);\n      Object.defineProperty(_this, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Address.InvalidAddressError'\n      });\n      return _this;\n    }\n    _inherits(InvalidAddressError, _Errors$BaseError);\n    return _createClass(InvalidAddressError);\n  }(Errors.BaseError);\n  exports.InvalidAddressError = InvalidAddressError;\n  var InvalidInputError = /*#__PURE__*/function (_Errors$BaseError2) {\n    function InvalidInputError() {\n      var _this2;\n      _classCallCheck(this, InvalidInputError);\n      _this2 = _callSuper(this, InvalidInputError, ['Address is not a 20 byte (40 hexadecimal character) value.']);\n      Object.defineProperty(_this2, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Address.InvalidInputError'\n      });\n      return _this2;\n    }\n    _inherits(InvalidInputError, _Errors$BaseError2);\n    return _createClass(InvalidInputError);\n  }(Errors.BaseError);\n  exports.InvalidInputError = InvalidInputError;\n  var InvalidChecksumError = /*#__PURE__*/function (_Errors$BaseError3) {\n    function InvalidChecksumError() {\n      var _this3;\n      _classCallCheck(this, InvalidChecksumError);\n      _this3 = _callSuper(this, InvalidChecksumError, ['Address does not match its checksum counterpart.']);\n      Object.defineProperty(_this3, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Address.InvalidChecksumError'\n      });\n      return _this3;\n    }\n    _inherits(InvalidChecksumError, _Errors$BaseError3);\n    return _createClass(InvalidChecksumError);\n  }(Errors.BaseError);\n  exports.InvalidChecksumError = InvalidChecksumError;\n});","lineCount":156,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"require"],[4,28,1,13],[4,29,1,13,"_dependencyMap"],[4,43,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"require"],[6,42,1,13],[6,43,1,13,"_dependencyMap"],[6,57,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"require"],[7,31,1,13],[7,32,1,13,"_dependencyMap"],[7,46,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"require"],[8,25,1,13],[8,26,1,13,"_dependencyMap"],[8,40,1,13],[9,2,1,13],[9,11,1,13,"_callSuper"],[9,22,1,13,"t"],[9,23,1,13],[9,25,1,13,"o"],[9,26,1,13],[9,28,1,13,"e"],[9,29,1,13],[9,40,1,13,"o"],[9,41,1,13],[9,44,1,13,"_getPrototypeOf"],[9,59,1,13],[9,60,1,13,"o"],[9,61,1,13],[9,64,1,13,"_possibleConstructorReturn"],[9,90,1,13],[9,91,1,13,"t"],[9,92,1,13],[9,94,1,13,"_isNativeReflectConstruct"],[9,119,1,13],[9,124,1,13,"Reflect"],[9,131,1,13],[9,132,1,13,"construct"],[9,141,1,13],[9,142,1,13,"o"],[9,143,1,13],[9,145,1,13,"e"],[9,146,1,13],[9,154,1,13,"_getPrototypeOf"],[9,169,1,13],[9,170,1,13,"t"],[9,171,1,13],[9,173,1,13,"constructor"],[9,184,1,13],[9,188,1,13,"o"],[9,189,1,13],[9,190,1,13,"apply"],[9,195,1,13],[9,196,1,13,"t"],[9,197,1,13],[9,199,1,13,"e"],[9,200,1,13],[10,2,1,13],[10,11,1,13,"_isNativeReflectConstruct"],[10,37,1,13],[10,51,1,13,"t"],[10,52,1,13],[10,56,1,13,"Boolean"],[10,63,1,13],[10,64,1,13,"prototype"],[10,73,1,13],[10,74,1,13,"valueOf"],[10,81,1,13],[10,82,1,13,"call"],[10,86,1,13],[10,87,1,13,"Reflect"],[10,94,1,13],[10,95,1,13,"construct"],[10,104,1,13],[10,105,1,13,"Boolean"],[10,112,1,13],[10,145,1,13,"t"],[10,146,1,13],[10,159,1,13,"_isNativeReflectConstruct"],[10,184,1,13],[10,196,1,13,"_isNativeReflectConstruct"],[10,197,1,13],[10,210,1,13,"t"],[10,211,1,13],[11,2,2,0,"Object"],[11,8,2,6],[11,9,2,7,"defineProperty"],[11,23,2,21],[11,24,2,22,"exports"],[11,31,2,29],[11,33,2,31],[11,45,2,43],[11,47,2,45],[12,4,2,47,"value"],[12,9,2,52],[12,11,2,54],[13,2,2,59],[13,3,2,60],[13,4,2,61],[14,2,3,0,"exports"],[14,9,3,7],[14,10,3,8,"InvalidChecksumError"],[14,30,3,28],[14,33,3,31,"exports"],[14,40,3,38],[14,41,3,39,"InvalidInputError"],[14,58,3,56],[14,61,3,59,"exports"],[14,68,3,66],[14,69,3,67,"InvalidAddressError"],[14,88,3,86],[14,91,3,89],[14,96,3,94],[14,97,3,95],[15,2,4,0,"exports"],[15,9,4,7],[15,10,4,8,"assert"],[15,16,4,14],[15,19,4,17,"assert"],[15,25,4,23],[16,2,5,0,"exports"],[16,9,5,7],[16,10,5,8,"checksum"],[16,18,5,16],[16,21,5,19,"checksum"],[16,29,5,27],[17,2,6,0,"exports"],[17,9,6,7],[17,10,6,8,"from"],[17,14,6,12],[17,17,6,15,"from"],[17,21,6,19],[18,2,7,0,"exports"],[18,9,7,7],[18,10,7,8,"fromPublicKey"],[18,23,7,21],[18,26,7,24,"fromPublicKey"],[18,39,7,37],[19,2,8,0,"exports"],[19,9,8,7],[19,10,8,8,"isEqual"],[19,17,8,15],[19,20,8,18,"isEqual"],[19,27,8,25],[20,2,9,0,"exports"],[20,9,9,7],[20,10,9,8,"validate"],[20,18,9,16],[20,21,9,19,"validate"],[20,29,9,27],[21,2,10,0],[21,6,10,6,"Bytes"],[21,11,10,11],[21,14,10,14,"require"],[21,21,10,21],[21,22,10,21,"_dependencyMap"],[21,36,10,21],[21,53,10,34],[21,54,10,35],[22,2,11,0],[22,6,11,6,"Caches"],[22,12,11,12],[22,15,11,15,"require"],[22,22,11,22],[22,23,11,22,"_dependencyMap"],[22,37,11,22],[22,55,11,36],[22,56,11,37],[23,2,12,0],[23,6,12,6,"Errors"],[23,12,12,12],[23,15,12,15,"require"],[23,22,12,22],[23,23,12,22,"_dependencyMap"],[23,37,12,22],[23,55,12,36],[23,56,12,37],[24,2,13,0],[24,6,13,6,"Hash"],[24,10,13,10],[24,13,13,13,"require"],[24,20,13,20],[24,21,13,20,"_dependencyMap"],[24,35,13,20],[24,51,13,32],[24,52,13,33],[25,2,14,0],[25,6,14,6,"PublicKey"],[25,15,14,15],[25,18,14,18,"require"],[25,25,14,25],[25,26,14,25,"_dependencyMap"],[25,40,14,25],[25,61,14,42],[25,62,14,43],[26,2,15,0],[26,6,15,6,"addressRegex"],[26,18,15,18],[26,21,15,21],[26,42,15,42],[27,2,16,0],[27,11,16,9,"assert"],[27,17,16,15,"assert"],[27,18,16,16,"value"],[27,23,16,21],[27,25,16,37],[28,4,16,37],[28,8,16,23,"options"],[28,15,16,30],[28,18,16,30,"arguments"],[28,27,16,30],[28,28,16,30,"length"],[28,34,16,30],[28,42,16,30,"arguments"],[28,51,16,30],[28,59,16,30,"undefined"],[28,68,16,30],[28,71,16,30,"arguments"],[28,80,16,30],[28,86,16,33],[28,87,16,34],[28,88,16,35],[29,4,17,4],[29,8,17,4,"_options$strict"],[29,23,17,4],[29,26,17,30,"options"],[29,33,17,37],[29,34,17,12,"strict"],[29,40,17,18],[30,6,17,12,"strict"],[30,12,17,18],[30,15,17,18,"_options$strict"],[30,30,17,18],[30,44,17,21],[30,48,17,25],[30,51,17,25,"_options$strict"],[30,66,17,25],[31,4,18,4],[31,8,18,8],[31,9,18,9,"addressRegex"],[31,21,18,21],[31,22,18,22,"test"],[31,26,18,26],[31,27,18,27,"value"],[31,32,18,32],[31,33,18,33],[31,35,19,8],[31,41,19,14],[31,45,19,18,"InvalidAddressError"],[31,64,19,37],[31,65,19,38],[32,6,20,12,"address"],[32,13,20,19],[32,15,20,21,"value"],[32,20,20,26],[33,6,21,12,"cause"],[33,11,21,17],[33,13,21,19],[33,17,21,23,"InvalidInputError"],[33,34,21,40],[33,35,21,41],[34,4,22,8],[34,5,22,9],[34,6,22,10],[35,4,23,4],[35,8,23,8,"strict"],[35,14,23,14],[35,16,23,16],[36,6,24,8],[36,10,24,12,"value"],[36,15,24,17],[36,16,24,18,"toLowerCase"],[36,27,24,29],[36,28,24,30],[36,29,24,31],[36,34,24,36,"value"],[36,39,24,41],[36,41,25,12],[37,6,26,8],[37,10,26,12,"checksum"],[37,18,26,20],[37,19,26,21,"value"],[37,24,26,26],[37,25,26,27],[37,30,26,32,"value"],[37,35,26,37],[37,37,27,12],[37,43,27,18],[37,47,27,22,"InvalidAddressError"],[37,66,27,41],[37,67,27,42],[38,8,28,16,"address"],[38,15,28,23],[38,17,28,25,"value"],[38,22,28,30],[39,8,29,16,"cause"],[39,13,29,21],[39,15,29,23],[39,19,29,27,"InvalidChecksumError"],[39,39,29,47],[39,40,29,48],[40,6,30,12],[40,7,30,13],[40,8,30,14],[41,4,31,4],[42,2,32,0],[43,2,33,0],[43,11,33,9,"checksum"],[43,19,33,17,"checksum"],[43,20,33,18,"address"],[43,27,33,25],[43,29,33,27],[44,4,34,4],[44,8,34,8,"Caches"],[44,14,34,14],[44,15,34,15,"checksum"],[44,23,34,23],[44,24,34,24,"has"],[44,27,34,27],[44,28,34,28,"address"],[44,35,34,35],[44,36,34,36],[44,38,35,8],[44,45,35,15,"Caches"],[44,51,35,21],[44,52,35,22,"checksum"],[44,60,35,30],[44,61,35,31,"get"],[44,64,35,34],[44,65,35,35,"address"],[44,72,35,42],[44,73,35,43],[45,4,36,4,"assert"],[45,10,36,10],[45,11,36,11,"address"],[45,18,36,18],[45,20,36,20],[46,6,36,22,"strict"],[46,12,36,28],[46,14,36,30],[47,4,36,36],[47,5,36,37],[47,6,36,38],[48,4,37,4],[48,8,37,10,"hexAddress"],[48,18,37,20],[48,21,37,23,"address"],[48,28,37,30],[48,29,37,31,"substring"],[48,38,37,40],[48,39,37,41],[48,40,37,42],[48,41,37,43],[48,42,37,44,"toLowerCase"],[48,53,37,55],[48,54,37,56],[48,55,37,57],[49,4,38,4],[49,8,38,10,"hash"],[49,12,38,14],[49,15,38,17,"Hash"],[49,19,38,21],[49,20,38,22,"keccak256"],[49,29,38,31],[49,30,38,32,"Bytes"],[49,35,38,37],[49,36,38,38,"fromString"],[49,46,38,48],[49,47,38,49,"hexAddress"],[49,57,38,59],[49,58,38,60],[49,60,38,62],[50,6,38,64,"as"],[50,8,38,66],[50,10,38,68],[51,4,38,76],[51,5,38,77],[51,6,38,78],[52,4,39,4],[52,8,39,10,"characters"],[52,18,39,20],[52,21,39,23,"hexAddress"],[52,31,39,33],[52,32,39,34,"split"],[52,37,39,39],[52,38,39,40],[52,40,39,42],[52,41,39,43],[53,4,40,4],[53,9,40,9],[53,13,40,13,"i"],[53,14,40,14],[53,17,40,17],[53,18,40,18],[53,20,40,20,"i"],[53,21,40,21],[53,24,40,24],[53,26,40,26],[53,28,40,28,"i"],[53,29,40,29],[53,33,40,33],[53,34,40,34],[53,36,40,36],[54,6,41,8],[54,10,41,12,"hash"],[54,14,41,16],[54,15,41,17,"i"],[54,16,41,18],[54,20,41,22],[54,21,41,23],[54,22,41,24],[54,26,41,28],[54,27,41,29],[54,31,41,33],[54,32,41,34],[54,36,41,38,"characters"],[54,46,41,48],[54,47,41,49,"i"],[54,48,41,50],[54,49,41,51],[54,51,41,53],[55,8,42,12,"characters"],[55,18,42,22],[55,19,42,23,"i"],[55,20,42,24],[55,21,42,25],[55,24,42,28,"characters"],[55,34,42,38],[55,35,42,39,"i"],[55,36,42,40],[55,37,42,41],[55,38,42,42,"toUpperCase"],[55,49,42,53],[55,50,42,54],[55,51,42,55],[56,6,43,8],[57,6,44,8],[57,10,44,12],[57,11,44,13,"hash"],[57,15,44,17],[57,16,44,18,"i"],[57,17,44,19],[57,21,44,23],[57,22,44,24],[57,23,44,25],[57,26,44,28],[57,30,44,32],[57,35,44,37],[57,36,44,38],[57,40,44,42,"characters"],[57,50,44,52],[57,51,44,53,"i"],[57,52,44,54],[57,55,44,57],[57,56,44,58],[57,57,44,59],[57,59,44,61],[58,8,45,12,"characters"],[58,18,45,22],[58,19,45,23,"i"],[58,20,45,24],[58,23,45,27],[58,24,45,28],[58,25,45,29],[58,28,45,32,"characters"],[58,38,45,42],[58,39,45,43,"i"],[58,40,45,44],[58,43,45,47],[58,44,45,48],[58,45,45,49],[58,46,45,50,"toUpperCase"],[58,57,45,61],[58,58,45,62],[58,59,45,63],[59,6,46,8],[60,4,47,4],[61,4,48,4],[61,8,48,10,"result"],[61,14,48,16],[61,17,48,19],[61,22,48,24,"characters"],[61,32,48,34],[61,33,48,35,"join"],[61,37,48,39],[61,38,48,40],[61,40,48,42],[61,41,48,43],[61,43,48,45],[62,4,49,4,"Caches"],[62,10,49,10],[62,11,49,11,"checksum"],[62,19,49,19],[62,20,49,20,"set"],[62,23,49,23],[62,24,49,24,"address"],[62,31,49,31],[62,33,49,33,"result"],[62,39,49,39],[62,40,49,40],[63,4,50,4],[63,11,50,11,"result"],[63,17,50,17],[64,2,51,0],[65,2,52,0],[65,11,52,9,"from"],[65,15,52,13,"from"],[65,16,52,14,"address"],[65,23,52,21],[65,25,52,37],[66,4,52,37],[66,8,52,23,"options"],[66,15,52,30],[66,18,52,30,"arguments"],[66,27,52,30],[66,28,52,30,"length"],[66,34,52,30],[66,42,52,30,"arguments"],[66,51,52,30],[66,59,52,30,"undefined"],[66,68,52,30],[66,71,52,30,"arguments"],[66,80,52,30],[66,86,52,33],[66,87,52,34],[66,88,52,35],[67,4,53,4],[67,8,53,4,"_options$checksum"],[67,25,53,4],[67,28,53,46,"options"],[67,35,53,53],[67,36,53,12,"checksum"],[67,44,53,20],[68,6,53,22,"checksumVal"],[68,17,53,33],[68,20,53,33,"_options$checksum"],[68,37,53,33],[68,51,53,36],[68,56,53,41],[68,59,53,41,"_options$checksum"],[68,76,53,41],[69,4,54,4,"assert"],[69,10,54,10],[69,11,54,11,"address"],[69,18,54,18],[69,19,54,19],[70,4,55,4],[70,8,55,8,"checksumVal"],[70,19,55,19],[70,21,56,8],[70,28,56,15,"checksum"],[70,36,56,23],[70,37,56,24,"address"],[70,44,56,31],[70,45,56,32],[71,4,57,4],[71,11,57,11,"address"],[71,18,57,18],[72,2,58,0],[73,2,59,0],[73,11,59,9,"fromPublicKey"],[73,24,59,22,"fromPublicKey"],[73,25,59,23,"publicKey"],[73,34,59,32],[73,36,59,48],[74,4,59,48],[74,8,59,34,"options"],[74,15,59,41],[74,18,59,41,"arguments"],[74,27,59,41],[74,28,59,41,"length"],[74,34,59,41],[74,42,59,41,"arguments"],[74,51,59,41],[74,59,59,41,"undefined"],[74,68,59,41],[74,71,59,41,"arguments"],[74,80,59,41],[74,86,59,44],[74,87,59,45],[74,88,59,46],[75,4,60,4],[75,8,60,10,"address"],[75,15,60,17],[75,18,60,20,"Hash"],[75,22,60,24],[75,23,60,25,"keccak256"],[75,32,60,34],[75,33,60,35],[75,38,60,40,"PublicKey"],[75,47,60,49],[75,48,60,50,"toHex"],[75,53,60,55],[75,54,60,56,"publicKey"],[75,63,60,65],[75,64,60,66],[75,65,60,67,"slice"],[75,70,60,72],[75,71,60,73],[75,72,60,74],[75,73,60,75],[75,75,60,77],[75,76,60,78],[75,77,60,79,"substring"],[75,86,60,88],[75,87,60,89],[75,89,60,91],[75,90,60,92],[76,4,61,4],[76,11,61,11,"from"],[76,15,61,15],[76,16,61,16],[76,21,61,21,"address"],[76,28,61,28],[76,30,61,30],[76,32,61,32,"options"],[76,39,61,39],[76,40,61,40],[77,2,62,0],[78,2,63,0],[78,11,63,9,"isEqual"],[78,18,63,16,"isEqual"],[78,19,63,17,"addressA"],[78,27,63,25],[78,29,63,27,"addressB"],[78,37,63,35],[78,39,63,37],[79,4,64,4,"assert"],[79,10,64,10],[79,11,64,11,"addressA"],[79,19,64,19],[79,21,64,21],[80,6,64,23,"strict"],[80,12,64,29],[80,14,64,31],[81,4,64,37],[81,5,64,38],[81,6,64,39],[82,4,65,4,"assert"],[82,10,65,10],[82,11,65,11,"addressB"],[82,19,65,19],[82,21,65,21],[83,6,65,23,"strict"],[83,12,65,29],[83,14,65,31],[84,4,65,37],[84,5,65,38],[84,6,65,39],[85,4,66,4],[85,11,66,11,"addressA"],[85,19,66,19],[85,20,66,20,"toLowerCase"],[85,31,66,31],[85,32,66,32],[85,33,66,33],[85,38,66,38,"addressB"],[85,46,66,46],[85,47,66,47,"toLowerCase"],[85,58,66,58],[85,59,66,59],[85,60,66,60],[86,2,67,0],[87,2,68,0],[87,11,68,9,"validate"],[87,19,68,17,"validate"],[87,20,68,18,"address"],[87,27,68,25],[87,29,68,41],[88,4,68,41],[88,8,68,27,"options"],[88,15,68,34],[88,18,68,34,"arguments"],[88,27,68,34],[88,28,68,34,"length"],[88,34,68,34],[88,42,68,34,"arguments"],[88,51,68,34],[88,59,68,34,"undefined"],[88,68,68,34],[88,71,68,34,"arguments"],[88,80,68,34],[88,86,68,37],[88,87,68,38],[88,88,68,39],[89,4,69,4],[89,8,69,4,"_ref"],[89,12,69,4],[89,15,69,30,"options"],[89,22,69,37],[89,26,69,41],[89,27,69,42],[89,28,69,43],[90,6,69,43,"_ref$strict"],[90,17,69,43],[90,20,69,43,"_ref"],[90,24,69,43],[90,25,69,12,"strict"],[90,31,69,18],[91,6,69,12,"strict"],[91,12,69,18],[91,15,69,18,"_ref$strict"],[91,26,69,18],[91,40,69,21],[91,44,69,25],[91,47,69,25,"_ref$strict"],[91,58,69,25],[92,4,70,4],[92,8,70,8],[93,6,71,8,"assert"],[93,12,71,14],[93,13,71,15,"address"],[93,20,71,22],[93,22,71,24],[94,8,71,26,"strict"],[95,6,71,33],[95,7,71,34],[95,8,71,35],[96,6,72,8],[96,13,72,15],[96,17,72,19],[97,4,73,4],[97,5,73,5],[97,6,74,4],[97,12,74,10],[98,6,75,8],[98,13,75,15],[98,18,75,20],[99,4,76,4],[100,2,77,0],[101,2,77,1],[101,6,78,6,"InvalidAddressError"],[101,25,78,25],[101,51,78,25,"_Errors$BaseError"],[101,68,78,25],[102,4,79,4],[102,13,79,4,"InvalidAddressError"],[102,33,79,4,"_ref2"],[102,38,79,4],[102,40,79,36],[103,6,79,36],[103,10,79,36,"_this"],[103,15,79,36],[104,6,79,36],[104,10,79,18,"address"],[104,17,79,25],[104,20,79,25,"_ref2"],[104,25,79,25],[104,26,79,18,"address"],[104,33,79,25],[105,8,79,27,"cause"],[105,13,79,32],[105,16,79,32,"_ref2"],[105,21,79,32],[105,22,79,27,"cause"],[105,27,79,32],[106,6,79,32,"_classCallCheck"],[106,21,79,32],[106,28,79,32,"InvalidAddressError"],[106,47,79,32],[107,6,80,8,"_this"],[107,11,80,8],[107,14,80,8,"_callSuper"],[107,24,80,8],[107,31,80,8,"InvalidAddressError"],[107,50,80,8],[107,53,80,14],[107,65,80,26,"address"],[107,72,80,33],[107,87,80,48],[107,89,80,50],[108,8,81,12,"cause"],[109,6,82,8],[109,7,82,9],[110,6,83,8,"Object"],[110,12,83,14],[110,13,83,15,"defineProperty"],[110,27,83,29],[110,28,83,29,"_this"],[110,33,83,29],[110,35,83,36],[110,41,83,42],[110,43,83,44],[111,8,84,12,"enumerable"],[111,18,84,22],[111,20,84,24],[111,24,84,28],[112,8,85,12,"configurable"],[112,20,85,24],[112,22,85,26],[112,26,85,30],[113,8,86,12,"writable"],[113,16,86,20],[113,18,86,22],[113,22,86,26],[114,8,87,12,"value"],[114,13,87,17],[114,15,87,19],[115,6,88,8],[115,7,88,9],[115,8,88,10],[116,6,88,11],[116,13,88,11,"_this"],[116,18,88,11],[117,4,89,4],[118,4,89,5,"_inherits"],[118,13,89,5],[118,14,89,5,"InvalidAddressError"],[118,33,89,5],[118,35,89,5,"_Errors$BaseError"],[118,52,89,5],[119,4,89,5],[119,11,89,5,"_createClass"],[119,23,89,5],[119,24,89,5,"InvalidAddressError"],[119,43,89,5],[120,2,89,5],[120,4,78,34,"Errors"],[120,10,78,40],[120,11,78,41,"BaseError"],[120,20,78,50],[121,2,91,0,"exports"],[121,9,91,7],[121,10,91,8,"InvalidAddressError"],[121,29,91,27],[121,32,91,30,"InvalidAddressError"],[121,51,91,49],[122,2,91,50],[122,6,92,6,"InvalidInputError"],[122,23,92,23],[122,49,92,23,"_Errors$BaseError2"],[122,67,92,23],[123,4,93,4],[123,13,93,4,"InvalidInputError"],[123,31,93,4],[123,33,93,18],[124,6,93,18],[124,10,93,18,"_this2"],[124,16,93,18],[125,6,93,18,"_classCallCheck"],[125,21,93,18],[125,28,93,18,"InvalidInputError"],[125,45,93,18],[126,6,94,8,"_this2"],[126,12,94,8],[126,15,94,8,"_callSuper"],[126,25,94,8],[126,32,94,8,"InvalidInputError"],[126,49,94,8],[126,52,94,14],[126,112,94,74],[127,6,95,8,"Object"],[127,12,95,14],[127,13,95,15,"defineProperty"],[127,27,95,29],[127,28,95,29,"_this2"],[127,34,95,29],[127,36,95,36],[127,42,95,42],[127,44,95,44],[128,8,96,12,"enumerable"],[128,18,96,22],[128,20,96,24],[128,24,96,28],[129,8,97,12,"configurable"],[129,20,97,24],[129,22,97,26],[129,26,97,30],[130,8,98,12,"writable"],[130,16,98,20],[130,18,98,22],[130,22,98,26],[131,8,99,12,"value"],[131,13,99,17],[131,15,99,19],[132,6,100,8],[132,7,100,9],[132,8,100,10],[133,6,100,11],[133,13,100,11,"_this2"],[133,19,100,11],[134,4,101,4],[135,4,101,5,"_inherits"],[135,13,101,5],[135,14,101,5,"InvalidInputError"],[135,31,101,5],[135,33,101,5,"_Errors$BaseError2"],[135,51,101,5],[136,4,101,5],[136,11,101,5,"_createClass"],[136,23,101,5],[136,24,101,5,"InvalidInputError"],[136,41,101,5],[137,2,101,5],[137,4,92,32,"Errors"],[137,10,92,38],[137,11,92,39,"BaseError"],[137,20,92,48],[138,2,103,0,"exports"],[138,9,103,7],[138,10,103,8,"InvalidInputError"],[138,27,103,25],[138,30,103,28,"InvalidInputError"],[138,47,103,45],[139,2,103,46],[139,6,104,6,"InvalidChecksumError"],[139,26,104,26],[139,52,104,26,"_Errors$BaseError3"],[139,70,104,26],[140,4,105,4],[140,13,105,4,"InvalidChecksumError"],[140,34,105,4],[140,36,105,18],[141,6,105,18],[141,10,105,18,"_this3"],[141,16,105,18],[142,6,105,18,"_classCallCheck"],[142,21,105,18],[142,28,105,18,"InvalidChecksumError"],[142,48,105,18],[143,6,106,8,"_this3"],[143,12,106,8],[143,15,106,8,"_callSuper"],[143,25,106,8],[143,32,106,8,"InvalidChecksumError"],[143,52,106,8],[143,55,106,14],[143,105,106,64],[144,6,107,8,"Object"],[144,12,107,14],[144,13,107,15,"defineProperty"],[144,27,107,29],[144,28,107,29,"_this3"],[144,34,107,29],[144,36,107,36],[144,42,107,42],[144,44,107,44],[145,8,108,12,"enumerable"],[145,18,108,22],[145,20,108,24],[145,24,108,28],[146,8,109,12,"configurable"],[146,20,109,24],[146,22,109,26],[146,26,109,30],[147,8,110,12,"writable"],[147,16,110,20],[147,18,110,22],[147,22,110,26],[148,8,111,12,"value"],[148,13,111,17],[148,15,111,19],[149,6,112,8],[149,7,112,9],[149,8,112,10],[150,6,112,11],[150,13,112,11,"_this3"],[150,19,112,11],[151,4,113,4],[152,4,113,5,"_inherits"],[152,13,113,5],[152,14,113,5,"InvalidChecksumError"],[152,34,113,5],[152,36,113,5,"_Errors$BaseError3"],[152,54,113,5],[153,4,113,5],[153,11,113,5,"_createClass"],[153,23,113,5],[153,24,113,5,"InvalidChecksumError"],[153,44,113,5],[154,2,113,5],[154,4,104,35,"Errors"],[154,10,104,41],[154,11,104,42,"BaseError"],[154,20,104,51],[155,2,115,0,"exports"],[155,9,115,7],[155,10,115,8,"InvalidChecksumError"],[155,30,115,28],[155,33,115,31,"InvalidChecksumError"],[155,53,115,51],[156,0,115,52],[156,3]],"functionMap":{"names":["<global>","assert","checksum","from","fromPublicKey","isEqual","validate","InvalidAddressError","InvalidAddressError#constructor","InvalidInputError","InvalidInputError#constructor","InvalidChecksumError","InvalidChecksumError#constructor"],"mappings":"AAA;ACe;CDgB;AEC;CFkB;AGC;CHM;AIC;CJG;AKC;CLI;AMC;CNS;AOC;ICC;KDU;CPC;ASE;ICC;KDQ;CTC;AWE;ICC;KDQ;CXC"}},"type":"js/module"}]}