{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":210,"column":34,"index":7109}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":210,"column":34,"index":7109}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":210,"column":34,"index":7109}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":210,"column":34,"index":7109}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":210,"column":34,"index":7109}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../Errors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":15,"index":232},"end":{"line":5,"column":38,"index":255}}],"key":"Uf2tTySut3JRNN1LBcTHvUgNatM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = require(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = require(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RecursiveReadLimitExceededError = exports.PositionOutOfBoundsError = exports.NegativeOffsetError = void 0;\n  exports.create = create;\n  var Errors = require(_dependencyMap[5], \"../Errors.js\");\n  var staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n      if (this.recursiveReadCount >= this.recursiveReadLimit) throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit\n      });\n    },\n    assertPosition(position) {\n      if (position < 0 || position > this.bytes.length - 1) throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position\n      });\n    },\n    decrementPosition(offset) {\n      if (offset < 0) throw new NegativeOffsetError({\n        offset\n      });\n      var position = this.position - offset;\n      this.assertPosition(position);\n      this.position = position;\n    },\n    getReadCount(position) {\n      return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n      if (offset < 0) throw new NegativeOffsetError({\n        offset\n      });\n      var position = this.position + offset;\n      this.assertPosition(position);\n      this.position = position;\n    },\n    inspectByte(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position);\n      return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + length - 1);\n      return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position);\n      return this.bytes[position];\n    },\n    inspectUint16(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 1);\n      return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 2);\n      return (this.dataView.getUint16(position) << 8) + this.dataView.getUint8(position + 2);\n    },\n    inspectUint32(position_) {\n      var position = position_ ?? this.position;\n      this.assertPosition(position + 3);\n      return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n      this.assertPosition(this.position);\n      this.bytes[this.position] = byte;\n      this.position++;\n    },\n    pushBytes(bytes) {\n      this.assertPosition(this.position + bytes.length - 1);\n      this.bytes.set(bytes, this.position);\n      this.position += bytes.length;\n    },\n    pushUint8(value) {\n      this.assertPosition(this.position);\n      this.bytes[this.position] = value;\n      this.position++;\n    },\n    pushUint16(value) {\n      this.assertPosition(this.position + 1);\n      this.dataView.setUint16(this.position, value);\n      this.position += 2;\n    },\n    pushUint24(value) {\n      this.assertPosition(this.position + 2);\n      this.dataView.setUint16(this.position, value >> 8);\n      this.dataView.setUint8(this.position + 2, value & ~4294967040);\n      this.position += 3;\n    },\n    pushUint32(value) {\n      this.assertPosition(this.position + 3);\n      this.dataView.setUint32(this.position, value);\n      this.position += 4;\n    },\n    readByte() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectByte();\n      this.position++;\n      return value;\n    },\n    readBytes(length, size) {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectBytes(length);\n      this.position += size ?? length;\n      return value;\n    },\n    readUint8() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint8();\n      this.position += 1;\n      return value;\n    },\n    readUint16() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint16();\n      this.position += 2;\n      return value;\n    },\n    readUint24() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint24();\n      this.position += 3;\n      return value;\n    },\n    readUint32() {\n      this.assertReadLimit();\n      this._touch();\n      var value = this.inspectUint32();\n      this.position += 4;\n      return value;\n    },\n    get remaining() {\n      return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n      var oldPosition = this.position;\n      this.assertPosition(position);\n      this.position = position;\n      return () => this.position = oldPosition;\n    },\n    _touch() {\n      if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;\n      var count = this.getReadCount();\n      this.positionReadCount.set(this.position, count + 1);\n      if (count > 0) this.recursiveReadCount++;\n    }\n  };\n  function create(bytes) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$recursiveReadLim = _ref.recursiveReadLimit,\n      recursiveReadLimit = _ref$recursiveReadLim === void 0 ? 8_192 : _ref$recursiveReadLim;\n    var cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n  }\n  var NegativeOffsetError = /*#__PURE__*/function (_Errors$BaseError) {\n    function NegativeOffsetError(_ref2) {\n      var _this;\n      var offset = _ref2.offset;\n      _classCallCheck(this, NegativeOffsetError);\n      _this = _callSuper(this, NegativeOffsetError, [`Offset \\`${offset}\\` cannot be negative.`]);\n      Object.defineProperty(_this, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Cursor.NegativeOffsetError'\n      });\n      return _this;\n    }\n    _inherits(NegativeOffsetError, _Errors$BaseError);\n    return _createClass(NegativeOffsetError);\n  }(Errors.BaseError);\n  exports.NegativeOffsetError = NegativeOffsetError;\n  var PositionOutOfBoundsError = /*#__PURE__*/function (_Errors$BaseError2) {\n    function PositionOutOfBoundsError(_ref3) {\n      var _this2;\n      var length = _ref3.length,\n        position = _ref3.position;\n      _classCallCheck(this, PositionOutOfBoundsError);\n      _this2 = _callSuper(this, PositionOutOfBoundsError, [`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`]);\n      Object.defineProperty(_this2, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Cursor.PositionOutOfBoundsError'\n      });\n      return _this2;\n    }\n    _inherits(PositionOutOfBoundsError, _Errors$BaseError2);\n    return _createClass(PositionOutOfBoundsError);\n  }(Errors.BaseError);\n  exports.PositionOutOfBoundsError = PositionOutOfBoundsError;\n  var RecursiveReadLimitExceededError = /*#__PURE__*/function (_Errors$BaseError3) {\n    function RecursiveReadLimitExceededError(_ref4) {\n      var _this3;\n      var count = _ref4.count,\n        limit = _ref4.limit;\n      _classCallCheck(this, RecursiveReadLimitExceededError);\n      _this3 = _callSuper(this, RecursiveReadLimitExceededError, [`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`]);\n      Object.defineProperty(_this3, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'Cursor.RecursiveReadLimitExceededError'\n      });\n      return _this3;\n    }\n    _inherits(RecursiveReadLimitExceededError, _Errors$BaseError3);\n    return _createClass(RecursiveReadLimitExceededError);\n  }(Errors.BaseError);\n  exports.RecursiveReadLimitExceededError = RecursiveReadLimitExceededError;\n});","lineCount":241,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"require"],[4,28,1,13],[4,29,1,13,"_dependencyMap"],[4,43,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"require"],[6,42,1,13],[6,43,1,13,"_dependencyMap"],[6,57,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"require"],[7,31,1,13],[7,32,1,13,"_dependencyMap"],[7,46,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"require"],[8,25,1,13],[8,26,1,13,"_dependencyMap"],[8,40,1,13],[9,2,1,13],[9,11,1,13,"_callSuper"],[9,22,1,13,"t"],[9,23,1,13],[9,25,1,13,"o"],[9,26,1,13],[9,28,1,13,"e"],[9,29,1,13],[9,40,1,13,"o"],[9,41,1,13],[9,44,1,13,"_getPrototypeOf"],[9,59,1,13],[9,60,1,13,"o"],[9,61,1,13],[9,64,1,13,"_possibleConstructorReturn"],[9,90,1,13],[9,91,1,13,"t"],[9,92,1,13],[9,94,1,13,"_isNativeReflectConstruct"],[9,119,1,13],[9,124,1,13,"Reflect"],[9,131,1,13],[9,132,1,13,"construct"],[9,141,1,13],[9,142,1,13,"o"],[9,143,1,13],[9,145,1,13,"e"],[9,146,1,13],[9,154,1,13,"_getPrototypeOf"],[9,169,1,13],[9,170,1,13,"t"],[9,171,1,13],[9,173,1,13,"constructor"],[9,184,1,13],[9,188,1,13,"o"],[9,189,1,13],[9,190,1,13,"apply"],[9,195,1,13],[9,196,1,13,"t"],[9,197,1,13],[9,199,1,13,"e"],[9,200,1,13],[10,2,1,13],[10,11,1,13,"_isNativeReflectConstruct"],[10,37,1,13],[10,51,1,13,"t"],[10,52,1,13],[10,56,1,13,"Boolean"],[10,63,1,13],[10,64,1,13,"prototype"],[10,73,1,13],[10,74,1,13,"valueOf"],[10,81,1,13],[10,82,1,13,"call"],[10,86,1,13],[10,87,1,13,"Reflect"],[10,94,1,13],[10,95,1,13,"construct"],[10,104,1,13],[10,105,1,13,"Boolean"],[10,112,1,13],[10,145,1,13,"t"],[10,146,1,13],[10,159,1,13,"_isNativeReflectConstruct"],[10,184,1,13],[10,196,1,13,"_isNativeReflectConstruct"],[10,197,1,13],[10,210,1,13,"t"],[10,211,1,13],[11,2,2,0,"Object"],[11,8,2,6],[11,9,2,7,"defineProperty"],[11,23,2,21],[11,24,2,22,"exports"],[11,31,2,29],[11,33,2,31],[11,45,2,43],[11,47,2,45],[12,4,2,47,"value"],[12,9,2,52],[12,11,2,54],[13,2,2,59],[13,3,2,60],[13,4,2,61],[14,2,3,0,"exports"],[14,9,3,7],[14,10,3,8,"RecursiveReadLimitExceededError"],[14,41,3,39],[14,44,3,42,"exports"],[14,51,3,49],[14,52,3,50,"PositionOutOfBoundsError"],[14,76,3,74],[14,79,3,77,"exports"],[14,86,3,84],[14,87,3,85,"NegativeOffsetError"],[14,106,3,104],[14,109,3,107],[14,114,3,112],[14,115,3,113],[15,2,4,0,"exports"],[15,9,4,7],[15,10,4,8,"create"],[15,16,4,14],[15,19,4,17,"create"],[15,25,4,23],[16,2,5,0],[16,6,5,6,"Errors"],[16,12,5,12],[16,15,5,15,"require"],[16,22,5,22],[16,23,5,22,"_dependencyMap"],[16,37,5,22],[16,56,5,37],[16,57,5,38],[17,2,6,0],[17,6,6,6,"staticCursor"],[17,18,6,18],[17,21,6,21],[18,4,7,4,"bytes"],[18,9,7,9],[18,11,7,11],[18,15,7,15,"Uint8Array"],[18,25,7,25],[18,26,7,26],[18,27,7,27],[19,4,8,4,"dataView"],[19,12,8,12],[19,14,8,14],[19,18,8,18,"DataView"],[19,26,8,26],[19,27,8,27],[19,31,8,31,"ArrayBuffer"],[19,42,8,42],[19,43,8,43],[19,44,8,44],[19,45,8,45],[19,46,8,46],[20,4,9,4,"position"],[20,12,9,12],[20,14,9,14],[20,15,9,15],[21,4,10,4,"positionReadCount"],[21,21,10,21],[21,23,10,23],[21,27,10,27,"Map"],[21,30,10,30],[21,31,10,31],[21,32,10,32],[22,4,11,4,"recursiveReadCount"],[22,22,11,22],[22,24,11,24],[22,25,11,25],[23,4,12,4,"recursiveReadLimit"],[23,22,12,22],[23,24,12,24,"Number"],[23,30,12,30],[23,31,12,31,"POSITIVE_INFINITY"],[23,48,12,48],[24,4,13,4,"assertReadLimit"],[24,19,13,19,"assertReadLimit"],[24,20,13,19],[24,22,13,22],[25,6,14,8],[25,10,14,12],[25,14,14,16],[25,15,14,17,"recursiveReadCount"],[25,33,14,35],[25,37,14,39],[25,41,14,43],[25,42,14,44,"recursiveReadLimit"],[25,60,14,62],[25,62,15,12],[25,68,15,18],[25,72,15,22,"RecursiveReadLimitExceededError"],[25,103,15,53],[25,104,15,54],[26,8,16,16,"count"],[26,13,16,21],[26,15,16,23],[26,19,16,27],[26,20,16,28,"recursiveReadCount"],[26,38,16,46],[26,41,16,49],[26,42,16,50],[27,8,17,16,"limit"],[27,13,17,21],[27,15,17,23],[27,19,17,27],[27,20,17,28,"recursiveReadLimit"],[28,6,18,12],[28,7,18,13],[28,8,18,14],[29,4,19,4],[29,5,19,5],[30,4,20,4,"assertPosition"],[30,18,20,18,"assertPosition"],[30,19,20,19,"position"],[30,27,20,27],[30,29,20,29],[31,6,21,8],[31,10,21,12,"position"],[31,18,21,20],[31,21,21,23],[31,22,21,24],[31,26,21,28,"position"],[31,34,21,36],[31,37,21,39],[31,41,21,43],[31,42,21,44,"bytes"],[31,47,21,49],[31,48,21,50,"length"],[31,54,21,56],[31,57,21,59],[31,58,21,60],[31,60,22,12],[31,66,22,18],[31,70,22,22,"PositionOutOfBoundsError"],[31,94,22,46],[31,95,22,47],[32,8,23,16,"length"],[32,14,23,22],[32,16,23,24],[32,20,23,28],[32,21,23,29,"bytes"],[32,26,23,34],[32,27,23,35,"length"],[32,33,23,41],[33,8,24,16,"position"],[34,6,25,12],[34,7,25,13],[34,8,25,14],[35,4,26,4],[35,5,26,5],[36,4,27,4,"decrementPosition"],[36,21,27,21,"decrementPosition"],[36,22,27,22,"offset"],[36,28,27,28],[36,30,27,30],[37,6,28,8],[37,10,28,12,"offset"],[37,16,28,18],[37,19,28,21],[37,20,28,22],[37,22,29,12],[37,28,29,18],[37,32,29,22,"NegativeOffsetError"],[37,51,29,41],[37,52,29,42],[38,8,29,44,"offset"],[39,6,29,51],[39,7,29,52],[39,8,29,53],[40,6,30,8],[40,10,30,14,"position"],[40,18,30,22],[40,21,30,25],[40,25,30,29],[40,26,30,30,"position"],[40,34,30,38],[40,37,30,41,"offset"],[40,43,30,47],[41,6,31,8],[41,10,31,12],[41,11,31,13,"assertPosition"],[41,25,31,27],[41,26,31,28,"position"],[41,34,31,36],[41,35,31,37],[42,6,32,8],[42,10,32,12],[42,11,32,13,"position"],[42,19,32,21],[42,22,32,24,"position"],[42,30,32,32],[43,4,33,4],[43,5,33,5],[44,4,34,4,"getReadCount"],[44,16,34,16,"getReadCount"],[44,17,34,17,"position"],[44,25,34,25],[44,27,34,27],[45,6,35,8],[45,13,35,15],[45,17,35,19],[45,18,35,20,"positionReadCount"],[45,35,35,37],[45,36,35,38,"get"],[45,39,35,41],[45,40,35,42,"position"],[45,48,35,50],[45,52,35,54],[45,56,35,58],[45,57,35,59,"position"],[45,65,35,67],[45,66,35,68],[45,70,35,72],[45,71,35,73],[46,4,36,4],[46,5,36,5],[47,4,37,4,"incrementPosition"],[47,21,37,21,"incrementPosition"],[47,22,37,22,"offset"],[47,28,37,28],[47,30,37,30],[48,6,38,8],[48,10,38,12,"offset"],[48,16,38,18],[48,19,38,21],[48,20,38,22],[48,22,39,12],[48,28,39,18],[48,32,39,22,"NegativeOffsetError"],[48,51,39,41],[48,52,39,42],[49,8,39,44,"offset"],[50,6,39,51],[50,7,39,52],[50,8,39,53],[51,6,40,8],[51,10,40,14,"position"],[51,18,40,22],[51,21,40,25],[51,25,40,29],[51,26,40,30,"position"],[51,34,40,38],[51,37,40,41,"offset"],[51,43,40,47],[52,6,41,8],[52,10,41,12],[52,11,41,13,"assertPosition"],[52,25,41,27],[52,26,41,28,"position"],[52,34,41,36],[52,35,41,37],[53,6,42,8],[53,10,42,12],[53,11,42,13,"position"],[53,19,42,21],[53,22,42,24,"position"],[53,30,42,32],[54,4,43,4],[54,5,43,5],[55,4,44,4,"inspectByte"],[55,15,44,15,"inspectByte"],[55,16,44,16,"position_"],[55,25,44,25],[55,27,44,27],[56,6,45,8],[56,10,45,14,"position"],[56,18,45,22],[56,21,45,25,"position_"],[56,30,45,34],[56,34,45,38],[56,38,45,42],[56,39,45,43,"position"],[56,47,45,51],[57,6,46,8],[57,10,46,12],[57,11,46,13,"assertPosition"],[57,25,46,27],[57,26,46,28,"position"],[57,34,46,36],[57,35,46,37],[58,6,47,8],[58,13,47,15],[58,17,47,19],[58,18,47,20,"bytes"],[58,23,47,25],[58,24,47,26,"position"],[58,32,47,34],[58,33,47,35],[59,4,48,4],[59,5,48,5],[60,4,49,4,"inspectBytes"],[60,16,49,16,"inspectBytes"],[60,17,49,17,"length"],[60,23,49,23],[60,25,49,25,"position_"],[60,34,49,34],[60,36,49,36],[61,6,50,8],[61,10,50,14,"position"],[61,18,50,22],[61,21,50,25,"position_"],[61,30,50,34],[61,34,50,38],[61,38,50,42],[61,39,50,43,"position"],[61,47,50,51],[62,6,51,8],[62,10,51,12],[62,11,51,13,"assertPosition"],[62,25,51,27],[62,26,51,28,"position"],[62,34,51,36],[62,37,51,39,"length"],[62,43,51,45],[62,46,51,48],[62,47,51,49],[62,48,51,50],[63,6,52,8],[63,13,52,15],[63,17,52,19],[63,18,52,20,"bytes"],[63,23,52,25],[63,24,52,26,"subarray"],[63,32,52,34],[63,33,52,35,"position"],[63,41,52,43],[63,43,52,45,"position"],[63,51,52,53],[63,54,52,56,"length"],[63,60,52,62],[63,61,52,63],[64,4,53,4],[64,5,53,5],[65,4,54,4,"inspectUint8"],[65,16,54,16,"inspectUint8"],[65,17,54,17,"position_"],[65,26,54,26],[65,28,54,28],[66,6,55,8],[66,10,55,14,"position"],[66,18,55,22],[66,21,55,25,"position_"],[66,30,55,34],[66,34,55,38],[66,38,55,42],[66,39,55,43,"position"],[66,47,55,51],[67,6,56,8],[67,10,56,12],[67,11,56,13,"assertPosition"],[67,25,56,27],[67,26,56,28,"position"],[67,34,56,36],[67,35,56,37],[68,6,57,8],[68,13,57,15],[68,17,57,19],[68,18,57,20,"bytes"],[68,23,57,25],[68,24,57,26,"position"],[68,32,57,34],[68,33,57,35],[69,4,58,4],[69,5,58,5],[70,4,59,4,"inspectUint16"],[70,17,59,17,"inspectUint16"],[70,18,59,18,"position_"],[70,27,59,27],[70,29,59,29],[71,6,60,8],[71,10,60,14,"position"],[71,18,60,22],[71,21,60,25,"position_"],[71,30,60,34],[71,34,60,38],[71,38,60,42],[71,39,60,43,"position"],[71,47,60,51],[72,6,61,8],[72,10,61,12],[72,11,61,13,"assertPosition"],[72,25,61,27],[72,26,61,28,"position"],[72,34,61,36],[72,37,61,39],[72,38,61,40],[72,39,61,41],[73,6,62,8],[73,13,62,15],[73,17,62,19],[73,18,62,20,"dataView"],[73,26,62,28],[73,27,62,29,"getUint16"],[73,36,62,38],[73,37,62,39,"position"],[73,45,62,47],[73,46,62,48],[74,4,63,4],[74,5,63,5],[75,4,64,4,"inspectUint24"],[75,17,64,17,"inspectUint24"],[75,18,64,18,"position_"],[75,27,64,27],[75,29,64,29],[76,6,65,8],[76,10,65,14,"position"],[76,18,65,22],[76,21,65,25,"position_"],[76,30,65,34],[76,34,65,38],[76,38,65,42],[76,39,65,43,"position"],[76,47,65,51],[77,6,66,8],[77,10,66,12],[77,11,66,13,"assertPosition"],[77,25,66,27],[77,26,66,28,"position"],[77,34,66,36],[77,37,66,39],[77,38,66,40],[77,39,66,41],[78,6,67,8],[78,13,67,16],[78,14,67,17],[78,18,67,21],[78,19,67,22,"dataView"],[78,27,67,30],[78,28,67,31,"getUint16"],[78,37,67,40],[78,38,67,41,"position"],[78,46,67,49],[78,47,67,50],[78,51,67,54],[78,52,67,55],[78,56,68,12],[78,60,68,16],[78,61,68,17,"dataView"],[78,69,68,25],[78,70,68,26,"getUint8"],[78,78,68,34],[78,79,68,35,"position"],[78,87,68,43],[78,90,68,46],[78,91,68,47],[78,92,68,48],[79,4,69,4],[79,5,69,5],[80,4,70,4,"inspectUint32"],[80,17,70,17,"inspectUint32"],[80,18,70,18,"position_"],[80,27,70,27],[80,29,70,29],[81,6,71,8],[81,10,71,14,"position"],[81,18,71,22],[81,21,71,25,"position_"],[81,30,71,34],[81,34,71,38],[81,38,71,42],[81,39,71,43,"position"],[81,47,71,51],[82,6,72,8],[82,10,72,12],[82,11,72,13,"assertPosition"],[82,25,72,27],[82,26,72,28,"position"],[82,34,72,36],[82,37,72,39],[82,38,72,40],[82,39,72,41],[83,6,73,8],[83,13,73,15],[83,17,73,19],[83,18,73,20,"dataView"],[83,26,73,28],[83,27,73,29,"getUint32"],[83,36,73,38],[83,37,73,39,"position"],[83,45,73,47],[83,46,73,48],[84,4,74,4],[84,5,74,5],[85,4,75,4,"pushByte"],[85,12,75,12,"pushByte"],[85,13,75,13,"byte"],[85,17,75,17],[85,19,75,19],[86,6,76,8],[86,10,76,12],[86,11,76,13,"assertPosition"],[86,25,76,27],[86,26,76,28],[86,30,76,32],[86,31,76,33,"position"],[86,39,76,41],[86,40,76,42],[87,6,77,8],[87,10,77,12],[87,11,77,13,"bytes"],[87,16,77,18],[87,17,77,19],[87,21,77,23],[87,22,77,24,"position"],[87,30,77,32],[87,31,77,33],[87,34,77,36,"byte"],[87,38,77,40],[88,6,78,8],[88,10,78,12],[88,11,78,13,"position"],[88,19,78,21],[88,21,78,23],[89,4,79,4],[89,5,79,5],[90,4,80,4,"pushBytes"],[90,13,80,13,"pushBytes"],[90,14,80,14,"bytes"],[90,19,80,19],[90,21,80,21],[91,6,81,8],[91,10,81,12],[91,11,81,13,"assertPosition"],[91,25,81,27],[91,26,81,28],[91,30,81,32],[91,31,81,33,"position"],[91,39,81,41],[91,42,81,44,"bytes"],[91,47,81,49],[91,48,81,50,"length"],[91,54,81,56],[91,57,81,59],[91,58,81,60],[91,59,81,61],[92,6,82,8],[92,10,82,12],[92,11,82,13,"bytes"],[92,16,82,18],[92,17,82,19,"set"],[92,20,82,22],[92,21,82,23,"bytes"],[92,26,82,28],[92,28,82,30],[92,32,82,34],[92,33,82,35,"position"],[92,41,82,43],[92,42,82,44],[93,6,83,8],[93,10,83,12],[93,11,83,13,"position"],[93,19,83,21],[93,23,83,25,"bytes"],[93,28,83,30],[93,29,83,31,"length"],[93,35,83,37],[94,4,84,4],[94,5,84,5],[95,4,85,4,"pushUint8"],[95,13,85,13,"pushUint8"],[95,14,85,14,"value"],[95,19,85,19],[95,21,85,21],[96,6,86,8],[96,10,86,12],[96,11,86,13,"assertPosition"],[96,25,86,27],[96,26,86,28],[96,30,86,32],[96,31,86,33,"position"],[96,39,86,41],[96,40,86,42],[97,6,87,8],[97,10,87,12],[97,11,87,13,"bytes"],[97,16,87,18],[97,17,87,19],[97,21,87,23],[97,22,87,24,"position"],[97,30,87,32],[97,31,87,33],[97,34,87,36,"value"],[97,39,87,41],[98,6,88,8],[98,10,88,12],[98,11,88,13,"position"],[98,19,88,21],[98,21,88,23],[99,4,89,4],[99,5,89,5],[100,4,90,4,"pushUint16"],[100,14,90,14,"pushUint16"],[100,15,90,15,"value"],[100,20,90,20],[100,22,90,22],[101,6,91,8],[101,10,91,12],[101,11,91,13,"assertPosition"],[101,25,91,27],[101,26,91,28],[101,30,91,32],[101,31,91,33,"position"],[101,39,91,41],[101,42,91,44],[101,43,91,45],[101,44,91,46],[102,6,92,8],[102,10,92,12],[102,11,92,13,"dataView"],[102,19,92,21],[102,20,92,22,"setUint16"],[102,29,92,31],[102,30,92,32],[102,34,92,36],[102,35,92,37,"position"],[102,43,92,45],[102,45,92,47,"value"],[102,50,92,52],[102,51,92,53],[103,6,93,8],[103,10,93,12],[103,11,93,13,"position"],[103,19,93,21],[103,23,93,25],[103,24,93,26],[104,4,94,4],[104,5,94,5],[105,4,95,4,"pushUint24"],[105,14,95,14,"pushUint24"],[105,15,95,15,"value"],[105,20,95,20],[105,22,95,22],[106,6,96,8],[106,10,96,12],[106,11,96,13,"assertPosition"],[106,25,96,27],[106,26,96,28],[106,30,96,32],[106,31,96,33,"position"],[106,39,96,41],[106,42,96,44],[106,43,96,45],[106,44,96,46],[107,6,97,8],[107,10,97,12],[107,11,97,13,"dataView"],[107,19,97,21],[107,20,97,22,"setUint16"],[107,29,97,31],[107,30,97,32],[107,34,97,36],[107,35,97,37,"position"],[107,43,97,45],[107,45,97,47,"value"],[107,50,97,52],[107,54,97,56],[107,55,97,57],[107,56,97,58],[108,6,98,8],[108,10,98,12],[108,11,98,13,"dataView"],[108,19,98,21],[108,20,98,22,"setUint8"],[108,28,98,30],[108,29,98,31],[108,33,98,35],[108,34,98,36,"position"],[108,42,98,44],[108,45,98,47],[108,46,98,48],[108,48,98,50,"value"],[108,53,98,55],[108,56,98,58],[108,57,98,59],[108,67,98,69],[108,68,98,70],[109,6,99,8],[109,10,99,12],[109,11,99,13,"position"],[109,19,99,21],[109,23,99,25],[109,24,99,26],[110,4,100,4],[110,5,100,5],[111,4,101,4,"pushUint32"],[111,14,101,14,"pushUint32"],[111,15,101,15,"value"],[111,20,101,20],[111,22,101,22],[112,6,102,8],[112,10,102,12],[112,11,102,13,"assertPosition"],[112,25,102,27],[112,26,102,28],[112,30,102,32],[112,31,102,33,"position"],[112,39,102,41],[112,42,102,44],[112,43,102,45],[112,44,102,46],[113,6,103,8],[113,10,103,12],[113,11,103,13,"dataView"],[113,19,103,21],[113,20,103,22,"setUint32"],[113,29,103,31],[113,30,103,32],[113,34,103,36],[113,35,103,37,"position"],[113,43,103,45],[113,45,103,47,"value"],[113,50,103,52],[113,51,103,53],[114,6,104,8],[114,10,104,12],[114,11,104,13,"position"],[114,19,104,21],[114,23,104,25],[114,24,104,26],[115,4,105,4],[115,5,105,5],[116,4,106,4,"readByte"],[116,12,106,12,"readByte"],[116,13,106,12],[116,15,106,15],[117,6,107,8],[117,10,107,12],[117,11,107,13,"assertReadLimit"],[117,26,107,28],[117,27,107,29],[117,28,107,30],[118,6,108,8],[118,10,108,12],[118,11,108,13,"_touch"],[118,17,108,19],[118,18,108,20],[118,19,108,21],[119,6,109,8],[119,10,109,14,"value"],[119,15,109,19],[119,18,109,22],[119,22,109,26],[119,23,109,27,"inspectByte"],[119,34,109,38],[119,35,109,39],[119,36,109,40],[120,6,110,8],[120,10,110,12],[120,11,110,13,"position"],[120,19,110,21],[120,21,110,23],[121,6,111,8],[121,13,111,15,"value"],[121,18,111,20],[122,4,112,4],[122,5,112,5],[123,4,113,4,"readBytes"],[123,13,113,13,"readBytes"],[123,14,113,14,"length"],[123,20,113,20],[123,22,113,22,"size"],[123,26,113,26],[123,28,113,28],[124,6,114,8],[124,10,114,12],[124,11,114,13,"assertReadLimit"],[124,26,114,28],[124,27,114,29],[124,28,114,30],[125,6,115,8],[125,10,115,12],[125,11,115,13,"_touch"],[125,17,115,19],[125,18,115,20],[125,19,115,21],[126,6,116,8],[126,10,116,14,"value"],[126,15,116,19],[126,18,116,22],[126,22,116,26],[126,23,116,27,"inspectBytes"],[126,35,116,39],[126,36,116,40,"length"],[126,42,116,46],[126,43,116,47],[127,6,117,8],[127,10,117,12],[127,11,117,13,"position"],[127,19,117,21],[127,23,117,25,"size"],[127,27,117,29],[127,31,117,33,"length"],[127,37,117,39],[128,6,118,8],[128,13,118,15,"value"],[128,18,118,20],[129,4,119,4],[129,5,119,5],[130,4,120,4,"readUint8"],[130,13,120,13,"readUint8"],[130,14,120,13],[130,16,120,16],[131,6,121,8],[131,10,121,12],[131,11,121,13,"assertReadLimit"],[131,26,121,28],[131,27,121,29],[131,28,121,30],[132,6,122,8],[132,10,122,12],[132,11,122,13,"_touch"],[132,17,122,19],[132,18,122,20],[132,19,122,21],[133,6,123,8],[133,10,123,14,"value"],[133,15,123,19],[133,18,123,22],[133,22,123,26],[133,23,123,27,"inspectUint8"],[133,35,123,39],[133,36,123,40],[133,37,123,41],[134,6,124,8],[134,10,124,12],[134,11,124,13,"position"],[134,19,124,21],[134,23,124,25],[134,24,124,26],[135,6,125,8],[135,13,125,15,"value"],[135,18,125,20],[136,4,126,4],[136,5,126,5],[137,4,127,4,"readUint16"],[137,14,127,14,"readUint16"],[137,15,127,14],[137,17,127,17],[138,6,128,8],[138,10,128,12],[138,11,128,13,"assertReadLimit"],[138,26,128,28],[138,27,128,29],[138,28,128,30],[139,6,129,8],[139,10,129,12],[139,11,129,13,"_touch"],[139,17,129,19],[139,18,129,20],[139,19,129,21],[140,6,130,8],[140,10,130,14,"value"],[140,15,130,19],[140,18,130,22],[140,22,130,26],[140,23,130,27,"inspectUint16"],[140,36,130,40],[140,37,130,41],[140,38,130,42],[141,6,131,8],[141,10,131,12],[141,11,131,13,"position"],[141,19,131,21],[141,23,131,25],[141,24,131,26],[142,6,132,8],[142,13,132,15,"value"],[142,18,132,20],[143,4,133,4],[143,5,133,5],[144,4,134,4,"readUint24"],[144,14,134,14,"readUint24"],[144,15,134,14],[144,17,134,17],[145,6,135,8],[145,10,135,12],[145,11,135,13,"assertReadLimit"],[145,26,135,28],[145,27,135,29],[145,28,135,30],[146,6,136,8],[146,10,136,12],[146,11,136,13,"_touch"],[146,17,136,19],[146,18,136,20],[146,19,136,21],[147,6,137,8],[147,10,137,14,"value"],[147,15,137,19],[147,18,137,22],[147,22,137,26],[147,23,137,27,"inspectUint24"],[147,36,137,40],[147,37,137,41],[147,38,137,42],[148,6,138,8],[148,10,138,12],[148,11,138,13,"position"],[148,19,138,21],[148,23,138,25],[148,24,138,26],[149,6,139,8],[149,13,139,15,"value"],[149,18,139,20],[150,4,140,4],[150,5,140,5],[151,4,141,4,"readUint32"],[151,14,141,14,"readUint32"],[151,15,141,14],[151,17,141,17],[152,6,142,8],[152,10,142,12],[152,11,142,13,"assertReadLimit"],[152,26,142,28],[152,27,142,29],[152,28,142,30],[153,6,143,8],[153,10,143,12],[153,11,143,13,"_touch"],[153,17,143,19],[153,18,143,20],[153,19,143,21],[154,6,144,8],[154,10,144,14,"value"],[154,15,144,19],[154,18,144,22],[154,22,144,26],[154,23,144,27,"inspectUint32"],[154,36,144,40],[154,37,144,41],[154,38,144,42],[155,6,145,8],[155,10,145,12],[155,11,145,13,"position"],[155,19,145,21],[155,23,145,25],[155,24,145,26],[156,6,146,8],[156,13,146,15,"value"],[156,18,146,20],[157,4,147,4],[157,5,147,5],[158,4,148,4],[158,8,148,8,"remaining"],[158,17,148,17,"remaining"],[158,18,148,17],[158,20,148,20],[159,6,149,8],[159,13,149,15],[159,17,149,19],[159,18,149,20,"bytes"],[159,23,149,25],[159,24,149,26,"length"],[159,30,149,32],[159,33,149,35],[159,37,149,39],[159,38,149,40,"position"],[159,46,149,48],[160,4,150,4],[160,5,150,5],[161,4,151,4,"setPosition"],[161,15,151,15,"setPosition"],[161,16,151,16,"position"],[161,24,151,24],[161,26,151,26],[162,6,152,8],[162,10,152,14,"oldPosition"],[162,21,152,25],[162,24,152,28],[162,28,152,32],[162,29,152,33,"position"],[162,37,152,41],[163,6,153,8],[163,10,153,12],[163,11,153,13,"assertPosition"],[163,25,153,27],[163,26,153,28,"position"],[163,34,153,36],[163,35,153,37],[164,6,154,8],[164,10,154,12],[164,11,154,13,"position"],[164,19,154,21],[164,22,154,24,"position"],[164,30,154,32],[165,6,155,8],[165,13,155,15],[165,19,155,22],[165,23,155,26],[165,24,155,27,"position"],[165,32,155,35],[165,35,155,38,"oldPosition"],[165,46,155,50],[166,4,156,4],[166,5,156,5],[167,4,157,4,"_touch"],[167,10,157,10,"_touch"],[167,11,157,10],[167,13,157,13],[168,6,158,8],[168,10,158,12],[168,14,158,16],[168,15,158,17,"recursiveReadLimit"],[168,33,158,35],[168,38,158,40,"Number"],[168,44,158,46],[168,45,158,47,"POSITIVE_INFINITY"],[168,62,158,64],[168,64,159,12],[169,6,160,8],[169,10,160,14,"count"],[169,15,160,19],[169,18,160,22],[169,22,160,26],[169,23,160,27,"getReadCount"],[169,35,160,39],[169,36,160,40],[169,37,160,41],[170,6,161,8],[170,10,161,12],[170,11,161,13,"positionReadCount"],[170,28,161,30],[170,29,161,31,"set"],[170,32,161,34],[170,33,161,35],[170,37,161,39],[170,38,161,40,"position"],[170,46,161,48],[170,48,161,50,"count"],[170,53,161,55],[170,56,161,58],[170,57,161,59],[170,58,161,60],[171,6,162,8],[171,10,162,12,"count"],[171,15,162,17],[171,18,162,20],[171,19,162,21],[171,21,163,12],[171,25,163,16],[171,26,163,17,"recursiveReadCount"],[171,44,163,35],[171,46,163,37],[172,4,164,4],[173,2,165,0],[173,3,165,1],[174,2,166,0],[174,11,166,9,"create"],[174,17,166,15,"create"],[174,18,166,16,"bytes"],[174,23,166,21],[174,25,166,60],[175,4,166,60],[175,8,166,60,"_ref"],[175,12,166,60],[175,15,166,60,"arguments"],[175,24,166,60],[175,25,166,60,"length"],[175,31,166,60],[175,39,166,60,"arguments"],[175,48,166,60],[175,56,166,60,"undefined"],[175,65,166,60],[175,68,166,60,"arguments"],[175,77,166,60],[175,83,166,56],[175,84,166,57],[175,85,166,58],[176,6,166,58,"_ref$recursiveReadLim"],[176,27,166,58],[176,30,166,58,"_ref"],[176,34,166,58],[176,35,166,25,"recursiveReadLimit"],[176,53,166,43],[177,6,166,25,"recursiveReadLimit"],[177,24,166,43],[177,27,166,43,"_ref$recursiveReadLim"],[177,48,166,43],[177,62,166,46],[177,67,166,51],[177,70,166,51,"_ref$recursiveReadLim"],[177,91,166,51],[178,4,167,4],[178,8,167,10,"cursor"],[178,14,167,16],[178,17,167,19,"Object"],[178,23,167,25],[178,24,167,26,"create"],[178,30,167,32],[178,31,167,33,"staticCursor"],[178,43,167,45],[178,44,167,46],[179,4,168,4,"cursor"],[179,10,168,10],[179,11,168,11,"bytes"],[179,16,168,16],[179,19,168,19,"bytes"],[179,24,168,24],[180,4,169,4,"cursor"],[180,10,169,10],[180,11,169,11,"dataView"],[180,19,169,19],[180,22,169,22],[180,26,169,26,"DataView"],[180,34,169,34],[180,35,169,35,"bytes"],[180,40,169,40],[180,41,169,41,"buffer"],[180,47,169,47],[180,49,169,49,"bytes"],[180,54,169,54],[180,55,169,55,"byteOffset"],[180,65,169,65],[180,67,169,67,"bytes"],[180,72,169,72],[180,73,169,73,"byteLength"],[180,83,169,83],[180,84,169,84],[181,4,170,4,"cursor"],[181,10,170,10],[181,11,170,11,"positionReadCount"],[181,28,170,28],[181,31,170,31],[181,35,170,35,"Map"],[181,38,170,38],[181,39,170,39],[181,40,170,40],[182,4,171,4,"cursor"],[182,10,171,10],[182,11,171,11,"recursiveReadLimit"],[182,29,171,29],[182,32,171,32,"recursiveReadLimit"],[182,50,171,50],[183,4,172,4],[183,11,172,11,"cursor"],[183,17,172,17],[184,2,173,0],[185,2,173,1],[185,6,174,6,"NegativeOffsetError"],[185,25,174,25],[185,51,174,25,"_Errors$BaseError"],[185,68,174,25],[186,4,175,4],[186,13,175,4,"NegativeOffsetError"],[186,33,175,4,"_ref2"],[186,38,175,4],[186,40,175,28],[187,6,175,28],[187,10,175,28,"_this"],[187,15,175,28],[188,6,175,28],[188,10,175,18,"offset"],[188,16,175,24],[188,19,175,24,"_ref2"],[188,24,175,24],[188,25,175,18,"offset"],[188,31,175,24],[189,6,175,24,"_classCallCheck"],[189,21,175,24],[189,28,175,24,"NegativeOffsetError"],[189,47,175,24],[190,6,176,8,"_this"],[190,11,176,8],[190,14,176,8,"_callSuper"],[190,24,176,8],[190,31,176,8,"NegativeOffsetError"],[190,50,176,8],[190,53,176,14],[190,65,176,26,"offset"],[190,71,176,32],[190,95,176,56],[191,6,177,8,"Object"],[191,12,177,14],[191,13,177,15,"defineProperty"],[191,27,177,29],[191,28,177,29,"_this"],[191,33,177,29],[191,35,177,36],[191,41,177,42],[191,43,177,44],[192,8,178,12,"enumerable"],[192,18,178,22],[192,20,178,24],[192,24,178,28],[193,8,179,12,"configurable"],[193,20,179,24],[193,22,179,26],[193,26,179,30],[194,8,180,12,"writable"],[194,16,180,20],[194,18,180,22],[194,22,180,26],[195,8,181,12,"value"],[195,13,181,17],[195,15,181,19],[196,6,182,8],[196,7,182,9],[196,8,182,10],[197,6,182,11],[197,13,182,11,"_this"],[197,18,182,11],[198,4,183,4],[199,4,183,5,"_inherits"],[199,13,183,5],[199,14,183,5,"NegativeOffsetError"],[199,33,183,5],[199,35,183,5,"_Errors$BaseError"],[199,52,183,5],[200,4,183,5],[200,11,183,5,"_createClass"],[200,23,183,5],[200,24,183,5,"NegativeOffsetError"],[200,43,183,5],[201,2,183,5],[201,4,174,34,"Errors"],[201,10,174,40],[201,11,174,41,"BaseError"],[201,20,174,50],[202,2,185,0,"exports"],[202,9,185,7],[202,10,185,8,"NegativeOffsetError"],[202,29,185,27],[202,32,185,30,"NegativeOffsetError"],[202,51,185,49],[203,2,185,50],[203,6,186,6,"PositionOutOfBoundsError"],[203,30,186,30],[203,56,186,30,"_Errors$BaseError2"],[203,74,186,30],[204,4,187,4],[204,13,187,4,"PositionOutOfBoundsError"],[204,38,187,4,"_ref3"],[204,43,187,4],[204,45,187,38],[205,6,187,38],[205,10,187,38,"_this2"],[205,16,187,38],[206,6,187,38],[206,10,187,18,"length"],[206,16,187,24],[206,19,187,24,"_ref3"],[206,24,187,24],[206,25,187,18,"length"],[206,31,187,24],[207,8,187,26,"position"],[207,16,187,34],[207,19,187,34,"_ref3"],[207,24,187,34],[207,25,187,26,"position"],[207,33,187,34],[208,6,187,34,"_classCallCheck"],[208,21,187,34],[208,28,187,34,"PositionOutOfBoundsError"],[208,52,187,34],[209,6,188,8,"_this2"],[209,12,188,8],[209,15,188,8,"_callSuper"],[209,25,188,8],[209,32,188,8,"PositionOutOfBoundsError"],[209,56,188,8],[209,59,188,14],[209,73,188,28,"position"],[209,81,188,36],[209,122,188,77,"length"],[209,128,188,83],[209,134,188,89],[210,6,189,8,"Object"],[210,12,189,14],[210,13,189,15,"defineProperty"],[210,27,189,29],[210,28,189,29,"_this2"],[210,34,189,29],[210,36,189,36],[210,42,189,42],[210,44,189,44],[211,8,190,12,"enumerable"],[211,18,190,22],[211,20,190,24],[211,24,190,28],[212,8,191,12,"configurable"],[212,20,191,24],[212,22,191,26],[212,26,191,30],[213,8,192,12,"writable"],[213,16,192,20],[213,18,192,22],[213,22,192,26],[214,8,193,12,"value"],[214,13,193,17],[214,15,193,19],[215,6,194,8],[215,7,194,9],[215,8,194,10],[216,6,194,11],[216,13,194,11,"_this2"],[216,19,194,11],[217,4,195,4],[218,4,195,5,"_inherits"],[218,13,195,5],[218,14,195,5,"PositionOutOfBoundsError"],[218,38,195,5],[218,40,195,5,"_Errors$BaseError2"],[218,58,195,5],[219,4,195,5],[219,11,195,5,"_createClass"],[219,23,195,5],[219,24,195,5,"PositionOutOfBoundsError"],[219,48,195,5],[220,2,195,5],[220,4,186,39,"Errors"],[220,10,186,45],[220,11,186,46,"BaseError"],[220,20,186,55],[221,2,197,0,"exports"],[221,9,197,7],[221,10,197,8,"PositionOutOfBoundsError"],[221,34,197,32],[221,37,197,35,"PositionOutOfBoundsError"],[221,61,197,59],[222,2,197,60],[222,6,198,6,"RecursiveReadLimitExceededError"],[222,37,198,37],[222,63,198,37,"_Errors$BaseError3"],[222,81,198,37],[223,4,199,4],[223,13,199,4,"RecursiveReadLimitExceededError"],[223,45,199,4,"_ref4"],[223,50,199,4],[223,52,199,34],[224,6,199,34],[224,10,199,34,"_this3"],[224,16,199,34],[225,6,199,34],[225,10,199,18,"count"],[225,15,199,23],[225,18,199,23,"_ref4"],[225,23,199,23],[225,24,199,18,"count"],[225,29,199,23],[226,8,199,25,"limit"],[226,13,199,30],[226,16,199,30,"_ref4"],[226,21,199,30],[226,22,199,25,"limit"],[226,27,199,30],[227,6,199,30,"_classCallCheck"],[227,21,199,30],[227,28,199,30,"RecursiveReadLimitExceededError"],[227,59,199,30],[228,6,200,8,"_this3"],[228,12,200,8],[228,15,200,8,"_callSuper"],[228,25,200,8],[228,32,200,8,"RecursiveReadLimitExceededError"],[228,63,200,8],[228,66,200,14],[228,95,200,43,"limit"],[228,100,200,48],[228,140,200,88,"count"],[228,145,200,93],[228,151,200,99],[229,6,201,8,"Object"],[229,12,201,14],[229,13,201,15,"defineProperty"],[229,27,201,29],[229,28,201,29,"_this3"],[229,34,201,29],[229,36,201,36],[229,42,201,42],[229,44,201,44],[230,8,202,12,"enumerable"],[230,18,202,22],[230,20,202,24],[230,24,202,28],[231,8,203,12,"configurable"],[231,20,203,24],[231,22,203,26],[231,26,203,30],[232,8,204,12,"writable"],[232,16,204,20],[232,18,204,22],[232,22,204,26],[233,8,205,12,"value"],[233,13,205,17],[233,15,205,19],[234,6,206,8],[234,7,206,9],[234,8,206,10],[235,6,206,11],[235,13,206,11,"_this3"],[235,19,206,11],[236,4,207,4],[237,4,207,5,"_inherits"],[237,13,207,5],[237,14,207,5,"RecursiveReadLimitExceededError"],[237,45,207,5],[237,47,207,5,"_Errors$BaseError3"],[237,65,207,5],[238,4,207,5],[238,11,207,5,"_createClass"],[238,23,207,5],[238,24,207,5,"RecursiveReadLimitExceededError"],[238,55,207,5],[239,2,207,5],[239,4,198,46,"Errors"],[239,10,198,52],[239,11,198,53,"BaseError"],[239,20,198,62],[240,2,209,0,"exports"],[240,9,209,7],[240,10,209,8,"RecursiveReadLimitExceededError"],[240,41,209,39],[240,44,209,42,"RecursiveReadLimitExceededError"],[240,75,209,73],[241,0,209,74],[241,3]],"functionMap":{"names":["<global>","staticCursor.assertReadLimit","staticCursor.assertPosition","staticCursor.decrementPosition","staticCursor.getReadCount","staticCursor.incrementPosition","staticCursor.inspectByte","staticCursor.inspectBytes","staticCursor.inspectUint8","staticCursor.inspectUint16","staticCursor.inspectUint24","staticCursor.inspectUint32","staticCursor.pushByte","staticCursor.pushBytes","staticCursor.pushUint8","staticCursor.pushUint16","staticCursor.pushUint24","staticCursor.pushUint32","staticCursor.readByte","staticCursor.readBytes","staticCursor.readUint8","staticCursor.readUint16","staticCursor.readUint24","staticCursor.readUint32","staticCursor.get__remaining","staticCursor.setPosition","<anonymous>","staticCursor._touch","create","NegativeOffsetError","NegativeOffsetError#constructor","PositionOutOfBoundsError","PositionOutOfBoundsError#constructor","RecursiveReadLimitExceededError","RecursiveReadLimitExceededError#constructor"],"mappings":"AAA;ICY;KDM;IEC;KFM;IGC;KHM;IIC;KJE;IKC;KLM;IMC;KNI;IOC;KPI;IQC;KRI;ISC;KTI;IUC;KVK;IWC;KXI;IYC;KZI;IaC;KbI;IcC;KdI;IeC;KfI;IgBC;KhBK;IiBC;KjBI;IkBC;KlBM;ImBC;KnBM;IoBC;KpBM;IqBC;KrBM;IsBC;KtBM;IuBC;KvBM;IwBC;KxBE;IyBC;eCI,mCD;KzBC;I2BC;K3BO;A4BE;C5BO;A6BC;ICC;KDQ;C7BC;A+BE;ICC;KDQ;C/BC;AiCE;ICC;KDQ;CjCC"}},"type":"js/module"}]}