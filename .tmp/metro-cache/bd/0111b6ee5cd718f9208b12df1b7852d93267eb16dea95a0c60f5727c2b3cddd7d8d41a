{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":12,"index":133},"end":{"line":7,"column":45,"index":166}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":36,"index":204},"end":{"line":8,"column":52,"index":220}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScrollToTop = useScrollToTop;\n  var _core = require(_dependencyMap[0], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wrapped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = React.useContext(_core.NavigationContext);\n    var route = (0, _core.useRoute)();\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n    React.useEffect(() => {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(tab => {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error the `tabPress` event is only available when navigation type is tab\n        'tabPress', e => {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return () => {\n        unsubscribers.forEach(unsubscribe => unsubscribe());\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":121,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useScrollToTop"],[7,24,6,22],[7,27,6,25,"useScrollToTop"],[7,41,6,39],[8,2,7,0],[8,6,7,4,"_core"],[8,11,7,9],[8,14,7,12,"require"],[8,21,7,19],[8,22,7,19,"_dependencyMap"],[8,36,7,19],[8,65,7,44],[8,66,7,45],[9,2,8,0],[9,6,8,4,"React"],[9,11,8,9],[9,14,8,12,"_interopRequireWildcard"],[9,37,8,35],[9,38,8,36,"require"],[9,45,8,43],[9,46,8,43,"_dependencyMap"],[9,60,8,43],[9,72,8,51],[9,73,8,52],[9,74,8,53],[10,2,9,0],[10,11,9,9,"_getRequireWildcardCache"],[10,35,9,33,"_getRequireWildcardCache"],[10,36,9,34,"e"],[10,37,9,35],[10,39,9,37],[11,4,9,39],[11,8,9,43],[11,18,9,53],[11,22,9,57],[11,29,9,64,"WeakMap"],[11,36,9,71],[11,38,9,73],[11,45,9,80],[11,49,9,84],[12,4,9,86],[12,8,9,90,"r"],[12,9,9,91],[12,12,9,94],[12,16,9,98,"WeakMap"],[12,23,9,105],[12,24,9,106],[12,25,9,107],[13,6,9,109,"t"],[13,7,9,110],[13,10,9,113],[13,14,9,117,"WeakMap"],[13,21,9,124],[13,22,9,125],[13,23,9,126],[14,4,9,128],[14,11,9,135],[14,12,9,136,"_getRequireWildcardCache"],[14,36,9,160],[14,39,9,163],[14,48,9,163,"_getRequireWildcardCache"],[14,49,9,173,"e"],[14,50,9,174],[14,52,9,176],[15,6,9,178],[15,13,9,185,"e"],[15,14,9,186],[15,17,9,189,"t"],[15,18,9,190],[15,21,9,193,"r"],[15,22,9,194],[16,4,9,196],[16,5,9,197],[16,7,9,199,"e"],[16,8,9,200],[16,9,9,201],[17,2,9,203],[18,2,10,0],[18,11,10,9,"_interopRequireWildcard"],[18,34,10,32,"_interopRequireWildcard"],[18,35,10,33,"e"],[18,36,10,34],[18,38,10,36,"r"],[18,39,10,37],[18,41,10,39],[19,4,10,41],[19,8,10,45],[19,9,10,46,"r"],[19,10,10,47],[19,14,10,51,"e"],[19,15,10,52],[19,19,10,56,"e"],[19,20,10,57],[19,21,10,58,"__esModule"],[19,31,10,68],[19,33,10,70],[19,40,10,77,"e"],[19,41,10,78],[20,4,10,80],[20,8,10,84],[20,12,10,88],[20,17,10,93,"e"],[20,18,10,94],[20,22,10,98],[20,30,10,106],[20,34,10,110],[20,41,10,117,"e"],[20,42,10,118],[20,46,10,122],[20,56,10,132],[20,60,10,136],[20,67,10,143,"e"],[20,68,10,144],[20,70,10,146],[20,77,10,153],[21,6,10,155,"default"],[21,13,10,162],[21,15,10,164,"e"],[22,4,10,166],[22,5,10,167],[23,4,10,169],[23,8,10,173,"t"],[23,9,10,174],[23,12,10,177,"_getRequireWildcardCache"],[23,36,10,201],[23,37,10,202,"r"],[23,38,10,203],[23,39,10,204],[24,4,10,206],[24,8,10,210,"t"],[24,9,10,211],[24,13,10,215,"t"],[24,14,10,216],[24,15,10,217,"has"],[24,18,10,220],[24,19,10,221,"e"],[24,20,10,222],[24,21,10,223],[24,23,10,225],[24,30,10,232,"t"],[24,31,10,233],[24,32,10,234,"get"],[24,35,10,237],[24,36,10,238,"e"],[24,37,10,239],[24,38,10,240],[25,4,10,242],[25,8,10,246,"n"],[25,9,10,247],[25,12,10,250],[26,8,10,252,"__proto__"],[26,17,10,261],[26,19,10,263],[27,6,10,268],[27,7,10,269],[28,6,10,271,"a"],[28,7,10,272],[28,10,10,275,"Object"],[28,16,10,281],[28,17,10,282,"defineProperty"],[28,31,10,296],[28,35,10,300,"Object"],[28,41,10,306],[28,42,10,307,"getOwnPropertyDescriptor"],[28,66,10,331],[29,4,10,333],[29,9,10,338],[29,13,10,342,"u"],[29,14,10,343],[29,18,10,347,"e"],[29,19,10,348],[29,21,10,350],[29,25,10,354],[29,34,10,363],[29,39,10,368,"u"],[29,40,10,369],[29,44,10,373],[29,45,10,374],[29,46,10,375],[29,47,10,376,"hasOwnProperty"],[29,61,10,390],[29,62,10,391,"call"],[29,66,10,395],[29,67,10,396,"e"],[29,68,10,397],[29,70,10,399,"u"],[29,71,10,400],[29,72,10,401],[29,74,10,403],[30,6,10,405],[30,10,10,409,"i"],[30,11,10,410],[30,14,10,413,"a"],[30,15,10,414],[30,18,10,417,"Object"],[30,24,10,423],[30,25,10,424,"getOwnPropertyDescriptor"],[30,49,10,448],[30,50,10,449,"e"],[30,51,10,450],[30,53,10,452,"u"],[30,54,10,453],[30,55,10,454],[30,58,10,457],[30,62,10,461],[31,6,10,463,"i"],[31,7,10,464],[31,12,10,469,"i"],[31,13,10,470],[31,14,10,471,"get"],[31,17,10,474],[31,21,10,478,"i"],[31,22,10,479],[31,23,10,480,"set"],[31,26,10,483],[31,27,10,484],[31,30,10,487,"Object"],[31,36,10,493],[31,37,10,494,"defineProperty"],[31,51,10,508],[31,52,10,509,"n"],[31,53,10,510],[31,55,10,512,"u"],[31,56,10,513],[31,58,10,515,"i"],[31,59,10,516],[31,60,10,517],[31,63,10,520,"n"],[31,64,10,521],[31,65,10,522,"u"],[31,66,10,523],[31,67,10,524],[31,70,10,527,"e"],[31,71,10,528],[31,72,10,529,"u"],[31,73,10,530],[31,74,10,531],[32,4,10,533],[33,4,10,535],[33,11,10,542,"n"],[33,12,10,543],[33,13,10,544,"default"],[33,20,10,551],[33,23,10,554,"e"],[33,24,10,555],[33,26,10,557,"t"],[33,27,10,558],[33,31,10,562,"t"],[33,32,10,563],[33,33,10,564,"set"],[33,36,10,567],[33,37,10,568,"e"],[33,38,10,569],[33,40,10,571,"n"],[33,41,10,572],[33,42,10,573],[33,44,10,575,"n"],[33,45,10,576],[34,2,10,578],[35,2,11,0],[35,11,11,9,"getScrollableNode"],[35,28,11,26,"getScrollableNode"],[35,29,11,27,"ref"],[35,32,11,30],[35,34,11,32],[36,4,12,2],[36,8,12,6,"ref"],[36,11,12,9],[36,12,12,10,"current"],[36,19,12,17],[36,23,12,21],[36,27,12,25],[36,29,12,27],[37,6,13,4],[37,13,13,11],[37,17,13,15],[38,4,14,2],[39,4,15,2],[39,8,15,6],[39,21,15,19],[39,25,15,23,"ref"],[39,28,15,26],[39,29,15,27,"current"],[39,36,15,34],[39,40,15,38],[39,50,15,48],[39,54,15,52,"ref"],[39,57,15,55],[39,58,15,56,"current"],[39,65,15,63],[39,69,15,67],[39,85,15,83],[39,89,15,87,"ref"],[39,92,15,90],[39,93,15,91,"current"],[39,100,15,98],[39,104,15,102],[39,129,15,127],[39,133,15,131,"ref"],[39,136,15,134],[39,137,15,135,"current"],[39,144,15,142],[39,146,15,144],[40,6,16,4],[41,6,17,4],[41,13,17,11,"ref"],[41,16,17,14],[41,17,17,15,"current"],[41,24,17,22],[42,4,18,2],[42,5,18,3],[42,11,18,9],[42,15,18,13],[42,35,18,33],[42,39,18,37,"ref"],[42,42,18,40],[42,43,18,41,"current"],[42,50,18,48],[42,52,18,50],[43,6,19,4],[44,6,20,4],[45,6,21,4],[45,13,21,11,"ref"],[45,16,21,14],[45,17,21,15,"current"],[45,24,21,22],[45,25,21,23,"getScrollResponder"],[45,43,21,41],[45,44,21,42],[45,45,21,43],[46,4,22,2],[46,5,22,3],[46,11,22,9],[46,15,22,13],[46,24,22,22],[46,28,22,26,"ref"],[46,31,22,29],[46,32,22,30,"current"],[46,39,22,37],[46,41,22,39],[47,6,23,4],[48,6,24,4],[49,6,25,4],[50,6,26,4],[51,6,27,4],[51,13,27,11,"ref"],[51,16,27,14],[51,17,27,15,"current"],[51,24,27,22],[51,25,27,23,"getNode"],[51,32,27,30],[51,33,27,31],[51,34,27,32],[52,4,28,2],[52,5,28,3],[52,11,28,9],[53,6,29,4],[53,13,29,11,"ref"],[53,16,29,14],[53,17,29,15,"current"],[53,24,29,22],[54,4,30,2],[55,2,31,0],[56,2,32,0],[56,11,32,9,"useScrollToTop"],[56,25,32,23,"useScrollToTop"],[56,26,32,24,"ref"],[56,29,32,27],[56,31,32,29],[57,4,33,2],[57,8,33,8,"navigation"],[57,18,33,18],[57,21,33,21,"React"],[57,26,33,26],[57,27,33,27,"useContext"],[57,37,33,37],[57,38,33,38,"_core"],[57,43,33,43],[57,44,33,44,"NavigationContext"],[57,61,33,61],[57,62,33,62],[58,4,34,2],[58,8,34,8,"route"],[58,13,34,13],[58,16,34,16],[58,17,34,17],[58,18,34,18],[58,20,34,20,"_core"],[58,25,34,25],[58,26,34,26,"useRoute"],[58,34,34,34],[58,36,34,36],[58,37,34,37],[59,4,35,2],[59,8,35,6,"navigation"],[59,18,35,16],[59,23,35,21,"undefined"],[59,32,35,30],[59,34,35,32],[60,6,36,4],[60,12,36,10],[60,16,36,14,"Error"],[60,21,36,19],[60,22,36,20],[60,104,36,102],[60,105,36,103],[61,4,37,2],[62,4,38,2,"React"],[62,9,38,7],[62,10,38,8,"useEffect"],[62,19,38,17],[62,20,38,18],[62,26,38,24],[63,6,39,4],[63,10,39,10,"tabNavigations"],[63,24,39,24],[63,27,39,27],[63,29,39,29],[64,6,40,4],[64,10,40,8,"currentNavigation"],[64,27,40,25],[64,30,40,28,"navigation"],[64,40,40,38],[65,6,41,4],[66,6,42,4],[67,6,43,4],[67,13,43,11,"currentNavigation"],[67,30,43,28],[67,32,43,30],[68,8,44,6],[68,12,44,10,"currentNavigation"],[68,29,44,27],[68,30,44,28,"getState"],[68,38,44,36],[68,39,44,37],[68,40,44,38],[68,41,44,39,"type"],[68,45,44,43],[68,50,44,48],[68,55,44,53],[68,57,44,55],[69,10,45,8,"tabNavigations"],[69,24,45,22],[69,25,45,23,"push"],[69,29,45,27],[69,30,45,28,"currentNavigation"],[69,47,45,45],[69,48,45,46],[70,8,46,6],[71,8,47,6,"currentNavigation"],[71,25,47,23],[71,28,47,26,"currentNavigation"],[71,45,47,43],[71,46,47,44,"getParent"],[71,55,47,53],[71,56,47,54],[71,57,47,55],[72,6,48,4],[73,6,49,4],[73,10,49,8,"tabNavigations"],[73,24,49,22],[73,25,49,23,"length"],[73,31,49,29],[73,36,49,34],[73,37,49,35],[73,39,49,37],[74,8,50,6],[75,6,51,4],[76,6,52,4],[76,10,52,10,"unsubscribers"],[76,23,52,23],[76,26,52,26,"tabNavigations"],[76,40,52,40],[76,41,52,41,"map"],[76,44,52,44],[76,45,52,45,"tab"],[76,48,52,48],[76,52,52,52],[77,8,53,6],[77,15,53,13,"tab"],[77,18,53,16],[77,19,53,17,"addListener"],[77,30,53,28],[78,8,54,6],[79,8,55,6],[80,8,56,6],[81,8,57,6],[81,18,57,16],[81,20,57,18,"e"],[81,21,57,19],[81,25,57,23],[82,10,58,8],[83,10,59,8],[83,14,59,14,"isFocused"],[83,23,59,23],[83,26,59,26,"navigation"],[83,36,59,36],[83,37,59,37,"isFocused"],[83,46,59,46],[83,47,59,47],[83,48,59,48],[85,10,61,8],[86,10,62,8],[87,10,63,8],[87,14,63,14,"isFirst"],[87,21,63,21],[87,24,63,24,"tabNavigations"],[87,38,63,38],[87,39,63,39,"includes"],[87,47,63,47],[87,48,63,48,"navigation"],[87,58,63,58],[87,59,63,59],[87,63,63,63,"navigation"],[87,73,63,73],[87,74,63,74,"getState"],[87,82,63,82],[87,83,63,83],[87,84,63,84],[87,85,63,85,"routes"],[87,91,63,91],[87,92,63,92],[87,93,63,93],[87,94,63,94],[87,95,63,95,"key"],[87,98,63,98],[87,103,63,103,"route"],[87,108,63,108],[87,109,63,109,"key"],[87,112,63,112],[89,10,65,8],[90,10,66,8],[91,10,67,8,"requestAnimationFrame"],[91,31,67,29],[91,32,67,30],[91,38,67,36],[92,12,68,10],[92,16,68,16,"scrollable"],[92,26,68,26],[92,29,68,29,"getScrollableNode"],[92,46,68,46],[92,47,68,47,"ref"],[92,50,68,50],[92,51,68,51],[93,12,69,10],[93,16,69,14,"isFocused"],[93,25,69,23],[93,29,69,27,"isFirst"],[93,36,69,34],[93,40,69,38,"scrollable"],[93,50,69,48],[93,54,69,52],[93,55,69,53,"e"],[93,56,69,54],[93,57,69,55,"defaultPrevented"],[93,73,69,71],[93,75,69,73],[94,14,70,12],[94,18,70,16],[94,31,70,29],[94,35,70,33,"scrollable"],[94,45,70,43],[94,47,70,45],[95,16,71,14,"scrollable"],[95,26,71,24],[95,27,71,25,"scrollToTop"],[95,38,71,36],[95,39,71,37],[95,40,71,38],[96,14,72,12],[96,15,72,13],[96,21,72,19],[96,25,72,23],[96,35,72,33],[96,39,72,37,"scrollable"],[96,49,72,47],[96,51,72,49],[97,16,73,14,"scrollable"],[97,26,73,24],[97,27,73,25,"scrollTo"],[97,35,73,33],[97,36,73,34],[98,18,74,16,"y"],[98,19,74,17],[98,21,74,19],[98,22,74,20],[99,18,75,16,"animated"],[99,26,75,24],[99,28,75,26],[100,16,76,14],[100,17,76,15],[100,18,76,16],[101,14,77,12],[101,15,77,13],[101,21,77,19],[101,25,77,23],[101,41,77,39],[101,45,77,43,"scrollable"],[101,55,77,53],[101,57,77,55],[102,16,78,14,"scrollable"],[102,26,78,24],[102,27,78,25,"scrollToOffset"],[102,41,78,39],[102,42,78,40],[103,18,79,16,"offset"],[103,24,79,22],[103,26,79,24],[103,27,79,25],[104,18,80,16,"animated"],[104,26,80,24],[104,28,80,26],[105,16,81,14],[105,17,81,15],[105,18,81,16],[106,14,82,12],[106,15,82,13],[106,21,82,19],[106,25,82,23],[106,50,82,48],[106,54,82,52,"scrollable"],[106,64,82,62],[106,66,82,64],[107,16,83,14,"scrollable"],[107,26,83,24],[107,27,83,25,"scrollResponderScrollTo"],[107,50,83,48],[107,51,83,49],[108,18,84,16,"y"],[108,19,84,17],[108,21,84,19],[108,22,84,20],[109,18,85,16,"animated"],[109,26,85,24],[109,28,85,26],[110,16,86,14],[110,17,86,15],[110,18,86,16],[111,14,87,12],[112,12,88,10],[113,10,89,8],[113,11,89,9],[113,12,89,10],[114,8,90,6],[114,9,90,7],[114,10,90,8],[115,6,91,4],[115,7,91,5],[115,8,91,6],[116,6,92,4],[116,13,92,11],[116,19,92,17],[117,8,93,6,"unsubscribers"],[117,21,93,19],[117,22,93,20,"forEach"],[117,29,93,27],[117,30,93,28,"unsubscribe"],[117,41,93,39],[117,45,93,43,"unsubscribe"],[117,56,93,54],[117,57,93,55],[117,58,93,56],[117,59,93,57],[118,6,94,4],[118,7,94,5],[119,4,95,2],[119,5,95,3],[119,7,95,5],[119,8,95,6,"navigation"],[119,18,95,16],[119,20,95,18,"ref"],[119,23,95,21],[119,25,95,23,"route"],[119,30,95,28],[119,31,95,29,"key"],[119,34,95,32],[119,35,95,33],[119,36,95,34],[120,2,96,0],[121,0,96,1],[121,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACQ,4MD;AEC,mkBF;AGC;CHoB;AIC;kBCM;6CCc;kBCK;8BCU;SDsB;ODC;KDC;WIC;4BCC,4BD;KJC;GDC;CJC"}},"type":"js/module"}]}