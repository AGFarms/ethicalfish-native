{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/wrapNativeSuper","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"klKI26kbg7KjCUWxfs8kiTBX2S8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":3633,"column":0,"index":125553}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@onflow/sdk","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":10,"index":25},"end":{"line":3,"column":32,"index":47}}],"key":"NCZgNN77fOsEjU2QowqqM65Yqdw="}},{"name":"@onflow/types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":8,"index":57},"end":{"line":4,"column":32,"index":81}}],"key":"oMvUZTTXpqwBX6XoyCTZqK0DumE="}},{"name":"@onflow/util-invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":20,"index":103},"end":{"line":5,"column":53,"index":136}}],"key":"1C+mIupVxJZeo2i8yH6/S/MPnho="}},{"name":"cross-fetch","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":21,"index":159},"end":{"line":6,"column":43,"index":181}}],"key":"WBqhYmBlAIO/Y6d7z/48M5HvzrM="}},{"name":"@onflow/config","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":13,"index":196},"end":{"line":7,"column":38,"index":221}}],"key":"iZAEFvclMdOZ+q3AJEQg3fR+J/Q="}},{"name":"@onflow/util-logger","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":13,"index":236},"end":{"line":8,"column":43,"index":266}}],"key":"bxFWu8AjdigVB2eil6IJfVhl99k="}},{"name":"@onflow/util-address","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":18,"index":286},"end":{"line":9,"column":49,"index":317}}],"key":"CmNxSqebs/3kVQNHl8QVkL3cuAU="}},{"name":"@onflow/rlp","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":10,"index":329},"end":{"line":10,"column":32,"index":351}}],"key":"Z9f++DKVCU1+56LfBUpgDqQKne8="}},{"name":"@onflow/util-actor","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":16,"index":369},"end":{"line":11,"column":45,"index":398}}],"key":"wYASG0FqkM0dS662el92eXSp250="}},{"name":"@onflow/transport-http","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":20,"index":420},"end":{"line":12,"column":53,"index":453}}],"key":"0XVGjZBF7e9m6QHfvKTqbSKBJiU="}},{"name":"@improbable-eng/grpc-web","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":14,"index":469},"end":{"line":13,"column":49,"index":504}}],"key":"t7VIMCWU1+Ofe/uJGTx12kYtcek="}},{"name":"@onflow/typedefs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":15,"index":521},"end":{"line":14,"column":42,"index":548}}],"key":"qsIsH8lMFmju5AensZKJhFF2KZU="}},{"name":"sha3","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":11,"index":561},"end":{"line":15,"column":26,"index":576}}],"key":"NKewUIZ67xZcn0nhuSF3l3TerAE="}},{"name":"@onflow/util-template","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":19,"index":597},"end":{"line":16,"column":51,"index":629}}],"key":"JvglFSBen5GrX4Zc3CtMPNRVu5c="}},{"name":"@onflow/util-semver","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":13,"index":644},"end":{"line":17,"column":43,"index":674}}],"key":"RL2njn2Vf3JYQNqnx2J+oT5zh2E="}},{"name":"abort-controller","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2487,"column":54,"index":91178},"end":{"line":2487,"column":81,"index":91205}}],"key":"+UDgZXadlJ+kd6biSSXEKCWG5kQ="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _wrapNativeSuper = require(_dependencyMap[1], \"@babel/runtime/helpers/wrapNativeSuper\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = require(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[6], \"@babel/runtime/helpers/inherits\");\n  var _asyncToGenerator = require(_dependencyMap[7], \"@babel/runtime/helpers/asyncToGenerator\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var sdk = require(_dependencyMap[8], \"@onflow/sdk\");\n  var t = require(_dependencyMap[9], \"@onflow/types\");\n  var utilInvariant = require(_dependencyMap[10], \"@onflow/util-invariant\");\n  var fetchTransport = require(_dependencyMap[11], \"cross-fetch\");\n  var config = require(_dependencyMap[12], \"@onflow/config\");\n  var logger = require(_dependencyMap[13], \"@onflow/util-logger\");\n  var utilAddress = require(_dependencyMap[14], \"@onflow/util-address\");\n  var rlp = require(_dependencyMap[15], \"@onflow/rlp\");\n  var utilActor = require(_dependencyMap[16], \"@onflow/util-actor\");\n  var transportHttp = require(_dependencyMap[17], \"@onflow/transport-http\");\n  var grpcWeb = require(_dependencyMap[18], \"@improbable-eng/grpc-web\");\n  var typedefs = require(_dependencyMap[19], \"@onflow/typedefs\");\n  var sha3 = require(_dependencyMap[20], \"sha3\");\n  var utilTemplate = require(_dependencyMap[21], \"@onflow/util-template\");\n  var semver = require(_dependencyMap[22], \"@onflow/util-semver\");\n  function _interopNamespaceDefault(e) {\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n.default = e;\n    return Object.freeze(n);\n  }\n  var sdk__namespace = /*#__PURE__*/_interopNamespaceDefault(sdk);\n  var t__namespace = /*#__PURE__*/_interopNamespaceDefault(t);\n  var logger__namespace = /*#__PURE__*/_interopNamespaceDefault(logger);\n  var rlp__namespace = /*#__PURE__*/_interopNamespaceDefault(rlp);\n  var semver__namespace = /*#__PURE__*/_interopNamespaceDefault(semver);\n  var VERSION = \"1.13.5\";\n  var is = type => d => typeof d === type;\n  var isRequired = d => d != null;\n  var isObject = is(\"object\");\n  var isString = is(\"string\");\n  var isFunc = is(\"function\");\n  var isNumber = is(\"number\");\n  function normalizeArgs(ax) {\n    if (isFunc(ax)) return ax(sdk__namespace.arg, t__namespace);\n    return [];\n  }\n  function httpDocumentResolver(_x) {\n    return _httpDocumentResolver.apply(this, arguments);\n  }\n  function _httpDocumentResolver() {\n    _httpDocumentResolver = _asyncToGenerator(function* (_ref) {\n      var url = _ref.url;\n      utilInvariant.invariant(typeof url !== \"undefined\", \"retrieve({ url }) -- url must be defined\");\n      var res;\n      try {\n        res = yield fetchTransport(url);\n      } catch (e) {\n        throw new Error(\"httpDocumentResolver Error: Failed to retrieve document.\");\n      }\n      var document = res.ok ? yield res.json() : null;\n      return document;\n    });\n    return _httpDocumentResolver.apply(this, arguments);\n  }\n  var DOCUMENT_RESOLVERS = new Map([[\"http\", httpDocumentResolver], [\"https\", httpDocumentResolver]]);\n  function retrieve(_x2) {\n    return _retrieve.apply(this, arguments);\n  }\n  /**\n   * @description Fills import addresses in Cadence for network\n   *\n   * @param {object} params\n   * @param {string} params.network - Network to derive Cadence for\n   * @param {object} params.template - Interaction Template to derive Cadence from\n   * @returns {Promise<string>} - Promise that resolves with the derived Cadence code\n   */\n  function _retrieve() {\n    _retrieve = _asyncToGenerator(function* (_ref2) {\n      var url = _ref2.url;\n      utilInvariant.invariant(typeof url !== \"undefined\", \"retrieve({ url }) -- url must be defined\");\n      utilInvariant.invariant(typeof url === \"string\", \"retrieve({ url }) -- url must be a string\");\n      var documentResolversFromConfig = yield config.config().where(/^document\\.resolver\\./);\n      Object.keys(documentResolversFromConfig).map(key => {\n        var resolverFromConfig = documentResolversFromConfig[key];\n        var resolverProtocol = key.replace(/^document\\.resolver\\./, \"\");\n        DOCUMENT_RESOLVERS.set(resolverProtocol, resolverFromConfig);\n      });\n      var urlParts = /^(.*):\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/.exec(url);\n      utilInvariant.invariant(urlParts, \"Failed to parse URL\");\n      var protocol = urlParts[1];\n      utilInvariant.invariant(urlParts, \"Failed to parse URL protocol\");\n      var resolver = DOCUMENT_RESOLVERS.get(protocol);\n      utilInvariant.invariant(resolver, `No resolver found for protcol=${protocol}`);\n      var document = yield resolver({\n        url\n      });\n      return document;\n    });\n    return _retrieve.apply(this, arguments);\n  }\n  function deriveCadenceByNetwork100(_x3) {\n    return _deriveCadenceByNetwork.apply(this, arguments);\n  }\n  /**\n   * @description - Replaces string imports with the actual contract address\n   *\n   * @param {object} param\n   * @param {string} param.cadence\n   * @param {object} param.networkDependencies\n   * @returns {string} - Cadence\n   */\n  function _deriveCadenceByNetwork() {\n    _deriveCadenceByNetwork = _asyncToGenerator(function* (_ref) {\n      var network = _ref.network,\n        template = _ref.template;\n      utilInvariant.invariant(template.f_version === \"1.0.0\", \"deriveCadenceByNetwork100({ template }) -- template must be version 1.0.0\");\n      var networkDependencies = Object.keys(template?.data?.dependencies).map(dependencyPlaceholder => {\n        var dependencyNetworkContracts = Object.values(template?.data?.dependencies?.[dependencyPlaceholder]);\n        utilInvariant.invariant(dependencyNetworkContracts !== undefined, `deriveCadenceByNetwork100 -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`);\n        utilInvariant.invariant(dependencyNetworkContracts.length > 0, `deriveCadenceByNetwork100 -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`);\n        var dependencyContract = dependencyNetworkContracts[0];\n        var dependencyContractForNetwork = dependencyContract?.[network];\n        utilInvariant.invariant(dependencyContractForNetwork, `deriveCadenceByNetwork100 -- Could not find ${network} network information for dependency: ${dependencyPlaceholder}`);\n        return [dependencyPlaceholder, dependencyContractForNetwork?.address];\n      });\n      return networkDependencies.reduce((cadence, _ref2) => {\n        var _ref38 = _slicedToArray(_ref2, 2),\n          placeholder = _ref38[0],\n          address = _ref38[1];\n        var regex = new RegExp(\"(\\\\b\" + placeholder + \"\\\\b)\", \"g\");\n        return cadence.replace(regex, address);\n      }, template.data.cadence);\n    });\n    return _deriveCadenceByNetwork.apply(this, arguments);\n  }\n  function replaceStringImports(_ref) {\n    var cadence = _ref.cadence,\n      networkDependencies = _ref.networkDependencies;\n    return Object.keys(networkDependencies).reduce((c, contractName) => {\n      var address = networkDependencies[contractName];\n      var regex = new RegExp(`import \"\\\\b${contractName}\\\\b\"`, \"g\");\n      return c.replace(regex, `import ${contractName} from ${address}`);\n    }, cadence);\n  }\n\n  /**\n   * @description Fills import addresses in Cadence for network\n   *\n   * @param {object} params\n   * @param {string} params.network - Network to derive Cadence for\n   * @param {object} params.template - Interaction Template to derive Cadence from\n   * @returns {Promise<string>} - Promise that resolves with the derived Cadence code\n   */\n  function deriveCadenceByNetwork110(_x4) {\n    return _deriveCadenceByNetwork2.apply(this, arguments);\n  }\n  /**\n   * @description Fills import addresses in Cadence for network\n   *\n   * @param {object} params\n   * @param {string} params.network - Network to derive Cadence for\n   * @param {object} params.template - Interaction Template to derive Cadence from\n   * @returns {Promise<string>} - Promise that resolves with the derived Cadence code\n   */\n  function _deriveCadenceByNetwork2() {\n    _deriveCadenceByNetwork2 = _asyncToGenerator(function* (_ref) {\n      var network = _ref.network,\n        template = _ref.template;\n      utilInvariant.invariant(template.f_version === \"1.1.0\", \"deriveCadenceByNetwork110({ template }) -- template must be version 1.0.0\");\n\n      // get network dependencies from template dependencies, use new string import format\n      var networkDependencies = {};\n      template?.data?.dependencies.forEach(dependency => {\n        dependency.contracts.forEach(contract => {\n          var contractName = contract.contract;\n          contract.networks.forEach(net => {\n            if (net.network === network) {\n              networkDependencies[contractName] = net.address;\n            }\n          });\n          utilInvariant.invariant(networkDependencies[contractName] !== undefined, `deriveCadenceByNetwork110 -- Could not find contracts Network Address: ${network} ${contractName}`);\n        });\n      });\n      utilInvariant.invariant(Object.keys(networkDependencies).length === template?.data?.dependencies.length, `deriveCadenceByNetwork110 -- Could not find contracts for import dependencies: ${networkDependencies}`);\n      utilInvariant.invariant(Object.keys(networkDependencies).length === Object.values(networkDependencies).length, `deriveCadenceByNetwork110 -- Could not find all addresses for network ${network} dependencies:  ${networkDependencies}`);\n      utilInvariant.invariant(template?.data?.cadence?.body, `no cadence found -- Could not replace import dependencies: ${networkDependencies}`);\n      return replaceStringImports({\n        cadence: template?.data?.cadence?.body,\n        networkDependencies\n      });\n    });\n    return _deriveCadenceByNetwork2.apply(this, arguments);\n  }\n  function deriveCadenceByNetwork(_x5) {\n    return _deriveCadenceByNetwork3.apply(this, arguments);\n  }\n  function _deriveCadenceByNetwork3() {\n    _deriveCadenceByNetwork3 = _asyncToGenerator(function* (_ref) {\n      var network = _ref.network,\n        template = _ref.template;\n      utilInvariant.invariant(network != undefined, \"deriveCadenceByNetwork({ network }) -- network must be defined\");\n      utilInvariant.invariant(typeof network === \"string\", \"deriveCadenceByNetwork({ network }) -- network must be a string\");\n      utilInvariant.invariant(template != undefined, \"deriveCadenceByNetwork({ template }) -- template must be defined\");\n      utilInvariant.invariant(typeof template === \"object\", \"deriveCadenceByNetwork({ template }) -- template must be an object\");\n      utilInvariant.invariant(template.f_type === \"InteractionTemplate\", \"deriveCadenceByNetwork({ template }) -- template must be an InteractionTemplate\");\n      switch (template.f_version) {\n        case \"1.1.0\":\n          return yield deriveCadenceByNetwork110({\n            network,\n            template\n          });\n        case \"1.0.0\":\n          return yield deriveCadenceByNetwork100({\n            network,\n            template\n          });\n        default:\n          throw new Error(\"deriveCadenceByNetwork Error: Unsupported template version\");\n      }\n    });\n    return _deriveCadenceByNetwork3.apply(this, arguments);\n  }\n  function fetchChainId() {\n    return _fetchChainId.apply(this, arguments);\n  } // Cache of chainId promises for each access node value\n  // key: access node, value: chainId promise\n  function _fetchChainId() {\n    _fetchChainId = _asyncToGenerator(function* () {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var response = yield sdk__namespace.send([sdk__namespace.getNetworkParameters()], opts).then(sdk__namespace.decode);\n      return response.chainId;\n    });\n    return _fetchChainId.apply(this, arguments);\n  }\n  var chainIdCache = {};\n  var hasWarnedEnv = false;\n\n  /**\n   * @description\n   * Gets the chain ID if its set, otherwise gets the chain ID from the access node\n   *\n   * @param {object} opts - Optional parameters\n   * @returns {Promise<string>} The chain ID of the access node\n   * @throws {Error} If the chain ID is not found\n   *\n   * @example\n   * // returns \"testnet\"\n   * getChainId()\n   */\n  function getChainId() {\n    return _getChainId.apply(this, arguments);\n  }\n  /**\n   * @description\n   * Watches the config for changes to access node and updates the chain id accordingly\n   *\n   * @returns {Function} A function that unsubscribes the listener\n   *\n   */\n  function _getChainId() {\n    _getChainId = _asyncToGenerator(function* () {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var flowNetworkCfg = yield config.config.get(\"flow.network\");\n      var envCfg = yield config.config.get(\"env\");\n      if (envCfg && !hasWarnedEnv) {\n        logger.log.deprecate({\n          pkg: \"FCL\",\n          subject: 'Using the \"env\" configuration key for specifying the flow network',\n          message: \"Configuring to specify flow network is no longer required\",\n          transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0001-deprecate-env-config-key\"\n        });\n        hasWarnedEnv = true;\n      }\n      var accessNode = opts.node || (yield config.config.get(\"accessNode.api\"));\n      if (!accessNode) {\n        // Fall back to deprecated flow.network and env config keys\n        // This probably should have been done before trying to fetch the chainId from the access node\n        // However, this was the behaviour with the initial implementation of getChainId()\n        if (flowNetworkCfg) {\n          return flowNetworkCfg;\n        } else if (envCfg) {\n          return envCfg;\n        }\n        throw new Error(`Either the \"accessNode.api\" config key or opts.node must be set`);\n      }\n\n      // Try using cached chainId first if it exists and access node is the same\n      if (chainIdCache[accessNode]) {\n        try {\n          return yield chainIdCache[accessNode];\n        } catch {}\n      }\n\n      // If no cached chainId, value is stale, or last attempt failed, try getting chainId from access node\n      // Check if another getChainId() call has already started a new promise, if not, start a new one\n      // There may have been concurrent calls to getChainId() while the first call was waiting for the response\n      if (!chainIdCache[accessNode]) {\n        chainIdCache[accessNode] = fetchChainId(opts).catch(error => {\n          // If there was an error, reset the promise so that the next call will try again\n          chainIdCache[accessNode] = null;\n          throw error;\n        });\n      }\n\n      // Use newly created promise\n      try {\n        return yield chainIdCache[accessNode];\n      } catch (e) {\n        // Fall back to deprecated flow.network and env config keys\n        // This probably should have been done before trying to fetch the chainId from the access node\n        // However, this was the behaviour with the initial implementation of getChainId()\n        if (flowNetworkCfg) {\n          return flowNetworkCfg;\n        } else if (envCfg) {\n          return envCfg;\n        }\n        throw new Error(`Error getting chainId from access node - are you using the correct access node endpoint.  If running locally, is your emulator up-to-date? ${e.message}`);\n      }\n    });\n    return _getChainId.apply(this, arguments);\n  }\n  function watchForChainIdChanges() {\n    return config.config.subscribe(() => {\n      // Call getChainId to update the chainId cache if access node has changed\n      getChainId({\n        enableRequestLogging: false\n      }).catch(() => {});\n    });\n  }\n  function prepTemplateOpts(_x6) {\n    return _prepTemplateOpts.apply(this, arguments);\n  }\n  function _prepTemplateOpts() {\n    _prepTemplateOpts = _asyncToGenerator(function* (opts) {\n      if (isString(opts?.template)) {\n        opts.template = yield retrieve({\n          url: opts?.template\n        });\n      }\n      var cadence = opts.cadence || (yield deriveCadenceByNetwork({\n        template: opts.template,\n        network: yield getChainId(opts)\n      }));\n      opts.cadence = cadence;\n      return opts;\n    });\n    return _prepTemplateOpts.apply(this, arguments);\n  }\n  function pre(_x7, _x8) {\n    return _pre.apply(this, arguments);\n  }\n  function _pre() {\n    _pre = _asyncToGenerator(function* (type, opts) {\n      // prettier-ignore\n      utilInvariant.invariant(isRequired(opts), `${type}(opts) -- opts is required`);\n      // prettier-ignore\n      utilInvariant.invariant(isObject(opts), `${type}(opts) -- opts must be an object`);\n      // prettier-ignore\n      utilInvariant.invariant(!(opts.cadence && opts.template), `${type}({ template, cadence }) -- cannot pass both cadence and template`);\n      // prettier-ignore\n      utilInvariant.invariant(isRequired(opts.cadence || opts?.template), `${type}({ cadence }) -- cadence is required`);\n      // // prettier-ignore\n      utilInvariant.invariant(isString(opts.cadence) || opts?.template, `${type}({ cadence }) -- cadence must be a string`);\n      // prettier-ignore\n      utilInvariant.invariant(yield sdk__namespace.config().get(\"accessNode.api\"), `${type}(opts) -- Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`);\n    });\n    return _pre.apply(this, arguments);\n  }\n  function preMutate(_x9) {\n    return _preMutate.apply(this, arguments);\n  }\n  function _preMutate() {\n    _preMutate = _asyncToGenerator(function* (opts) {\n      return pre(\"mutate\", opts);\n    });\n    return _preMutate.apply(this, arguments);\n  }\n  function preQuery(_x10) {\n    return _preQuery.apply(this, arguments);\n  }\n  /**\n   * @description\n   * Allows you to submit scripts to query the blockchain.\n   *\n   *  @param {object} opts - Query Options and configuration\n   *  @param {string} opts.cadence - Cadence Script used to query Flow\n   *  @param {import(\"./args\").ArgsFn} [opts.args] - Arguments passed to cadence script\n   *  @param {object | string} [opts.template] - Interaction Template for a script\n   *  @param {number} [opts.limit]   - Compute Limit for Query\n   *  @returns {Promise}\n   *\n   *  @example\n   *    const cadence = `\n   *      cadence: `\n   *        access(all) fun main(a: Int, b: Int, c: Address): Int {\n   *          log(c)\n   *          return a + b\n   *        }\n   *    `.trim()\n   *\n   *    const args = (arg, t) => [\n   *      arg(5, t.Int),\n   *      arg(7, t.Int),\n   *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n   *    ]\n   *\n   *    await query({ cadence, args })\n   */\n  function _preQuery() {\n    _preQuery = _asyncToGenerator(function* (opts) {\n      return pre(\"query\", opts);\n    });\n    return _preQuery.apply(this, arguments);\n  }\n  function query() {\n    return _query.apply(this, arguments);\n  }\n  function _query() {\n    _query = _asyncToGenerator(function* () {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      yield preQuery(opts);\n      opts = yield prepTemplateOpts(opts);\n      return sdk__namespace.send([sdk__namespace.script(opts.cadence), sdk__namespace.args(normalizeArgs(opts.args || [])), opts.limit && typeof opts.limit === \"number\" && sdk__namespace.limit(opts.limit)]).then(sdk__namespace.decode);\n    });\n    return _query.apply(this, arguments);\n  }\n  var FCL_REDIRECT_URL_PARAM_NAME = \"fcl_redirect_url\";\n  var FCL_RESPONSE_PARAM_NAME = \"fclResponseJson\";\n  var CORE_STRATEGIES = {\n    \"HTTP/RPC\": \"HTTP/RPC\",\n    \"HTTP/POST\": \"HTTP/POST\",\n    \"IFRAME/RPC\": \"IFRAME/RPC\",\n    \"POP/RPC\": \"POP/RPC\",\n    \"TAB/RPC\": \"TAB/RPC\",\n    \"EXT/RPC\": \"EXT/RPC\",\n    \"DEEPLINK/RPC\": \"DEEPLINK/RPC\"\n  };\n\n  /**\n   * @description\n   * Listens for messages from FCL\n   *\n   * @param {string} messageType - Message type\n   * @param {Function} cb - Callback function\n   * @returns {Function} - Function to remove event listener\n   */\n  var onMessageFromFCL = function (messageType) {\n    var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    var buildData = data => {\n      if (data.deprecated) console.warn(\"DEPRECATION NOTICE\", data.deprecated.message);\n      delete data?.body?.interaction;\n      return data;\n    };\n    var internal = e => {\n      var data = e.data;\n      if (typeof data !== \"object\") return;\n      if (typeof data == null) return;\n      if (data.type !== messageType) return;\n      cb(buildData(data));\n    };\n    window.addEventListener(\"message\", internal);\n    return () => window.removeEventListener(\"message\", internal);\n  };\n  var _isReactNative = false;\n  function isReactNative() {\n    return _isReactNative;\n  }\n  function setIsReactNative(value) {\n    _isReactNative = value;\n  }\n\n  // This is a workaround for an ongoing issue with URL in React Native\n  // It does not parse the URL correctly and appends trailing slashes\n  // See: https://github.com/facebook/react-native/issues/24428\n  // See: https://github.com/facebook/react-native/issues/24428\n\n  var _URL = globalThis.URL;\n  var URL = /*#__PURE__*/function (_URL2) {\n    function URL(url, base) {\n      var _this;\n      _classCallCheck(this, URL);\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      _this = _callSuper(this, URL, [url, base, ...args]);\n\n      // Extra check if in React Native\n      if (!isReactNative()) {\n        return _possibleConstructorReturn(_this);\n      }\n\n      // Fix trailing slash issue\n      if (_this._url && !url.endsWith(\"/\") && _this._url.endsWith(\"/\")) {\n        _this._url = _this._url.slice(0, -1);\n      }\n      return _this;\n    }\n    _inherits(URL, _URL2);\n    return _createClass(URL);\n  }(_URL);\n  /**\n   * @description\n   * Sends message to FCL window\n   *\n   * @param {string} type - Message type\n   * @param {object} msg - Message object\n   * @returns {void}\n   *\n   * @example\n   * sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n   *    f_type: \"PollingResponse\",\n   *    f_vsn: \"1.0.0\",\n   *    status: \"APPROVED\",\n   *    reason: null,\n   *    data: data,\n   *  })\n   */\n  var sendMsgToFCL = function (type) {\n    var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var data = {\n      ...msg,\n      type\n    };\n    var urlParams = new URLSearchParams(window.location.search);\n    var redirectUrl = urlParams.get(FCL_REDIRECT_URL_PARAM_NAME);\n    if (redirectUrl) {\n      var url = new URL(redirectUrl);\n      url.searchParams.append(FCL_RESPONSE_PARAM_NAME, JSON.stringify(data));\n      window.location.href = url.href;\n    } else if (window.location !== window.parent.location) {\n      window.parent.postMessage({\n        ...msg,\n        type\n      }, \"*\");\n    } else if (window.opener) {\n      window.opener.postMessage({\n        ...msg,\n        type\n      }, \"*\");\n    } else {\n      throw new Error(\"Unable to communicate with parent FCL instance\");\n    }\n  };\n\n  /**\n   * @description\n   * Listens for \"FCL:VIEW:READY:RESPONSE\" and sends \"FCL:VIEW:READY\"\n   *\n   * @param {Function} cb - Callback function\n   * @param {object} msg - Message object\n   * @returns {void}\n   */\n  var ready = function (cb) {\n    onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb);\n    sendMsgToFCL(\"FCL:VIEW:READY\");\n  };\n\n  /**\n   * @description\n   * Sends \"FCL:VIEW:CLOSE\"\n   *\n   * @returns {void}\n   */\n  var close = () => {\n    sendMsgToFCL(\"FCL:VIEW:CLOSE\");\n  };\n\n  /**\n   * @description\n   * Sends \"FCL:VIEW:RESPONSE\" with status \"APPROVED\"\n   *\n   * @param {object} data - Data object\n   * @returns {void}\n   */\n  var approve = data => {\n    sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n      f_type: \"PollingResponse\",\n      f_vsn: \"1.0.0\",\n      status: \"APPROVED\",\n      reason: null,\n      data: data\n    });\n  };\n\n  /**\n   * @description\n   * Sends \"FCL:VIEW:RESPONSE\" with status \"DECLINED\"\n   *\n   * @param {string} reason - Reason for declining\n   * @returns {void}\n   */\n  var decline = reason => {\n    sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n      f_type: \"PollingResponse\",\n      f_vsn: \"1.0.0\",\n      status: \"DECLINED\",\n      reason: reason,\n      data: null\n    });\n  };\n\n  /**\n   * @description\n   * Sends \"FCL:VIEW:RESPONSE\" with status \"REDIRECT\"\n   *\n   * @param {object} data - Data object\n   * @returns {void}\n   */\n  var redirect = data => {\n    sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n      f_type: \"PollingResponse\",\n      f_vsn: \"1.0.0\",\n      status: \"REDIRECT\",\n      reason: null,\n      data: data\n    });\n  };\n  var SERVICE_PRAGMA = {\n    f_type: \"Service\",\n    f_vsn: \"1.0.0\"\n  };\n  var IDENTITY_PRAGMA = {\n    f_type: \"Identity\",\n    f_vsn: \"1.0.0\"\n  };\n  var USER_PRAGMA = {\n    f_type: \"USER\",\n    f_vsn: \"1.0.0\"\n  };\n  var POLLING_RESPONSE_PRAGMA = {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\"\n  };\n  var COMPOSITE_SIGNATURE_PRAGMA = {\n    f_type: \"CompositeSignature\",\n    f_vsn: \"1.0.0\"\n  };\n\n  /**\n   * @description\n   * Constructs a new CompositeSignature instance.\n   *\n   * @param {string} addr - Flow Address\n   * @param {number} keyId - Key ID\n   * @param {string} signature - Signature as a hex string\n   */\n  function CompositeSignature(addr, keyId, signature) {\n    this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type;\n    this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn;\n    this.addr = utilAddress.withPrefix(addr);\n    this.keyId = Number(keyId);\n    this.signature = signature;\n  }\n  var rightPaddedHexBuffer = (value, pad) => rlp.Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\");\n  var leftPaddedHexBuffer = (value, pad) => rlp.Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\");\n  var addressBuffer = addr => leftPaddedHexBuffer(addr, 8);\n  var nonceBuffer = nonce => rlp.Buffer.from(nonce, \"hex\");\n  var encodeAccountProof = function (_ref) {\n    var address = _ref.address,\n      nonce = _ref.nonce,\n      appIdentifier = _ref.appIdentifier;\n    var includeDomainTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    utilInvariant.invariant(address, \"Encode Message For Provable Authn Error: address must be defined\");\n    utilInvariant.invariant(nonce, \"Encode Message For Provable Authn Error: nonce must be defined\");\n    utilInvariant.invariant(appIdentifier, \"Encode Message For Provable Authn Error: appIdentifier must be defined\");\n    utilInvariant.invariant(nonce.length >= 64, \"Encode Message For Provable Authn Error: nonce must be minimum of 32 bytes\");\n    var ACCOUNT_PROOF_DOMAIN_TAG = rightPaddedHexBuffer(rlp.Buffer.from(\"FCL-ACCOUNT-PROOF-V0.0\").toString(\"hex\"), 32);\n    if (includeDomainTag) {\n      return rlp.Buffer.concat([ACCOUNT_PROOF_DOMAIN_TAG, rlp.encode([appIdentifier, addressBuffer(utilAddress.sansPrefix(address)), nonceBuffer(nonce)])]).toString(\"hex\");\n    }\n    return rlp.encode([appIdentifier, addressBuffer(utilAddress.sansPrefix(address)), nonceBuffer(nonce)]).toString(\"hex\");\n  };\n  function injectExtService(service) {\n    if (service.type === \"authn\" && service.endpoint != null) {\n      if (!Array.isArray(window.fcl_extensions)) {\n        window.fcl_extensions = [];\n      }\n      window.fcl_extensions.push(service);\n    } else {\n      console.warn(\"Authn service is required\");\n    }\n  }\n  var index$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CompositeSignature: CompositeSignature,\n    approve: approve,\n    close: close,\n    decline: decline,\n    encodeAccountProof: encodeAccountProof,\n    encodeMessageFromSignable: sdk.encodeMessageFromSignable,\n    injectExtService: injectExtService,\n    onMessageFromFCL: onMessageFromFCL,\n    ready: ready,\n    redirect: redirect,\n    sendMsgToFCL: sendMsgToFCL\n  });\n  var ACCOUNT_PROOF = \"ACCOUNT_PROOF\";\n  var USER_SIGNATURE = \"USER_SIGNATURE\";\n  var validateArgs = args => {\n    if (args.appIdentifier) {\n      var appIdentifier = args.appIdentifier,\n        address = args.address,\n        nonce = args.nonce,\n        signatures = args.signatures;\n      utilInvariant.invariant(isString(appIdentifier), \"verifyAccountProof({ appIdentifier }) -- appIdentifier must be a string\");\n      utilInvariant.invariant(isString(address) && utilAddress.sansPrefix(address).length === 16, \"verifyAccountProof({ address }) -- address must be a valid address\");\n      utilInvariant.invariant(/^[0-9a-f]+$/i.test(nonce), \"nonce must be a hex string\");\n      utilInvariant.invariant(Array.isArray(signatures) && signatures.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"), \"Must include an Array of CompositeSignatures to verify\");\n      utilInvariant.invariant(signatures.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]), \"User signatures to be verified must be from a single account address\");\n      return true;\n    } else {\n      var message = args.message,\n        _address = args.address,\n        compSigs = args.compSigs;\n      utilInvariant.invariant(/^[0-9a-f]+$/i.test(message), \"Signed message must be a hex string\");\n      utilInvariant.invariant(isString(_address) && utilAddress.sansPrefix(_address).length === 16, \"verifyUserSignatures({ address }) -- address must be a valid address\");\n      utilInvariant.invariant(Array.isArray(compSigs) && compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"), \"Must include an Array of CompositeSignatures to verify\");\n      utilInvariant.invariant(compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]), \"User signatures to be verified must be from a single account address\");\n      return true;\n    }\n  };\n\n  // TODO: pass in option for contract but we're connected to testnet\n  // log address + network -> in sync?\n  var getVerifySignaturesScript = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator(function* (sig, opts) {\n      var verifyFunction = sig === \"ACCOUNT_PROOF\" ? \"verifyAccountProofSignatures\" : \"verifyUserSignatures\";\n      var network = yield getChainId(opts);\n      var contractAddresses = {\n        testnet: \"0x74daa6f9c7ef24b1\",\n        mainnet: \"0xb4b82a1c9d21d284\",\n        previewnet: \"0x40b5b8b2ce81ea4a\"\n      };\n      var fclCryptoContract = opts.fclCryptoContract || contractAddresses[network];\n      utilInvariant.invariant(fclCryptoContract, `${verifyFunction}({ fclCryptoContract }) -- FCLCrypto contract address is unknown for network: ${network}. Please manually specify the FCLCrypto contract address.`);\n      return `\n      import FCLCrypto from ${fclCryptoContract}\n\n      access(all) fun main(\n          address: Address, \n          message: String, \n          keyIndices: [Int], \n          signatures: [String]\n      ): Bool {\n        return FCLCrypto.${verifyFunction}(address: address, message: message, keyIndices: keyIndices, signatures: signatures)\n      }\n    `;\n    });\n    return function getVerifySignaturesScript(_x11, _x12) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * @description\n   * Verify a valid account proof signature or signatures for an account on Flow.\n   *\n   * @param {string} appIdentifier - A message string in hexadecimal format\n   * @param {object} accountProofData - An object consisting of address, nonce, and signatures\n   * @param {string} accountProofData.address - A Flow account address\n   * @param {string} accountProofData.nonce - A random string in hexadecimal format (minimum 32 bytes in total, i.e 64 hex characters)\n   * @param {object[]} accountProofData.signatures - An array of composite signatures to verify\n   * @param {object} [opts={}] - Options object\n   * @param {string} opts.fclCryptoContract - An optional override Flow account address where the FCLCrypto contract is deployed\n   * @returns {Promise<boolean>} - Returns true if the signature is valid, false otherwise\n   *\n   * @example\n   *\n   *  const accountProofData = {\n   *   address: \"0x123\",\n   *   nonce: \"F0123\"\n   *   signatures: [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n   *  }\n   *\n   *  const isValid = await fcl.AppUtils.verifyAccountProof(\n   *    \"AwesomeAppId\",\n   *    accountProofData,\n   *    {fclCryptoContract}\n   *  )\n   */\n  function verifyAccountProof(_x13, _x14) {\n    return _verifyAccountProof.apply(this, arguments);\n  }\n  /**\n   * @description\n   * Verify a valid signature/s for an account on Flow.\n   *\n   * @param {string} message - A message string in hexadecimal format\n   * @param {Array} compSigs - An array of Composite Signatures\n   * @param {string} compSigs[].addr - The account address\n   * @param {number} compSigs[].keyId - The account keyId\n   * @param {string} compSigs[].signature - The signature to verify\n   * @param {object} [opts={}] - Options object\n   * @param {string} opts.fclCryptoContract - An optional override of Flow account address where the FCLCrypto contract is deployed\n   * @returns {Promise<boolean>} - Returns true if the signature is valid, false otherwise\n   *\n   * @example\n   *\n   *  const isValid = await fcl.AppUtils.verifyUserSignatures(\n   *    Buffer.from('FOO').toString(\"hex\"),\n   *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n   *    {fclCryptoContract}\n   *  )\n   */\n  function _verifyAccountProof() {\n    _verifyAccountProof = _asyncToGenerator(function* (appIdentifier, _ref) {\n      var address = _ref.address,\n        nonce = _ref.nonce,\n        signatures = _ref.signatures;\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      validateArgs({\n        appIdentifier,\n        address,\n        nonce,\n        signatures\n      });\n      var message = encodeAccountProof({\n        address,\n        nonce,\n        appIdentifier\n      }, false);\n      var signaturesArr = [];\n      var keyIndices = [];\n      for (var el of signatures) {\n        signaturesArr.push(el.signature);\n        keyIndices.push(el.keyId.toString());\n      }\n      return query({\n        cadence: yield getVerifySignaturesScript(ACCOUNT_PROOF, opts),\n        args: (arg, t) => [arg(utilAddress.withPrefix(address), t.Address), arg(message, t.String), arg(keyIndices, t.Array(t.Int)), arg(signaturesArr, t.Array(t.String))]\n      });\n    });\n    return _verifyAccountProof.apply(this, arguments);\n  }\n  function verifyUserSignatures$1(_x15, _x16) {\n    return _verifyUserSignatures$.apply(this, arguments);\n  }\n  function _verifyUserSignatures$() {\n    _verifyUserSignatures$ = _asyncToGenerator(function* (message, compSigs) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var address = utilAddress.withPrefix(compSigs[0].addr);\n      validateArgs({\n        message,\n        address,\n        compSigs\n      });\n      var signaturesArr = [];\n      var keyIndices = [];\n      for (var el of compSigs) {\n        signaturesArr.push(el.signature);\n        keyIndices.push(el.keyId.toString());\n      }\n      return query({\n        cadence: yield getVerifySignaturesScript(USER_SIGNATURE, opts),\n        args: (arg, t) => [arg(address, t.Address), arg(message, t.String), arg(keyIndices, t.Array(t.Int)), arg(signaturesArr, t.Array(t.String))]\n      });\n    });\n    return _verifyUserSignatures$.apply(this, arguments);\n  }\n  var index$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    verifyAccountProof: verifyAccountProof,\n    verifyUserSignatures: verifyUserSignatures$1\n  });\n\n  /**\n   * Verify a valid signature/s for an account on Flow.\n   *\n   * @deprecated since version '1.0.0-alpha.0', use AppUtils.verifyUserSignatures instead\n   *\n   */\n  var verifyUserSignatures = logger.log.deprecate({\n    pkg: \"FCL\",\n    subject: \"fcl.verifyUserSignatures()\",\n    message: \"Please use fcl.AppUtils.verifyUserSignatures()\",\n    callback: function verifyUserSignatures(message, compSigs) {\n      return verifyUserSignatures$1(message, compSigs);\n    }\n  });\n  var serialize = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var resolveFunction = yield sdk.config.first([\"sdk.resolve\"], opts.resolve || sdk.resolve);\n      if (Array.isArray(args)) args = yield sdk.pipe(sdk.interaction(), args);\n      return JSON.stringify(sdk.createSignableVoucher(yield resolveFunction(args)), null, 2);\n    });\n    return function serialize() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  function configLens(_x17) {\n    return _configLens.apply(this, arguments);\n  }\n  function _configLens() {\n    _configLens = _asyncToGenerator(function* (regex) {\n      return Object.fromEntries(Object.entries(yield config.config().where(regex)).map(_ref => {\n        var _ref39 = _slicedToArray(_ref, 2),\n          key = _ref39[0],\n          value = _ref39[1];\n        return [key.replace(regex, \"\"), value];\n      }));\n    });\n    return _configLens.apply(this, arguments);\n  }\n  var ERROR_CODE_REGEX = /\\[Error Code: (\\d+)\\]/;\n  var TransactionError = /*#__PURE__*/function (_Error) {\n    function TransactionError(message, code) {\n      var _this2;\n      _classCallCheck(this, TransactionError);\n      _this2 = _callSuper(this, TransactionError, [message]);\n      _this2.code = code;\n      _this2.type = typedefs.FvmErrorCode[code];\n      return _this2;\n    }\n    _inherits(TransactionError, _Error);\n    return _createClass(TransactionError, null, [{\n      key: \"fromErrorMessage\",\n      value: function fromErrorMessage(errorMessage) {\n        var match = errorMessage.match(ERROR_CODE_REGEX);\n        var code = match ? parseInt(match[1], 10) : undefined;\n        return new TransactionError(errorMessage, code || typedefs.FvmErrorCode.UNKNOWN_ERROR);\n      }\n    }]);\n  }(/*#__PURE__*/_wrapNativeSuper(Error));\n  var TXID_REGEXP = /^[0-9a-fA-F]{64}$/;\n\n  /**\n   * @typedef {import(\"@onflow/typedefs\").Transaction} Transaction\n   */\n\n  /**\n   * @typedef {import(\"@onflow/typedefs\").TransactionStatus} TransactionStatus\n   */\n\n  var POLL = \"POLL\";\n  var TIMEOUT = \"TIMEOUT\";\n  var fetchTxStatus = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator(function* (transactionId) {\n      return sdk.send([sdk.getTransactionStatus(transactionId)]).then(sdk.decode);\n    });\n    return function fetchTxStatus(_x18) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var isExpired = tx => tx.status === 5;\n  var isSealed = tx => tx.status >= 4;\n  var isExecuted = tx => tx.status >= 3;\n  var isFinalized = tx => tx.status >= 2;\n  var isPending = tx => tx.status >= 1;\n  var isUnknown = tx => tx.status >= 0;\n  var isDiff = (cur, next) => {\n    return JSON.stringify(cur) !== JSON.stringify(next);\n  };\n  var makeHandlers$1 = function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      [utilActor.INIT]: function () {\n        var _ref7 = _asyncToGenerator(function* (ctx) {\n          setTimeout(() => ctx.sendSelf(TIMEOUT), opts.txNotFoundTimeout);\n          ctx.sendSelf(POLL);\n        });\n        return function (_x19) {\n          return _ref7.apply(this, arguments);\n        };\n      }(),\n      [utilActor.SUBSCRIBE]: (ctx, letter) => {\n        ctx.subscribe(letter.from);\n        ctx.send(letter.from, utilActor.UPDATED, ctx.all());\n      },\n      [utilActor.UNSUBSCRIBE]: (ctx, letter) => {\n        ctx.unsubscribe(letter.from);\n      },\n      [utilActor.SNAPSHOT]: function () {\n        var _ref8 = _asyncToGenerator(function* (ctx, letter) {\n          letter.reply(ctx.all());\n        });\n        return function (_x20, _x21) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      [TIMEOUT]: function () {\n        var _ref9 = _asyncToGenerator(function* (ctx) {\n          // If status is still unknown, send a timeout error\n          if (Object.keys(ctx.all()).length === 0) {\n            ctx.fatalError(new Error(`TX status polling failed: no transaction was found within timeout interval (${opts.txNotFoundTimeout}ms)`));\n          }\n        });\n        return function (_x22) {\n          return _ref9.apply(this, arguments);\n        };\n      }(),\n      [POLL]: function () {\n        var _ref10 = _asyncToGenerator(function* (ctx) {\n          // Helper to queue another poll\n          var poll = () => setTimeout(() => ctx.sendSelf(POLL), opts.pollRate);\n          var tx;\n          var prevTx = ctx.all();\n          try {\n            tx = yield fetchTxStatus(ctx.self());\n          } catch (e) {\n            var isHttpNotFound = e instanceof transportHttp.HTTPRequestError && e.statusCode === 404;\n            var isGrpcNotFound = e.code === grpcWeb.grpc.Code.NotFound;\n\n            // If TX is not found, suppress error and poll again\n            if (isHttpNotFound || isGrpcNotFound) {\n              return poll();\n            }\n            return ctx.fatalError(e);\n          }\n          if (!isSealed(tx)) poll();\n          if (isDiff(prevTx, tx)) ctx.broadcast(utilActor.UPDATED, tx);\n          ctx.merge(tx);\n        });\n        return function (_x23) {\n          return _ref10.apply(this, arguments);\n        };\n      }()\n    };\n  };\n  var scoped = transactionId => {\n    if (typeof transactionId === \"object\") transactionId = transactionId.transactionId;\n    if (transactionId == null) throw new Error(\"transactionId required\");\n    return transactionId;\n  };\n  var spawnTransaction = function () {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return transactionId => {\n      return utilActor.spawn(makeHandlers$1(opts), scoped(transactionId));\n    };\n  };\n\n  /**\n   * @callback SubscriptionCallback\n   * @param {TransactionStatus} txStatus\n   * @returns {void}\n   */\n\n  /**\n   * Provides methods for interacting with a transaction\n   *\n   * @param {string} transactionId - The transaction ID\n   * @param {object} [opts] - Optional parameters\n   * @param {number} [opts.pollRate=1000] - Polling rate in milliseconds\n   * @param {number} [opts.txNotFoundTimeout=12500] - Timeout in milliseconds for ignoring transaction not found errors (do not modify unless you know what you are doing)\n   * @returns {{\n   *    snapshot: function(): Promise<TransactionStatus>,\n   *    subscribe: function(SubscriptionCallback): function(): void,\n   *    onceFinalized: function(): Promise<TransactionStatus>,\n   *    onceExecuted: function(): Promise<TransactionStatus>,\n   *    onceSealed: function(): Promise<TransactionStatus>\n   * }}\n   * @throws {Error} If transactionId is not a 64 byte hash string\n   */\n  function transaction(transactionId) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      txNotFoundTimeout: 12500,\n      pollRate: 1000\n    };\n    // Validate transactionId as 64 byte hash\n    if (!TXID_REGEXP.test(scoped(transactionId))) throw new Error(\"Invalid transactionId\");\n    function snapshot() {\n      return utilActor.snapshoter(transactionId, spawnTransaction(opts));\n    }\n    function subscribe(callback) {\n      return utilActor.subscriber(scoped(transactionId), spawnTransaction(opts), callback);\n    }\n    function once(predicate) {\n      return function innerOnce() {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var suppress = opts.suppress || false;\n        return new Promise((resolve, reject) => {\n          var unsub = subscribe((txStatus, error) => {\n            if ((error || txStatus.statusCode) && !suppress) {\n              if (error != null) {\n                reject(error);\n                unsub();\n              } else if (txStatus.statusCode === 1) {\n                var transactionError = TransactionError.fromErrorMessage(txStatus.errorMessage);\n                reject(transactionError);\n                unsub();\n              }\n              return;\n            }\n            if (predicate(txStatus)) {\n              resolve(txStatus);\n              unsub();\n            }\n          });\n        });\n      };\n    }\n    return {\n      snapshot,\n      subscribe,\n      onceFinalized: once(isFinalized),\n      onceExecuted: once(isExecuted),\n      onceSealed: once(isSealed)\n    };\n  }\n  transaction.isUnknown = isUnknown;\n  transaction.isPending = isPending;\n  transaction.isFinalized = isFinalized;\n  transaction.isExecuted = isExecuted;\n  transaction.isSealed = isSealed;\n  transaction.isExpired = isExpired;\n  var RATE = 10000;\n  var UPDATED$1 = \"UPDATED\";\n  var TICK = \"TICK\";\n  var HIGH_WATER_MARK = \"hwm\";\n  var scheduleTick = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator(function* (ctx) {\n      return setTimeout(() => ctx.sendSelf(TICK), yield sdk.config().get(\"fcl.eventPollRate\", RATE));\n    });\n    return function scheduleTick(_x24) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var HANDLERS$1 = {\n    [TICK]: function () {\n      var _ref12 = _asyncToGenerator(function* (ctx) {\n        if (!ctx.hasSubs()) return;\n        var hwm = ctx.get(HIGH_WATER_MARK);\n        if (hwm == null) {\n          ctx.put(HIGH_WATER_MARK, yield sdk.block());\n          ctx.put(TICK, yield scheduleTick(ctx));\n        } else {\n          var next = yield sdk.block();\n          ctx.put(HIGH_WATER_MARK, next);\n          if (hwm.height < next.height) {\n            var data = yield sdk.send([sdk.getEventsAtBlockHeightRange(ctx.self(), hwm.height + 1, next.height)]).then(sdk.decode);\n            for (var d of data) ctx.broadcast(UPDATED$1, d.data);\n          }\n          ctx.put(TICK, yield scheduleTick(ctx));\n        }\n      });\n      return function (_x25) {\n        return _ref12.apply(this, arguments);\n      };\n    }(),\n    [utilActor.SUBSCRIBE]: function () {\n      var _ref13 = _asyncToGenerator(function* (ctx, letter) {\n        if (!ctx.hasSubs()) {\n          ctx.put(TICK, yield scheduleTick(ctx));\n        }\n        ctx.subscribe(letter.from);\n      });\n      return function (_x26, _x27) {\n        return _ref13.apply(this, arguments);\n      };\n    }(),\n    [utilActor.UNSUBSCRIBE]: (ctx, letter) => {\n      ctx.unsubscribe(letter.from);\n      if (!ctx.hasSubs()) {\n        clearTimeout(ctx.get(TICK));\n        ctx.delete(TICK);\n        ctx.delete(HIGH_WATER_MARK);\n      }\n    }\n  };\n  var spawnEvents = key => utilActor.spawn(HANDLERS$1, key);\n\n  /**\n   * @typedef {import(\"@onflow/typedefs\").Event} Event\n   */\n\n  /**\n   * @typedef {object} SubscribeObject\n   * @property {Function} subscribe - The subscribe function.\n   */\n\n  /**\n   * @callback SubscriptionCallback\n   * @returns {Event}\n   */\n\n  /**\n   * @description - Subscribe to events\n   * @param {string} key - A valid event name\n   * @returns {SubscribeObject}\n   *\n   * @example\n   * import * as fcl from \"@onflow/fcl\"\n   * fcl.events(eventName).subscribe((event) => console.log(event))\n   */\n  function events$1(key) {\n    return {\n      /**\n       * @description - Subscribe to events\n       * @param {Function} callback - The callback function\n       * @returns {SubscriptionCallback}\n       */\n      subscribe: callback => utilActor.subscriber(key, spawnEvents, callback)\n    };\n  }\n\n  /**\n   * @description - Subscribe to events\n   * @param filterOrType - The filter or type of events to subscribe to\n   *\n   * @example\n   * import * as fcl from \"@onflow/fcl\"\n   * const unsubscribe = fcl.events(eventName).subscribe((event) => console.log(event))\n   * unsubscribe()\n   */\n  function events(filterOrType) {\n    var filter;\n    if (typeof filterOrType === \"string\") {\n      filter = {\n        eventTypes: [filterOrType]\n      };\n    } else {\n      filter = filterOrType || {};\n    }\n    return {\n      subscribe: callback => {\n        var streamPromise = sdk.send([sdk.subscribeEvents(filter)]).then(sdk.decode);\n\n        // If the subscribe fails, fallback to legacy events\n        var legacySubscriptionPromise = streamPromise.then(() => null).catch(e => {\n          // Only fallback to legacy events if the error is specifcally about the unsupported feature\n          if (e.message !== \"SDK Send Error: subscribeEvents is not supported by this transport.\") {\n            throw e;\n          }\n          if (typeof filterOrType !== \"string\") {\n            throw new Error(\"GRPC fcl.events fallback only supports string (type) filters\");\n          }\n          return events$1(filterOrType).subscribe(callback);\n        });\n\n        // Subscribe to the stream using the callback\n        function onEvents(data) {\n          data.forEach(event => callback(event, null));\n        }\n        function onError(error) {\n          callback(null, error);\n        }\n\n        // If using legacy events, don't subscribe to the stream\n        legacySubscriptionPromise.then(legacySubscription => {\n          if (!legacySubscription) {\n            streamPromise.then(stream => stream.on(\"events\", onEvents).on(\"error\", onError)).catch(error => {\n              streamPromise.then(stream => stream.close());\n              onError(error);\n            });\n          }\n        });\n\n        // Unsubscribe will call terminate the legacy subscription or close the stream\n        return () => {\n          legacySubscriptionPromise.then(legacySubscription => {\n            if (legacySubscription) {\n              legacySubscription();\n            } else {\n              streamPromise.then(stream => stream.close());\n            }\n          });\n        };\n      }\n    };\n  }\n  var stub = () => {\n    throw new Error(`Platform specific Core Strategies are not initialized`);\n  };\n  var stubCoreStrategies = {\n    [CORE_STRATEGIES[\"EXT/RPC\"]]: stub,\n    [CORE_STRATEGIES[\"HTTP/POST\"]]: stub,\n    [CORE_STRATEGIES[\"IFRAME/RPC\"]]: stub,\n    [CORE_STRATEGIES[\"POP/RPC\"]]: stub,\n    [CORE_STRATEGIES[\"TAB/RPC\"]]: stub,\n    [CORE_STRATEGIES[\"EXT/RPC\"]]: stub\n  };\n  var supportedPlugins = [\"ServicePlugin\"];\n  var supportedServicePlugins = [\"discovery-service\"];\n  var validateDiscoveryPlugin = servicePlugin => {\n    var _servicePlugin$servic = servicePlugin.services,\n      services = _servicePlugin$servic === void 0 ? [] : _servicePlugin$servic,\n      serviceStrategy = servicePlugin.serviceStrategy;\n    utilInvariant.invariant(Array.isArray(services), \"Services must be an array\");\n    for (var ds of services) {\n      utilInvariant.invariant(isRequired(ds.f_type) && ds.f_type === \"Service\", \"Service is required\");\n      utilInvariant.invariant(isRequired(ds.type) && ds.type === \"authn\", `Service must be type authn. Received ${ds.type}`);\n      utilInvariant.invariant(ds.method in CORE_STRATEGIES || serviceStrategy.method === ds.method, `Service method ${ds.method} is not supported`);\n    }\n    utilInvariant.invariant(isRequired(serviceStrategy), \"Service strategy is required\");\n    utilInvariant.invariant(isRequired(serviceStrategy.method) && isString(serviceStrategy.method), \"Service strategy method is required\");\n    utilInvariant.invariant(isRequired(serviceStrategy.exec) && isFunc(serviceStrategy.exec), \"Service strategy exec function is required\");\n    return {\n      discoveryServices: services,\n      serviceStrategy\n    };\n  };\n  var ServiceRegistry = _ref => {\n    var coreStrategies = _ref.coreStrategies;\n    var services = new Set();\n    var strategies = new Map(Object.entries(coreStrategies));\n    var add = servicePlugin => {\n      utilInvariant.invariant(supportedServicePlugins.includes(servicePlugin.type), `Service Plugin type ${servicePlugin.type} is not supported`);\n      if (servicePlugin.type === \"discovery-service\") {\n        var _validateDiscoveryPlu = validateDiscoveryPlugin(servicePlugin),\n          discoveryServices = _validateDiscoveryPlu.discoveryServices,\n          serviceStrategy = _validateDiscoveryPlu.serviceStrategy;\n        setServices(discoveryServices);\n        if (!strategies.has(serviceStrategy.method)) {\n          strategies.set(serviceStrategy.method, serviceStrategy.exec);\n        } else {\n          logger.log({\n            title: `Add Service Plugin`,\n            message: `Service strategy for ${serviceStrategy.method} already exists`,\n            level: logger.LEVELS.warn\n          });\n        }\n      }\n    };\n    var setServices = discoveryServices => services = new Set([...discoveryServices]);\n    var getServices = () => [...services];\n    var getStrategy = method => strategies.get(method);\n    var getStrategies = () => [...strategies.keys()];\n    return Object.freeze({\n      add,\n      getServices,\n      getStrategy,\n      getStrategies\n    });\n  };\n  var validatePlugins = plugins => {\n    var pluginsArray;\n    utilInvariant.invariant(!!plugins, \"No plugins supplied\");\n    if (!Array.isArray(plugins)) {\n      pluginsArray = [plugins];\n    } else {\n      pluginsArray = [...plugins];\n    }\n    for (var p of pluginsArray) {\n      utilInvariant.invariant(isRequired(p.name), \"Plugin name is required\");\n      utilInvariant.invariant(isRequired(p.f_type), \"Plugin f_type is required\");\n      utilInvariant.invariant(supportedPlugins.includes(p.f_type), `Plugin type ${p.f_type} is not supported`);\n    }\n    return pluginsArray;\n  };\n  var PluginRegistry = () => {\n    var pluginsMap = new Map();\n    var getPlugins = () => pluginsMap;\n    var add = plugins => {\n      var pluginsArray = validatePlugins(plugins);\n      for (var p of pluginsArray) {\n        pluginsMap.set(p.name, p);\n        if (p.f_type === \"ServicePlugin\") {\n          serviceRegistry.add(p);\n        }\n      }\n    };\n    return Object.freeze({\n      add,\n      getPlugins\n    });\n  };\n  var serviceRegistry;\n  var getIsServiceRegistryInitialized = () => typeof serviceRegistry !== \"undefined\";\n  var initServiceRegistry = _ref2 => {\n    var coreStrategies = _ref2.coreStrategies;\n    if (getIsServiceRegistryInitialized()) {\n      return serviceRegistry;\n    }\n    var _serviceRegistry = ServiceRegistry({\n      coreStrategies\n    });\n    serviceRegistry = _serviceRegistry;\n    return _serviceRegistry;\n  };\n  var getServiceRegistry = () => {\n    if (!getIsServiceRegistryInitialized()) {\n      console.warn(\"Registry is not initalized, it will be initialized with stub core strategies\");\n      return initServiceRegistry({\n        coreStrategies: stubCoreStrategies\n      });\n    }\n    return serviceRegistry;\n  };\n  var pluginRegistry = PluginRegistry();\n  var makeDiscoveryServices = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      var extensionServices = window?.fcl_extensions || [];\n      return [...extensionServices, ...getServiceRegistry().getServices()];\n    });\n    return function makeDiscoveryServices() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  function getDiscoveryService(_x28) {\n    return _getDiscoveryService.apply(this, arguments);\n  }\n  function _getDiscoveryService() {\n    _getDiscoveryService = _asyncToGenerator(function* (service) {\n      var discoveryAuthnInclude = yield config.config.get(\"discovery.authn.include\", []);\n      var discoveryFeaturesSuggested = yield config.config.get(\"discovery.features.suggested\", []);\n      var discoveryWalletMethod = yield config.config.first([\"discovery.wallet.method\", \"discovery.wallet.method.default\"]);\n      var method = service?.method ? service.method : discoveryWalletMethod;\n      var endpoint = service?.endpoint ?? (yield config.config.first([\"discovery.wallet\", \"challenge.handshake\"]));\n      utilInvariant.invariant(endpoint, `\n    If no service is passed to \"authenticate,\" then \"discovery.wallet\" must be defined in fcl config.\n    See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n    `);\n      return {\n        ...service,\n        type: \"authn\",\n        endpoint,\n        method,\n        discoveryAuthnInclude,\n        discoveryFeaturesSuggested\n      };\n    });\n    return _getDiscoveryService.apply(this, arguments);\n  }\n  function getServices(_x29) {\n    return _getServices.apply(this, arguments);\n  }\n  function _getServices() {\n    _getServices = _asyncToGenerator(function* (_ref) {\n      var types = _ref.types;\n      var endpoint = yield config.config.get(\"discovery.authn.endpoint\");\n      utilInvariant.invariant(Boolean(endpoint), `\"discovery.authn.endpoint\" in config must be defined.`);\n      var include = yield config.config.get(\"discovery.authn.include\", []);\n      var url = new URL(endpoint);\n      return fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: types,\n          fclVersion: VERSION,\n          include,\n          features: {\n            suggested: yield config.config.get(\"discovery.features.suggested\", [])\n          },\n          clientServices: yield makeDiscoveryServices(),\n          supportedStrategies: getServiceRegistry().getStrategies(),\n          userAgent: window?.navigator?.userAgent,\n          network: yield getChainId()\n        })\n      }).then(d => d.json());\n    });\n    return _getServices.apply(this, arguments);\n  }\n  var SERVICE_ACTOR_KEYS = {\n    AUTHN: \"authn\",\n    RESULTS: \"results\",\n    SNAPSHOT: \"SNAPSHOT\",\n    UPDATED: \"UPDATED\",\n    UPDATE_RESULTS: \"UPDATE_RESULTS\"\n  };\n  var warn = (fact, msg) => {\n    if (fact) {\n      console.warn(`\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `, \"font-weight:bold;font-family:monospace;\");\n    }\n  };\n  var fetchServicesFromDiscovery = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator(function* () {\n      try {\n        var services = yield getServices({\n          types: [SERVICE_ACTOR_KEYS.AUTHN]\n        });\n        utilActor.send(SERVICE_ACTOR_KEYS.AUTHN, SERVICE_ACTOR_KEYS.UPDATE_RESULTS, {\n          results: services\n        });\n      } catch (error) {\n        logger.log({\n          title: `${error.name} Error fetching Discovery API services.`,\n          message: error.message,\n          level: logger.LEVELS.error\n        });\n      }\n    });\n    return function fetchServicesFromDiscovery() {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n  var HANDLERS = {\n    [utilActor.INIT]: function () {\n      var _ref16 = _asyncToGenerator(function* (ctx) {\n        warn(typeof window === \"undefined\", '\"fcl.discovery\" is only available in the browser.');\n        // If you call this before the window is loaded extensions will not be set yet\n        if (document.readyState === \"complete\") {\n          fetchServicesFromDiscovery();\n        } else {\n          window.addEventListener(\"load\", () => {\n            fetchServicesFromDiscovery();\n          });\n        }\n      });\n      return function (_x30) {\n        return _ref16.apply(this, arguments);\n      };\n    }(),\n    [SERVICE_ACTOR_KEYS.UPDATE_RESULTS]: (ctx, _letter, data) => {\n      ctx.merge(data);\n      ctx.broadcast(SERVICE_ACTOR_KEYS.UPDATED, {\n        ...ctx.all()\n      });\n    },\n    [utilActor.SUBSCRIBE]: (ctx, letter) => {\n      ctx.subscribe(letter.from);\n      ctx.send(letter.from, SERVICE_ACTOR_KEYS.UPDATED, {\n        ...ctx.all()\n      });\n    },\n    [utilActor.UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n    [SERVICE_ACTOR_KEYS.SNAPSHOT]: function () {\n      var _ref17 = _asyncToGenerator(function* (ctx, letter) {\n        return letter.reply({\n          ...ctx.all()\n        });\n      });\n      return function (_x31, _x32) {\n        return _ref17.apply(this, arguments);\n      };\n    }()\n  };\n  var spawnProviders = () => utilActor.spawn(HANDLERS, SERVICE_ACTOR_KEYS.AUTHN);\n\n  /**\n   * @typedef {import(\"@onflow/typedefs\").Service} Service\n   */\n\n  /**\n   * @callback SubscriptionCallback\n   * @returns {Service[]}\n   */\n\n  /**\n   * @description\n   * Discovery methods for interacting with Authn.\n   *\n   * @typedef {object} Authn\n   * @property {Function} subscribe - Subscribe to Discovery authn services\n   * @property {Function} snapshot - Get the current Discovery authn services spanshot\n   * @property {Function} update - Trigger an update of authn services\n   */\n  var authn = {\n    /**\n     * @description - Subscribe to Discovery authn services\n     * @param {Function} cb\n     * @returns {SubscriptionCallback}\n     */\n    subscribe: cb => utilActor.subscriber(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders, cb),\n    /**\n     * @description - Get the current Discovery authn services spanshot\n     * @returns {Service[]}\n     */\n    snapshot: () => utilActor.snapshoter(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders),\n    /**\n     * @description - Trigger an update of authn services\n     * @returns {void}\n     */\n    update: () => {\n      // Only fetch services if the window is loaded\n      // Otherwise, this will be called by the INIT handler\n      if (document.readyState === \"complete\") {\n        fetchServicesFromDiscovery();\n      }\n    }\n  };\n  var discovery = {\n    authn\n  };\n  function genHash(utf8String) {\n    var sha = new sha3.SHA3(256);\n    sha.update(rlp.Buffer.from(utf8String, \"utf8\"));\n    return sha.digest(\"hex\");\n  }\n\n  /**\n   * @description Generates Interaction Template ID for a given Interaction Template\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template\n   * @returns {Promise<string>} - Interaction Template ID\n   */\n  function generateTemplateId$2(_x33) {\n    return _generateTemplateId$.apply(this, arguments);\n  }\n  function _generateTemplateId$() {\n    _generateTemplateId$ = _asyncToGenerator(function* (_ref) {\n      var template = _ref.template;\n      sdk.invariant(template != undefined, \"generateTemplateId({ template }) -- template must be defined\");\n      sdk.invariant(typeof template === \"object\", \"generateTemplateId({ template }) -- template must be an object\");\n      sdk.invariant(template.f_type === \"InteractionTemplate\", \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\");\n      sdk.invariant(template.f_version === \"1.0.0\", \"generateTemplateId({ template }) -- template object must be an version 1.0.0\");\n      var templateData = template.data;\n      var messages = yield Promise.all(Object.keys(templateData.messages).map(/*#__PURE__*/function () {\n        var _ref40 = _asyncToGenerator(function* (messageKey) {\n          return [genHash(messageKey), yield Promise.all(Object.keys(templateData.messages?.[messageKey]?.i18n).map(/*#__PURE__*/function () {\n            var _ref41 = _asyncToGenerator(function* (i18nkeylanguage) {\n              return [genHash(i18nkeylanguage), genHash(templateData.messages?.[messageKey]?.i18n?.[i18nkeylanguage])];\n            });\n            return function (_x70) {\n              return _ref41.apply(this, arguments);\n            };\n          }()))];\n        });\n        return function (_x69) {\n          return _ref40.apply(this, arguments);\n        };\n      }()));\n      var dependencies = yield Promise.all(Object.keys(templateData?.dependencies).map(/*#__PURE__*/function () {\n        var _ref42 = _asyncToGenerator(function* (dependencyAddressPlaceholder) {\n          return [genHash(dependencyAddressPlaceholder), yield Promise.all(Object.keys(templateData?.dependencies?.[dependencyAddressPlaceholder]).map(/*#__PURE__*/function () {\n            var _ref43 = _asyncToGenerator(function* (dependencyContract) {\n              return [genHash(dependencyContract), yield Promise.all(Object.keys(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]).map(/*#__PURE__*/function () {\n                var _ref44 = _asyncToGenerator(function* (dependencyContractNetwork) {\n                  return [genHash(dependencyContractNetwork), [genHash(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]?.[dependencyContractNetwork].address), genHash(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]?.[dependencyContractNetwork].contract), genHash(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]?.[dependencyContractNetwork].fq_address), genHash(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]?.[dependencyContractNetwork].pin), genHash(String(templateData?.dependencies?.[dependencyAddressPlaceholder]?.[dependencyContract]?.[dependencyContractNetwork].pin_block_height))]];\n                });\n                return function (_x73) {\n                  return _ref44.apply(this, arguments);\n                };\n              }()))];\n            });\n            return function (_x72) {\n              return _ref43.apply(this, arguments);\n            };\n          }()))];\n        });\n        return function (_x71) {\n          return _ref42.apply(this, arguments);\n        };\n      }()));\n      var _arguments = yield Promise.all(Object.keys(templateData?.[\"arguments\"]).map(/*#__PURE__*/function () {\n        var _ref45 = _asyncToGenerator(function* (argumentLabel) {\n          return [genHash(argumentLabel), [genHash(String(templateData?.[\"arguments\"]?.[argumentLabel].index)), genHash(templateData?.[\"arguments\"]?.[argumentLabel].type), genHash(templateData?.[\"arguments\"]?.[argumentLabel].balance || \"\"), yield Promise.all(Object.keys(templateData?.[\"arguments\"]?.[argumentLabel].messages).map(/*#__PURE__*/function () {\n            var _ref46 = _asyncToGenerator(function* (argumentMessageKey) {\n              return [genHash(argumentMessageKey), yield Promise.all(Object.keys(templateData?.[\"arguments\"]?.[argumentLabel].messages?.[argumentMessageKey].i18n).map(/*#__PURE__*/function () {\n                var _ref47 = _asyncToGenerator(function* (i18nkeylanguage) {\n                  return [genHash(i18nkeylanguage), genHash(templateData?.[\"arguments\"]?.[argumentLabel].messages?.[argumentMessageKey].i18n?.[i18nkeylanguage])];\n                });\n                return function (_x76) {\n                  return _ref47.apply(this, arguments);\n                };\n              }()))];\n            });\n            return function (_x75) {\n              return _ref46.apply(this, arguments);\n            };\n          }()))]];\n        });\n        return function (_x74) {\n          return _ref45.apply(this, arguments);\n        };\n      }()));\n      var encodedHex = rlp.encode([genHash(\"InteractionTemplate\"), genHash(\"1.0.0\"), genHash(templateData?.type), genHash(templateData?.interface), messages, genHash(templateData?.cadence), dependencies, _arguments]).toString(\"hex\");\n      return genHash(encodedHex);\n    });\n    return _generateTemplateId$.apply(this, arguments);\n  }\n  function generateImport(_ref) {\n    var contractName = _ref.contractName,\n      address = _ref.address;\n    return {\n      contractName,\n      address,\n      contract: \"\"\n    };\n  }\n  function findImports(cadence) {\n    var imports = [];\n    var importsReg = /import ((\\w|,| )+)* from 0x\\w+/g;\n    var fileImports = cadence.match(importsReg) || [];\n    for (var fileImport of fileImports) {\n      var importLineReg = /import ((\\w+|, |)*) from (0x\\w+)/g;\n      var importLine = importLineReg.exec(fileImport);\n      var contractsReg = /((?:\\w+)+),?/g;\n      var contracts = importLine[1].match(contractsReg) || [];\n      for (var contract of contracts) {\n        imports.push(generateImport({\n          address: importLine[3],\n          contractName: contract.replace(/,/g, \"\")\n        }));\n      }\n    }\n    return imports;\n  }\n\n  /**\n   * @description Produces a dependency pin for a contract at current state of chain\n   * @param {object} params\n   * @param {string} params.address - The address of the account containing the contract\n   * @param {string} params.contractName - The name of the contract\n   * @param {object} opts - Options to pass to the interaction\n   * @returns {Promise<string>} - The dependency pin\n   */\n  function generateDependencyPin110(_x34) {\n    return _generateDependencyPin.apply(this, arguments);\n  }\n  function _generateDependencyPin() {\n    _generateDependencyPin = _asyncToGenerator(function* (_ref) {\n      var address = _ref.address,\n        contractName = _ref.contractName;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      sdk.invariant(address != undefined, \"generateDependencyPin({ address }) -- address must be defined\");\n      sdk.invariant(contractName != undefined, \"generateDependencyPin({ contractName }) -- contractName must be defined\");\n      sdk.invariant(typeof address === \"string\", \"generateDependencyPin({ address }) -- address must be a string\");\n      sdk.invariant(typeof contractName === \"string\", \"generateDependencyPin({ contractName }) -- contractName must be a string\");\n      var horizon = [generateImport({\n        contractName,\n        address\n      })];\n      for (var horizonImport of horizon) {\n        var account = yield sdk.send([sdk.getAccount(yield sdk.config().get(horizonImport.address, horizonImport.address))], opts).then(sdk.decode);\n        horizonImport.contract = account.contracts?.[horizonImport.contractName];\n        if (!horizonImport.contract) {\n          console.error(\"Did not find expected contract\", horizonImport, account);\n          throw new Error(\"Did not find expected contract\");\n        }\n        var contractImports = findImports(horizonImport.contract);\n        horizon.push(...contractImports);\n      }\n      var contractPinSelfHashesPromises = horizon.map(iport => genHash(iport.contract));\n      // genHash returns a promise, so we need to await the results of all the promises\n      var contractPinSelfHashes = yield Promise.all(contractPinSelfHashesPromises);\n      var contractPinHashes = contractPinSelfHashes.join(\"\");\n      return genHash(contractPinHashes);\n    });\n    return _generateDependencyPin.apply(this, arguments);\n  }\n  function generateContractNetworks(_x35, _x36) {\n    return _generateContractNetworks.apply(this, arguments);\n  }\n  function _generateContractNetworks() {\n    _generateContractNetworks = _asyncToGenerator(function* (contractName, networks) {\n      var values = [];\n      for (var net of networks) {\n        var networkHashes = [genHash(net.network)];\n        var address = net.address,\n          dependency_pin_block_height = net.dependency_pin_block_height;\n        if (net.dependency_pin) {\n          var hash = yield generateDependencyPin110({\n            address,\n            contractName,\n            blockHeight: dependency_pin_block_height\n          });\n          networkHashes.push(genHash(hash));\n        }\n        values.push(networkHashes);\n      }\n      return values;\n    });\n    return _generateContractNetworks.apply(this, arguments);\n  }\n  function generateContractDependencies(_x37) {\n    return _generateContractDependencies.apply(this, arguments);\n  }\n  /**\n   * @description Generates Interaction Template ID for a given Interaction Template\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template\n   * @returns {Promise<string>} - Interaction Template ID\n   */\n  function _generateContractDependencies() {\n    _generateContractDependencies = _asyncToGenerator(function* (dependencies) {\n      var values = [];\n      for (var i = 0; i < dependencies.length; i++) {\n        var dependency = dependencies[i];\n        var contracts = [];\n        for (var j = 0; j < dependency?.contracts.length; j++) {\n          var c = dependency?.contracts[j];\n          var contractName = c?.contract;\n          contracts.push(genHash(contractName));\n          var contractHashes = yield generateContractNetworks(contractName, c?.networks);\n          contracts.push(contractHashes);\n        }\n        values.push(contracts);\n      }\n      return values;\n    });\n    return _generateContractDependencies.apply(this, arguments);\n  }\n  function generateTemplateId$1(_x38) {\n    return _generateTemplateId$2.apply(this, arguments);\n  }\n  /**\n   * @description Generates Interaction Template ID for a given Interaction Template\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template\n   * @returns {Promise<string>} - Interaction Template ID\n   */\n  function _generateTemplateId$2() {\n    _generateTemplateId$2 = _asyncToGenerator(function* (_ref) {\n      var template = _ref.template;\n      utilInvariant.invariant(template, \"generateTemplateId({ template }) -- template must be defined\");\n      utilInvariant.invariant(typeof template === \"object\", \"generateTemplateId({ template }) -- template must be an object\");\n      utilInvariant.invariant(template.f_type === \"InteractionTemplate\", \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\");\n      utilInvariant.invariant(template.f_version === \"1.1.0\", \"generateTemplateId({ template }) -- template object must be an version 1.1.0\");\n      var templateData = template.data;\n      var messages = yield Promise.all(templateData.messages.map(/*#__PURE__*/function () {\n        var _ref48 = _asyncToGenerator(function* (templateMessage) {\n          return [genHash(templateMessage.key), yield Promise.all(templateMessage.i18n.map(/*#__PURE__*/function () {\n            var _ref49 = _asyncToGenerator(function* (templateMessagei18n) {\n              return [genHash(templateMessagei18n.tag), genHash(templateMessagei18n.translation)];\n            });\n            return function (_x78) {\n              return _ref49.apply(this, arguments);\n            };\n          }()))];\n        });\n        return function (_x77) {\n          return _ref48.apply(this, arguments);\n        };\n      }()));\n      var params = yield Promise.all(templateData?.[\"parameters\"].sort((a, b) => a.index - b.index).map(/*#__PURE__*/function () {\n        var _ref50 = _asyncToGenerator(function* (arg) {\n          return [genHash(arg.label), [genHash(String(arg.index)), genHash(arg.type), yield Promise.all(arg.messages.map(/*#__PURE__*/function () {\n            var _ref51 = _asyncToGenerator(function* (argumentMessage) {\n              return [genHash(argumentMessage.key), yield Promise.all(argumentMessage.i18n.map(/*#__PURE__*/function () {\n                var _ref52 = _asyncToGenerator(function* (argumentMessagei18n) {\n                  return [genHash(argumentMessagei18n.tag), genHash(argumentMessagei18n.translation)];\n                });\n                return function (_x81) {\n                  return _ref52.apply(this, arguments);\n                };\n              }()))];\n            });\n            return function (_x80) {\n              return _ref51.apply(this, arguments);\n            };\n          }()))]];\n        });\n        return function (_x79) {\n          return _ref50.apply(this, arguments);\n        };\n      }()));\n      var dependencies = [yield generateContractDependencies(templateData?.dependencies)];\n      var encodedHex = rlp.encode([genHash(template?.f_type), genHash(template?.f_version), genHash(templateData?.type), genHash(templateData?.interface), messages, genHash(templateData?.cadence?.body), [dependencies], params]).toString(\"hex\");\n      return genHash(encodedHex);\n    });\n    return _generateTemplateId$2.apply(this, arguments);\n  }\n  function generateTemplateId(_x39) {\n    return _generateTemplateId.apply(this, arguments);\n  }\n  /**\n   * @description Verifies the given Interaction Template Id has been correctly generated\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template\n   * @returns {Promise<boolean>} - true or false, Interaction Template ID\n   */\n  function _generateTemplateId() {\n    _generateTemplateId = _asyncToGenerator(function* (_ref) {\n      var template = _ref.template;\n      utilInvariant.invariant(template, \"generateTemplateId({ template }) -- template must be defined\");\n      utilInvariant.invariant(typeof template === \"object\", \"generateTemplateId({ template }) -- template must be an object\");\n      utilInvariant.invariant(template.f_type === \"InteractionTemplate\", \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\");\n      switch (template.f_version) {\n        case \"1.1.0\":\n          return yield generateTemplateId$1({\n            template\n          });\n        case \"1.0.0\":\n          return yield generateTemplateId$2({\n            template\n          });\n        default:\n          throw new Error(\"generateTemplateId Error: Unsupported template version\");\n      }\n    });\n    return _generateTemplateId.apply(this, arguments);\n  }\n  function verifyGeneratedTemplateId(_x40) {\n    return _verifyGeneratedTemplateId.apply(this, arguments);\n  }\n  /**\n   * @description Returns whether a set of auditors have audited a given Interaction Template\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template\n   * @param {Array<string>} params.auditors - Array of auditors\n   * @param {object} opts\n   * @param {string} opts.flowInteractionAuditContract - Flow Interaction Template Audit contract address\n   * @returns {Promise<object>} - Object of auditor addresses and audit status\n   */\n  function _verifyGeneratedTemplateId() {\n    _verifyGeneratedTemplateId = _asyncToGenerator(function* (_ref2) {\n      var template = _ref2.template;\n      return template.id === (yield generateTemplateId({\n        template\n      }));\n    });\n    return _verifyGeneratedTemplateId.apply(this, arguments);\n  }\n  function getInteractionTemplateAudits(_x41) {\n    return _getInteractionTemplateAudits.apply(this, arguments);\n  }\n  /**\n   * @description Produces a dependency pin for a contract at current state of chain\n   * @param {object} params\n   * @param {string} params.address - The address of the account containing the contract\n   * @param {string} params.contractName - The name of the contract\n   * @param {object} opts - Options to pass to the interaction\n   * @returns {Promise<string>} - The dependency pin\n   */\n  function _getInteractionTemplateAudits() {\n    _getInteractionTemplateAudits = _asyncToGenerator(function* (_ref) {\n      var template = _ref.template,\n        auditors = _ref.auditors;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      sdk.invariant(template != undefined, \"getInteractionTemplateAudits({ template }) -- template must be defined\");\n      sdk.invariant(template.f_type === \"InteractionTemplate\", \"getInteractionTemplateAudits({ template }) -- template must be an InteractionTemplate\");\n\n      // Recompute ID to be sure it matches\n      var recomputedTemplateID = yield generateTemplateId({\n        template\n      });\n      if (recomputedTemplateID !== template.id) {\n        logger.log({\n          title: \"getInteractionTemplateAudits Debug Error\",\n          message: `Could not recompute and match template ID\n                computed: ${recomputedTemplateID}\n                template: ${template.id}\n            `,\n          level: logger.LEVELS.debug\n        });\n        throw new Error(\"getInteractionTemplateAudits Error: Could not recompute and match template ID\");\n      }\n      switch (template.f_version) {\n        case \"1.1.0\":\n        case \"1.0.0\":\n          var _auditors = auditors || (yield sdk.config().get(\"flow.auditors\"));\n          sdk.invariant(_auditors, \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not set\");\n          sdk.invariant(Array.isArray(_auditors), \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not an array\");\n          var FlowInteractionAuditContract = opts.flowInteractionAuditContract;\n          if (!FlowInteractionAuditContract) {\n            var fclNetwork = yield getChainId(opts);\n            sdk.invariant(fclNetwork === \"mainnet\" || fclNetwork === \"testnet\", \"getInteractionTemplateAudits Error: Unable to determine address for FlowInteractionTemplateAudit contract. Set configuration for 'fcl.network' to 'mainnet' or 'testnet'\");\n            if (fclNetwork === \"mainnet\") {\n              FlowInteractionAuditContract = \"0xfd100e39d50a13e6\";\n            } else {\n              FlowInteractionAuditContract = \"0xf78bfc12d0a786dc\";\n            }\n          }\n          var audits = yield query({\n            cadence: `\n        import FlowInteractionTemplateAudit from ${FlowInteractionAuditContract}\n        access(all) fun main(templateId: String, auditors: [Address]): {Address:Bool} {\n          return FlowInteractionTemplateAudit.getHasTemplateBeenAuditedByAuditors(templateId: templateId, auditors: auditors)\n        }\n        `,\n            args: (arg, t) => [arg(recomputedTemplateID, t.String), arg(_auditors, t.Array(t.Address))]\n          });\n          return audits;\n        default:\n          throw new Error(\"getInteractionTemplateAudits Error: Unsupported template version\");\n      }\n    });\n    return _getInteractionTemplateAudits.apply(this, arguments);\n  }\n  function generateDependencyPin100(_x42) {\n    return _generateDependencyPin2.apply(this, arguments);\n  }\n  /**\n   * @description Produces a dependency pin for a contract at current state of chain\n   * @param {object} params\n   * @param {string} params.version - The version of the interaction template\n   * @param {string} params.address - The address of the account containing the contract\n   * @param {string} params.contractName - The name of the contract\n   * @param {object} opts - Options to pass to the interaction\n   * @returns {Promise<string>} - The dependency pin\n   */\n  function _generateDependencyPin2() {\n    _generateDependencyPin2 = _asyncToGenerator(function* (_ref) {\n      var address = _ref.address,\n        contractName = _ref.contractName;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      sdk.invariant(address != undefined, \"generateDependencyPin({ address }) -- address must be defined\");\n      sdk.invariant(contractName != undefined, \"generateDependencyPin({ contractName }) -- contractName must be defined\");\n      sdk.invariant(typeof address === \"string\", \"generateDependencyPin({ address }) -- address must be a string\");\n      sdk.invariant(typeof contractName === \"string\", \"generateDependencyPin({ contractName }) -- contractName must be a string\");\n      var horizon = [generateImport({\n        contractName,\n        address\n      })];\n      for (var horizonImport of horizon) {\n        var account = yield sdk.send([sdk.getAccount(yield sdk.config().get(horizonImport.address, horizonImport.address))], opts).then(sdk.decode);\n        horizonImport.contract = account.contracts?.[horizonImport.contractName];\n        if (!horizonImport.contract) {\n          console.error(\"Did not find expected contract\", horizonImport, account);\n          throw new Error(\"Did not find expected contract\");\n        }\n        var contractImports = findImports(horizonImport.contract);\n        horizon.push(...contractImports);\n      }\n      var contractHashes = horizon.map(iport => genHash(iport.contract));\n      var contractHashesJoined = contractHashes.join(\"\");\n      return genHash(contractHashesJoined);\n    });\n    return _generateDependencyPin2.apply(this, arguments);\n  }\n  function generateDependencyPin(_x43) {\n    return _generateDependencyPin3.apply(this, arguments);\n  }\n  /**\n   * @description Produces a dependency pin for a contract at latest sealed block\n   * @param {object} params\n   * @param {string} params.version - The version of the interaction template\n   * @param {string} params.address - The address of the account containing the contract\n   * @param {string} params.contractName - The name of the contract\n   * @param {object} opts - Options to pass to the interaction\n   * @returns {Promise<string>} - The dependency pin\n   */\n  function _generateDependencyPin3() {\n    _generateDependencyPin3 = _asyncToGenerator(function* (_ref) {\n      var version = _ref.version,\n        address = _ref.address,\n        contractName = _ref.contractName;\n      sdk.invariant(address != undefined, \"generateDependencyPin({ address }) -- address must be defined\");\n      sdk.invariant(contractName != undefined, \"generateDependencyPin({ contractName }) -- contractName must be defined\");\n      sdk.invariant(typeof address === \"string\", \"generateDependencyPin({ address }) -- address must be a string\");\n      sdk.invariant(typeof contractName === \"string\", \"generateDependencyPin({ contractName }) -- contractName must be a string\");\n      switch (version) {\n        case \"1.1.0\":\n          return yield generateDependencyPin110({\n            address,\n            contractName\n          });\n        case \"1.0.0\":\n          return yield generateDependencyPin100({\n            address,\n            contractName\n          });\n        default:\n          throw new Error(\"deriveCadenceByNetwork Error: Unsupported template version\");\n      }\n    });\n    return _generateDependencyPin3.apply(this, arguments);\n  }\n  function generateDependencyPinAtLatestSealedBlock(_x44) {\n    return _generateDependencyPinAtLatestSealedBlock.apply(this, arguments);\n  }\n  /**\n   * @description Checks if an Interaction Template's pins match those generated at a block height\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template to check pins for\n   * @param {number} params.blockHeight - Block height to check pins at\n   * @param {string} params.network - Network to check pins on\n   * @param {object} opts\n   * @returns {Promise<boolean>} - Whether or not the pins match\n   */\n  function _generateDependencyPinAtLatestSealedBlock() {\n    _generateDependencyPinAtLatestSealedBlock = _asyncToGenerator(function* (_ref2) {\n      var version = _ref2.version,\n        address = _ref2.address,\n        contractName = _ref2.contractName;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var latestSealedBlock = yield sdk.block({\n        sealed: true\n      }, opts);\n      var latestSealedBlockHeight = latestSealedBlock?.height;\n      return generateDependencyPin({\n        version,\n        address,\n        contractName,\n        blockHeight: latestSealedBlockHeight\n      });\n    });\n    return _generateDependencyPinAtLatestSealedBlock.apply(this, arguments);\n  }\n  function verifyDependencyPinsSame(_x45) {\n    return _verifyDependencyPinsSame.apply(this, arguments);\n  }\n  /**\n   * @description Checks if an Interaction Template's pins match those generated at the latest block height\n   *\n   * @param {object} params\n   * @param {object} params.template - Interaction Template to check pins for\n   * @param {string} params.network - Network to check pins on\n   * @param {object} opts\n   * @returns {Promise<boolean>} - Whether or not the pins match\n   */\n  function _verifyDependencyPinsSame() {\n    _verifyDependencyPinsSame = _asyncToGenerator(function* (_ref) {\n      var template = _ref.template,\n        blockHeight = _ref.blockHeight,\n        network = _ref.network;\n      sdk.invariant(template != undefined, \"generateDependencyPin({ template }) -- template must be defined\");\n      sdk.invariant(typeof template === \"object\", \"generateDependencyPin({ template }) -- template must be an object\");\n      sdk.invariant(template.f_type === \"InteractionTemplate\", \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\");\n      sdk.invariant(network != undefined, \"generateDependencyPin({ network }) network must be defined\");\n      sdk.invariant(blockHeight != undefined, \"generateDependencyPin({ blockHeight }) blockHeight must be defined\");\n      sdk.invariant(typeof blockHeight === \"number\", \"generateDependencyPin({ blockHeight }) blockHeight must be a number\");\n      switch (template.f_version) {\n        case \"1.0.0\":\n          var templateDependenciesPlaceholderKeys = Object.keys(template.data.dependencies);\n          for (var templateDependencyPlaceholderKey of templateDependenciesPlaceholderKeys) {\n            var templateDependencyPlaceholder = template.data.dependencies[templateDependencyPlaceholderKey];\n            var templateDependencyPlaceholderContractNames = Object.keys(templateDependencyPlaceholder);\n            for (var templateDependencyPlaceholderContractName of templateDependencyPlaceholderContractNames) {\n              var templateDependencyPlaceholderContractNetworks = template.data.dependencies[templateDependencyPlaceholderKey][templateDependencyPlaceholderContractName];\n              var templateDependency = templateDependencyPlaceholderContractNetworks[network];\n              if (typeof templateDependency === \"undefined\") continue;\n              var pin = yield generateDependencyPin({\n                address: templateDependency.address,\n                contractName: templateDependency.contract,\n                blockHeight\n              });\n              if (pin !== templateDependency.pin) {\n                logger.log({\n                  title: \"verifyDependencyPinsSame Debug Error\",\n                  message: `Could not recompute and match dependency pin.\n                                address: ${templateDependency.address} | contract: ${templateDependency.contract}\n                                computed: ${pin}\n                                template: ${templateDependency.pin}\n                            `,\n                  level: logger.LEVELS.debug\n                });\n                return false;\n              }\n            }\n          }\n          return true;\n        case \"1.1.0\":\n          var isVerified = false;\n          // iterate over each dependency\n          for (var i = 0; i < template.data?.dependencies.length; i++) {\n            var dependency = template.data?.dependencies[i];\n            // iterate over each contract in dependency\n            for (var j = 0; j < dependency?.contracts.length; j++) {\n              var contract = dependency?.contracts[j];\n              // iterate over each network in contract\n              for (var k = 0; k < contract?.networks.length; k++) {\n                var net = contract?.networks[k];\n                // if network matches, generate pin and compare\n                if (net.network === network) {\n                  var _pin = yield generateDependencyPin({\n                    version: template.f_version,\n                    address: net.address,\n                    contractName: contract.contract,\n                    blockHeight\n                  });\n                  if (_pin !== net.dependency_pin.pin) {\n                    logger.log({\n                      title: \"verifyDependencyPinsSame Debug Error\",\n                      message: `Could not recompute and match dependency pin.\n                                    address: ${net.address} | contract: ${contract.contract}\n                                    computed: ${_pin}\n                                    template: ${net.pin}\n                                `,\n                      level: logger.LEVELS.debug\n                    });\n                    return false;\n                  } else {\n                    isVerified = true;\n                  }\n                }\n              }\n            }\n          }\n          return isVerified;\n        default:\n          throw new Error(\"verifyDependencyPinsSame Error: Unsupported template version\");\n      }\n    });\n    return _verifyDependencyPinsSame.apply(this, arguments);\n  }\n  function verifyDependencyPinsSameAtLatestSealedBlock(_x46) {\n    return _verifyDependencyPinsSameAtLatestSealedBlock.apply(this, arguments);\n  }\n  /**\n   * @description Get Interaction Template argument message\n   *\n   * @param {object} params\n   * @param {string} params.localization [localization=\"en-US\"] - Localization code\n   * @param {string} params.messageKey - Message key\n   * @param {object} params.template - Interaction Template\n   * @returns {string} - Message\n   */\n  function _verifyDependencyPinsSameAtLatestSealedBlock() {\n    _verifyDependencyPinsSameAtLatestSealedBlock = _asyncToGenerator(function* (_ref2) {\n      var template = _ref2.template,\n        network = _ref2.network;\n      var latestSealedBlock = yield sdk.block({\n        sealed: true\n      });\n      var latestSealedBlockHeight = latestSealedBlock?.height;\n      return verifyDependencyPinsSame({\n        template,\n        network,\n        blockHeight: latestSealedBlockHeight\n      });\n    });\n    return _verifyDependencyPinsSameAtLatestSealedBlock.apply(this, arguments);\n  }\n  function getTemplateMessage(_ref) {\n    var _ref$localization = _ref.localization,\n      localization = _ref$localization === void 0 ? \"en-US\" : _ref$localization,\n      messageKey = _ref.messageKey,\n      template = _ref.template;\n    sdk.invariant(messageKey, \"getTemplateMessage({ messageKey }) -- messageKey must be defined\");\n    sdk.invariant(typeof messageKey === \"string\", \"getTemplateMessage({ messageKey }) -- messageKey must be a string\");\n    sdk.invariant(localization, \"getTemplateMessage({ localization }) -- localization must be defined\");\n    sdk.invariant(typeof localization === \"string\", \"getTemplateMessage({ localization }) -- localization must be a string\");\n    sdk.invariant(template != undefined, \"getTemplateMessage({ template }) -- template must be defined\");\n    sdk.invariant(typeof template === \"object\", \"getTemplateMessage({ template }) -- template must be an object\");\n    sdk.invariant(typeof template.f_type === \"InteractionTemplate\", \"getTemplateMessage({ template }) -- template object must be an InteractionTemplate\");\n    switch (template.f_version) {\n      case \"1.1.0\":\n        var msg = template?.data?.messages?.find(a => a.key === messageKey);\n        if (!msg) return undefined;\n        var lzn = msg?.i18n?.find(a => a.tag === localization);\n        if (!lzn) return undefined;\n        return lzn.translation;\n      case \"1.0.0\":\n        return template?.data?.messages?.[messageKey]?.i18n?.[localization];\n      default:\n        throw new Error(\"getTemplateArgumentMessage Error: Unsupported template version\");\n    }\n  }\n\n  /**\n   * @description Gets Interaction Template argument message by message key, argument label, and localization\n   *\n   * @param {object} opts\n   * @param {string} opts.localization [localization=\"en-US\"] - Localization to get message for\n   * @param {string} opts.argumentLabel - Argument label to get message for\n   * @param {string} opts.messageKey - Message key to get message for\n   * @param {object} opts.template - Interaction Template to get message from\n   * @returns {string} - Message\n   */\n  function getTemplateArgumentMessage(_ref) {\n    var _ref$localization2 = _ref.localization,\n      localization = _ref$localization2 === void 0 ? \"en-US\" : _ref$localization2,\n      argumentLabel = _ref.argumentLabel,\n      messageKey = _ref.messageKey,\n      template = _ref.template;\n    sdk.invariant(messageKey, \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be defined\");\n    sdk.invariant(typeof messageKey === \"string\", \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be a string\");\n    sdk.invariant(argumentLabel, \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be defined\");\n    sdk.invariant(typeof messageKey === \"string\", \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be a string\");\n    sdk.invariant(localization, \"getTemplateArgumentMessage({ localization }) -- localization must be defined\");\n    sdk.invariant(typeof localization === \"string\", \"getTemplateArgumentMessage({ localization }) -- localization must be a string\");\n    sdk.invariant(template != undefined, \"getTemplateArgumentMessage({ template }) -- template must be defined\");\n    sdk.invariant(typeof template === \"object\", \"getTemplateArgumentMessage({ template }) -- template must be an object\");\n    sdk.invariant(typeof template.f_type === \"InteractionTemplate\", \"getTemplateArgumentMessage({ template }) -- template object must be an InteractionTemplate\");\n    switch (template.f_version) {\n      case \"1.1.0\":\n        var param = template?.data?.parameters?.find(a => a.label === argumentLabel);\n        if (!param) return undefined;\n        var message = param?.messages?.find(a => a.key === messageKey);\n        if (!message) return undefined;\n        var lzn = message?.i18n?.find(a => a.tag === localization);\n        if (!lzn) return undefined;\n        return lzn.translation;\n      case \"1.0.0\":\n        return template?.data?.arguments?.[argumentLabel]?.messages?.[messageKey]?.i18n?.[localization];\n      default:\n        throw new Error(\"getTemplateArgumentMessage Error: Unsupported template version\");\n    }\n  }\n  var index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    deriveCadenceByNetwork: deriveCadenceByNetwork,\n    generateDependencyPin: generateDependencyPin,\n    generateDependencyPinAtLatestSealedBlock: generateDependencyPinAtLatestSealedBlock,\n    generateTemplateId: generateTemplateId,\n    getInteractionTemplateAudits: getInteractionTemplateAudits,\n    getTemplateArgumentMessage: getTemplateArgumentMessage,\n    getTemplateMessage: getTemplateMessage,\n    verifyDependencyPinsSame: verifyDependencyPinsSame,\n    verifyDependencyPinsSameAtLatestSealedBlock: verifyDependencyPinsSameAtLatestSealedBlock,\n    verifyGeneratedTemplateId: verifyGeneratedTemplateId\n  });\n  function fetchServices(_x47, _x48) {\n    return _fetchServices.apply(this, arguments);\n  }\n  function _fetchServices() {\n    _fetchServices = _asyncToGenerator(function* (servicesURL, code) {\n      if (servicesURL == null || code == null) return [];\n      var url = new URL(servicesURL);\n      url.searchParams.append(\"code\", code);\n      var resp = yield fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(d => d.json());\n      if (Array.isArray(resp)) return resp;\n\n      // Backwards compatibility for First-Gen Wallet Providers\n      var services = [];\n\n      // Convert authorizations into authz services\n      if (Array.isArray(resp.authorizations)) {\n        for (var service of resp.authorizations) {\n          services.push({\n            type: \"authz\",\n            keyId: resp.keyId,\n            ...service\n          });\n        }\n      }\n\n      // Convert Provider info into an authn service\n      if (resp.provider != null) {\n        services.push({\n          type: \"authn\",\n          id: \"wallet-provider#authn\",\n          ...resp.provider\n        });\n      }\n      return services;\n    });\n    return _fetchServices.apply(this, arguments);\n  }\n  function mergeServices() {\n    var sx1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var sx2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    // TODO: Make this smarter\n    return [...sx1, ...sx2];\n  }\n\n  // {\n  //   \"f_type\": \"Service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"authn\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"endpoint\": \"https://rawr\",\n  //   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n  //   \"identity\": {\n  //     \"address\": \"0x____\"\n  //   },\n  //   \"provider\": {\n  //     \"address\": \"0x____\",\n  //     \"name\": \"Best Wallet\",\n  //     \"description\": \"The Best Wallet\"\n  //     \"icon\": \"https://\",\n  //   }\n  // }\n  function normalizeAuthn(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: utilAddress.withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon\n        }\n      };\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"authz\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"endpoint\": \"https://rawr\",\n  //   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n  //   \"identity\": {\n  //      \"address\": \"0x______\",\n  //      \"keyId\": 0,\n  //   },\n  //   \"data\": {}, // included in body of authz request\n  //   \"params\": {}, // included as query params on endpoint url\n  // }\n  function normalizeAuthz(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: utilAddress.withPrefix(service.addr),\n          keyId: service.keyId\n        },\n        params: service.params,\n        data: service.data\n      };\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"pre-authz\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"endpoint\": \"https://rawr\",\n  //   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n  //   \"identity\": {\n  //      \"address\": \"0x______\",\n  //      \"keyId\": 0,\n  //   },\n  //   \"data\": {}, // included in body of pre-authz request\n  //   \"params\": {}, // included as query params on endpoint url\n  // }\n  function normalizePreAuthz(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: utilAddress.withPrefix(service.addr),\n          keyId: service.keyId\n        },\n        params: service.params,\n        data: service.data\n      };\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //    \"f_type\": \"Service\",\n  //    \"f_vsn\": \"1.0.0\",\n  //    \"type\": \"frame\",\n  //    \"endpoint\": \"https://rawr\",\n  //    \"data\": {},   // Sent to frame when ready\n  //    \"params\": {}, // include in query params on frame\n  // }\n  function normalizeFrame(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {}\n      };\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //    \"f_type\": \"Service\",\n  //    \"f_vsn\": \"1.0.0\",\n  //    \"type\": \"back-channel-rpc\",\n  //    \"endpoint\": \"https://rawr\",\n  //    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n  //    \"data\": {},           // included in body of rpc\n  //    \"params\": {},         // included as query params on endpoint url\n  // }\n  function normalizeBackChannelRpc(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {}\n      };\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"Service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"open-id\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"method: \"data\",\n  //   \"data\": {\n  //      \"profile\": {\n  //        \"name\": \"Bob\",\n  //        \"family_name\": \"Builder\",\n  //        \"given_name\": \"Robert\",\n  //        \"middle_name\": \"the\",\n  //        \"nickname\": \"Bob the Builder\",\n  //        \"perferred_username\": \"bob\",\n  //        \"profile\": \"https://www.bobthebuilder.com/\",\n  //        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n  //        \"gender\": \"...\",\n  //        \"birthday\": \"2001-01-18\",\n  //        \"zoneinfo\": \"America/Vancouver\",\n  //        \"locale\": \"en-us\",\n  //        \"updated_at\": \"1614970797388\"\n  //      },\n  //      \"email\": {\n  //        \"email\": \"bob@bob.bob\",\n  //        \"email_verified\": true\n  //      },\n  //      \"address\": {\n  //        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n  //      },\n  //      \"phone\": {\n  //        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n  //        \"phone_number_verified\": true\n  //      },\n  //      \"social\": {\n  //        \"twitter\": \"@_qvvg\",\n  //        \"twitter_verified\": true\n  //      },\n  //   }\n  // }\n  function normalizeOpenId(service) {\n    if (service == null) return null;\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"Service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"user-signature\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"endpoint\": \"https://rawr\",\n  //   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n  //   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n  //   \"data\": {}, // included in body of user-signature request\n  //   \"params\": {}, // included as query params on endpoint url\n  // }\n  function normalizeUserSignature(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      throw new Error(\"Invalid user-signature service\");\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //    \"f_type\": \"Service\",\n  //    \"f_vsn\": \"1.0.0\",\n  //    type: \"local-view\",\n  //    method: \"VIEW/IFRAME\",\n  //    endpoint: \"https://woot.org/authz/local\",\n  //    data: {},\n  //    params: {},\n  // }\n  function normalizeLocalView(resp) {\n    if (resp == null) return null;\n    if (resp.method == null) {\n      resp = {\n        ...resp,\n        type: \"local-view\",\n        method: \"VIEW/IFRAME\"\n      };\n    }\n    if (!resp[\"f_vsn\"]) {\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {}\n      };\n    }\n    switch (resp[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return resp;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"Service\",                    // Its a service!\n  //   \"f_vsn\": \"1.0.0\",                       // Follows the v1.0.0 spec for the service\n  //   \"type\": \"account-proof\",                // the type of service it is\n  //   \"method\": \"DATA\",                       // Its data!\n  //   \"uid\": \"awesome-wallet#account-proof\",  // A unique identifier for the service\n  //   \"data\": {\n  //     \"f_type\": \"account-proof\",\n  //     \"f_vsn\": \"1.0.0\",\n  //     \"nonce\": \"0A1BC2FF\",                  // Nonce signed by the current account-proof (minimum 32 bytes in total, i.e 64 hex characters)\n  //     \"address\": \"0xUSER\",                  // The user's address (8 bytes, i.e 16 hex characters)\n  //     \"signature\": CompositeSignature,      // address (sans-prefix), keyId, signature (hex)\n  // }\n\n  function normalizeAccountProof(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      throw new Error(`FCL Normalizer Error: Invalid account-proof service`);\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n\n  // {\n  //   \"f_type\": \"Service\",\n  //   \"f_vsn\": \"1.0.0\",\n  //   \"type\": \"authn-refresh\",\n  //   \"uid\": \"uniqueDedupeKey\",\n  //   \"endpoint\": \"https://rawr\",\n  //   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n  //   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n  //   \"data\": {}, // included in body of request\n  //   \"params\": {}, // included as query params on endpoint url\n  // }\n  function normalizeAuthnRefresh(service) {\n    if (service == null) return null;\n    if (!service[\"f_vsn\"]) {\n      throw new Error(\"Invalid authn-refresh service\");\n    }\n    switch (service[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return service;\n      default:\n        return null;\n    }\n  }\n  function normalizeServices(services, data) {\n    return services.map(service => normalizeService(service, data)).filter(Boolean);\n  }\n  var serviceNormalizers = {\n    \"back-channel-rpc\": normalizeBackChannelRpc,\n    \"pre-authz\": normalizePreAuthz,\n    authz: normalizeAuthz,\n    authn: normalizeAuthn,\n    frame: normalizeFrame,\n    \"open-id\": normalizeOpenId,\n    \"user-signature\": normalizeUserSignature,\n    \"local-view\": normalizeLocalView,\n    \"account-proof\": normalizeAccountProof,\n    \"authn-refresh\": normalizeAuthnRefresh\n  };\n  function normalizeService(service, data) {\n    try {\n      var normalized = serviceNormalizers[service.type](service, data);\n      return normalized;\n    } catch (error) {\n      console.error(`Unrecognized FCL Service Type [${service.type}]`, service, error);\n      return service;\n    }\n  }\n  function serviceOfType() {\n    var services = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var type = arguments.length > 1 ? arguments[1] : undefined;\n    // Find the greatest version of the service type\n    return services.reduce((mostRecent, service) => service.type === type ? !mostRecent || semver__namespace.compare(service.f_vsn, mostRecent.f_vsn) > 0 ? service : mostRecent : mostRecent, null);\n  }\n  function deriveCompositeId(authn) {\n    return rlp__namespace.encode([authn.provider?.address || authn.provider?.name || \"UNSPECIFIED\", authn.id]).toString(\"hex\");\n  }\n  function normalizeData(data) {\n    data.addr = data.addr ? utilAddress.withPrefix(data.addr) : null;\n    data.paddr = data.paddr ? utilAddress.withPrefix(data.paddr) : null;\n    return data;\n  }\n  function buildUser(_x49) {\n    return _buildUser.apply(this, arguments);\n  }\n  function _buildUser() {\n    _buildUser = _asyncToGenerator(function* (data) {\n      data = normalizeData(data);\n      var services = normalizeServices(mergeServices(data.services || [], yield fetchServices(data.hks, data.code)));\n      var authn = serviceOfType(services, \"authn\");\n      return {\n        ...USER_PRAGMA,\n        addr: utilAddress.withPrefix(data.addr),\n        cid: deriveCompositeId(authn),\n        loggedIn: true,\n        services: services,\n        expiresAt: data.expires\n      };\n    });\n    return _buildUser.apply(this, arguments);\n  }\n  var FCL_WC_SERVICE_METHOD = \"WC/RPC\";\n  var isServerSide = typeof window === \"undefined\";\n\n  // Utility to notify the user if the Walletconnect service plugin has not been loaded\n  function checkWalletConnectEnabled() {\n    if (isServerSide) return;\n    var serviceRegistry = getServiceRegistry();\n    var strategies = serviceRegistry.getStrategies();\n    if (!strategies.includes(FCL_WC_SERVICE_METHOD)) {\n      logger__namespace.log({\n        title: \"FCL WalletConnect Service Plugin\",\n        level: logger__namespace.LEVELS.error,\n        message: \"All dApps are expected to register for a WalletConnect projectId & add this to their FCL configuration.  If you do not do so, users will be unable to use certain wallets to interact with your dApp.  See https://developers.flow.com/tools/clients/fcl-js/configure-fcl for more information.\"\n      });\n    }\n  }\n  var AbortController = globalThis.AbortController || require(_dependencyMap[23], \"abort-controller\");\n  var execStrategy = /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator(function* (_ref) {\n      var service = _ref.service,\n        body = _ref.body,\n        config = _ref.config,\n        abortSignal = _ref.abortSignal,\n        customRpc = _ref.customRpc,\n        user = _ref.user,\n        opts = _ref.opts;\n      var strategy = getServiceRegistry().getStrategy(service.method);\n      return strategy({\n        service,\n        body,\n        config,\n        abortSignal,\n        customRpc,\n        opts,\n        user\n      });\n    });\n    return function execStrategy(_x50) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n  function execService(_x51) {\n    return _execService.apply(this, arguments);\n  } // {\n  //    \"f_type\": \"CompositeSignature\",\n  //    \"f_vsn\": \"1.0.0\",\n  //    \"addr\": \"_____\",         // sans-prefix\n  //    \"signature\": \"adfe1234\", // hex\n  //    \"keyId\": 3,\n  // }\n  function _execService() {\n    _execService = _asyncToGenerator(function* (_ref2) {\n      var service = _ref2.service,\n        _ref2$msg = _ref2.msg,\n        msg = _ref2$msg === void 0 ? {} : _ref2$msg,\n        _ref2$config = _ref2.config,\n        config = _ref2$config === void 0 ? {} : _ref2$config,\n        _ref2$opts = _ref2.opts,\n        opts = _ref2$opts === void 0 ? {} : _ref2$opts,\n        platform = _ref2.platform,\n        _ref2$abortSignal = _ref2.abortSignal,\n        abortSignal = _ref2$abortSignal === void 0 ? new AbortController().signal : _ref2$abortSignal,\n        _execStrategy = _ref2.execStrategy,\n        user = _ref2.user;\n      // Notify the developer if WalletConnect is not enabled\n      checkWalletConnectEnabled();\n      msg.data = service.data;\n      var execConfig = {\n        services: yield configLens(/^service\\./),\n        app: yield configLens(/^app\\.detail\\./),\n        client: {\n          ...config.client,\n          platform,\n          fclVersion: VERSION,\n          fclLibrary: \"https://github.com/onflow/fcl-js\",\n          hostname: window?.location?.hostname ?? null,\n          network: yield getChainId(opts)\n        }\n      };\n      try {\n        var res = yield (_execStrategy || execStrategy)({\n          service,\n          body: msg,\n          config: execConfig,\n          opts,\n          user,\n          abortSignal\n        });\n        if (res.status === \"REDIRECT\") {\n          utilInvariant.invariant(service.type === res.data.type, \"Cannot shift recursive service type in execService\");\n          return yield execService({\n            service: res.data,\n            msg,\n            config: execConfig,\n            opts,\n            abortSignal,\n            platform,\n            user\n          });\n        } else {\n          return res;\n        }\n      } catch (error) {\n        logger.log({\n          title: `Error on execService ${service?.type}`,\n          message: error,\n          level: logger.LEVELS.error\n        });\n        throw error;\n      }\n    });\n    return _execService.apply(this, arguments);\n  }\n  function normalizeCompositeSignature(resp) {\n    if (resp == null) return null;\n    if (!resp[\"f_vsn\"]) {\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: utilAddress.sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId\n      };\n    }\n    switch (resp[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return resp;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * @typedef {import(\"@onflow/typedefs\").CurrentUser} CurrentUser\n   * @typedef {import(\"@onflow/typedefs\").CompositeSignature} CompositeSignature\n   */\n\n  var isFn = d => typeof d === \"function\";\n  var NAME = \"CURRENT_USER\";\n  var UPDATED = \"CURRENT_USER/UPDATED\";\n  var SNAPSHOT = \"SNAPSHOT\";\n  var SET_CURRENT_USER = \"SET_CURRENT_USER\";\n  var DEL_CURRENT_USER = \"DEL_CURRENT_USER\";\n  var DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`;\n  var getStoredUser = /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator(function* (storage) {\n      var fallback = JSON.parse(DATA);\n      var stored = yield storage.get(NAME);\n      if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n        storage.removeItem(NAME);\n        return fallback;\n      }\n      return stored || fallback;\n    });\n    return function getStoredUser(_x52) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n  var makeHandlers = cfg => {\n    // Wrapper for backwards compatibility\n    var getStorageProvider = /*#__PURE__*/function () {\n      var _ref20 = _asyncToGenerator(function* () {\n        if (cfg.getStorageProvider) return yield cfg.getStorageProvider();\n        return yield config.config.first([\"fcl.storage\", \"fcl.storage.default\"]);\n      });\n      return function getStorageProvider() {\n        return _ref20.apply(this, arguments);\n      };\n    }();\n    return {\n      [utilActor.INIT]: function () {\n        var _ref21 = _asyncToGenerator(function* (ctx) {\n          if (typeof window === \"undefined\") {\n            console.warn(`\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `, \"font-weight:bold;font-family:monospace;\");\n          }\n          ctx.merge(JSON.parse(DATA));\n          var storage = yield getStorageProvider();\n          if (storage.can) {\n            var user = yield getStoredUser(storage);\n            if (notExpired(user)) ctx.merge(user);\n          }\n        });\n        return function (_x53) {\n          return _ref21.apply(this, arguments);\n        };\n      }(),\n      [utilActor.SUBSCRIBE]: (ctx, letter) => {\n        ctx.subscribe(letter.from);\n        ctx.send(letter.from, UPDATED, {\n          ...ctx.all()\n        });\n      },\n      [utilActor.UNSUBSCRIBE]: (ctx, letter) => {\n        ctx.unsubscribe(letter.from);\n      },\n      [SNAPSHOT]: function () {\n        var _ref22 = _asyncToGenerator(function* (ctx, letter) {\n          letter.reply({\n            ...ctx.all()\n          });\n        });\n        return function (_x54, _x55) {\n          return _ref22.apply(this, arguments);\n        };\n      }(),\n      [SET_CURRENT_USER]: function () {\n        var _ref23 = _asyncToGenerator(function* (ctx, letter, data) {\n          ctx.merge(data);\n          var storage = yield getStorageProvider();\n          if (storage.can) storage.put(NAME, ctx.all());\n          ctx.broadcast(UPDATED, {\n            ...ctx.all()\n          });\n        });\n        return function (_x56, _x57, _x58) {\n          return _ref23.apply(this, arguments);\n        };\n      }(),\n      [DEL_CURRENT_USER]: function () {\n        var _ref24 = _asyncToGenerator(function* (ctx, letter) {\n          ctx.merge(JSON.parse(DATA));\n          var storage = yield getStorageProvider();\n          if (storage.can) storage.put(NAME, ctx.all());\n          ctx.broadcast(UPDATED, {\n            ...ctx.all()\n          });\n        });\n        return function (_x59, _x60) {\n          return _ref24.apply(this, arguments);\n        };\n      }()\n    };\n  };\n  var spawnCurrentUser = cfg => utilActor.spawn(makeHandlers(cfg), NAME);\n  function notExpired(user) {\n    return user.expiresAt == null || user.expiresAt === 0 || user.expiresAt > Date.now();\n  }\n  function getAccountProofData() {\n    return _getAccountProofData.apply(this, arguments);\n  }\n  function _getAccountProofData() {\n    _getAccountProofData = _asyncToGenerator(function* () {\n      var accountProofDataResolver = yield config.config.get(\"fcl.accountProof.resolver\");\n      if (accountProofDataResolver == null) return;\n      if (!isFn(accountProofDataResolver)) {\n        logger.log({\n          title: \"Account Proof Data Resolver must be a function\",\n          message: `Check fcl.accountProof.resolver configuration.\n                Expected: fcl.accountProof.resolver: async () => { ... }\n                Received: fcl.accountProof.resolver: ${typeof accountProofDataResolver}\n                `,\n          level: logger.LEVELS.warn\n        });\n        return;\n      }\n      var accountProofData = yield accountProofDataResolver();\n      if (accountProofData == null) return;\n      utilInvariant.invariant(typeof accountProofData.appIdentifier === \"string\", \"appIdentifier must be a string\");\n      utilInvariant.invariant(/^[0-9a-f]+$/i.test(accountProofData.nonce), \"Nonce must be a hex string\");\n      return accountProofData;\n    });\n    return _getAccountProofData.apply(this, arguments);\n  }\n  var makeConfig = /*#__PURE__*/function () {\n    var _ref25 = _asyncToGenerator(function* (_ref) {\n      var discoveryAuthnInclude = _ref.discoveryAuthnInclude,\n        discoveryFeaturesSuggested = _ref.discoveryFeaturesSuggested;\n      return {\n        client: {\n          discoveryAuthnInclude,\n          discoveryFeaturesSuggested,\n          clientServices: yield makeDiscoveryServices(),\n          supportedStrategies: getServiceRegistry().getStrategies()\n        }\n      };\n    });\n    return function makeConfig(_x61) {\n      return _ref25.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * @description - Factory function to get the authenticate method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  var getAuthenticate = config =>\n  /*#__PURE__*/\n  /**\n   * @description - Authenticate a user\n   * @param {object} [opts] - Options\n   * @param {object} [opts.service] - Optional service to use for authentication\n   * @param {boolean} [opts.redir] - Optional redirect flag\n   * @returns\n   */\n  _asyncToGenerator(function* () {\n    var _ref27 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      service = _ref27.service,\n      _ref27$redir = _ref27.redir,\n      redir = _ref27$redir === void 0 ? false : _ref27$redir;\n    if (service && !service?.provider?.is_installed && service?.provider?.requires_install) {\n      window.location.href = service?.provider?.install_link;\n      return;\n    }\n    return new Promise(/*#__PURE__*/function () {\n      var _ref28 = _asyncToGenerator(function* (resolve, reject) {\n        spawnCurrentUser(config);\n        var opts = {\n          redir\n        };\n        var user = yield getSnapshot(config)();\n        var discoveryService = yield getDiscoveryService(service);\n        var refreshService = serviceOfType(user.services, \"authn-refresh\");\n        var accountProofData;\n        if (user.loggedIn) {\n          if (refreshService) {\n            try {\n              var response = yield execService({\n                service: refreshService,\n                msg: accountProofData,\n                opts,\n                platform: config.platform,\n                user\n              });\n              utilActor.send(NAME, SET_CURRENT_USER, yield buildUser(response));\n            } catch (error) {\n              logger.log({\n                title: `${error.name} Could not refresh wallet authentication.`,\n                message: error.message,\n                level: logger.LEVELS.error\n              });\n            } finally {\n              return resolve(yield getSnapshot(config)());\n            }\n          } else {\n            return resolve(user);\n          }\n        }\n        try {\n          accountProofData = yield getAccountProofData();\n        } catch (error) {\n          logger.log({\n            title: `${error.name} On Authentication: Could not resolve account proof data.`,\n            message: error.message,\n            level: logger.LEVELS.error\n          });\n          return reject(error);\n        }\n        try {\n          var _response = yield execService({\n            service: discoveryService,\n            msg: accountProofData,\n            config: yield makeConfig(discoveryService),\n            opts,\n            platform: config.platform,\n            execStrategy: config.discovery?.execStrategy,\n            user\n          });\n          utilActor.send(NAME, SET_CURRENT_USER, yield buildUser(_response));\n        } catch (error) {\n          logger.log({\n            title: `${error} On Authentication`,\n            message: error,\n            level: logger.LEVELS.error\n          });\n        } finally {\n          resolve(yield getSnapshot(config)());\n        }\n      });\n      return function (_x62, _x63) {\n        return _ref28.apply(this, arguments);\n      };\n    }());\n  });\n\n  /**\n   * @description - Factory function to get the unauthenticate method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  function getUnauthenticate(config) {\n    /**\n     * @description - Unauthenticate a user\n     */\n    return function unauthenticate() {\n      spawnCurrentUser(config);\n      utilActor.send(NAME, DEL_CURRENT_USER);\n    };\n  }\n  var normalizePreAuthzResponse = authz => ({\n    f_type: \"PreAuthzResponse\",\n    f_vsn: \"1.0.0\",\n    proposer: (authz || {}).proposer,\n    payer: (authz || {}).payer || [],\n    authorization: (authz || {}).authorization || []\n  });\n\n  /**\n   * @description - Factory function to get the resolvePreAuthz method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  var getResolvePreAuthz = config => (authz, _ref2) => {\n    var user = _ref2.user;\n    var resp = normalizePreAuthzResponse(authz);\n    var axs = [];\n    if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer]);\n    for (var az of resp.payer || []) axs.push([\"PAYER\", az]);\n    for (var _az of resp.authorization || []) axs.push([\"AUTHORIZER\", _az]);\n    var result = axs.map(_ref3 => {\n      var _ref29 = _slicedToArray(_ref3, 2),\n        role = _ref29[0],\n        az = _ref29[1];\n      return {\n        tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n        addr: az.identity.address,\n        keyId: az.identity.keyId,\n        signingFunction(signable) {\n          return execService({\n            service: az,\n            msg: signable,\n            platform: config.platform,\n            user\n          });\n        },\n        role: {\n          proposer: role === \"PROPOSER\",\n          payer: role === \"PAYER\",\n          authorizer: role === \"AUTHORIZER\"\n        }\n      };\n    });\n    return result;\n  };\n\n  /**\n   * @description - Factory function to get the authorization method\n   *\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  var getAuthorization = config => (\n  /*#__PURE__*/\n  /**\n   * @description - Produces the needed authorization details for the current user to submit transactions to Flow\n   * It defines a signing function that connects to a user's wallet provider to produce signatures to submit transactions.\n   *\n   * @param {object} account - Account object\n   * @returns {Promise<object>} - Account object with signing function\n   * */\n  function () {\n    var _ref30 = _asyncToGenerator(function* (account) {\n      spawnCurrentUser(config);\n      return {\n        ...account,\n        tempId: \"CURRENT_USER\",\n        resolve(account, preSignable) {\n          return _asyncToGenerator(function* () {\n            var user = yield getAuthenticate(config)({\n              redir: true\n            });\n            var authz = serviceOfType(user.services, \"authz\");\n            var preAuthz = serviceOfType(user.services, \"pre-authz\");\n            if (preAuthz) return getResolvePreAuthz(config)(yield execService({\n              service: preAuthz,\n              msg: preSignable,\n              platform: config.platform,\n              user\n            }), {\n              user\n            });\n            if (authz) {\n              return {\n                ...account,\n                tempId: \"CURRENT_USER\",\n                resolve: null,\n                addr: utilAddress.sansPrefix(authz.identity.address),\n                keyId: authz.identity.keyId,\n                sequenceNum: null,\n                signature: null,\n                signingFunction(signable) {\n                  return _asyncToGenerator(function* () {\n                    return normalizeCompositeSignature(yield execService({\n                      service: authz,\n                      msg: signable,\n                      opts: {\n                        includeOlderJsonRpcCall: true\n                      },\n                      platform: config.platform,\n                      user\n                    }));\n                  })();\n                }\n              };\n            }\n            throw new Error(\"No Authz or PreAuthz Service configured for CURRENT_USER\");\n          })();\n        }\n      };\n    });\n    return function (_x64) {\n      return _ref30.apply(this, arguments);\n    };\n  }());\n\n  /**\n   * @description - Factory function to get the subscribe method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  function getSubscribe(config) {\n    /**\n     * @description\n     * The callback passed to subscribe will be called when the user authenticates and un-authenticates, making it easy to update the UI accordingly.\n     *\n     * @param {Function} callback - Callback function\n     * @returns {Function} - Unsubscribe function\n     */\n    return function subscribe(callback) {\n      spawnCurrentUser(config);\n      var EXIT = \"@EXIT\";\n      var self = utilActor.spawn(/*#__PURE__*/function () {\n        var _ref31 = _asyncToGenerator(function* (ctx) {\n          ctx.send(NAME, utilActor.SUBSCRIBE);\n          while (1) {\n            var letter = yield ctx.receive();\n            if (letter.tag === EXIT) {\n              ctx.send(NAME, utilActor.UNSUBSCRIBE);\n              return;\n            }\n            callback(letter.data);\n          }\n        });\n        return function (_x65) {\n          return _ref31.apply(this, arguments);\n        };\n      }());\n      return () => utilActor.send(self, EXIT);\n    };\n  }\n\n  /**\n   * @description - Factory function to get the snapshot method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  function getSnapshot(config) {\n    /**\n     * @description - Gets the current user\n     * @returns {Promise<CurrentUser>} - User object\n     */\n    return function snapshot() {\n      spawnCurrentUser(config);\n      return utilActor.send(NAME, SNAPSHOT, null, {\n        expectReply: true,\n        timeout: 0\n      });\n    };\n  }\n\n  /**\n   * Resolves the current user as an argument\n   * @param {CurrentUserConfig} config - Current User Configuration\n   *\n   */\n  var getResolveArgument = config => /*#__PURE__*/_asyncToGenerator(function* () {\n    var _yield$getAuthenticat = yield getAuthenticate(config)(),\n      addr = _yield$getAuthenticat.addr;\n    return sdk.arg(utilAddress.withPrefix(addr), t__namespace.Address);\n  });\n  var makeSignable = msg => {\n    utilInvariant.invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\");\n    return {\n      message: msg\n    };\n  };\n\n  /**\n   * @description - Factory function to get the signUserMessage method\n   * @param {CurrentUserConfig} config - Current User Configuration\n   */\n  var getSignUserMessage = config => (\n  /*#__PURE__*/\n  /**\n   * @description - A method to use allowing the user to personally sign data via FCL Compatible Wallets/Services.\n   * @param {string} msg - Message to sign\n   * @returns {Promise<CompositeSignature[]>} - Array of CompositeSignatures\n   */\n  function () {\n    var _ref33 = _asyncToGenerator(function* (msg) {\n      spawnCurrentUser(config);\n      var user = yield getAuthenticate(config)({\n        redir: true\n      });\n      var signingService = serviceOfType(user.services, \"user-signature\");\n      utilInvariant.invariant(signingService, \"Current user must have authorized a signing service.\");\n      try {\n        var response = yield execService({\n          service: signingService,\n          msg: makeSignable(msg),\n          platform: config.platform,\n          user\n        });\n        if (Array.isArray(response)) {\n          return response.map(compSigs => normalizeCompositeSignature(compSigs));\n        } else {\n          return [normalizeCompositeSignature(response)];\n        }\n      } catch (error) {\n        return error;\n      }\n    });\n    return function (_x66) {\n      return _ref33.apply(this, arguments);\n    };\n  }());\n\n  /**\n   * @typedef {object} CurrentUserConfig - Current User Configuration\n   * @property {string} platform - Platform\n   * @property {object} [discovery] - FCL Discovery Configuration\n   * @property {() => Promise<import(\"../utils/storage\").StorageProvider>} [getStorageProvider] - Storage Provider Getter\n   */\n\n  /**\n   * @description\n   * Creates the Current User object\n   *\n   * @param {CurrentUserConfig} config - Current User Configuration\n   *  */\n  var getCurrentUser = config => {\n    var currentUser = {\n      authenticate: getAuthenticate(config),\n      unauthenticate: getUnauthenticate(config),\n      authorization: getAuthorization(config),\n      signUserMessage: getSignUserMessage(config),\n      subscribe: getSubscribe(config),\n      snapshot: getSnapshot(config),\n      resolveArgument: getResolveArgument(config)\n    };\n    return Object.assign(() => {\n      return {\n        ...currentUser\n      };\n    }, {\n      ...currentUser\n    });\n  };\n\n  /**\n   * @description\n   * Factory function that returns a mutate function for a given currentUser.\n   *\n   * @param {ReturnType<typeof import(\"../current-user\").getCurrentUser> | import(\"../current-user\").CurrentUserConfig} currentUserOrConfig - CurrentUser actor or configuration\n   */\n  var getMutate = currentUserOrConfig => {\n    /**\n     * @description\n     * Allows you to submit transactions to the blockchain to potentially mutate the state.\n     *\n     * @param {object} [opts] - Mutation Options and configuration\n     * @param {string} [opts.cadence] - Cadence Transaction used to mutate Flow\n     * @param {import(\"./args\").ArgsFn} [opts.args] - Arguments passed to cadence transaction\n     * @param {object | string} [opts.template] - Interaction Template for a transaction\n     * @param {number} [opts.limit] - Compute Limit for transaction\n     * @param {Function} [opts.authz] - Authorization function for transaction\n     * @param {Function} [opts.proposer] - Proposer Authorization function for transaction\n     * @param {Function} [opts.payer] - Payer Authorization function for transaction\n     * @param {Array<Function>} [opts.authorizations] - Authorizations function for transaction\n     * @returns {Promise<string>} Transaction Id\n     *\n     * @example\n     * fcl.mutate({\n     *   cadence: `\n     *     transaction(a: Int, b: Int, c: Address) {\n     *       prepare(acct: AuthAccount) {\n     *         log(acct)\n     *         log(a)\n     *         log(b)\n     *         log(c)\n     *       }\n     *     }\n     *   `,\n     *   args: (arg, t) => [\n     *     arg(6, t.Int),\n     *     arg(7, t.Int),\n     *     arg(\"0xba1132bc08f82fe2\", t.Address),\n     *   ],\n     * })\n     *\n     *\n     * Options:\n     * type Options = {\n     *   template: InteractionTemplate | String // InteractionTemplate or url to one\n     *   cadence: String!,\n     *   args: (arg, t) => Array<Arg>,\n     *   limit: Number,\n     *   authz: AuthzFn, // will overload the trinity of signatory roles\n     *   proposer: AuthzFn, // will overload the proposer signatory role\n     *   payer: AuthzFn, // will overload the payer signatory role\n     *   authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n     * }\n     */\n    var mutate = /*#__PURE__*/function () {\n      var _ref34 = _asyncToGenerator(function* () {\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var txid;\n        try {\n          yield preMutate(opts);\n          opts = yield prepTemplateOpts(opts);\n          // Allow for a config to overwrite the authorization function.\n          // prettier-ignore\n          var currentUser = typeof currentUserOrConfig === \"function\" ? currentUserOrConfig : getCurrentUser(currentUserOrConfig);\n          var authz = yield sdk__namespace.config().get(\"fcl.authz\", currentUser().authorization);\n          txid = sdk__namespace.send([sdk__namespace.transaction(opts.cadence), sdk__namespace.args(normalizeArgs(opts.args || [])), opts.limit && isNumber(opts.limit) && sdk__namespace.limit(opts.limit),\n          // opts.proposer > opts.authz > authz\n          sdk__namespace.proposer(opts.proposer || opts.authz || authz),\n          // opts.payer > opts.authz > authz\n          sdk__namespace.payer(opts.payer || opts.authz || authz),\n          // opts.authorizations > [opts.authz > authz]\n          sdk__namespace.authorizations(opts.authorizations || [opts.authz || authz])]).then(sdk__namespace.decode);\n          return txid;\n        } catch (error) {\n          throw error;\n        }\n      });\n      return function mutate() {\n        return _ref34.apply(this, arguments);\n      };\n    }();\n    return mutate;\n  };\n  function serviceEndpoint(service) {\n    var url = new URL(service.endpoint);\n    if (window?.location?.origin) {\n      url.searchParams.append(\"l6n\", window.location.origin);\n    }\n    if (service.params != null) {\n      for (var _ref35 of Object.entries(service.params || {})) {\n        var _ref36 = _slicedToArray(_ref35, 2);\n        var key = _ref36[0];\n        var value = _ref36[1];\n        url.searchParams.append(key, value);\n      }\n    }\n    return url;\n  }\n  function fetchService(service) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var method = opts.method || \"POST\";\n    var body = method === \"GET\" ? undefined : JSON.stringify(opts.data || service.data || {});\n    return fetch(serviceEndpoint(service), {\n      method: method,\n      headers: {\n        ...(service.headers || {}),\n        ...(opts.headers || {}),\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(d => d.json());\n  }\n\n  // {\n  //    \"f_type\": \"PollingResponse\",\n  //    \"f_vsn\": \"1.0.0\",\n  //    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n  //    \"reason\": null,      // Reason for Declining Transaction\n  //    \"data\": null,        // Return value for APPROVED\n  //    \"updates\": BackChannelRpc,\n  //    \"local\": Frame,\n  // }\n  function normalizePollingResponse(resp) {\n    if (resp == null) return null;\n    if (!resp[\"f_vsn\"]) {\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {\n          ...resp\n        } || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0])\n      };\n    }\n    switch (resp[\"f_vsn\"]) {\n      case \"1.0.0\":\n        return resp;\n      default:\n        return null;\n    }\n  }\n  var OPTIONS = {\n    \"HTTP/GET\": \"GET\",\n    \"HTTP/POST\": \"POST\"\n  };\n  var serviceMethod = service => {\n    utilInvariant.invariant(OPTIONS[service.method], \"Invalid Service Method for type back-channel-rpc\", {\n      service\n    });\n    return OPTIONS[service.method];\n  };\n  function poll(_x67) {\n    return _poll.apply(this, arguments);\n  }\n  function _poll() {\n    _poll = _asyncToGenerator(function* (service) {\n      var checkCanContinue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => true;\n      utilInvariant.invariant(service, \"Missing Polling Service\", {\n        service\n      });\n      var canContinue = checkCanContinue();\n      if (!canContinue) throw new Error(\"Externally Halted\");\n      var resp;\n      try {\n        if (typeof document !== \"undefined\" && document.visibilityState === \"hidden\") {\n          yield new Promise(r => setTimeout(r, 500));\n          return poll(service, checkCanContinue);\n        }\n        resp = yield fetchService(service, {\n          method: serviceMethod(service)\n        }).then(normalizePollingResponse);\n      } catch (error) {\n        throw error;\n      }\n      switch (resp.status) {\n        case \"APPROVED\":\n          return resp.data;\n        case \"DECLINED\":\n          throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`);\n        default:\n          yield new Promise(r => setTimeout(r, 500));\n          return poll(resp.updates, checkCanContinue);\n      }\n    });\n    return _poll.apply(this, arguments);\n  }\n  var getExecHttpPost = execLocal => (/*#__PURE__*/function () {\n    var _ref37 = _asyncToGenerator(function* (_ref) {\n      var service = _ref.service,\n        body = _ref.body,\n        config = _ref.config,\n        opts = _ref.opts;\n      var resp = yield fetchService(service, {\n        data: {\n          fclVersion: VERSION,\n          service: {\n            params: service.params,\n            data: service.data,\n            type: service.type\n          },\n          config,\n          ...body\n        }\n      }).then(normalizePollingResponse);\n      if (resp.status === \"APPROVED\") {\n        return resp.data;\n      } else if (resp.status === \"DECLINED\") {\n        throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`);\n      } else if (resp.status === \"REDIRECT\") {\n        return resp;\n      } else if (resp.status === \"PENDING\") {\n        // these two flags are required to run polling one more time before it stops\n        var canContinue = true;\n        var shouldContinue = true;\n        var _yield$execLocal = yield execLocal(normalizeLocalView(resp.local), {\n            serviceEndpoint,\n            onClose: () => shouldContinue = false\n          }),\n          _yield$execLocal2 = _slicedToArray(_yield$execLocal, 2),\n          _2 = _yield$execLocal2[0],\n          unmount = _yield$execLocal2[1];\n        var _close = () => {\n          try {\n            unmount();\n            shouldContinue = false;\n          } catch (error) {\n            console.error(\"Frame Close Error\", error);\n          }\n        };\n        /**\n         * this function is run once per poll call.\n         * Offsetting canContinue flag to make sure that\n         * the polling is performed one extra time after canContinue flag is set to false\n         * to prevent halting on Android when a browser calls window.close\n         * before FCL receives a successful result from polling\n         *\n         * @returns {boolean}\n         */\n        var checkCanContinue = () => {\n          var offsetCanContinue = canContinue;\n          canContinue = shouldContinue;\n          return offsetCanContinue;\n        };\n        return poll(resp.updates, checkCanContinue).then(serviceResponse => {\n          _close();\n          return serviceResponse;\n        }).catch(error => {\n          console.error(error);\n          _close();\n          throw error;\n        });\n      } else {\n        console.error(`Auto Decline: Invalid Response`, {\n          service,\n          resp\n        });\n        throw new Error(`Auto Decline: Invalid Response`);\n      }\n    });\n    return function (_x68) {\n      return _ref37.apply(this, arguments);\n    };\n  }());\n  var CLOSE_EVENT = \"FCL:VIEW:CLOSE\";\n  var READY_EVENT = \"FCL:VIEW:READY\";\n  var RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\";\n  var CUSTOM_RPC = \"FCL:VIEW:CUSTOM_RPC\";\n  var _ = e => typeof e === \"string\" && e.toLowerCase();\n  var IGNORE = new Set([\"monetizationstart\", \"monetizationpending\", \"monetizationprogress\", \"monetizationstop\"]);\n  var deprecate = (was, want) => console.warn(\"DEPRECATION NOTICE\", `Received ${was}, please use ${want} for this and future versions of FCL`);\n  var buildMessageHandler = _ref => {\n    var close = _ref.close,\n      send = _ref.send,\n      onReady = _ref.onReady,\n      onResponse = _ref.onResponse,\n      onMessage = _ref.onMessage,\n      onCustomRpc = _ref.onCustomRpc,\n      getSource = _ref.getSource;\n    var source;\n    return e => {\n      try {\n        source = getSource?.() || source;\n      } catch (_) {\n        // If getSource isn't working correctly, we should reset source\n        // to prevent desync between the source and the actual source\n        source = null;\n      }\n      try {\n        if (typeof e.data !== \"object\") return;\n        if (IGNORE.has(e.data.type)) return;\n        if (source != null && e.source !== source) return;\n        if (_(e.data.type) === _(CLOSE_EVENT)) close();\n        if (_(e.data.type) === _(READY_EVENT)) {\n          onReady(e, {\n            send,\n            close\n          });\n          source ||= e.source;\n        }\n        if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {\n          send,\n          close\n        });\n        if (_(e.data.type) === _(CUSTOM_RPC)) onCustomRpc(e.data.payload, {\n          send,\n          close\n        });\n        onMessage(e, {\n          send,\n          close\n        });\n\n        // Backwards Compatible\n        if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n          deprecate(e.data.type, READY_EVENT);\n          onReady(e, {\n            send,\n            close\n          });\n          source ||= e.source;\n        }\n        if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n          deprecate(e.data.type, RESPONSE_EVENT);\n          onResponse(e, {\n            send,\n            close\n          });\n        }\n        if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n          deprecate(e.data.type, CLOSE_EVENT);\n          close();\n        }\n        //\n        if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n          deprecate(e.data.type, RESPONSE_EVENT);\n          onResponse(e, {\n            send,\n            close\n          });\n        }\n        if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n          deprecate(e.data.type, READY_EVENT);\n          onReady(e, {\n            send,\n            close\n          });\n          source ||= e.source;\n        }\n        if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n          deprecate(e.data.type, CLOSE_EVENT);\n          close();\n        }\n        if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n          deprecate(e.data.type, CLOSE_EVENT);\n          close();\n        }\n      } catch (error) {\n        console.error(\"Frame Callback Error\", error);\n        close();\n      }\n    };\n  };\n\n  // Set chain id default on access node change\n  watchForChainIdChanges();\n  Object.defineProperty(exports, \"TestUtils\", {\n    enumerable: true,\n    get: function () {\n      return sdk.TestUtils;\n    }\n  });\n  Object.defineProperty(exports, \"account\", {\n    enumerable: true,\n    get: function () {\n      return sdk.account;\n    }\n  });\n  Object.defineProperty(exports, \"arg\", {\n    enumerable: true,\n    get: function () {\n      return sdk.arg;\n    }\n  });\n  Object.defineProperty(exports, \"args\", {\n    enumerable: true,\n    get: function () {\n      return sdk.args;\n    }\n  });\n  Object.defineProperty(exports, \"atBlockHeight\", {\n    enumerable: true,\n    get: function () {\n      return sdk.atBlockHeight;\n    }\n  });\n  Object.defineProperty(exports, \"atBlockId\", {\n    enumerable: true,\n    get: function () {\n      return sdk.atBlockId;\n    }\n  });\n  Object.defineProperty(exports, \"authorization\", {\n    enumerable: true,\n    get: function () {\n      return sdk.authorization;\n    }\n  });\n  Object.defineProperty(exports, \"authorizations\", {\n    enumerable: true,\n    get: function () {\n      return sdk.authorizations;\n    }\n  });\n  Object.defineProperty(exports, \"block\", {\n    enumerable: true,\n    get: function () {\n      return sdk.block;\n    }\n  });\n  Object.defineProperty(exports, \"build\", {\n    enumerable: true,\n    get: function () {\n      return sdk.build;\n    }\n  });\n  Object.defineProperty(exports, \"createSignableVoucher\", {\n    enumerable: true,\n    get: function () {\n      return sdk.createSignableVoucher;\n    }\n  });\n  Object.defineProperty(exports, \"decode\", {\n    enumerable: true,\n    get: function () {\n      return sdk.decode;\n    }\n  });\n  Object.defineProperty(exports, \"getAccount\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getAccount;\n    }\n  });\n  Object.defineProperty(exports, \"getBlock\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getBlock;\n    }\n  });\n  Object.defineProperty(exports, \"getBlockHeader\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getBlockHeader;\n    }\n  });\n  Object.defineProperty(exports, \"getCollection\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getCollection;\n    }\n  });\n  Object.defineProperty(exports, \"getEvents\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getEvents;\n    }\n  });\n  Object.defineProperty(exports, \"getEventsAtBlockHeightRange\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getEventsAtBlockHeightRange;\n    }\n  });\n  Object.defineProperty(exports, \"getEventsAtBlockIds\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getEventsAtBlockIds;\n    }\n  });\n  Object.defineProperty(exports, \"getNetworkParameters\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getNetworkParameters;\n    }\n  });\n  Object.defineProperty(exports, \"getNodeVersionInfo\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getNodeVersionInfo;\n    }\n  });\n  Object.defineProperty(exports, \"getTransaction\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getTransaction;\n    }\n  });\n  Object.defineProperty(exports, \"getTransactionStatus\", {\n    enumerable: true,\n    get: function () {\n      return sdk.getTransactionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"invariant\", {\n    enumerable: true,\n    get: function () {\n      return sdk.invariant;\n    }\n  });\n  Object.defineProperty(exports, \"isBad\", {\n    enumerable: true,\n    get: function () {\n      return sdk.isBad;\n    }\n  });\n  Object.defineProperty(exports, \"isOk\", {\n    enumerable: true,\n    get: function () {\n      return sdk.isOk;\n    }\n  });\n  Object.defineProperty(exports, \"limit\", {\n    enumerable: true,\n    get: function () {\n      return sdk.limit;\n    }\n  });\n  Object.defineProperty(exports, \"nodeVersionInfo\", {\n    enumerable: true,\n    get: function () {\n      return sdk.nodeVersionInfo;\n    }\n  });\n  Object.defineProperty(exports, \"param\", {\n    enumerable: true,\n    get: function () {\n      return sdk.param;\n    }\n  });\n  Object.defineProperty(exports, \"params\", {\n    enumerable: true,\n    get: function () {\n      return sdk.params;\n    }\n  });\n  Object.defineProperty(exports, \"payer\", {\n    enumerable: true,\n    get: function () {\n      return sdk.payer;\n    }\n  });\n  Object.defineProperty(exports, \"ping\", {\n    enumerable: true,\n    get: function () {\n      return sdk.ping;\n    }\n  });\n  Object.defineProperty(exports, \"pipe\", {\n    enumerable: true,\n    get: function () {\n      return sdk.pipe;\n    }\n  });\n  Object.defineProperty(exports, \"proposer\", {\n    enumerable: true,\n    get: function () {\n      return sdk.proposer;\n    }\n  });\n  Object.defineProperty(exports, \"ref\", {\n    enumerable: true,\n    get: function () {\n      return sdk.ref;\n    }\n  });\n  Object.defineProperty(exports, \"script\", {\n    enumerable: true,\n    get: function () {\n      return sdk.script;\n    }\n  });\n  Object.defineProperty(exports, \"send\", {\n    enumerable: true,\n    get: function () {\n      return sdk.send;\n    }\n  });\n  Object.defineProperty(exports, \"subscribeEvents\", {\n    enumerable: true,\n    get: function () {\n      return sdk.subscribeEvents;\n    }\n  });\n  Object.defineProperty(exports, \"transaction\", {\n    enumerable: true,\n    get: function () {\n      return sdk.transaction;\n    }\n  });\n  Object.defineProperty(exports, \"validator\", {\n    enumerable: true,\n    get: function () {\n      return sdk.validator;\n    }\n  });\n  Object.defineProperty(exports, \"voucherIntercept\", {\n    enumerable: true,\n    get: function () {\n      return sdk.voucherIntercept;\n    }\n  });\n  Object.defineProperty(exports, \"voucherToTxId\", {\n    enumerable: true,\n    get: function () {\n      return sdk.voucherToTxId;\n    }\n  });\n  Object.defineProperty(exports, \"why\", {\n    enumerable: true,\n    get: function () {\n      return sdk.why;\n    }\n  });\n  exports.t = t__namespace;\n  Object.defineProperty(exports, \"config\", {\n    enumerable: true,\n    get: function () {\n      return config.config;\n    }\n  });\n  Object.defineProperty(exports, \"display\", {\n    enumerable: true,\n    get: function () {\n      return utilAddress.display;\n    }\n  });\n  Object.defineProperty(exports, \"sansPrefix\", {\n    enumerable: true,\n    get: function () {\n      return utilAddress.sansPrefix;\n    }\n  });\n  Object.defineProperty(exports, \"withPrefix\", {\n    enumerable: true,\n    get: function () {\n      return utilAddress.withPrefix;\n    }\n  });\n  Object.defineProperty(exports, \"cadence\", {\n    enumerable: true,\n    get: function () {\n      return utilTemplate.template;\n    }\n  });\n  Object.defineProperty(exports, \"cdc\", {\n    enumerable: true,\n    get: function () {\n      return utilTemplate.template;\n    }\n  });\n  exports.AppUtils = index$1;\n  exports.CORE_STRATEGIES = CORE_STRATEGIES;\n  exports.FCL_REDIRECT_URL_PARAM_NAME = FCL_REDIRECT_URL_PARAM_NAME;\n  exports.FCL_RESPONSE_PARAM_NAME = FCL_RESPONSE_PARAM_NAME;\n  exports.InteractionTemplateUtils = index;\n  exports.TransactionError = TransactionError;\n  exports.URL = URL;\n  exports.VERSION = VERSION;\n  exports.WalletUtils = index$2;\n  exports.buildMessageHandler = buildMessageHandler;\n  exports.discovery = discovery;\n  exports.events = events;\n  exports.execStrategy = execStrategy;\n  exports.getChainId = getChainId;\n  exports.getCurrentUser = getCurrentUser;\n  exports.getExecHttpPost = getExecHttpPost;\n  exports.getMutate = getMutate;\n  exports.initServiceRegistry = initServiceRegistry;\n  exports.isReactNative = isReactNative;\n  exports.normalizePollingResponse = normalizePollingResponse;\n  exports.pluginRegistry = pluginRegistry;\n  exports.query = query;\n  exports.serialize = serialize;\n  exports.serviceEndpoint = serviceEndpoint;\n  exports.setIsReactNative = setIsReactNative;\n  exports.tx = transaction;\n  exports.verifyUserSignatures = verifyUserSignatures;\n});","lineCount":4083,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_wrapNativeSuper"],[5,22,1,13],[5,25,1,13,"require"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,1,13],[7,6,1,13,"_classCallCheck"],[7,21,1,13],[7,24,1,13,"require"],[7,31,1,13],[7,32,1,13,"_dependencyMap"],[7,46,1,13],[8,2,1,13],[8,6,1,13,"_possibleConstructorReturn"],[8,32,1,13],[8,35,1,13,"require"],[8,42,1,13],[8,43,1,13,"_dependencyMap"],[8,57,1,13],[9,2,1,13],[9,6,1,13,"_getPrototypeOf"],[9,21,1,13],[9,24,1,13,"require"],[9,31,1,13],[9,32,1,13,"_dependencyMap"],[9,46,1,13],[10,2,1,13],[10,6,1,13,"_inherits"],[10,15,1,13],[10,18,1,13,"require"],[10,25,1,13],[10,26,1,13,"_dependencyMap"],[10,40,1,13],[11,2,1,13],[11,6,1,13,"_asyncToGenerator"],[11,23,1,13],[11,26,1,13,"require"],[11,33,1,13],[11,34,1,13,"_dependencyMap"],[11,48,1,13],[12,2,1,13],[12,11,1,13,"_callSuper"],[12,22,1,13,"t"],[12,23,1,13],[12,25,1,13,"o"],[12,26,1,13],[12,28,1,13,"e"],[12,29,1,13],[12,40,1,13,"o"],[12,41,1,13],[12,44,1,13,"_getPrototypeOf"],[12,59,1,13],[12,60,1,13,"o"],[12,61,1,13],[12,64,1,13,"_possibleConstructorReturn"],[12,90,1,13],[12,91,1,13,"t"],[12,92,1,13],[12,94,1,13,"_isNativeReflectConstruct"],[12,119,1,13],[12,124,1,13,"Reflect"],[12,131,1,13],[12,132,1,13,"construct"],[12,141,1,13],[12,142,1,13,"o"],[12,143,1,13],[12,145,1,13,"e"],[12,146,1,13],[12,154,1,13,"_getPrototypeOf"],[12,169,1,13],[12,170,1,13,"t"],[12,171,1,13],[12,173,1,13,"constructor"],[12,184,1,13],[12,188,1,13,"o"],[12,189,1,13],[12,190,1,13,"apply"],[12,195,1,13],[12,196,1,13,"t"],[12,197,1,13],[12,199,1,13,"e"],[12,200,1,13],[13,2,1,13],[13,11,1,13,"_isNativeReflectConstruct"],[13,37,1,13],[13,51,1,13,"t"],[13,52,1,13],[13,56,1,13,"Boolean"],[13,63,1,13],[13,64,1,13,"prototype"],[13,73,1,13],[13,74,1,13,"valueOf"],[13,81,1,13],[13,82,1,13,"call"],[13,86,1,13],[13,87,1,13,"Reflect"],[13,94,1,13],[13,95,1,13,"construct"],[13,104,1,13],[13,105,1,13,"Boolean"],[13,112,1,13],[13,145,1,13,"t"],[13,146,1,13],[13,159,1,13,"_isNativeReflectConstruct"],[13,184,1,13],[13,196,1,13,"_isNativeReflectConstruct"],[13,197,1,13],[13,210,1,13,"t"],[13,211,1,13],[14,2,3,0],[14,6,3,4,"sdk"],[14,9,3,7],[14,12,3,10,"require"],[14,19,3,17],[14,20,3,17,"_dependencyMap"],[14,34,3,17],[14,52,3,31],[14,53,3,32],[15,2,4,0],[15,6,4,4,"t"],[15,7,4,5],[15,10,4,8,"require"],[15,17,4,15],[15,18,4,15,"_dependencyMap"],[15,32,4,15],[15,52,4,31],[15,53,4,32],[16,2,5,0],[16,6,5,4,"utilInvariant"],[16,19,5,17],[16,22,5,20,"require"],[16,29,5,27],[16,30,5,27,"_dependencyMap"],[16,44,5,27],[16,74,5,52],[16,75,5,53],[17,2,6,0],[17,6,6,4,"fetchTransport"],[17,20,6,18],[17,23,6,21,"require"],[17,30,6,28],[17,31,6,28,"_dependencyMap"],[17,45,6,28],[17,64,6,42],[17,65,6,43],[18,2,7,0],[18,6,7,4,"config"],[18,12,7,10],[18,15,7,13,"require"],[18,22,7,20],[18,23,7,20,"_dependencyMap"],[18,37,7,20],[18,59,7,37],[18,60,7,38],[19,2,8,0],[19,6,8,4,"logger"],[19,12,8,10],[19,15,8,13,"require"],[19,22,8,20],[19,23,8,20,"_dependencyMap"],[19,37,8,20],[19,64,8,42],[19,65,8,43],[20,2,9,0],[20,6,9,4,"utilAddress"],[20,17,9,15],[20,20,9,18,"require"],[20,27,9,25],[20,28,9,25,"_dependencyMap"],[20,42,9,25],[20,70,9,48],[20,71,9,49],[21,2,10,0],[21,6,10,4,"rlp"],[21,9,10,7],[21,12,10,10,"require"],[21,19,10,17],[21,20,10,17,"_dependencyMap"],[21,34,10,17],[21,53,10,31],[21,54,10,32],[22,2,11,0],[22,6,11,4,"utilActor"],[22,15,11,13],[22,18,11,16,"require"],[22,25,11,23],[22,26,11,23,"_dependencyMap"],[22,40,11,23],[22,66,11,44],[22,67,11,45],[23,2,12,0],[23,6,12,4,"transportHttp"],[23,19,12,17],[23,22,12,20,"require"],[23,29,12,27],[23,30,12,27,"_dependencyMap"],[23,44,12,27],[23,74,12,52],[23,75,12,53],[24,2,13,0],[24,6,13,4,"grpcWeb"],[24,13,13,11],[24,16,13,14,"require"],[24,23,13,21],[24,24,13,21,"_dependencyMap"],[24,38,13,21],[24,70,13,48],[24,71,13,49],[25,2,14,0],[25,6,14,4,"typedefs"],[25,14,14,12],[25,17,14,15,"require"],[25,24,14,22],[25,25,14,22,"_dependencyMap"],[25,39,14,22],[25,63,14,41],[25,64,14,42],[26,2,15,0],[26,6,15,4,"sha3"],[26,10,15,8],[26,13,15,11,"require"],[26,20,15,18],[26,21,15,18,"_dependencyMap"],[26,35,15,18],[26,47,15,25],[26,48,15,26],[27,2,16,0],[27,6,16,4,"utilTemplate"],[27,18,16,16],[27,21,16,19,"require"],[27,28,16,26],[27,29,16,26,"_dependencyMap"],[27,43,16,26],[27,72,16,50],[27,73,16,51],[28,2,17,0],[28,6,17,4,"semver"],[28,12,17,10],[28,15,17,13,"require"],[28,22,17,20],[28,23,17,20,"_dependencyMap"],[28,37,17,20],[28,64,17,42],[28,65,17,43],[29,2,19,0],[29,11,19,9,"_interopNamespaceDefault"],[29,35,19,33,"_interopNamespaceDefault"],[29,36,19,34,"e"],[29,37,19,35],[29,39,19,37],[30,4,20,2],[30,8,20,6,"n"],[30,9,20,7],[30,12,20,10,"Object"],[30,18,20,16],[30,19,20,17,"create"],[30,25,20,23],[30,26,20,24],[30,30,20,28],[30,31,20,29],[31,4,21,2],[31,8,21,6,"e"],[31,9,21,7],[31,11,21,9],[32,6,22,4,"Object"],[32,12,22,10],[32,13,22,11,"keys"],[32,17,22,15],[32,18,22,16,"e"],[32,19,22,17],[32,20,22,18],[32,21,22,19,"forEach"],[32,28,22,26],[32,29,22,27],[32,39,22,37,"k"],[32,40,22,38],[32,42,22,40],[33,8,23,6],[33,12,23,10,"k"],[33,13,23,11],[33,18,23,16],[33,27,23,25],[33,29,23,27],[34,10,24,8],[34,14,24,12,"d"],[34,15,24,13],[34,18,24,16,"Object"],[34,24,24,22],[34,25,24,23,"getOwnPropertyDescriptor"],[34,49,24,47],[34,50,24,48,"e"],[34,51,24,49],[34,53,24,51,"k"],[34,54,24,52],[34,55,24,53],[35,10,25,8,"Object"],[35,16,25,14],[35,17,25,15,"defineProperty"],[35,31,25,29],[35,32,25,30,"n"],[35,33,25,31],[35,35,25,33,"k"],[35,36,25,34],[35,38,25,36,"d"],[35,39,25,37],[35,40,25,38,"get"],[35,43,25,41],[35,46,25,44,"d"],[35,47,25,45],[35,50,25,48],[36,12,26,10,"enumerable"],[36,22,26,20],[36,24,26,22],[36,28,26,26],[37,12,27,10,"get"],[37,15,27,13],[37,17,27,15],[37,26,27,15,"get"],[37,27,27,15],[37,29,27,27],[38,14,27,29],[38,21,27,36,"e"],[38,22,27,37],[38,23,27,38,"k"],[38,24,27,39],[38,25,27,40],[39,12,27,42],[40,10,28,8],[40,11,28,9],[40,12,28,10],[41,8,29,6],[42,6,30,4],[42,7,30,5],[42,8,30,6],[43,4,31,2],[44,4,32,2,"n"],[44,5,32,3],[44,6,32,4,"default"],[44,13,32,11],[44,16,32,14,"e"],[44,17,32,15],[45,4,33,2],[45,11,33,9,"Object"],[45,17,33,15],[45,18,33,16,"freeze"],[45,24,33,22],[45,25,33,23,"n"],[45,26,33,24],[45,27,33,25],[46,2,34,0],[47,2,36,0],[47,6,36,4,"sdk__namespace"],[47,20,36,18],[47,23,36,21],[47,36,36,34,"_interopNamespaceDefault"],[47,60,36,58],[47,61,36,59,"sdk"],[47,64,36,62],[47,65,36,63],[48,2,37,0],[48,6,37,4,"t__namespace"],[48,18,37,16],[48,21,37,19],[48,34,37,32,"_interopNamespaceDefault"],[48,58,37,56],[48,59,37,57,"t"],[48,60,37,58],[48,61,37,59],[49,2,38,0],[49,6,38,4,"logger__namespace"],[49,23,38,21],[49,26,38,24],[49,39,38,37,"_interopNamespaceDefault"],[49,63,38,61],[49,64,38,62,"logger"],[49,70,38,68],[49,71,38,69],[50,2,39,0],[50,6,39,4,"rlp__namespace"],[50,20,39,18],[50,23,39,21],[50,36,39,34,"_interopNamespaceDefault"],[50,60,39,58],[50,61,39,59,"rlp"],[50,64,39,62],[50,65,39,63],[51,2,40,0],[51,6,40,4,"semver__namespace"],[51,23,40,21],[51,26,40,24],[51,39,40,37,"_interopNamespaceDefault"],[51,63,40,61],[51,64,40,62,"semver"],[51,70,40,68],[51,71,40,69],[52,2,42,0],[52,6,42,6,"VERSION"],[52,13,42,13],[52,16,42,16],[52,24,42,24],[53,2,44,0],[53,6,44,6,"is"],[53,8,44,8],[53,11,44,11,"type"],[53,15,44,15],[53,19,44,19,"d"],[53,20,44,20],[53,24,44,24],[53,31,44,31,"d"],[53,32,44,32],[53,37,44,37,"type"],[53,41,44,41],[54,2,45,0],[54,6,45,6,"isRequired"],[54,16,45,16],[54,19,45,19,"d"],[54,20,45,20],[54,24,45,24,"d"],[54,25,45,25],[54,29,45,29],[54,33,45,33],[55,2,46,0],[55,6,46,6,"isObject"],[55,14,46,14],[55,17,46,17,"is"],[55,19,46,19],[55,20,46,20],[55,28,46,28],[55,29,46,29],[56,2,47,0],[56,6,47,6,"isString"],[56,14,47,14],[56,17,47,17,"is"],[56,19,47,19],[56,20,47,20],[56,28,47,28],[56,29,47,29],[57,2,48,0],[57,6,48,6,"isFunc"],[57,12,48,12],[57,15,48,15,"is"],[57,17,48,17],[57,18,48,18],[57,28,48,28],[57,29,48,29],[58,2,49,0],[58,6,49,6,"isNumber"],[58,14,49,14],[58,17,49,17,"is"],[58,19,49,19],[58,20,49,20],[58,28,49,28],[58,29,49,29],[59,2,51,0],[59,11,51,9,"normalizeArgs"],[59,24,51,22,"normalizeArgs"],[59,25,51,23,"ax"],[59,27,51,25],[59,29,51,27],[60,4,52,2],[60,8,52,6,"isFunc"],[60,14,52,12],[60,15,52,13,"ax"],[60,17,52,15],[60,18,52,16],[60,20,52,18],[60,27,52,25,"ax"],[60,29,52,27],[60,30,52,28,"sdk__namespace"],[60,44,52,42],[60,45,52,43,"arg"],[60,48,52,46],[60,50,52,48,"t__namespace"],[60,62,52,60],[60,63,52,61],[61,4,53,2],[61,11,53,9],[61,13,53,11],[62,2,54,0],[63,2,54,1],[63,11,56,15,"httpDocumentResolver"],[63,31,56,35,"httpDocumentResolver"],[63,32,56,35,"_x"],[63,34,56,35],[64,4,56,35],[64,11,56,35,"_httpDocumentResolver"],[64,32,56,35],[64,33,56,35,"apply"],[64,38,56,35],[64,45,56,35,"arguments"],[64,54,56,35],[65,2,56,35],[66,2,56,35],[66,11,56,35,"_httpDocumentResolver"],[66,33,56,35],[67,4,56,35,"_httpDocumentResolver"],[67,25,56,35],[67,28,56,35,"_asyncToGenerator"],[67,45,56,35],[67,46,56,0],[67,57,56,36,"_ref"],[67,61,56,40],[67,63,56,42],[68,6,57,2],[68,10,58,4,"url"],[68,13,58,7],[68,16,59,6,"_ref"],[68,20,59,10],[68,21,58,4,"url"],[68,24,58,7],[69,6,60,2,"utilInvariant"],[69,19,60,15],[69,20,60,16,"invariant"],[69,29,60,25],[69,30,60,26],[69,37,60,33,"url"],[69,40,60,36],[69,45,60,41],[69,56,60,52],[69,58,60,54],[69,100,60,96],[69,101,60,97],[70,6,61,2],[70,10,61,6,"res"],[70,13,61,9],[71,6,62,2],[71,10,62,6],[72,8,63,4,"res"],[72,11,63,7],[72,20,63,16,"fetchTransport"],[72,34,63,30],[72,35,63,31,"url"],[72,38,63,34],[72,39,63,35],[73,6,64,2],[73,7,64,3],[73,8,64,4],[73,15,64,11,"e"],[73,16,64,12],[73,18,64,14],[74,8,65,4],[74,14,65,10],[74,18,65,14,"Error"],[74,23,65,19],[74,24,65,20],[74,82,65,78],[74,83,65,79],[75,6,66,2],[76,6,67,2],[76,10,67,6,"document"],[76,18,67,14],[76,21,67,17,"res"],[76,24,67,20],[76,25,67,21,"ok"],[76,27,67,23],[76,36,67,32,"res"],[76,39,67,35],[76,40,67,36,"json"],[76,44,67,40],[76,45,67,41],[76,46,67,42],[76,49,67,45],[76,53,67,49],[77,6,68,2],[77,13,68,9,"document"],[77,21,68,17],[78,4,69,0],[78,5,69,1],[79,4,69,1],[79,11,69,1,"_httpDocumentResolver"],[79,32,69,1],[79,33,69,1,"apply"],[79,38,69,1],[79,45,69,1,"arguments"],[79,54,69,1],[80,2,69,1],[81,2,70,0],[81,6,70,6,"DOCUMENT_RESOLVERS"],[81,24,70,24],[81,27,70,27],[81,31,70,31,"Map"],[81,34,70,34],[81,35,70,35],[81,36,70,36],[81,37,70,37],[81,43,70,43],[81,45,70,45,"httpDocumentResolver"],[81,65,70,65],[81,66,70,66],[81,68,70,68],[81,69,70,69],[81,76,70,76],[81,78,70,78,"httpDocumentResolver"],[81,98,70,98],[81,99,70,99],[81,100,70,100],[81,101,70,101],[82,2,70,102],[82,11,71,15,"retrieve"],[82,19,71,23,"retrieve"],[82,20,71,23,"_x2"],[82,23,71,23],[83,4,71,23],[83,11,71,23,"_retrieve"],[83,20,71,23],[83,21,71,23,"apply"],[83,26,71,23],[83,33,71,23,"arguments"],[83,42,71,23],[84,2,71,23],[85,2,95,0],[86,0,96,0],[87,0,97,0],[88,0,98,0],[89,0,99,0],[90,0,100,0],[91,0,101,0],[92,0,102,0],[93,2,95,0],[93,11,95,0,"_retrieve"],[93,21,95,0],[94,4,95,0,"_retrieve"],[94,13,95,0],[94,16,95,0,"_asyncToGenerator"],[94,33,95,0],[94,34,71,0],[94,45,71,24,"_ref2"],[94,50,71,29],[94,52,71,31],[95,6,72,2],[95,10,73,4,"url"],[95,13,73,7],[95,16,74,6,"_ref2"],[95,21,74,11],[95,22,73,4,"url"],[95,25,73,7],[96,6,75,2,"utilInvariant"],[96,19,75,15],[96,20,75,16,"invariant"],[96,29,75,25],[96,30,75,26],[96,37,75,33,"url"],[96,40,75,36],[96,45,75,41],[96,56,75,52],[96,58,75,54],[96,100,75,96],[96,101,75,97],[97,6,76,2,"utilInvariant"],[97,19,76,15],[97,20,76,16,"invariant"],[97,29,76,25],[97,30,76,26],[97,37,76,33,"url"],[97,40,76,36],[97,45,76,41],[97,53,76,49],[97,55,76,51],[97,98,76,94],[97,99,76,95],[98,6,77,2],[98,10,77,8,"documentResolversFromConfig"],[98,37,77,35],[98,46,77,44,"config"],[98,52,77,50],[98,53,77,51,"config"],[98,59,77,57],[98,60,77,58],[98,61,77,59],[98,62,77,60,"where"],[98,67,77,65],[98,68,77,66],[98,91,77,89],[98,92,77,90],[99,6,78,2,"Object"],[99,12,78,8],[99,13,78,9,"keys"],[99,17,78,13],[99,18,78,14,"documentResolversFromConfig"],[99,45,78,41],[99,46,78,42],[99,47,78,43,"map"],[99,50,78,46],[99,51,78,47,"key"],[99,54,78,50],[99,58,78,54],[100,8,79,4],[100,12,79,10,"resolverFromConfig"],[100,30,79,28],[100,33,79,31,"documentResolversFromConfig"],[100,60,79,58],[100,61,79,59,"key"],[100,64,79,62],[100,65,79,63],[101,8,80,4],[101,12,80,10,"resolverProtocol"],[101,28,80,26],[101,31,80,29,"key"],[101,34,80,32],[101,35,80,33,"replace"],[101,42,80,40],[101,43,80,41],[101,66,80,64],[101,68,80,66],[101,70,80,68],[101,71,80,69],[102,8,81,4,"DOCUMENT_RESOLVERS"],[102,26,81,22],[102,27,81,23,"set"],[102,30,81,26],[102,31,81,27,"resolverProtocol"],[102,47,81,43],[102,49,81,45,"resolverFromConfig"],[102,67,81,63],[102,68,81,64],[103,6,82,2],[103,7,82,3],[103,8,82,4],[104,6,83,2],[104,10,83,8,"urlParts"],[104,18,83,16],[104,21,83,19],[104,66,83,64],[104,67,83,65,"exec"],[104,71,83,69],[104,72,83,70,"url"],[104,75,83,73],[104,76,83,74],[105,6,84,2,"utilInvariant"],[105,19,84,15],[105,20,84,16,"invariant"],[105,29,84,25],[105,30,84,26,"urlParts"],[105,38,84,34],[105,40,84,36],[105,61,84,57],[105,62,84,58],[106,6,85,2],[106,10,85,8,"protocol"],[106,18,85,16],[106,21,85,19,"urlParts"],[106,29,85,27],[106,30,85,28],[106,31,85,29],[106,32,85,30],[107,6,86,2,"utilInvariant"],[107,19,86,15],[107,20,86,16,"invariant"],[107,29,86,25],[107,30,86,26,"urlParts"],[107,38,86,34],[107,40,86,36],[107,70,86,66],[107,71,86,67],[108,6,87,2],[108,10,87,8,"resolver"],[108,18,87,16],[108,21,87,19,"DOCUMENT_RESOLVERS"],[108,39,87,37],[108,40,87,38,"get"],[108,43,87,41],[108,44,87,42,"protocol"],[108,52,87,50],[108,53,87,51],[109,6,88,2,"utilInvariant"],[109,19,88,15],[109,20,88,16,"invariant"],[109,29,88,25],[109,30,88,26,"resolver"],[109,38,88,34],[109,40,88,36],[109,73,88,69,"protocol"],[109,81,88,77],[109,83,88,79],[109,84,88,80],[110,6,89,2],[110,10,89,6,"document"],[110,18,89,14],[110,27,89,23,"resolver"],[110,35,89,31],[110,36,89,32],[111,8,90,4,"url"],[112,6,91,2],[112,7,91,3],[112,8,91,4],[113,6,92,2],[113,13,92,9,"document"],[113,21,92,17],[114,4,93,0],[114,5,93,1],[115,4,93,1],[115,11,93,1,"_retrieve"],[115,20,93,1],[115,21,93,1,"apply"],[115,26,93,1],[115,33,93,1,"arguments"],[115,42,93,1],[116,2,93,1],[117,2,93,1],[117,11,103,15,"deriveCadenceByNetwork100"],[117,36,103,40,"deriveCadenceByNetwork100"],[117,37,103,40,"_x3"],[117,40,103,40],[118,4,103,40],[118,11,103,40,"_deriveCadenceByNetwork"],[118,34,103,40],[118,35,103,40,"apply"],[118,40,103,40],[118,47,103,40,"arguments"],[118,56,103,40],[119,2,103,40],[120,2,125,0],[121,0,126,0],[122,0,127,0],[123,0,128,0],[124,0,129,0],[125,0,130,0],[126,0,131,0],[127,0,132,0],[128,2,125,0],[128,11,125,0,"_deriveCadenceByNetwork"],[128,35,125,0],[129,4,125,0,"_deriveCadenceByNetwork"],[129,27,125,0],[129,30,125,0,"_asyncToGenerator"],[129,47,125,0],[129,48,103,0],[129,59,103,41,"_ref"],[129,63,103,45],[129,65,103,47],[130,6,104,2],[130,10,105,4,"network"],[130,17,105,11],[130,20,107,6,"_ref"],[130,24,107,10],[130,25,105,4,"network"],[130,32,105,11],[131,8,106,4,"template"],[131,16,106,12],[131,19,107,6,"_ref"],[131,23,107,10],[131,24,106,4,"template"],[131,32,106,12],[132,6,108,2,"utilInvariant"],[132,19,108,15],[132,20,108,16,"invariant"],[132,29,108,25],[132,30,108,26,"template"],[132,38,108,34],[132,39,108,35,"f_version"],[132,48,108,44],[132,53,108,49],[132,60,108,56],[132,62,108,58],[132,137,108,133],[132,138,108,134],[133,6,109,2],[133,10,109,8,"networkDependencies"],[133,29,109,27],[133,32,109,30,"Object"],[133,38,109,36],[133,39,109,37,"keys"],[133,43,109,41],[133,44,109,42,"template"],[133,52,109,50],[133,54,109,52,"data"],[133,58,109,56],[133,60,109,58,"dependencies"],[133,72,109,70],[133,73,109,71],[133,74,109,72,"map"],[133,77,109,75],[133,78,109,76,"dependencyPlaceholder"],[133,99,109,97],[133,103,109,101],[134,8,110,4],[134,12,110,10,"dependencyNetworkContracts"],[134,38,110,36],[134,41,110,39,"Object"],[134,47,110,45],[134,48,110,46,"values"],[134,54,110,52],[134,55,110,53,"template"],[134,63,110,61],[134,65,110,63,"data"],[134,69,110,67],[134,71,110,69,"dependencies"],[134,83,110,81],[134,86,110,84,"dependencyPlaceholder"],[134,107,110,105],[134,108,110,106],[134,109,110,107],[135,8,111,4,"utilInvariant"],[135,21,111,17],[135,22,111,18,"invariant"],[135,31,111,27],[135,32,111,28,"dependencyNetworkContracts"],[135,58,111,54],[135,63,111,59,"undefined"],[135,72,111,68],[135,74,111,70],[135,159,111,155,"dependencyPlaceholder"],[135,180,111,176],[135,182,111,178],[135,183,111,179],[136,8,112,4,"utilInvariant"],[136,21,112,17],[136,22,112,18,"invariant"],[136,31,112,27],[136,32,112,28,"dependencyNetworkContracts"],[136,58,112,54],[136,59,112,55,"length"],[136,65,112,61],[136,68,112,64],[136,69,112,65],[136,71,112,67],[136,156,112,152,"dependencyPlaceholder"],[136,177,112,173],[136,179,112,175],[136,180,112,176],[137,8,113,4],[137,12,113,10,"dependencyContract"],[137,30,113,28],[137,33,113,31,"dependencyNetworkContracts"],[137,59,113,57],[137,60,113,58],[137,61,113,59],[137,62,113,60],[138,8,114,4],[138,12,114,10,"dependencyContractForNetwork"],[138,40,114,38],[138,43,114,41,"dependencyContract"],[138,61,114,59],[138,64,114,62,"network"],[138,71,114,69],[138,72,114,70],[139,8,115,4,"utilInvariant"],[139,21,115,17],[139,22,115,18,"invariant"],[139,31,115,27],[139,32,115,28,"dependencyContractForNetwork"],[139,60,115,56],[139,62,115,58],[139,109,115,105,"network"],[139,116,115,112],[139,156,115,152,"dependencyPlaceholder"],[139,177,115,173],[139,179,115,175],[139,180,115,176],[140,8,116,4],[140,15,116,11],[140,16,116,12,"dependencyPlaceholder"],[140,37,116,33],[140,39,116,35,"dependencyContractForNetwork"],[140,67,116,63],[140,69,116,65,"address"],[140,76,116,72],[140,77,116,73],[141,6,117,2],[141,7,117,3],[141,8,117,4],[142,6,118,2],[142,13,118,9,"networkDependencies"],[142,32,118,28],[142,33,118,29,"reduce"],[142,39,118,35],[142,40,118,36],[142,41,118,37,"cadence"],[142,48,118,44],[142,50,118,46,"_ref2"],[142,55,118,51],[142,60,118,56],[143,8,119,4],[143,12,119,4,"_ref38"],[143,18,119,4],[143,21,119,4,"_slicedToArray"],[143,35,119,4],[143,36,119,33,"_ref2"],[143,41,119,38],[144,10,119,9,"placeholder"],[144,21,119,20],[144,24,119,20,"_ref38"],[144,30,119,20],[145,10,119,22,"address"],[145,17,119,29],[145,20,119,29,"_ref38"],[145,26,119,29],[146,8,120,4],[146,12,120,10,"regex"],[146,17,120,15],[146,20,120,18],[146,24,120,22,"RegExp"],[146,30,120,28],[146,31,120,29],[146,37,120,35],[146,40,120,38,"placeholder"],[146,51,120,49],[146,54,120,52],[146,60,120,58],[146,62,120,60],[146,65,120,63],[146,66,120,64],[147,8,121,4],[147,15,121,11,"cadence"],[147,22,121,18],[147,23,121,19,"replace"],[147,30,121,26],[147,31,121,27,"regex"],[147,36,121,32],[147,38,121,34,"address"],[147,45,121,41],[147,46,121,42],[148,6,122,2],[148,7,122,3],[148,9,122,5,"template"],[148,17,122,13],[148,18,122,14,"data"],[148,22,122,18],[148,23,122,19,"cadence"],[148,30,122,26],[148,31,122,27],[149,4,123,0],[149,5,123,1],[150,4,123,1],[150,11,123,1,"_deriveCadenceByNetwork"],[150,34,123,1],[150,35,123,1,"apply"],[150,40,123,1],[150,47,123,1,"arguments"],[150,56,123,1],[151,2,123,1],[152,2,133,0],[152,11,133,9,"replaceStringImports"],[152,31,133,29,"replaceStringImports"],[152,32,133,30,"_ref"],[152,36,133,34],[152,38,133,36],[153,4,134,2],[153,8,135,4,"cadence"],[153,15,135,11],[153,18,137,6,"_ref"],[153,22,137,10],[153,23,135,4,"cadence"],[153,30,135,11],[154,6,136,4,"networkDependencies"],[154,25,136,23],[154,28,137,6,"_ref"],[154,32,137,10],[154,33,136,4,"networkDependencies"],[154,52,136,23],[155,4,138,2],[155,11,138,9,"Object"],[155,17,138,15],[155,18,138,16,"keys"],[155,22,138,20],[155,23,138,21,"networkDependencies"],[155,42,138,40],[155,43,138,41],[155,44,138,42,"reduce"],[155,50,138,48],[155,51,138,49],[155,52,138,50,"c"],[155,53,138,51],[155,55,138,53,"contractName"],[155,67,138,65],[155,72,138,70],[156,6,139,4],[156,10,139,10,"address"],[156,17,139,17],[156,20,139,20,"networkDependencies"],[156,39,139,39],[156,40,139,40,"contractName"],[156,52,139,52],[156,53,139,53],[157,6,140,4],[157,10,140,10,"regex"],[157,15,140,15],[157,18,140,18],[157,22,140,22,"RegExp"],[157,28,140,28],[157,29,140,29],[157,43,140,43,"contractName"],[157,55,140,55],[157,61,140,61],[157,63,140,63],[157,66,140,66],[157,67,140,67],[158,6,141,4],[158,13,141,11,"c"],[158,14,141,12],[158,15,141,13,"replace"],[158,22,141,20],[158,23,141,21,"regex"],[158,28,141,26],[158,30,141,28],[158,40,141,38,"contractName"],[158,52,141,50],[158,61,141,59,"address"],[158,68,141,66],[158,70,141,68],[158,71,141,69],[159,4,142,2],[159,5,142,3],[159,7,142,5,"cadence"],[159,14,142,12],[159,15,142,13],[160,2,143,0],[162,2,145,0],[163,0,146,0],[164,0,147,0],[165,0,148,0],[166,0,149,0],[167,0,150,0],[168,0,151,0],[169,0,152,0],[170,2,145,0],[170,11,153,15,"deriveCadenceByNetwork110"],[170,36,153,40,"deriveCadenceByNetwork110"],[170,37,153,40,"_x4"],[170,40,153,40],[171,4,153,40],[171,11,153,40,"_deriveCadenceByNetwork2"],[171,35,153,40],[171,36,153,40,"apply"],[171,41,153,40],[171,48,153,40,"arguments"],[171,57,153,40],[172,2,153,40],[173,2,182,0],[174,0,183,0],[175,0,184,0],[176,0,185,0],[177,0,186,0],[178,0,187,0],[179,0,188,0],[180,0,189,0],[181,2,182,0],[181,11,182,0,"_deriveCadenceByNetwork2"],[181,36,182,0],[182,4,182,0,"_deriveCadenceByNetwork2"],[182,28,182,0],[182,31,182,0,"_asyncToGenerator"],[182,48,182,0],[182,49,153,0],[182,60,153,41,"_ref"],[182,64,153,45],[182,66,153,47],[183,6,154,2],[183,10,155,4,"network"],[183,17,155,11],[183,20,157,6,"_ref"],[183,24,157,10],[183,25,155,4,"network"],[183,32,155,11],[184,8,156,4,"template"],[184,16,156,12],[184,19,157,6,"_ref"],[184,23,157,10],[184,24,156,4,"template"],[184,32,156,12],[185,6,158,2,"utilInvariant"],[185,19,158,15],[185,20,158,16,"invariant"],[185,29,158,25],[185,30,158,26,"template"],[185,38,158,34],[185,39,158,35,"f_version"],[185,48,158,44],[185,53,158,49],[185,60,158,56],[185,62,158,58],[185,137,158,133],[185,138,158,134],[187,6,160,2],[188,6,161,2],[188,10,161,8,"networkDependencies"],[188,29,161,27],[188,32,161,30],[188,33,161,31],[188,34,161,32],[189,6,162,2,"template"],[189,14,162,10],[189,16,162,12,"data"],[189,20,162,16],[189,22,162,18,"dependencies"],[189,34,162,30],[189,35,162,31,"forEach"],[189,42,162,38],[189,43,162,39,"dependency"],[189,53,162,49],[189,57,162,53],[190,8,163,4,"dependency"],[190,18,163,14],[190,19,163,15,"contracts"],[190,28,163,24],[190,29,163,25,"forEach"],[190,36,163,32],[190,37,163,33,"contract"],[190,45,163,41],[190,49,163,45],[191,10,164,6],[191,14,164,12,"contractName"],[191,26,164,24],[191,29,164,27,"contract"],[191,37,164,35],[191,38,164,36,"contract"],[191,46,164,44],[192,10,165,6,"contract"],[192,18,165,14],[192,19,165,15,"networks"],[192,27,165,23],[192,28,165,24,"forEach"],[192,35,165,31],[192,36,165,32,"net"],[192,39,165,35],[192,43,165,39],[193,12,166,8],[193,16,166,12,"net"],[193,19,166,15],[193,20,166,16,"network"],[193,27,166,23],[193,32,166,28,"network"],[193,39,166,35],[193,41,166,37],[194,14,167,10,"networkDependencies"],[194,33,167,29],[194,34,167,30,"contractName"],[194,46,167,42],[194,47,167,43],[194,50,167,46,"net"],[194,53,167,49],[194,54,167,50,"address"],[194,61,167,57],[195,12,168,8],[196,10,169,6],[196,11,169,7],[196,12,169,8],[197,10,170,6,"utilInvariant"],[197,23,170,19],[197,24,170,20,"invariant"],[197,33,170,29],[197,34,170,30,"networkDependencies"],[197,53,170,49],[197,54,170,50,"contractName"],[197,66,170,62],[197,67,170,63],[197,72,170,68,"undefined"],[197,81,170,77],[197,83,170,79],[197,157,170,153,"network"],[197,164,170,160],[197,168,170,164,"contractName"],[197,180,170,176],[197,182,170,178],[197,183,170,179],[198,8,171,4],[198,9,171,5],[198,10,171,6],[199,6,172,2],[199,7,172,3],[199,8,172,4],[200,6,173,2,"utilInvariant"],[200,19,173,15],[200,20,173,16,"invariant"],[200,29,173,25],[200,30,173,26,"Object"],[200,36,173,32],[200,37,173,33,"keys"],[200,41,173,37],[200,42,173,38,"networkDependencies"],[200,61,173,57],[200,62,173,58],[200,63,173,59,"length"],[200,69,173,65],[200,74,173,70,"template"],[200,82,173,78],[200,84,173,80,"data"],[200,88,173,84],[200,90,173,86,"dependencies"],[200,102,173,98],[200,103,173,99,"length"],[200,109,173,105],[200,111,173,107],[200,193,173,189,"networkDependencies"],[200,212,173,208],[200,214,173,210],[200,215,173,211],[201,6,174,2,"utilInvariant"],[201,19,174,15],[201,20,174,16,"invariant"],[201,29,174,25],[201,30,174,26,"Object"],[201,36,174,32],[201,37,174,33,"keys"],[201,41,174,37],[201,42,174,38,"networkDependencies"],[201,61,174,57],[201,62,174,58],[201,63,174,59,"length"],[201,69,174,65],[201,74,174,70,"Object"],[201,80,174,76],[201,81,174,77,"values"],[201,87,174,83],[201,88,174,84,"networkDependencies"],[201,107,174,103],[201,108,174,104],[201,109,174,105,"length"],[201,115,174,111],[201,117,174,113],[201,190,174,186,"network"],[201,197,174,193],[201,216,174,212,"networkDependencies"],[201,235,174,231],[201,237,174,233],[201,238,174,234],[202,6,175,2,"utilInvariant"],[202,19,175,15],[202,20,175,16,"invariant"],[202,29,175,25],[202,30,175,26,"template"],[202,38,175,34],[202,40,175,36,"data"],[202,44,175,40],[202,46,175,42,"cadence"],[202,53,175,49],[202,55,175,51,"body"],[202,59,175,55],[202,61,175,57],[202,123,175,119,"networkDependencies"],[202,142,175,138],[202,144,175,140],[202,145,175,141],[203,6,176,2],[203,13,176,9,"replaceStringImports"],[203,33,176,29],[203,34,176,30],[204,8,177,4,"cadence"],[204,15,177,11],[204,17,177,13,"template"],[204,25,177,21],[204,27,177,23,"data"],[204,31,177,27],[204,33,177,29,"cadence"],[204,40,177,36],[204,42,177,38,"body"],[204,46,177,42],[205,8,178,4,"networkDependencies"],[206,6,179,2],[206,7,179,3],[206,8,179,4],[207,4,180,0],[207,5,180,1],[208,4,180,1],[208,11,180,1,"_deriveCadenceByNetwork2"],[208,35,180,1],[208,36,180,1,"apply"],[208,41,180,1],[208,48,180,1,"arguments"],[208,57,180,1],[209,2,180,1],[210,2,180,1],[210,11,190,15,"deriveCadenceByNetwork"],[210,33,190,37,"deriveCadenceByNetwork"],[210,34,190,37,"_x5"],[210,37,190,37],[211,4,190,37],[211,11,190,37,"_deriveCadenceByNetwork3"],[211,35,190,37],[211,36,190,37,"apply"],[211,41,190,37],[211,48,190,37,"arguments"],[211,57,190,37],[212,2,190,37],[213,2,190,37],[213,11,190,37,"_deriveCadenceByNetwork3"],[213,36,190,37],[214,4,190,37,"_deriveCadenceByNetwork3"],[214,28,190,37],[214,31,190,37,"_asyncToGenerator"],[214,48,190,37],[214,49,190,0],[214,60,190,38,"_ref"],[214,64,190,42],[214,66,190,44],[215,6,191,2],[215,10,192,4,"network"],[215,17,192,11],[215,20,194,6,"_ref"],[215,24,194,10],[215,25,192,4,"network"],[215,32,192,11],[216,8,193,4,"template"],[216,16,193,12],[216,19,194,6,"_ref"],[216,23,194,10],[216,24,193,4,"template"],[216,32,193,12],[217,6,195,2,"utilInvariant"],[217,19,195,15],[217,20,195,16,"invariant"],[217,29,195,25],[217,30,195,26,"network"],[217,37,195,33],[217,41,195,37,"undefined"],[217,50,195,46],[217,52,195,48],[217,116,195,112],[217,117,195,113],[218,6,196,2,"utilInvariant"],[218,19,196,15],[218,20,196,16,"invariant"],[218,29,196,25],[218,30,196,26],[218,37,196,33,"network"],[218,44,196,40],[218,49,196,45],[218,57,196,53],[218,59,196,55],[218,124,196,120],[218,125,196,121],[219,6,197,2,"utilInvariant"],[219,19,197,15],[219,20,197,16,"invariant"],[219,29,197,25],[219,30,197,26,"template"],[219,38,197,34],[219,42,197,38,"undefined"],[219,51,197,47],[219,53,197,49],[219,119,197,115],[219,120,197,116],[220,6,198,2,"utilInvariant"],[220,19,198,15],[220,20,198,16,"invariant"],[220,29,198,25],[220,30,198,26],[220,37,198,33,"template"],[220,45,198,41],[220,50,198,46],[220,58,198,54],[220,60,198,56],[220,128,198,124],[220,129,198,125],[221,6,199,2,"utilInvariant"],[221,19,199,15],[221,20,199,16,"invariant"],[221,29,199,25],[221,30,199,26,"template"],[221,38,199,34],[221,39,199,35,"f_type"],[221,45,199,41],[221,50,199,46],[221,71,199,67],[221,73,199,69],[221,154,199,150],[221,155,199,151],[222,6,200,2],[222,14,200,10,"template"],[222,22,200,18],[222,23,200,19,"f_version"],[222,32,200,28],[223,8,201,4],[223,13,201,9],[223,20,201,16],[224,10,202,6],[224,23,202,19,"deriveCadenceByNetwork110"],[224,48,202,44],[224,49,202,45],[225,12,203,8,"network"],[225,19,203,15],[226,12,204,8,"template"],[227,10,205,6],[227,11,205,7],[227,12,205,8],[228,8,206,4],[228,13,206,9],[228,20,206,16],[229,10,207,6],[229,23,207,19,"deriveCadenceByNetwork100"],[229,48,207,44],[229,49,207,45],[230,12,208,8,"network"],[230,19,208,15],[231,12,209,8,"template"],[232,10,210,6],[232,11,210,7],[232,12,210,8],[233,8,211,4],[234,10,212,6],[234,16,212,12],[234,20,212,16,"Error"],[234,25,212,21],[234,26,212,22],[234,86,212,82],[234,87,212,83],[235,6,213,2],[236,4,214,0],[236,5,214,1],[237,4,214,1],[237,11,214,1,"_deriveCadenceByNetwork3"],[237,35,214,1],[237,36,214,1,"apply"],[237,41,214,1],[237,48,214,1,"arguments"],[237,57,214,1],[238,2,214,1],[239,2,214,1],[239,11,216,15,"fetchChainId"],[239,23,216,27,"fetchChainId"],[239,24,216,27],[240,4,216,27],[240,11,216,27,"_fetchChainId"],[240,24,216,27],[240,25,216,27,"apply"],[240,30,216,27],[240,37,216,27,"arguments"],[240,46,216,27],[241,2,216,27],[241,4,222,0],[242,2,223,0],[243,2,223,0],[243,11,223,0,"_fetchChainId"],[243,25,223,0],[244,4,223,0,"_fetchChainId"],[244,17,223,0],[244,20,223,0,"_asyncToGenerator"],[244,37,223,0],[244,38,216,0],[244,51,216,30],[245,6,217,2],[245,10,217,6,"opts"],[245,14,217,10],[245,17,217,13,"arguments"],[245,26,217,22],[245,27,217,23,"length"],[245,33,217,29],[245,36,217,32],[245,37,217,33],[245,41,217,37,"arguments"],[245,50,217,46],[245,51,217,47],[245,52,217,48],[245,53,217,49],[245,58,217,54,"undefined"],[245,67,217,63],[245,70,217,66,"arguments"],[245,79,217,75],[245,80,217,76],[245,81,217,77],[245,82,217,78],[245,85,217,81],[245,86,217,82],[245,87,217,83],[246,6,218,2],[246,10,218,8,"response"],[246,18,218,16],[246,27,218,25,"sdk__namespace"],[246,41,218,39],[246,42,218,40,"send"],[246,46,218,44],[246,47,218,45],[246,48,218,46,"sdk__namespace"],[246,62,218,60],[246,63,218,61,"getNetworkParameters"],[246,83,218,81],[246,84,218,82],[246,85,218,83],[246,86,218,84],[246,88,218,86,"opts"],[246,92,218,90],[246,93,218,91],[246,94,218,92,"then"],[246,98,218,96],[246,99,218,97,"sdk__namespace"],[246,113,218,111],[246,114,218,112,"decode"],[246,120,218,118],[246,121,218,119],[247,6,219,2],[247,13,219,9,"response"],[247,21,219,17],[247,22,219,18,"chainId"],[247,29,219,25],[248,4,220,0],[248,5,220,1],[249,4,220,1],[249,11,220,1,"_fetchChainId"],[249,24,220,1],[249,25,220,1,"apply"],[249,30,220,1],[249,37,220,1,"arguments"],[249,46,220,1],[250,2,220,1],[251,2,224,0],[251,6,224,4,"chainIdCache"],[251,18,224,16],[251,21,224,19],[251,22,224,20],[251,23,224,21],[252,2,225,0],[252,6,225,4,"hasWarnedEnv"],[252,18,225,16],[252,21,225,19],[252,26,225,24],[254,2,227,0],[255,0,228,0],[256,0,229,0],[257,0,230,0],[258,0,231,0],[259,0,232,0],[260,0,233,0],[261,0,234,0],[262,0,235,0],[263,0,236,0],[264,0,237,0],[265,0,238,0],[266,2,227,0],[266,11,239,15,"getChainId"],[266,21,239,25,"getChainId"],[266,22,239,25],[267,4,239,25],[267,11,239,25,"_getChainId"],[267,22,239,25],[267,23,239,25,"apply"],[267,28,239,25],[267,35,239,25,"arguments"],[267,44,239,25],[268,2,239,25],[269,2,299,0],[270,0,300,0],[271,0,301,0],[272,0,302,0],[273,0,303,0],[274,0,304,0],[275,0,305,0],[276,2,299,0],[276,11,299,0,"_getChainId"],[276,23,299,0],[277,4,299,0,"_getChainId"],[277,15,299,0],[277,18,299,0,"_asyncToGenerator"],[277,35,299,0],[277,36,239,0],[277,49,239,28],[278,6,240,2],[278,10,240,6,"opts"],[278,14,240,10],[278,17,240,13,"arguments"],[278,26,240,22],[278,27,240,23,"length"],[278,33,240,29],[278,36,240,32],[278,37,240,33],[278,41,240,37,"arguments"],[278,50,240,46],[278,51,240,47],[278,52,240,48],[278,53,240,49],[278,58,240,54,"undefined"],[278,67,240,63],[278,70,240,66,"arguments"],[278,79,240,75],[278,80,240,76],[278,81,240,77],[278,82,240,78],[278,85,240,81],[278,86,240,82],[278,87,240,83],[279,6,241,2],[279,10,241,6,"flowNetworkCfg"],[279,24,241,20],[279,33,241,29,"config"],[279,39,241,35],[279,40,241,36,"config"],[279,46,241,42],[279,47,241,43,"get"],[279,50,241,46],[279,51,241,47],[279,65,241,61],[279,66,241,62],[280,6,242,2],[280,10,242,6,"envCfg"],[280,16,242,12],[280,25,242,21,"config"],[280,31,242,27],[280,32,242,28,"config"],[280,38,242,34],[280,39,242,35,"get"],[280,42,242,38],[280,43,242,39],[280,48,242,44],[280,49,242,45],[281,6,243,2],[281,10,243,6,"envCfg"],[281,16,243,12],[281,20,243,16],[281,21,243,17,"hasWarnedEnv"],[281,33,243,29],[281,35,243,31],[282,8,244,4,"logger"],[282,14,244,10],[282,15,244,11,"log"],[282,18,244,14],[282,19,244,15,"deprecate"],[282,28,244,24],[282,29,244,25],[283,10,245,6,"pkg"],[283,13,245,9],[283,15,245,11],[283,20,245,16],[284,10,246,6,"subject"],[284,17,246,13],[284,19,246,15],[284,86,246,82],[285,10,247,6,"message"],[285,17,247,13],[285,19,247,15],[285,78,247,74],[286,10,248,6,"transition"],[286,20,248,16],[286,22,248,18],[287,8,249,4],[287,9,249,5],[287,10,249,6],[288,8,250,4,"hasWarnedEnv"],[288,20,250,16],[288,23,250,19],[288,27,250,23],[289,6,251,2],[290,6,252,2],[290,10,252,8,"accessNode"],[290,20,252,18],[290,23,252,21,"opts"],[290,27,252,25],[290,28,252,26,"node"],[290,32,252,30],[290,43,252,41,"config"],[290,49,252,47],[290,50,252,48,"config"],[290,56,252,54],[290,57,252,55,"get"],[290,60,252,58],[290,61,252,59],[290,77,252,75],[290,78,252,76],[290,79,252,77],[291,6,253,2],[291,10,253,6],[291,11,253,7,"accessNode"],[291,21,253,17],[291,23,253,19],[292,8,254,4],[293,8,255,4],[294,8,256,4],[295,8,257,4],[295,12,257,8,"flowNetworkCfg"],[295,26,257,22],[295,28,257,24],[296,10,258,6],[296,17,258,13,"flowNetworkCfg"],[296,31,258,27],[297,8,259,4],[297,9,259,5],[297,15,259,11],[297,19,259,15,"envCfg"],[297,25,259,21],[297,27,259,23],[298,10,260,6],[298,17,260,13,"envCfg"],[298,23,260,19],[299,8,261,4],[300,8,262,4],[300,14,262,10],[300,18,262,14,"Error"],[300,23,262,19],[300,24,262,20],[300,89,262,85],[300,90,262,86],[301,6,263,2],[303,6,265,2],[304,6,266,2],[304,10,266,6,"chainIdCache"],[304,22,266,18],[304,23,266,19,"accessNode"],[304,33,266,29],[304,34,266,30],[304,36,266,32],[305,8,267,4],[305,12,267,8],[306,10,268,6],[306,23,268,19,"chainIdCache"],[306,35,268,31],[306,36,268,32,"accessNode"],[306,46,268,42],[306,47,268,43],[307,8,269,4],[307,9,269,5],[307,10,269,6],[307,16,269,12],[307,17,269,13],[308,6,270,2],[310,6,272,2],[311,6,273,2],[312,6,274,2],[313,6,275,2],[313,10,275,6],[313,11,275,7,"chainIdCache"],[313,23,275,19],[313,24,275,20,"accessNode"],[313,34,275,30],[313,35,275,31],[313,37,275,33],[314,8,276,4,"chainIdCache"],[314,20,276,16],[314,21,276,17,"accessNode"],[314,31,276,27],[314,32,276,28],[314,35,276,31,"fetchChainId"],[314,47,276,43],[314,48,276,44,"opts"],[314,52,276,48],[314,53,276,49],[314,54,276,50,"catch"],[314,59,276,55],[314,60,276,56,"error"],[314,65,276,61],[314,69,276,65],[315,10,277,6],[316,10,278,6,"chainIdCache"],[316,22,278,18],[316,23,278,19,"accessNode"],[316,33,278,29],[316,34,278,30],[316,37,278,33],[316,41,278,37],[317,10,279,6],[317,16,279,12,"error"],[317,21,279,17],[318,8,280,4],[318,9,280,5],[318,10,280,6],[319,6,281,2],[321,6,283,2],[322,6,284,2],[322,10,284,6],[323,8,285,4],[323,21,285,17,"chainIdCache"],[323,33,285,29],[323,34,285,30,"accessNode"],[323,44,285,40],[323,45,285,41],[324,6,286,2],[324,7,286,3],[324,8,286,4],[324,15,286,11,"e"],[324,16,286,12],[324,18,286,14],[325,8,287,4],[326,8,288,4],[327,8,289,4],[328,8,290,4],[328,12,290,8,"flowNetworkCfg"],[328,26,290,22],[328,28,290,24],[329,10,291,6],[329,17,291,13,"flowNetworkCfg"],[329,31,291,27],[330,8,292,4],[330,9,292,5],[330,15,292,11],[330,19,292,15,"envCfg"],[330,25,292,21],[330,27,292,23],[331,10,293,6],[331,17,293,13,"envCfg"],[331,23,293,19],[332,8,294,4],[333,8,295,4],[333,14,295,10],[333,18,295,14,"Error"],[333,23,295,19],[333,24,295,20],[333,166,295,162,"e"],[333,167,295,163],[333,168,295,164,"message"],[333,175,295,171],[333,177,295,173],[333,178,295,174],[334,6,296,2],[335,4,297,0],[335,5,297,1],[336,4,297,1],[336,11,297,1,"_getChainId"],[336,22,297,1],[336,23,297,1,"apply"],[336,28,297,1],[336,35,297,1,"arguments"],[336,44,297,1],[337,2,297,1],[338,2,306,0],[338,11,306,9,"watchForChainIdChanges"],[338,33,306,31,"watchForChainIdChanges"],[338,34,306,31],[338,36,306,34],[339,4,307,2],[339,11,307,9,"config"],[339,17,307,15],[339,18,307,16,"config"],[339,24,307,22],[339,25,307,23,"subscribe"],[339,34,307,32],[339,35,307,33],[339,41,307,39],[340,6,308,4],[341,6,309,4,"getChainId"],[341,16,309,14],[341,17,309,15],[342,8,310,6,"enableRequestLogging"],[342,28,310,26],[342,30,310,28],[343,6,311,4],[343,7,311,5],[343,8,311,6],[343,9,311,7,"catch"],[343,14,311,12],[343,15,311,13],[343,21,311,19],[343,22,311,20],[343,23,311,21],[343,24,311,22],[344,4,312,2],[344,5,312,3],[344,6,312,4],[345,2,313,0],[346,2,313,1],[346,11,315,15,"prepTemplateOpts"],[346,27,315,31,"prepTemplateOpts"],[346,28,315,31,"_x6"],[346,31,315,31],[347,4,315,31],[347,11,315,31,"_prepTemplateOpts"],[347,28,315,31],[347,29,315,31,"apply"],[347,34,315,31],[347,41,315,31,"arguments"],[347,50,315,31],[348,2,315,31],[349,2,315,31],[349,11,315,31,"_prepTemplateOpts"],[349,29,315,31],[350,4,315,31,"_prepTemplateOpts"],[350,21,315,31],[350,24,315,31,"_asyncToGenerator"],[350,41,315,31],[350,42,315,0],[350,53,315,32,"opts"],[350,57,315,36],[350,59,315,38],[351,6,316,2],[351,10,316,6,"isString"],[351,18,316,14],[351,19,316,15,"opts"],[351,23,316,19],[351,25,316,21,"template"],[351,33,316,29],[351,34,316,30],[351,36,316,32],[352,8,317,4,"opts"],[352,12,317,8],[352,13,317,9,"template"],[352,21,317,17],[352,30,317,26,"retrieve"],[352,38,317,34],[352,39,317,35],[353,10,318,6,"url"],[353,13,318,9],[353,15,318,11,"opts"],[353,19,318,15],[353,21,318,17,"template"],[354,8,319,4],[354,9,319,5],[354,10,319,6],[355,6,320,2],[356,6,321,2],[356,10,321,8,"cadence"],[356,17,321,15],[356,20,321,18,"opts"],[356,24,321,22],[356,25,321,23,"cadence"],[356,32,321,30],[356,43,321,41,"deriveCadenceByNetwork"],[356,65,321,63],[356,66,321,64],[357,8,322,4,"template"],[357,16,322,12],[357,18,322,14,"opts"],[357,22,322,18],[357,23,322,19,"template"],[357,31,322,27],[358,8,323,4,"network"],[358,15,323,11],[358,23,323,19,"getChainId"],[358,33,323,29],[358,34,323,30,"opts"],[358,38,323,34],[359,6,324,2],[359,7,324,3],[359,8,324,4],[359,9,324,5],[360,6,325,2,"opts"],[360,10,325,6],[360,11,325,7,"cadence"],[360,18,325,14],[360,21,325,17,"cadence"],[360,28,325,24],[361,6,326,2],[361,13,326,9,"opts"],[361,17,326,13],[362,4,327,0],[362,5,327,1],[363,4,327,1],[363,11,327,1,"_prepTemplateOpts"],[363,28,327,1],[363,29,327,1,"apply"],[363,34,327,1],[363,41,327,1,"arguments"],[363,50,327,1],[364,2,327,1],[365,2,327,1],[365,11,329,15,"pre"],[365,14,329,18,"pre"],[365,15,329,18,"_x7"],[365,18,329,18],[365,20,329,18,"_x8"],[365,23,329,18],[366,4,329,18],[366,11,329,18,"_pre"],[366,15,329,18],[366,16,329,18,"apply"],[366,21,329,18],[366,28,329,18,"arguments"],[366,37,329,18],[367,2,329,18],[368,2,329,18],[368,11,329,18,"_pre"],[368,16,329,18],[369,4,329,18,"_pre"],[369,8,329,18],[369,11,329,18,"_asyncToGenerator"],[369,28,329,18],[369,29,329,0],[369,40,329,19,"type"],[369,44,329,23],[369,46,329,25,"opts"],[369,50,329,29],[369,52,329,31],[370,6,330,2],[371,6,331,2,"utilInvariant"],[371,19,331,15],[371,20,331,16,"invariant"],[371,29,331,25],[371,30,331,26,"isRequired"],[371,40,331,36],[371,41,331,37,"opts"],[371,45,331,41],[371,46,331,42],[371,48,331,44],[371,51,331,47,"type"],[371,55,331,51],[371,83,331,79],[371,84,331,80],[372,6,332,2],[373,6,333,2,"utilInvariant"],[373,19,333,15],[373,20,333,16,"invariant"],[373,29,333,25],[373,30,333,26,"isObject"],[373,38,333,34],[373,39,333,35,"opts"],[373,43,333,39],[373,44,333,40],[373,46,333,42],[373,49,333,45,"type"],[373,53,333,49],[373,87,333,83],[373,88,333,84],[374,6,334,2],[375,6,335,2,"utilInvariant"],[375,19,335,15],[375,20,335,16,"invariant"],[375,29,335,25],[375,30,335,26],[375,32,335,28,"opts"],[375,36,335,32],[375,37,335,33,"cadence"],[375,44,335,40],[375,48,335,44,"opts"],[375,52,335,48],[375,53,335,49,"template"],[375,61,335,57],[375,62,335,58],[375,64,335,60],[375,67,335,63,"type"],[375,71,335,67],[375,137,335,133],[375,138,335,134],[376,6,336,2],[377,6,337,2,"utilInvariant"],[377,19,337,15],[377,20,337,16,"invariant"],[377,29,337,25],[377,30,337,26,"isRequired"],[377,40,337,36],[377,41,337,37,"opts"],[377,45,337,41],[377,46,337,42,"cadence"],[377,53,337,49],[377,57,337,53,"opts"],[377,61,337,57],[377,63,337,59,"template"],[377,71,337,67],[377,72,337,68],[377,74,337,70],[377,77,337,73,"type"],[377,81,337,77],[377,119,337,115],[377,120,337,116],[378,6,338,2],[379,6,339,2,"utilInvariant"],[379,19,339,15],[379,20,339,16,"invariant"],[379,29,339,25],[379,30,339,26,"isString"],[379,38,339,34],[379,39,339,35,"opts"],[379,43,339,39],[379,44,339,40,"cadence"],[379,51,339,47],[379,52,339,48],[379,56,339,52,"opts"],[379,60,339,56],[379,62,339,58,"template"],[379,70,339,66],[379,72,339,68],[379,75,339,71,"type"],[379,79,339,75],[379,122,339,118],[379,123,339,119],[380,6,340,2],[381,6,341,2,"utilInvariant"],[381,19,341,15],[381,20,341,16,"invariant"],[381,29,341,25],[381,36,341,32,"sdk__namespace"],[381,50,341,46],[381,51,341,47,"config"],[381,57,341,53],[381,58,341,54],[381,59,341,55],[381,60,341,56,"get"],[381,63,341,59],[381,64,341,60],[381,80,341,76],[381,81,341,77],[381,83,341,79],[381,86,341,82,"type"],[381,90,341,86],[381,167,341,163],[381,263,341,259],[381,265,341,261],[381,266,341,262],[382,4,342,0],[382,5,342,1],[383,4,342,1],[383,11,342,1,"_pre"],[383,15,342,1],[383,16,342,1,"apply"],[383,21,342,1],[383,28,342,1,"arguments"],[383,37,342,1],[384,2,342,1],[385,2,342,1],[385,11,343,15,"preMutate"],[385,20,343,24,"preMutate"],[385,21,343,24,"_x9"],[385,24,343,24],[386,4,343,24],[386,11,343,24,"_preMutate"],[386,21,343,24],[386,22,343,24,"apply"],[386,27,343,24],[386,34,343,24,"arguments"],[386,43,343,24],[387,2,343,24],[388,2,343,24],[388,11,343,24,"_preMutate"],[388,22,343,24],[389,4,343,24,"_preMutate"],[389,14,343,24],[389,17,343,24,"_asyncToGenerator"],[389,34,343,24],[389,35,343,0],[389,46,343,25,"opts"],[389,50,343,29],[389,52,343,31],[390,6,344,2],[390,13,344,9,"pre"],[390,16,344,12],[390,17,344,13],[390,25,344,21],[390,27,344,23,"opts"],[390,31,344,27],[390,32,344,28],[391,4,345,0],[391,5,345,1],[392,4,345,1],[392,11,345,1,"_preMutate"],[392,21,345,1],[392,22,345,1,"apply"],[392,27,345,1],[392,34,345,1,"arguments"],[392,43,345,1],[393,2,345,1],[394,2,345,1],[394,11,346,15,"preQuery"],[394,19,346,23,"preQuery"],[394,20,346,23,"_x10"],[394,24,346,23],[395,4,346,23],[395,11,346,23,"_preQuery"],[395,20,346,23],[395,21,346,23,"apply"],[395,26,346,23],[395,33,346,23,"arguments"],[395,42,346,23],[396,2,346,23],[397,2,350,0],[398,0,351,0],[399,0,352,0],[400,0,353,0],[401,0,354,0],[402,0,355,0],[403,0,356,0],[404,0,357,0],[405,0,358,0],[406,0,359,0],[407,0,360,0],[408,0,361,0],[409,0,362,0],[410,0,363,0],[411,0,364,0],[412,0,365,0],[413,0,366,0],[414,0,367,0],[415,0,368,0],[416,0,369,0],[417,0,370,0],[418,0,371,0],[419,0,372,0],[420,0,373,0],[421,0,374,0],[422,0,375,0],[423,0,376,0],[424,0,377,0],[425,2,350,0],[425,11,350,0,"_preQuery"],[425,21,350,0],[426,4,350,0,"_preQuery"],[426,13,350,0],[426,16,350,0,"_asyncToGenerator"],[426,33,350,0],[426,34,346,0],[426,45,346,24,"opts"],[426,49,346,28],[426,51,346,30],[427,6,347,2],[427,13,347,9,"pre"],[427,16,347,12],[427,17,347,13],[427,24,347,20],[427,26,347,22,"opts"],[427,30,347,26],[427,31,347,27],[428,4,348,0],[428,5,348,1],[429,4,348,1],[429,11,348,1,"_preQuery"],[429,20,348,1],[429,21,348,1,"apply"],[429,26,348,1],[429,33,348,1,"arguments"],[429,42,348,1],[430,2,348,1],[431,2,348,1],[431,11,378,15,"query"],[431,16,378,20,"query"],[431,17,378,20],[432,4,378,20],[432,11,378,20,"_query"],[432,17,378,20],[432,18,378,20,"apply"],[432,23,378,20],[432,30,378,20,"arguments"],[432,39,378,20],[433,2,378,20],[434,2,378,20],[434,11,378,20,"_query"],[434,18,378,20],[435,4,378,20,"_query"],[435,10,378,20],[435,13,378,20,"_asyncToGenerator"],[435,30,378,20],[435,31,378,0],[435,44,378,23],[436,6,379,2],[436,10,379,6,"opts"],[436,14,379,10],[436,17,379,13,"arguments"],[436,26,379,22],[436,27,379,23,"length"],[436,33,379,29],[436,36,379,32],[436,37,379,33],[436,41,379,37,"arguments"],[436,50,379,46],[436,51,379,47],[436,52,379,48],[436,53,379,49],[436,58,379,54,"undefined"],[436,67,379,63],[436,70,379,66,"arguments"],[436,79,379,75],[436,80,379,76],[436,81,379,77],[436,82,379,78],[436,85,379,81],[436,86,379,82],[436,87,379,83],[437,6,380,2],[437,12,380,8,"preQuery"],[437,20,380,16],[437,21,380,17,"opts"],[437,25,380,21],[437,26,380,22],[438,6,381,2,"opts"],[438,10,381,6],[438,19,381,15,"prepTemplateOpts"],[438,35,381,31],[438,36,381,32,"opts"],[438,40,381,36],[438,41,381,37],[439,6,382,2],[439,13,382,9,"sdk__namespace"],[439,27,382,23],[439,28,382,24,"send"],[439,32,382,28],[439,33,382,29],[439,34,382,30,"sdk__namespace"],[439,48,382,44],[439,49,382,45,"script"],[439,55,382,51],[439,56,382,52,"opts"],[439,60,382,56],[439,61,382,57,"cadence"],[439,68,382,64],[439,69,382,65],[439,71,382,67,"sdk__namespace"],[439,85,382,81],[439,86,382,82,"args"],[439,90,382,86],[439,91,382,87,"normalizeArgs"],[439,104,382,100],[439,105,382,101,"opts"],[439,109,382,105],[439,110,382,106,"args"],[439,114,382,110],[439,118,382,114],[439,120,382,116],[439,121,382,117],[439,122,382,118],[439,124,382,120,"opts"],[439,128,382,124],[439,129,382,125,"limit"],[439,134,382,130],[439,138,382,134],[439,145,382,141,"opts"],[439,149,382,145],[439,150,382,146,"limit"],[439,155,382,151],[439,160,382,156],[439,168,382,164],[439,172,382,168,"sdk__namespace"],[439,186,382,182],[439,187,382,183,"limit"],[439,192,382,188],[439,193,382,189,"opts"],[439,197,382,193],[439,198,382,194,"limit"],[439,203,382,199],[439,204,382,200],[439,205,382,201],[439,206,382,202],[439,207,382,203,"then"],[439,211,382,207],[439,212,382,208,"sdk__namespace"],[439,226,382,222],[439,227,382,223,"decode"],[439,233,382,229],[439,234,382,230],[440,4,383,0],[440,5,383,1],[441,4,383,1],[441,11,383,1,"_query"],[441,17,383,1],[441,18,383,1,"apply"],[441,23,383,1],[441,30,383,1,"arguments"],[441,39,383,1],[442,2,383,1],[443,2,385,0],[443,6,385,6,"FCL_REDIRECT_URL_PARAM_NAME"],[443,33,385,33],[443,36,385,36],[443,54,385,54],[444,2,386,0],[444,6,386,6,"FCL_RESPONSE_PARAM_NAME"],[444,29,386,29],[444,32,386,32],[444,49,386,49],[445,2,387,0],[445,6,387,6,"CORE_STRATEGIES"],[445,21,387,21],[445,24,387,24],[446,4,388,2],[446,14,388,12],[446,16,388,14],[446,26,388,24],[447,4,389,2],[447,15,389,13],[447,17,389,15],[447,28,389,26],[448,4,390,2],[448,16,390,14],[448,18,390,16],[448,30,390,28],[449,4,391,2],[449,13,391,11],[449,15,391,13],[449,24,391,22],[450,4,392,2],[450,13,392,11],[450,15,392,13],[450,24,392,22],[451,4,393,2],[451,13,393,11],[451,15,393,13],[451,24,393,22],[452,4,394,2],[452,18,394,16],[452,20,394,18],[453,2,395,0],[453,3,395,1],[455,2,397,0],[456,0,398,0],[457,0,399,0],[458,0,400,0],[459,0,401,0],[460,0,402,0],[461,0,403,0],[462,0,404,0],[463,2,405,0],[463,6,405,6,"onMessageFromFCL"],[463,22,405,22],[463,25,405,25],[463,34,405,25,"onMessageFromFCL"],[463,35,405,35,"messageType"],[463,46,405,46],[463,48,405,48],[464,4,406,2],[464,8,406,6,"cb"],[464,10,406,8],[464,13,406,11,"arguments"],[464,22,406,20],[464,23,406,21,"length"],[464,29,406,27],[464,32,406,30],[464,33,406,31],[464,37,406,35,"arguments"],[464,46,406,44],[464,47,406,45],[464,48,406,46],[464,49,406,47],[464,54,406,52,"undefined"],[464,63,406,61],[464,66,406,64,"arguments"],[464,75,406,73],[464,76,406,74],[464,77,406,75],[464,78,406,76],[464,81,406,79],[464,87,406,85],[464,88,406,86],[464,89,406,87],[465,4,407,2],[465,8,407,8,"buildData"],[465,17,407,17],[465,20,407,20,"data"],[465,24,407,24],[465,28,407,28],[466,6,408,4],[466,10,408,8,"data"],[466,14,408,12],[466,15,408,13,"deprecated"],[466,25,408,23],[466,27,408,25,"console"],[466,34,408,32],[466,35,408,33,"warn"],[466,39,408,37],[466,40,408,38],[466,60,408,58],[466,62,408,60,"data"],[466,66,408,64],[466,67,408,65,"deprecated"],[466,77,408,75],[466,78,408,76,"message"],[466,85,408,83],[466,86,408,84],[467,6,409,4],[467,13,409,11,"data"],[467,17,409,15],[467,19,409,17,"body"],[467,23,409,21],[467,25,409,23,"interaction"],[467,36,409,34],[468,6,410,4],[468,13,410,11,"data"],[468,17,410,15],[469,4,411,2],[469,5,411,3],[470,4,412,2],[470,8,412,8,"internal"],[470,16,412,16],[470,19,412,19,"e"],[470,20,412,20],[470,24,412,24],[471,6,413,4],[471,10,414,6,"data"],[471,14,414,10],[471,17,415,8,"e"],[471,18,415,9],[471,19,414,6,"data"],[471,23,414,10],[472,6,416,4],[472,10,416,8],[472,17,416,15,"data"],[472,21,416,19],[472,26,416,24],[472,34,416,32],[472,36,416,34],[473,6,417,4],[473,10,417,8],[473,17,417,15,"data"],[473,21,417,19],[473,25,417,23],[473,29,417,27],[473,31,417,29],[474,6,418,4],[474,10,418,8,"data"],[474,14,418,12],[474,15,418,13,"type"],[474,19,418,17],[474,24,418,22,"messageType"],[474,35,418,33],[474,37,418,35],[475,6,419,4,"cb"],[475,8,419,6],[475,9,419,7,"buildData"],[475,18,419,16],[475,19,419,17,"data"],[475,23,419,21],[475,24,419,22],[475,25,419,23],[476,4,420,2],[476,5,420,3],[477,4,421,2,"window"],[477,10,421,8],[477,11,421,9,"addEventListener"],[477,27,421,25],[477,28,421,26],[477,37,421,35],[477,39,421,37,"internal"],[477,47,421,45],[477,48,421,46],[478,4,422,2],[478,11,422,9],[478,17,422,15,"window"],[478,23,422,21],[478,24,422,22,"removeEventListener"],[478,43,422,41],[478,44,422,42],[478,53,422,51],[478,55,422,53,"internal"],[478,63,422,61],[478,64,422,62],[479,2,423,0],[479,3,423,1],[480,2,425,0],[480,6,425,4,"_isReactNative"],[480,20,425,18],[480,23,425,21],[480,28,425,26],[481,2,426,0],[481,11,426,9,"isReactNative"],[481,24,426,22,"isReactNative"],[481,25,426,22],[481,27,426,25],[482,4,427,2],[482,11,427,9,"_isReactNative"],[482,25,427,23],[483,2,428,0],[484,2,429,0],[484,11,429,9,"setIsReactNative"],[484,27,429,25,"setIsReactNative"],[484,28,429,26,"value"],[484,33,429,31],[484,35,429,33],[485,4,430,2,"_isReactNative"],[485,18,430,16],[485,21,430,19,"value"],[485,26,430,24],[486,2,431,0],[488,2,433,0],[489,2,434,0],[490,2,435,0],[491,2,436,0],[493,2,438,0],[493,6,438,6,"_URL"],[493,10,438,10],[493,13,438,13,"globalThis"],[493,23,438,23],[493,24,438,24,"URL"],[493,27,438,27],[494,2,438,28],[494,6,439,6,"URL"],[494,9,439,9],[494,35,439,9,"_URL2"],[494,40,439,9],[495,4,440,2],[495,13,440,2,"URL"],[495,17,440,14,"url"],[495,20,440,17],[495,22,440,19,"base"],[495,26,440,23],[495,28,440,25],[496,6,440,25],[496,10,440,25,"_this"],[496,15,440,25],[497,6,440,25,"_classCallCheck"],[497,21,440,25],[497,28,440,25,"URL"],[497,31,440,25],[498,6,441,4],[498,11,441,9],[498,15,441,13,"_len"],[498,19,441,17],[498,22,441,20,"arguments"],[498,31,441,29],[498,32,441,30,"length"],[498,38,441,36],[498,40,441,38,"args"],[498,44,441,42],[498,47,441,45],[498,51,441,49,"Array"],[498,56,441,54],[498,57,441,55,"_len"],[498,61,441,59],[498,64,441,62],[498,65,441,63],[498,68,441,66,"_len"],[498,72,441,70],[498,75,441,73],[498,76,441,74],[498,79,441,77],[498,80,441,78],[498,81,441,79],[498,83,441,81,"_key"],[498,87,441,85],[498,90,441,88],[498,91,441,89],[498,93,441,91,"_key"],[498,97,441,95],[498,100,441,98,"_len"],[498,104,441,102],[498,106,441,104,"_key"],[498,110,441,108],[498,112,441,110],[498,114,441,112],[499,8,442,6,"args"],[499,12,442,10],[499,13,442,11,"_key"],[499,17,442,15],[499,20,442,18],[499,21,442,19],[499,22,442,20],[499,25,442,23,"arguments"],[499,34,442,32],[499,35,442,33,"_key"],[499,39,442,37],[499,40,442,38],[500,6,443,4],[501,6,444,4,"_this"],[501,11,444,4],[501,14,444,4,"_callSuper"],[501,24,444,4],[501,31,444,4,"URL"],[501,34,444,4],[501,37,444,10,"url"],[501,40,444,13],[501,42,444,15,"base"],[501,46,444,19],[501,48,444,21],[501,51,444,24,"args"],[501,55,444,28],[503,6,446,4],[504,6,447,4],[504,10,447,8],[504,11,447,9,"isReactNative"],[504,24,447,22],[504,25,447,23],[504,26,447,24],[504,28,447,26],[505,8,448,6],[505,15,448,6,"_possibleConstructorReturn"],[505,41,448,6],[505,42,448,6,"_this"],[505,47,448,6],[506,6,449,4],[508,6,451,4],[509,6,452,4],[509,10,452,8,"_this"],[509,15,452,8],[509,16,452,13,"_url"],[509,20,452,17],[509,24,452,21],[509,25,452,22,"url"],[509,28,452,25],[509,29,452,26,"endsWith"],[509,37,452,34],[509,38,452,35],[509,41,452,38],[509,42,452,39],[509,46,452,43,"_this"],[509,51,452,43],[509,52,452,48,"_url"],[509,56,452,52],[509,57,452,53,"endsWith"],[509,65,452,61],[509,66,452,62],[509,69,452,65],[509,70,452,66],[509,72,452,68],[510,8,453,6,"_this"],[510,13,453,6],[510,14,453,11,"_url"],[510,18,453,15],[510,21,453,18,"_this"],[510,26,453,18],[510,27,453,23,"_url"],[510,31,453,27],[510,32,453,28,"slice"],[510,37,453,33],[510,38,453,34],[510,39,453,35],[510,41,453,37],[510,42,453,38],[510,43,453,39],[510,44,453,40],[511,6,454,4],[512,6,454,5],[512,13,454,5,"_this"],[512,18,454,5],[513,4,455,2],[514,4,455,3,"_inherits"],[514,13,455,3],[514,14,455,3,"URL"],[514,17,455,3],[514,19,455,3,"_URL2"],[514,24,455,3],[515,4,455,3],[515,11,455,3,"_createClass"],[515,23,455,3],[515,24,455,3,"URL"],[515,27,455,3],[516,2,455,3],[516,4,439,18,"_URL"],[516,8,439,22],[517,2,458,0],[518,0,459,0],[519,0,460,0],[520,0,461,0],[521,0,462,0],[522,0,463,0],[523,0,464,0],[524,0,465,0],[525,0,466,0],[526,0,467,0],[527,0,468,0],[528,0,469,0],[529,0,470,0],[530,0,471,0],[531,0,472,0],[532,0,473,0],[533,0,474,0],[534,2,475,0],[534,6,475,6,"sendMsgToFCL"],[534,18,475,18],[534,21,475,21],[534,30,475,21,"sendMsgToFCL"],[534,31,475,31,"type"],[534,35,475,35],[534,37,475,37],[535,4,476,2],[535,8,476,6,"msg"],[535,11,476,9],[535,14,476,12,"arguments"],[535,23,476,21],[535,24,476,22,"length"],[535,30,476,28],[535,33,476,31],[535,34,476,32],[535,38,476,36,"arguments"],[535,47,476,45],[535,48,476,46],[535,49,476,47],[535,50,476,48],[535,55,476,53,"undefined"],[535,64,476,62],[535,67,476,65,"arguments"],[535,76,476,74],[535,77,476,75],[535,78,476,76],[535,79,476,77],[535,82,476,80],[535,83,476,81],[535,84,476,82],[536,4,477,2],[536,8,477,8,"data"],[536,12,477,12],[536,15,477,15],[537,6,478,4],[537,9,478,7,"msg"],[537,12,478,10],[538,6,479,4,"type"],[539,4,480,2],[539,5,480,3],[540,4,481,2],[540,8,481,8,"urlParams"],[540,17,481,17],[540,20,481,20],[540,24,481,24,"URLSearchParams"],[540,39,481,39],[540,40,481,40,"window"],[540,46,481,46],[540,47,481,47,"location"],[540,55,481,55],[540,56,481,56,"search"],[540,62,481,62],[540,63,481,63],[541,4,482,2],[541,8,482,8,"redirectUrl"],[541,19,482,19],[541,22,482,22,"urlParams"],[541,31,482,31],[541,32,482,32,"get"],[541,35,482,35],[541,36,482,36,"FCL_REDIRECT_URL_PARAM_NAME"],[541,63,482,63],[541,64,482,64],[542,4,483,2],[542,8,483,6,"redirectUrl"],[542,19,483,17],[542,21,483,19],[543,6,484,4],[543,10,484,10,"url"],[543,13,484,13],[543,16,484,16],[543,20,484,20,"URL"],[543,23,484,23],[543,24,484,24,"redirectUrl"],[543,35,484,35],[543,36,484,36],[544,6,485,4,"url"],[544,9,485,7],[544,10,485,8,"searchParams"],[544,22,485,20],[544,23,485,21,"append"],[544,29,485,27],[544,30,485,28,"FCL_RESPONSE_PARAM_NAME"],[544,53,485,51],[544,55,485,53,"JSON"],[544,59,485,57],[544,60,485,58,"stringify"],[544,69,485,67],[544,70,485,68,"data"],[544,74,485,72],[544,75,485,73],[544,76,485,74],[545,6,486,4,"window"],[545,12,486,10],[545,13,486,11,"location"],[545,21,486,19],[545,22,486,20,"href"],[545,26,486,24],[545,29,486,27,"url"],[545,32,486,30],[545,33,486,31,"href"],[545,37,486,35],[546,4,487,2],[546,5,487,3],[546,11,487,9],[546,15,487,13,"window"],[546,21,487,19],[546,22,487,20,"location"],[546,30,487,28],[546,35,487,33,"window"],[546,41,487,39],[546,42,487,40,"parent"],[546,48,487,46],[546,49,487,47,"location"],[546,57,487,55],[546,59,487,57],[547,6,488,4,"window"],[547,12,488,10],[547,13,488,11,"parent"],[547,19,488,17],[547,20,488,18,"postMessage"],[547,31,488,29],[547,32,488,30],[548,8,489,6],[548,11,489,9,"msg"],[548,14,489,12],[549,8,490,6,"type"],[550,6,491,4],[550,7,491,5],[550,9,491,7],[550,12,491,10],[550,13,491,11],[551,4,492,2],[551,5,492,3],[551,11,492,9],[551,15,492,13,"window"],[551,21,492,19],[551,22,492,20,"opener"],[551,28,492,26],[551,30,492,28],[552,6,493,4,"window"],[552,12,493,10],[552,13,493,11,"opener"],[552,19,493,17],[552,20,493,18,"postMessage"],[552,31,493,29],[552,32,493,30],[553,8,494,6],[553,11,494,9,"msg"],[553,14,494,12],[554,8,495,6,"type"],[555,6,496,4],[555,7,496,5],[555,9,496,7],[555,12,496,10],[555,13,496,11],[556,4,497,2],[556,5,497,3],[556,11,497,9],[557,6,498,4],[557,12,498,10],[557,16,498,14,"Error"],[557,21,498,19],[557,22,498,20],[557,70,498,68],[557,71,498,69],[558,4,499,2],[559,2,500,0],[559,3,500,1],[561,2,502,0],[562,0,503,0],[563,0,504,0],[564,0,505,0],[565,0,506,0],[566,0,507,0],[567,0,508,0],[568,0,509,0],[569,2,510,0],[569,6,510,6,"ready"],[569,11,510,11],[569,14,510,14],[569,23,510,14,"ready"],[569,24,510,24,"cb"],[569,26,510,26],[569,28,510,28],[570,4,511,2,"onMessageFromFCL"],[570,20,511,18],[570,21,511,19],[570,46,511,44],[570,48,511,46,"cb"],[570,50,511,48],[570,51,511,49],[571,4,512,2,"sendMsgToFCL"],[571,16,512,14],[571,17,512,15],[571,33,512,31],[571,34,512,32],[572,2,513,0],[572,3,513,1],[574,2,515,0],[575,0,516,0],[576,0,517,0],[577,0,518,0],[578,0,519,0],[579,0,520,0],[580,2,521,0],[580,6,521,6,"close"],[580,11,521,11],[580,14,521,14,"close"],[580,15,521,14],[580,20,521,20],[581,4,522,2,"sendMsgToFCL"],[581,16,522,14],[581,17,522,15],[581,33,522,31],[581,34,522,32],[582,2,523,0],[582,3,523,1],[584,2,525,0],[585,0,526,0],[586,0,527,0],[587,0,528,0],[588,0,529,0],[589,0,530,0],[590,0,531,0],[591,2,532,0],[591,6,532,6,"approve"],[591,13,532,13],[591,16,532,16,"data"],[591,20,532,20],[591,24,532,24],[592,4,533,2,"sendMsgToFCL"],[592,16,533,14],[592,17,533,15],[592,36,533,34],[592,38,533,36],[593,6,534,4,"f_type"],[593,12,534,10],[593,14,534,12],[593,31,534,29],[594,6,535,4,"f_vsn"],[594,11,535,9],[594,13,535,11],[594,20,535,18],[595,6,536,4,"status"],[595,12,536,10],[595,14,536,12],[595,24,536,22],[596,6,537,4,"reason"],[596,12,537,10],[596,14,537,12],[596,18,537,16],[597,6,538,4,"data"],[597,10,538,8],[597,12,538,10,"data"],[598,4,539,2],[598,5,539,3],[598,6,539,4],[599,2,540,0],[599,3,540,1],[601,2,542,0],[602,0,543,0],[603,0,544,0],[604,0,545,0],[605,0,546,0],[606,0,547,0],[607,0,548,0],[608,2,549,0],[608,6,549,6,"decline"],[608,13,549,13],[608,16,549,16,"reason"],[608,22,549,22],[608,26,549,26],[609,4,550,2,"sendMsgToFCL"],[609,16,550,14],[609,17,550,15],[609,36,550,34],[609,38,550,36],[610,6,551,4,"f_type"],[610,12,551,10],[610,14,551,12],[610,31,551,29],[611,6,552,4,"f_vsn"],[611,11,552,9],[611,13,552,11],[611,20,552,18],[612,6,553,4,"status"],[612,12,553,10],[612,14,553,12],[612,24,553,22],[613,6,554,4,"reason"],[613,12,554,10],[613,14,554,12,"reason"],[613,20,554,18],[614,6,555,4,"data"],[614,10,555,8],[614,12,555,10],[615,4,556,2],[615,5,556,3],[615,6,556,4],[616,2,557,0],[616,3,557,1],[618,2,559,0],[619,0,560,0],[620,0,561,0],[621,0,562,0],[622,0,563,0],[623,0,564,0],[624,0,565,0],[625,2,566,0],[625,6,566,6,"redirect"],[625,14,566,14],[625,17,566,17,"data"],[625,21,566,21],[625,25,566,25],[626,4,567,2,"sendMsgToFCL"],[626,16,567,14],[626,17,567,15],[626,36,567,34],[626,38,567,36],[627,6,568,4,"f_type"],[627,12,568,10],[627,14,568,12],[627,31,568,29],[628,6,569,4,"f_vsn"],[628,11,569,9],[628,13,569,11],[628,20,569,18],[629,6,570,4,"status"],[629,12,570,10],[629,14,570,12],[629,24,570,22],[630,6,571,4,"reason"],[630,12,571,10],[630,14,571,12],[630,18,571,16],[631,6,572,4,"data"],[631,10,572,8],[631,12,572,10,"data"],[632,4,573,2],[632,5,573,3],[632,6,573,4],[633,2,574,0],[633,3,574,1],[634,2,576,0],[634,6,576,6,"SERVICE_PRAGMA"],[634,20,576,20],[634,23,576,23],[635,4,577,2,"f_type"],[635,10,577,8],[635,12,577,10],[635,21,577,19],[636,4,578,2,"f_vsn"],[636,9,578,7],[636,11,578,9],[637,2,579,0],[637,3,579,1],[638,2,580,0],[638,6,580,6,"IDENTITY_PRAGMA"],[638,21,580,21],[638,24,580,24],[639,4,581,2,"f_type"],[639,10,581,8],[639,12,581,10],[639,22,581,20],[640,4,582,2,"f_vsn"],[640,9,582,7],[640,11,582,9],[641,2,583,0],[641,3,583,1],[642,2,584,0],[642,6,584,6,"USER_PRAGMA"],[642,17,584,17],[642,20,584,20],[643,4,585,2,"f_type"],[643,10,585,8],[643,12,585,10],[643,18,585,16],[644,4,586,2,"f_vsn"],[644,9,586,7],[644,11,586,9],[645,2,587,0],[645,3,587,1],[646,2,588,0],[646,6,588,6,"POLLING_RESPONSE_PRAGMA"],[646,29,588,29],[646,32,588,32],[647,4,589,2,"f_type"],[647,10,589,8],[647,12,589,10],[647,29,589,27],[648,4,590,2,"f_vsn"],[648,9,590,7],[648,11,590,9],[649,2,591,0],[649,3,591,1],[650,2,592,0],[650,6,592,6,"COMPOSITE_SIGNATURE_PRAGMA"],[650,32,592,32],[650,35,592,35],[651,4,593,2,"f_type"],[651,10,593,8],[651,12,593,10],[651,32,593,30],[652,4,594,2,"f_vsn"],[652,9,594,7],[652,11,594,9],[653,2,595,0],[653,3,595,1],[655,2,597,0],[656,0,598,0],[657,0,599,0],[658,0,600,0],[659,0,601,0],[660,0,602,0],[661,0,603,0],[662,0,604,0],[663,2,605,0],[663,11,605,9,"CompositeSignature"],[663,29,605,27,"CompositeSignature"],[663,30,605,28,"addr"],[663,34,605,32],[663,36,605,34,"keyId"],[663,41,605,39],[663,43,605,41,"signature"],[663,52,605,50],[663,54,605,52],[664,4,606,2],[664,8,606,6],[664,9,606,7,"f_type"],[664,15,606,13],[664,18,606,16,"COMPOSITE_SIGNATURE_PRAGMA"],[664,44,606,42],[664,45,606,43,"f_type"],[664,51,606,49],[665,4,607,2],[665,8,607,6],[665,9,607,7,"f_vsn"],[665,14,607,12],[665,17,607,15,"COMPOSITE_SIGNATURE_PRAGMA"],[665,43,607,41],[665,44,607,42,"f_vsn"],[665,49,607,47],[666,4,608,2],[666,8,608,6],[666,9,608,7,"addr"],[666,13,608,11],[666,16,608,14,"utilAddress"],[666,27,608,25],[666,28,608,26,"withPrefix"],[666,38,608,36],[666,39,608,37,"addr"],[666,43,608,41],[666,44,608,42],[667,4,609,2],[667,8,609,6],[667,9,609,7,"keyId"],[667,14,609,12],[667,17,609,15,"Number"],[667,23,609,21],[667,24,609,22,"keyId"],[667,29,609,27],[667,30,609,28],[668,4,610,2],[668,8,610,6],[668,9,610,7,"signature"],[668,18,610,16],[668,21,610,19,"signature"],[668,30,610,28],[669,2,611,0],[670,2,613,0],[670,6,613,6,"rightPaddedHexBuffer"],[670,26,613,26],[670,29,613,29,"rightPaddedHexBuffer"],[670,30,613,30,"value"],[670,35,613,35],[670,37,613,37,"pad"],[670,40,613,40],[670,45,613,45,"rlp"],[670,48,613,48],[670,49,613,49,"Buffer"],[670,55,613,55],[670,56,613,56,"from"],[670,60,613,60],[670,61,613,61,"value"],[670,66,613,66],[670,67,613,67,"padEnd"],[670,73,613,73],[670,74,613,74,"pad"],[670,77,613,77],[670,80,613,80],[670,81,613,81],[670,83,613,83],[670,86,613,86],[670,87,613,87],[670,89,613,89],[670,94,613,94],[670,95,613,95],[671,2,614,0],[671,6,614,6,"leftPaddedHexBuffer"],[671,25,614,25],[671,28,614,28,"leftPaddedHexBuffer"],[671,29,614,29,"value"],[671,34,614,34],[671,36,614,36,"pad"],[671,39,614,39],[671,44,614,44,"rlp"],[671,47,614,47],[671,48,614,48,"Buffer"],[671,54,614,54],[671,55,614,55,"from"],[671,59,614,59],[671,60,614,60,"value"],[671,65,614,65],[671,66,614,66,"padStart"],[671,74,614,74],[671,75,614,75,"pad"],[671,78,614,78],[671,81,614,81],[671,82,614,82],[671,84,614,84],[671,87,614,87],[671,88,614,88],[671,90,614,90],[671,95,614,95],[671,96,614,96],[672,2,615,0],[672,6,615,6,"addressBuffer"],[672,19,615,19],[672,22,615,22,"addr"],[672,26,615,26],[672,30,615,30,"leftPaddedHexBuffer"],[672,49,615,49],[672,50,615,50,"addr"],[672,54,615,54],[672,56,615,56],[672,57,615,57],[672,58,615,58],[673,2,616,0],[673,6,616,6,"nonceBuffer"],[673,17,616,17],[673,20,616,20,"nonce"],[673,25,616,25],[673,29,616,29,"rlp"],[673,32,616,32],[673,33,616,33,"Buffer"],[673,39,616,39],[673,40,616,40,"from"],[673,44,616,44],[673,45,616,45,"nonce"],[673,50,616,50],[673,52,616,52],[673,57,616,57],[673,58,616,58],[674,2,617,0],[674,6,617,6,"encodeAccountProof"],[674,24,617,24],[674,27,617,27],[674,36,617,27,"encodeAccountProof"],[674,37,617,37,"_ref"],[674,41,617,41],[674,43,617,43],[675,4,618,2],[675,8,619,4,"address"],[675,15,619,11],[675,18,622,6,"_ref"],[675,22,622,10],[675,23,619,4,"address"],[675,30,619,11],[676,6,620,4,"nonce"],[676,11,620,9],[676,14,622,6,"_ref"],[676,18,622,10],[676,19,620,4,"nonce"],[676,24,620,9],[677,6,621,4,"appIdentifier"],[677,19,621,17],[677,22,622,6,"_ref"],[677,26,622,10],[677,27,621,4,"appIdentifier"],[677,40,621,17],[678,4,623,2],[678,8,623,6,"includeDomainTag"],[678,24,623,22],[678,27,623,25,"arguments"],[678,36,623,34],[678,37,623,35,"length"],[678,43,623,41],[678,46,623,44],[678,47,623,45],[678,51,623,49,"arguments"],[678,60,623,58],[678,61,623,59],[678,62,623,60],[678,63,623,61],[678,68,623,66,"undefined"],[678,77,623,75],[678,80,623,78,"arguments"],[678,89,623,87],[678,90,623,88],[678,91,623,89],[678,92,623,90],[678,95,623,93],[678,99,623,97],[679,4,624,2,"utilInvariant"],[679,17,624,15],[679,18,624,16,"invariant"],[679,27,624,25],[679,28,624,26,"address"],[679,35,624,33],[679,37,624,35],[679,103,624,101],[679,104,624,102],[680,4,625,2,"utilInvariant"],[680,17,625,15],[680,18,625,16,"invariant"],[680,27,625,25],[680,28,625,26,"nonce"],[680,33,625,31],[680,35,625,33],[680,99,625,97],[680,100,625,98],[681,4,626,2,"utilInvariant"],[681,17,626,15],[681,18,626,16,"invariant"],[681,27,626,25],[681,28,626,26,"appIdentifier"],[681,41,626,39],[681,43,626,41],[681,115,626,113],[681,116,626,114],[682,4,627,2,"utilInvariant"],[682,17,627,15],[682,18,627,16,"invariant"],[682,27,627,25],[682,28,627,26,"nonce"],[682,33,627,31],[682,34,627,32,"length"],[682,40,627,38],[682,44,627,42],[682,46,627,44],[682,48,627,46],[682,124,627,122],[682,125,627,123],[683,4,628,2],[683,8,628,8,"ACCOUNT_PROOF_DOMAIN_TAG"],[683,32,628,32],[683,35,628,35,"rightPaddedHexBuffer"],[683,55,628,55],[683,56,628,56,"rlp"],[683,59,628,59],[683,60,628,60,"Buffer"],[683,66,628,66],[683,67,628,67,"from"],[683,71,628,71],[683,72,628,72],[683,96,628,96],[683,97,628,97],[683,98,628,98,"toString"],[683,106,628,106],[683,107,628,107],[683,112,628,112],[683,113,628,113],[683,115,628,115],[683,117,628,117],[683,118,628,118],[684,4,629,2],[684,8,629,6,"includeDomainTag"],[684,24,629,22],[684,26,629,24],[685,6,630,4],[685,13,630,11,"rlp"],[685,16,630,14],[685,17,630,15,"Buffer"],[685,23,630,21],[685,24,630,22,"concat"],[685,30,630,28],[685,31,630,29],[685,32,630,30,"ACCOUNT_PROOF_DOMAIN_TAG"],[685,56,630,54],[685,58,630,56,"rlp"],[685,61,630,59],[685,62,630,60,"encode"],[685,68,630,66],[685,69,630,67],[685,70,630,68,"appIdentifier"],[685,83,630,81],[685,85,630,83,"addressBuffer"],[685,98,630,96],[685,99,630,97,"utilAddress"],[685,110,630,108],[685,111,630,109,"sansPrefix"],[685,121,630,119],[685,122,630,120,"address"],[685,129,630,127],[685,130,630,128],[685,131,630,129],[685,133,630,131,"nonceBuffer"],[685,144,630,142],[685,145,630,143,"nonce"],[685,150,630,148],[685,151,630,149],[685,152,630,150],[685,153,630,151],[685,154,630,152],[685,155,630,153],[685,156,630,154,"toString"],[685,164,630,162],[685,165,630,163],[685,170,630,168],[685,171,630,169],[686,4,631,2],[687,4,632,2],[687,11,632,9,"rlp"],[687,14,632,12],[687,15,632,13,"encode"],[687,21,632,19],[687,22,632,20],[687,23,632,21,"appIdentifier"],[687,36,632,34],[687,38,632,36,"addressBuffer"],[687,51,632,49],[687,52,632,50,"utilAddress"],[687,63,632,61],[687,64,632,62,"sansPrefix"],[687,74,632,72],[687,75,632,73,"address"],[687,82,632,80],[687,83,632,81],[687,84,632,82],[687,86,632,84,"nonceBuffer"],[687,97,632,95],[687,98,632,96,"nonce"],[687,103,632,101],[687,104,632,102],[687,105,632,103],[687,106,632,104],[687,107,632,105,"toString"],[687,115,632,113],[687,116,632,114],[687,121,632,119],[687,122,632,120],[688,2,633,0],[688,3,633,1],[689,2,635,0],[689,11,635,9,"injectExtService"],[689,27,635,25,"injectExtService"],[689,28,635,26,"service"],[689,35,635,33],[689,37,635,35],[690,4,636,2],[690,8,636,6,"service"],[690,15,636,13],[690,16,636,14,"type"],[690,20,636,18],[690,25,636,23],[690,32,636,30],[690,36,636,34,"service"],[690,43,636,41],[690,44,636,42,"endpoint"],[690,52,636,50],[690,56,636,54],[690,60,636,58],[690,62,636,60],[691,6,637,4],[691,10,637,8],[691,11,637,9,"Array"],[691,16,637,14],[691,17,637,15,"isArray"],[691,24,637,22],[691,25,637,23,"window"],[691,31,637,29],[691,32,637,30,"fcl_extensions"],[691,46,637,44],[691,47,637,45],[691,49,637,47],[692,8,638,6,"window"],[692,14,638,12],[692,15,638,13,"fcl_extensions"],[692,29,638,27],[692,32,638,30],[692,34,638,32],[693,6,639,4],[694,6,640,4,"window"],[694,12,640,10],[694,13,640,11,"fcl_extensions"],[694,27,640,25],[694,28,640,26,"push"],[694,32,640,30],[694,33,640,31,"service"],[694,40,640,38],[694,41,640,39],[695,4,641,2],[695,5,641,3],[695,11,641,9],[696,6,642,4,"console"],[696,13,642,11],[696,14,642,12,"warn"],[696,18,642,16],[696,19,642,17],[696,46,642,44],[696,47,642,45],[697,4,643,2],[698,2,644,0],[699,2,646,0],[699,6,646,4,"index$2"],[699,13,646,11],[699,16,646,14],[699,29,646,27,"Object"],[699,35,646,33],[699,36,646,34,"freeze"],[699,42,646,40],[699,43,646,41],[700,4,647,2,"__proto__"],[700,13,647,11],[700,15,647,13],[700,19,647,17],[701,4,648,2,"CompositeSignature"],[701,22,648,20],[701,24,648,22,"CompositeSignature"],[701,42,648,40],[702,4,649,2,"approve"],[702,11,649,9],[702,13,649,11,"approve"],[702,20,649,18],[703,4,650,2,"close"],[703,9,650,7],[703,11,650,9,"close"],[703,16,650,14],[704,4,651,2,"decline"],[704,11,651,9],[704,13,651,11,"decline"],[704,20,651,18],[705,4,652,2,"encodeAccountProof"],[705,22,652,20],[705,24,652,22,"encodeAccountProof"],[705,42,652,40],[706,4,653,2,"encodeMessageFromSignable"],[706,29,653,27],[706,31,653,29,"sdk"],[706,34,653,32],[706,35,653,33,"encodeMessageFromSignable"],[706,60,653,58],[707,4,654,2,"injectExtService"],[707,20,654,18],[707,22,654,20,"injectExtService"],[707,38,654,36],[708,4,655,2,"onMessageFromFCL"],[708,20,655,18],[708,22,655,20,"onMessageFromFCL"],[708,38,655,36],[709,4,656,2,"ready"],[709,9,656,7],[709,11,656,9,"ready"],[709,16,656,14],[710,4,657,2,"redirect"],[710,12,657,10],[710,14,657,12,"redirect"],[710,22,657,20],[711,4,658,2,"sendMsgToFCL"],[711,16,658,14],[711,18,658,16,"sendMsgToFCL"],[712,2,659,0],[712,3,659,1],[712,4,659,2],[713,2,661,0],[713,6,661,6,"ACCOUNT_PROOF"],[713,19,661,19],[713,22,661,22],[713,37,661,37],[714,2,662,0],[714,6,662,6,"USER_SIGNATURE"],[714,20,662,20],[714,23,662,23],[714,39,662,39],[715,2,663,0],[715,6,663,6,"validateArgs"],[715,18,663,18],[715,21,663,21,"args"],[715,25,663,25],[715,29,663,29],[716,4,664,2],[716,8,664,6,"args"],[716,12,664,10],[716,13,664,11,"appIdentifier"],[716,26,664,24],[716,28,664,26],[717,6,665,4],[717,10,666,6,"appIdentifier"],[717,23,666,19],[717,26,670,8,"args"],[717,30,670,12],[717,31,666,6,"appIdentifier"],[717,44,666,19],[718,8,667,6,"address"],[718,15,667,13],[718,18,670,8,"args"],[718,22,670,12],[718,23,667,6,"address"],[718,30,667,13],[719,8,668,6,"nonce"],[719,13,668,11],[719,16,670,8,"args"],[719,20,670,12],[719,21,668,6,"nonce"],[719,26,668,11],[720,8,669,6,"signatures"],[720,18,669,16],[720,21,670,8,"args"],[720,25,670,12],[720,26,669,6,"signatures"],[720,36,669,16],[721,6,671,4,"utilInvariant"],[721,19,671,17],[721,20,671,18,"invariant"],[721,29,671,27],[721,30,671,28,"isString"],[721,38,671,36],[721,39,671,37,"appIdentifier"],[721,52,671,50],[721,53,671,51],[721,55,671,53],[721,128,671,126],[721,129,671,127],[722,6,672,4,"utilInvariant"],[722,19,672,17],[722,20,672,18,"invariant"],[722,29,672,27],[722,30,672,28,"isString"],[722,38,672,36],[722,39,672,37,"address"],[722,46,672,44],[722,47,672,45],[722,51,672,49,"utilAddress"],[722,62,672,60],[722,63,672,61,"sansPrefix"],[722,73,672,71],[722,74,672,72,"address"],[722,81,672,79],[722,82,672,80],[722,83,672,81,"length"],[722,89,672,87],[722,94,672,92],[722,96,672,94],[722,98,672,96],[722,166,672,164],[722,167,672,165],[723,6,673,4,"utilInvariant"],[723,19,673,17],[723,20,673,18,"invariant"],[723,29,673,27],[723,30,673,28],[723,44,673,42],[723,45,673,43,"test"],[723,49,673,47],[723,50,673,48,"nonce"],[723,55,673,53],[723,56,673,54],[723,58,673,56],[723,86,673,84],[723,87,673,85],[724,6,674,4,"utilInvariant"],[724,19,674,17],[724,20,674,18,"invariant"],[724,29,674,27],[724,30,674,28,"Array"],[724,35,674,33],[724,36,674,34,"isArray"],[724,43,674,41],[724,44,674,42,"signatures"],[724,54,674,52],[724,55,674,53],[724,59,674,57,"signatures"],[724,69,674,67],[724,70,674,68,"every"],[724,75,674,73],[724,76,674,74],[724,77,674,75,"sig"],[724,80,674,78],[724,82,674,80,"i"],[724,83,674,81],[724,85,674,83,"arr"],[724,88,674,86],[724,93,674,91,"sig"],[724,96,674,94],[724,97,674,95,"f_type"],[724,103,674,101],[724,108,674,106],[724,128,674,126],[724,129,674,127],[724,131,674,129],[724,187,674,185],[724,188,674,186],[725,6,675,4,"utilInvariant"],[725,19,675,17],[725,20,675,18,"invariant"],[725,29,675,27],[725,30,675,28,"signatures"],[725,40,675,38],[725,41,675,39,"map"],[725,44,675,42],[725,45,675,43,"cs"],[725,47,675,45],[725,51,675,49,"cs"],[725,53,675,51],[725,54,675,52,"addr"],[725,58,675,56],[725,59,675,57],[725,60,675,58,"every"],[725,65,675,63],[725,66,675,64],[725,67,675,65,"addr"],[725,71,675,69],[725,73,675,71,"i"],[725,74,675,72],[725,76,675,74,"arr"],[725,79,675,77],[725,84,675,82,"addr"],[725,88,675,86],[725,93,675,91,"arr"],[725,96,675,94],[725,97,675,95],[725,98,675,96],[725,99,675,97],[725,100,675,98],[725,102,675,100],[725,172,675,170],[725,173,675,171],[726,6,676,4],[726,13,676,11],[726,17,676,15],[727,4,677,2],[727,5,677,3],[727,11,677,9],[728,6,678,4],[728,10,679,6,"message"],[728,17,679,13],[728,20,682,8,"args"],[728,24,682,12],[728,25,679,6,"message"],[728,32,679,13],[729,8,680,6,"address"],[729,16,680,13],[729,19,682,8,"args"],[729,23,682,12],[729,24,680,6,"address"],[729,31,680,13],[730,8,681,6,"compSigs"],[730,16,681,14],[730,19,682,8,"args"],[730,23,682,12],[730,24,681,6,"compSigs"],[730,32,681,14],[731,6,683,4,"utilInvariant"],[731,19,683,17],[731,20,683,18,"invariant"],[731,29,683,27],[731,30,683,28],[731,44,683,42],[731,45,683,43,"test"],[731,49,683,47],[731,50,683,48,"message"],[731,57,683,55],[731,58,683,56],[731,60,683,58],[731,97,683,95],[731,98,683,96],[732,6,684,4,"utilInvariant"],[732,19,684,17],[732,20,684,18,"invariant"],[732,29,684,27],[732,30,684,28,"isString"],[732,38,684,36],[732,39,684,37,"address"],[732,47,684,44],[732,48,684,45],[732,52,684,49,"utilAddress"],[732,63,684,60],[732,64,684,61,"sansPrefix"],[732,74,684,71],[732,75,684,72,"address"],[732,83,684,79],[732,84,684,80],[732,85,684,81,"length"],[732,91,684,87],[732,96,684,92],[732,98,684,94],[732,100,684,96],[732,170,684,166],[732,171,684,167],[733,6,685,4,"utilInvariant"],[733,19,685,17],[733,20,685,18,"invariant"],[733,29,685,27],[733,30,685,28,"Array"],[733,35,685,33],[733,36,685,34,"isArray"],[733,43,685,41],[733,44,685,42,"compSigs"],[733,52,685,50],[733,53,685,51],[733,57,685,55,"compSigs"],[733,65,685,63],[733,66,685,64,"every"],[733,71,685,69],[733,72,685,70],[733,73,685,71,"sig"],[733,76,685,74],[733,78,685,76,"i"],[733,79,685,77],[733,81,685,79,"arr"],[733,84,685,82],[733,89,685,87,"sig"],[733,92,685,90],[733,93,685,91,"f_type"],[733,99,685,97],[733,104,685,102],[733,124,685,122],[733,125,685,123],[733,127,685,125],[733,183,685,181],[733,184,685,182],[734,6,686,4,"utilInvariant"],[734,19,686,17],[734,20,686,18,"invariant"],[734,29,686,27],[734,30,686,28,"compSigs"],[734,38,686,36],[734,39,686,37,"map"],[734,42,686,40],[734,43,686,41,"cs"],[734,45,686,43],[734,49,686,47,"cs"],[734,51,686,49],[734,52,686,50,"addr"],[734,56,686,54],[734,57,686,55],[734,58,686,56,"every"],[734,63,686,61],[734,64,686,62],[734,65,686,63,"addr"],[734,69,686,67],[734,71,686,69,"i"],[734,72,686,70],[734,74,686,72,"arr"],[734,77,686,75],[734,82,686,80,"addr"],[734,86,686,84],[734,91,686,89,"arr"],[734,94,686,92],[734,95,686,93],[734,96,686,94],[734,97,686,95],[734,98,686,96],[734,100,686,98],[734,170,686,168],[734,171,686,169],[735,6,687,4],[735,13,687,11],[735,17,687,15],[736,4,688,2],[737,2,689,0],[737,3,689,1],[739,2,691,0],[740,2,692,0],[741,2,693,0],[741,6,693,6,"getVerifySignaturesScript"],[741,31,693,31],[742,4,693,31],[742,8,693,31,"_ref4"],[742,13,693,31],[742,16,693,31,"_asyncToGenerator"],[742,33,693,31],[742,34,693,34],[742,45,693,41,"sig"],[742,48,693,44],[742,50,693,46,"opts"],[742,54,693,50],[742,56,693,55],[743,6,694,2],[743,10,694,8,"verifyFunction"],[743,24,694,22],[743,27,694,25,"sig"],[743,30,694,28],[743,35,694,33],[743,50,694,48],[743,53,694,51],[743,83,694,81],[743,86,694,84],[743,108,694,106],[744,6,695,2],[744,10,695,6,"network"],[744,17,695,13],[744,26,695,22,"getChainId"],[744,36,695,32],[744,37,695,33,"opts"],[744,41,695,37],[744,42,695,38],[745,6,696,2],[745,10,696,8,"contractAddresses"],[745,27,696,25],[745,30,696,28],[746,8,697,4,"testnet"],[746,15,697,11],[746,17,697,13],[746,37,697,33],[747,8,698,4,"mainnet"],[747,15,698,11],[747,17,698,13],[747,37,698,33],[748,8,699,4,"previewnet"],[748,18,699,14],[748,20,699,16],[749,6,700,2],[749,7,700,3],[750,6,701,2],[750,10,701,8,"fclCryptoContract"],[750,27,701,25],[750,30,701,28,"opts"],[750,34,701,32],[750,35,701,33,"fclCryptoContract"],[750,52,701,50],[750,56,701,54,"contractAddresses"],[750,73,701,71],[750,74,701,72,"network"],[750,81,701,79],[750,82,701,80],[751,6,702,2,"utilInvariant"],[751,19,702,15],[751,20,702,16,"invariant"],[751,29,702,25],[751,30,702,26,"fclCryptoContract"],[751,47,702,43],[751,49,702,45],[751,52,702,48,"verifyFunction"],[751,66,702,62],[751,147,702,143,"network"],[751,154,702,150],[751,213,702,209],[751,214,702,210],[752,6,703,2],[752,13,703,9],[753,0,704,0],[753,30,704,30,"fclCryptoContract"],[753,47,704,47],[754,0,705,0],[755,0,706,0],[756,0,707,0],[757,0,708,0],[758,0,709,0],[759,0,710,0],[760,0,711,0],[761,0,712,0],[761,27,712,27,"verifyFunction"],[761,41,712,41],[762,0,713,0],[763,0,714,0],[763,5,714,5],[764,4,715,0],[764,5,715,1],[765,4,715,1],[765,20,693,6,"getVerifySignaturesScript"],[765,45,693,31,"getVerifySignaturesScript"],[765,46,693,31,"_x11"],[765,50,693,31],[765,52,693,31,"_x12"],[765,56,693,31],[766,6,693,31],[766,13,693,31,"_ref4"],[766,18,693,31],[766,19,693,31,"apply"],[766,24,693,31],[766,31,693,31,"arguments"],[766,40,693,31],[767,4,693,31],[768,2,693,31],[768,5,715,1],[770,2,717,0],[771,0,718,0],[772,0,719,0],[773,0,720,0],[774,0,721,0],[775,0,722,0],[776,0,723,0],[777,0,724,0],[778,0,725,0],[779,0,726,0],[780,0,727,0],[781,0,728,0],[782,0,729,0],[783,0,730,0],[784,0,731,0],[785,0,732,0],[786,0,733,0],[787,0,734,0],[788,0,735,0],[789,0,736,0],[790,0,737,0],[791,0,738,0],[792,0,739,0],[793,0,740,0],[794,0,741,0],[795,0,742,0],[796,0,743,0],[797,2,717,0],[797,11,744,15,"verifyAccountProof"],[797,29,744,33,"verifyAccountProof"],[797,30,744,33,"_x13"],[797,34,744,33],[797,36,744,33,"_x14"],[797,40,744,33],[798,4,744,33],[798,11,744,33,"_verifyAccountProof"],[798,30,744,33],[798,31,744,33,"apply"],[798,36,744,33],[798,43,744,33,"arguments"],[798,52,744,33],[799,2,744,33],[800,2,774,0],[801,0,775,0],[802,0,776,0],[803,0,777,0],[804,0,778,0],[805,0,779,0],[806,0,780,0],[807,0,781,0],[808,0,782,0],[809,0,783,0],[810,0,784,0],[811,0,785,0],[812,0,786,0],[813,0,787,0],[814,0,788,0],[815,0,789,0],[816,0,790,0],[817,0,791,0],[818,0,792,0],[819,0,793,0],[820,0,794,0],[821,2,774,0],[821,11,774,0,"_verifyAccountProof"],[821,31,774,0],[822,4,774,0,"_verifyAccountProof"],[822,23,774,0],[822,26,774,0,"_asyncToGenerator"],[822,43,774,0],[822,44,744,0],[822,55,744,34,"appIdentifier"],[822,68,744,47],[822,70,744,49,"_ref"],[822,74,744,53],[822,76,744,55],[823,6,745,2],[823,10,746,4,"address"],[823,17,746,11],[823,20,749,6,"_ref"],[823,24,749,10],[823,25,746,4,"address"],[823,32,746,11],[824,8,747,4,"nonce"],[824,13,747,9],[824,16,749,6,"_ref"],[824,20,749,10],[824,21,747,4,"nonce"],[824,26,747,9],[825,8,748,4,"signatures"],[825,18,748,14],[825,21,749,6,"_ref"],[825,25,749,10],[825,26,748,4,"signatures"],[825,36,748,14],[826,6,750,2],[826,10,750,6,"opts"],[826,14,750,10],[826,17,750,13,"arguments"],[826,26,750,22],[826,27,750,23,"length"],[826,33,750,29],[826,36,750,32],[826,37,750,33],[826,41,750,37,"arguments"],[826,50,750,46],[826,51,750,47],[826,52,750,48],[826,53,750,49],[826,58,750,54,"undefined"],[826,67,750,63],[826,70,750,66,"arguments"],[826,79,750,75],[826,80,750,76],[826,81,750,77],[826,82,750,78],[826,85,750,81],[826,86,750,82],[826,87,750,83],[827,6,751,2,"validateArgs"],[827,18,751,14],[827,19,751,15],[828,8,752,4,"appIdentifier"],[828,21,752,17],[829,8,753,4,"address"],[829,15,753,11],[830,8,754,4,"nonce"],[830,13,754,9],[831,8,755,4,"signatures"],[832,6,756,2],[832,7,756,3],[832,8,756,4],[833,6,757,2],[833,10,757,8,"message"],[833,17,757,15],[833,20,757,18,"encodeAccountProof"],[833,38,757,36],[833,39,757,37],[834,8,758,4,"address"],[834,15,758,11],[835,8,759,4,"nonce"],[835,13,759,9],[836,8,760,4,"appIdentifier"],[837,6,761,2],[837,7,761,3],[837,9,761,5],[837,14,761,10],[837,15,761,11],[838,6,762,2],[838,10,762,6,"signaturesArr"],[838,23,762,19],[838,26,762,22],[838,28,762,24],[839,6,763,2],[839,10,763,6,"keyIndices"],[839,20,763,16],[839,23,763,19],[839,25,763,21],[840,6,764,2],[840,11,764,7],[840,15,764,13,"el"],[840,17,764,15],[840,21,764,19,"signatures"],[840,31,764,29],[840,33,764,31],[841,8,765,4,"signaturesArr"],[841,21,765,17],[841,22,765,18,"push"],[841,26,765,22],[841,27,765,23,"el"],[841,29,765,25],[841,30,765,26,"signature"],[841,39,765,35],[841,40,765,36],[842,8,766,4,"keyIndices"],[842,18,766,14],[842,19,766,15,"push"],[842,23,766,19],[842,24,766,20,"el"],[842,26,766,22],[842,27,766,23,"keyId"],[842,32,766,28],[842,33,766,29,"toString"],[842,41,766,37],[842,42,766,38],[842,43,766,39],[842,44,766,40],[843,6,767,2],[844,6,768,2],[844,13,768,9,"query"],[844,18,768,14],[844,19,768,15],[845,8,769,4,"cadence"],[845,15,769,11],[845,23,769,19,"getVerifySignaturesScript"],[845,48,769,44],[845,49,769,45,"ACCOUNT_PROOF"],[845,62,769,58],[845,64,769,60,"opts"],[845,68,769,64],[845,69,769,65],[846,8,770,4,"args"],[846,12,770,8],[846,14,770,10,"args"],[846,15,770,11,"arg"],[846,18,770,14],[846,20,770,16,"t"],[846,21,770,17],[846,26,770,22],[846,27,770,23,"arg"],[846,30,770,26],[846,31,770,27,"utilAddress"],[846,42,770,38],[846,43,770,39,"withPrefix"],[846,53,770,49],[846,54,770,50,"address"],[846,61,770,57],[846,62,770,58],[846,64,770,60,"t"],[846,65,770,61],[846,66,770,62,"Address"],[846,73,770,69],[846,74,770,70],[846,76,770,72,"arg"],[846,79,770,75],[846,80,770,76,"message"],[846,87,770,83],[846,89,770,85,"t"],[846,90,770,86],[846,91,770,87,"String"],[846,97,770,93],[846,98,770,94],[846,100,770,96,"arg"],[846,103,770,99],[846,104,770,100,"keyIndices"],[846,114,770,110],[846,116,770,112,"t"],[846,117,770,113],[846,118,770,114,"Array"],[846,123,770,119],[846,124,770,120,"t"],[846,125,770,121],[846,126,770,122,"Int"],[846,129,770,125],[846,130,770,126],[846,131,770,127],[846,133,770,129,"arg"],[846,136,770,132],[846,137,770,133,"signaturesArr"],[846,150,770,146],[846,152,770,148,"t"],[846,153,770,149],[846,154,770,150,"Array"],[846,159,770,155],[846,160,770,156,"t"],[846,161,770,157],[846,162,770,158,"String"],[846,168,770,164],[846,169,770,165],[846,170,770,166],[847,6,771,2],[847,7,771,3],[847,8,771,4],[848,4,772,0],[848,5,772,1],[849,4,772,1],[849,11,772,1,"_verifyAccountProof"],[849,30,772,1],[849,31,772,1,"apply"],[849,36,772,1],[849,43,772,1,"arguments"],[849,52,772,1],[850,2,772,1],[851,2,772,1],[851,11,795,15,"verifyUserSignatures$1"],[851,33,795,37,"verifyUserSignatures$1"],[851,34,795,37,"_x15"],[851,38,795,37],[851,40,795,37,"_x16"],[851,44,795,37],[852,4,795,37],[852,11,795,37,"_verifyUserSignatures$"],[852,33,795,37],[852,34,795,37,"apply"],[852,39,795,37],[852,46,795,37,"arguments"],[852,55,795,37],[853,2,795,37],[854,2,795,37],[854,11,795,37,"_verifyUserSignatures$"],[854,34,795,37],[855,4,795,37,"_verifyUserSignatures$"],[855,26,795,37],[855,29,795,37,"_asyncToGenerator"],[855,46,795,37],[855,47,795,0],[855,58,795,38,"message"],[855,65,795,45],[855,67,795,47,"compSigs"],[855,75,795,55],[855,77,795,57],[856,6,796,2],[856,10,796,6,"opts"],[856,14,796,10],[856,17,796,13,"arguments"],[856,26,796,22],[856,27,796,23,"length"],[856,33,796,29],[856,36,796,32],[856,37,796,33],[856,41,796,37,"arguments"],[856,50,796,46],[856,51,796,47],[856,52,796,48],[856,53,796,49],[856,58,796,54,"undefined"],[856,67,796,63],[856,70,796,66,"arguments"],[856,79,796,75],[856,80,796,76],[856,81,796,77],[856,82,796,78],[856,85,796,81],[856,86,796,82],[856,87,796,83],[857,6,797,2],[857,10,797,8,"address"],[857,17,797,15],[857,20,797,18,"utilAddress"],[857,31,797,29],[857,32,797,30,"withPrefix"],[857,42,797,40],[857,43,797,41,"compSigs"],[857,51,797,49],[857,52,797,50],[857,53,797,51],[857,54,797,52],[857,55,797,53,"addr"],[857,59,797,57],[857,60,797,58],[858,6,798,2,"validateArgs"],[858,18,798,14],[858,19,798,15],[859,8,799,4,"message"],[859,15,799,11],[860,8,800,4,"address"],[860,15,800,11],[861,8,801,4,"compSigs"],[862,6,802,2],[862,7,802,3],[862,8,802,4],[863,6,803,2],[863,10,803,6,"signaturesArr"],[863,23,803,19],[863,26,803,22],[863,28,803,24],[864,6,804,2],[864,10,804,6,"keyIndices"],[864,20,804,16],[864,23,804,19],[864,25,804,21],[865,6,805,2],[865,11,805,7],[865,15,805,13,"el"],[865,17,805,15],[865,21,805,19,"compSigs"],[865,29,805,27],[865,31,805,29],[866,8,806,4,"signaturesArr"],[866,21,806,17],[866,22,806,18,"push"],[866,26,806,22],[866,27,806,23,"el"],[866,29,806,25],[866,30,806,26,"signature"],[866,39,806,35],[866,40,806,36],[867,8,807,4,"keyIndices"],[867,18,807,14],[867,19,807,15,"push"],[867,23,807,19],[867,24,807,20,"el"],[867,26,807,22],[867,27,807,23,"keyId"],[867,32,807,28],[867,33,807,29,"toString"],[867,41,807,37],[867,42,807,38],[867,43,807,39],[867,44,807,40],[868,6,808,2],[869,6,809,2],[869,13,809,9,"query"],[869,18,809,14],[869,19,809,15],[870,8,810,4,"cadence"],[870,15,810,11],[870,23,810,19,"getVerifySignaturesScript"],[870,48,810,44],[870,49,810,45,"USER_SIGNATURE"],[870,63,810,59],[870,65,810,61,"opts"],[870,69,810,65],[870,70,810,66],[871,8,811,4,"args"],[871,12,811,8],[871,14,811,10,"args"],[871,15,811,11,"arg"],[871,18,811,14],[871,20,811,16,"t"],[871,21,811,17],[871,26,811,22],[871,27,811,23,"arg"],[871,30,811,26],[871,31,811,27,"address"],[871,38,811,34],[871,40,811,36,"t"],[871,41,811,37],[871,42,811,38,"Address"],[871,49,811,45],[871,50,811,46],[871,52,811,48,"arg"],[871,55,811,51],[871,56,811,52,"message"],[871,63,811,59],[871,65,811,61,"t"],[871,66,811,62],[871,67,811,63,"String"],[871,73,811,69],[871,74,811,70],[871,76,811,72,"arg"],[871,79,811,75],[871,80,811,76,"keyIndices"],[871,90,811,86],[871,92,811,88,"t"],[871,93,811,89],[871,94,811,90,"Array"],[871,99,811,95],[871,100,811,96,"t"],[871,101,811,97],[871,102,811,98,"Int"],[871,105,811,101],[871,106,811,102],[871,107,811,103],[871,109,811,105,"arg"],[871,112,811,108],[871,113,811,109,"signaturesArr"],[871,126,811,122],[871,128,811,124,"t"],[871,129,811,125],[871,130,811,126,"Array"],[871,135,811,131],[871,136,811,132,"t"],[871,137,811,133],[871,138,811,134,"String"],[871,144,811,140],[871,145,811,141],[871,146,811,142],[872,6,812,2],[872,7,812,3],[872,8,812,4],[873,4,813,0],[873,5,813,1],[874,4,813,1],[874,11,813,1,"_verifyUserSignatures$"],[874,33,813,1],[874,34,813,1,"apply"],[874,39,813,1],[874,46,813,1,"arguments"],[874,55,813,1],[875,2,813,1],[876,2,815,0],[876,6,815,4,"index$1"],[876,13,815,11],[876,16,815,14],[876,29,815,27,"Object"],[876,35,815,33],[876,36,815,34,"freeze"],[876,42,815,40],[876,43,815,41],[877,4,816,2,"__proto__"],[877,13,816,11],[877,15,816,13],[877,19,816,17],[878,4,817,2,"verifyAccountProof"],[878,22,817,20],[878,24,817,22,"verifyAccountProof"],[878,42,817,40],[879,4,818,2,"verifyUserSignatures"],[879,24,818,22],[879,26,818,24,"verifyUserSignatures$1"],[880,2,819,0],[880,3,819,1],[880,4,819,2],[882,2,821,0],[883,0,822,0],[884,0,823,0],[885,0,824,0],[886,0,825,0],[887,0,826,0],[888,2,827,0],[888,6,827,6,"verifyUserSignatures"],[888,26,827,26],[888,29,827,29,"logger"],[888,35,827,35],[888,36,827,36,"log"],[888,39,827,39],[888,40,827,40,"deprecate"],[888,49,827,49],[888,50,827,50],[889,4,828,2,"pkg"],[889,7,828,5],[889,9,828,7],[889,14,828,12],[890,4,829,2,"subject"],[890,11,829,9],[890,13,829,11],[890,41,829,39],[891,4,830,2,"message"],[891,11,830,9],[891,13,830,11],[891,61,830,59],[892,4,831,2,"callback"],[892,12,831,10],[892,14,831,12],[892,23,831,21,"verifyUserSignatures"],[892,43,831,41,"verifyUserSignatures"],[892,44,831,42,"message"],[892,51,831,49],[892,53,831,51,"compSigs"],[892,61,831,59],[892,63,831,61],[893,6,832,4],[893,13,832,11,"verifyUserSignatures$1"],[893,35,832,33],[893,36,832,34,"message"],[893,43,832,41],[893,45,832,43,"compSigs"],[893,53,832,51],[893,54,832,52],[894,4,833,2],[895,2,834,0],[895,3,834,1],[895,4,834,2],[896,2,836,0],[896,6,836,6,"serialize"],[896,15,836,15],[897,4,836,15],[897,8,836,15,"_ref5"],[897,13,836,15],[897,16,836,15,"_asyncToGenerator"],[897,33,836,15],[897,34,836,18],[897,47,836,36],[898,6,837,2],[898,10,837,6,"args"],[898,14,837,10],[898,17,837,13,"arguments"],[898,26,837,22],[898,27,837,23,"length"],[898,33,837,29],[898,36,837,32],[898,37,837,33],[898,41,837,37,"arguments"],[898,50,837,46],[898,51,837,47],[898,52,837,48],[898,53,837,49],[898,58,837,54,"undefined"],[898,67,837,63],[898,70,837,66,"arguments"],[898,79,837,75],[898,80,837,76],[898,81,837,77],[898,82,837,78],[898,85,837,81],[898,87,837,83],[899,6,838,2],[899,10,838,6,"opts"],[899,14,838,10],[899,17,838,13,"arguments"],[899,26,838,22],[899,27,838,23,"length"],[899,33,838,29],[899,36,838,32],[899,37,838,33],[899,41,838,37,"arguments"],[899,50,838,46],[899,51,838,47],[899,52,838,48],[899,53,838,49],[899,58,838,54,"undefined"],[899,67,838,63],[899,70,838,66,"arguments"],[899,79,838,75],[899,80,838,76],[899,81,838,77],[899,82,838,78],[899,85,838,81],[899,86,838,82],[899,87,838,83],[900,6,839,2],[900,10,839,8,"resolveFunction"],[900,25,839,23],[900,34,839,32,"sdk"],[900,37,839,35],[900,38,839,36,"config"],[900,44,839,42],[900,45,839,43,"first"],[900,50,839,48],[900,51,839,49],[900,52,839,50],[900,65,839,63],[900,66,839,64],[900,68,839,66,"opts"],[900,72,839,70],[900,73,839,71,"resolve"],[900,80,839,78],[900,84,839,82,"sdk"],[900,87,839,85],[900,88,839,86,"resolve"],[900,95,839,93],[900,96,839,94],[901,6,840,2],[901,10,840,6,"Array"],[901,15,840,11],[901,16,840,12,"isArray"],[901,23,840,19],[901,24,840,20,"args"],[901,28,840,24],[901,29,840,25],[901,31,840,27,"args"],[901,35,840,31],[901,44,840,40,"sdk"],[901,47,840,43],[901,48,840,44,"pipe"],[901,52,840,48],[901,53,840,49,"sdk"],[901,56,840,52],[901,57,840,53,"interaction"],[901,68,840,64],[901,69,840,65],[901,70,840,66],[901,72,840,68,"args"],[901,76,840,72],[901,77,840,73],[902,6,841,2],[902,13,841,9,"JSON"],[902,17,841,13],[902,18,841,14,"stringify"],[902,27,841,23],[902,28,841,24,"sdk"],[902,31,841,27],[902,32,841,28,"createSignableVoucher"],[902,53,841,49],[902,60,841,56,"resolveFunction"],[902,75,841,71],[902,76,841,72,"args"],[902,80,841,76],[902,81,841,77],[902,82,841,78],[902,84,841,80],[902,88,841,84],[902,90,841,86],[902,91,841,87],[902,92,841,88],[903,4,842,0],[903,5,842,1],[904,4,842,1],[904,20,836,6,"serialize"],[904,29,836,15,"serialize"],[904,30,836,15],[905,6,836,15],[905,13,836,15,"_ref5"],[905,18,836,15],[905,19,836,15,"apply"],[905,24,836,15],[905,31,836,15,"arguments"],[905,40,836,15],[906,4,836,15],[907,2,836,15],[907,5,842,1],[908,2,842,2],[908,11,844,15,"configLens"],[908,21,844,25,"configLens"],[908,22,844,25,"_x17"],[908,26,844,25],[909,4,844,25],[909,11,844,25,"_configLens"],[909,22,844,25],[909,23,844,25,"apply"],[909,28,844,25],[909,35,844,25,"arguments"],[909,44,844,25],[910,2,844,25],[911,2,844,25],[911,11,844,25,"_configLens"],[911,23,844,25],[912,4,844,25,"_configLens"],[912,15,844,25],[912,18,844,25,"_asyncToGenerator"],[912,35,844,25],[912,36,844,0],[912,47,844,26,"regex"],[912,52,844,31],[912,54,844,33],[913,6,845,2],[913,13,845,9,"Object"],[913,19,845,15],[913,20,845,16,"fromEntries"],[913,31,845,27],[913,32,845,28,"Object"],[913,38,845,34],[913,39,845,35,"entries"],[913,46,845,42],[913,53,845,49,"config"],[913,59,845,55],[913,60,845,56,"config"],[913,66,845,62],[913,67,845,63],[913,68,845,64],[913,69,845,65,"where"],[913,74,845,70],[913,75,845,71,"regex"],[913,80,845,76],[913,81,845,77],[913,82,845,78],[913,83,845,79,"map"],[913,86,845,82],[913,87,845,83,"_ref"],[913,91,845,87],[913,95,845,91],[914,8,846,4],[914,12,846,4,"_ref39"],[914,18,846,4],[914,21,846,4,"_slicedToArray"],[914,35,846,4],[914,36,846,23,"_ref"],[914,40,846,27],[915,10,846,9,"key"],[915,13,846,12],[915,16,846,12,"_ref39"],[915,22,846,12],[916,10,846,14,"value"],[916,15,846,19],[916,18,846,19,"_ref39"],[916,24,846,19],[917,8,847,4],[917,15,847,11],[917,16,847,12,"key"],[917,19,847,15],[917,20,847,16,"replace"],[917,27,847,23],[917,28,847,24,"regex"],[917,33,847,29],[917,35,847,31],[917,37,847,33],[917,38,847,34],[917,40,847,36,"value"],[917,45,847,41],[917,46,847,42],[918,6,848,2],[918,7,848,3],[918,8,848,4],[918,9,848,5],[919,4,849,0],[919,5,849,1],[920,4,849,1],[920,11,849,1,"_configLens"],[920,22,849,1],[920,23,849,1,"apply"],[920,28,849,1],[920,35,849,1,"arguments"],[920,44,849,1],[921,2,849,1],[922,2,851,0],[922,6,851,6,"ERROR_CODE_REGEX"],[922,22,851,22],[922,25,851,25],[922,48,851,48],[923,2,851,49],[923,6,852,6,"TransactionError"],[923,22,852,22],[923,48,852,22,"_Error"],[923,54,852,22],[924,4,853,2],[924,13,853,2,"TransactionError"],[924,30,853,14,"message"],[924,37,853,21],[924,39,853,23,"code"],[924,43,853,27],[924,45,853,29],[925,6,853,29],[925,10,853,29,"_this2"],[925,16,853,29],[926,6,853,29,"_classCallCheck"],[926,21,853,29],[926,28,853,29,"TransactionError"],[926,44,853,29],[927,6,854,4,"_this2"],[927,12,854,4],[927,15,854,4,"_callSuper"],[927,25,854,4],[927,32,854,4,"TransactionError"],[927,48,854,4],[927,51,854,10,"message"],[927,58,854,17],[928,6,855,4,"_this2"],[928,12,855,4],[928,13,855,9,"code"],[928,17,855,13],[928,20,855,16,"code"],[928,24,855,20],[929,6,856,4,"_this2"],[929,12,856,4],[929,13,856,9,"type"],[929,17,856,13],[929,20,856,16,"typedefs"],[929,28,856,24],[929,29,856,25,"FvmErrorCode"],[929,41,856,37],[929,42,856,38,"code"],[929,46,856,42],[929,47,856,43],[930,6,856,44],[930,13,856,44,"_this2"],[930,19,856,44],[931,4,857,2],[932,4,857,3,"_inherits"],[932,13,857,3],[932,14,857,3,"TransactionError"],[932,30,857,3],[932,32,857,3,"_Error"],[932,38,857,3],[933,4,857,3],[933,11,857,3,"_createClass"],[933,23,857,3],[933,24,857,3,"TransactionError"],[933,40,857,3],[934,6,857,3,"key"],[934,9,857,3],[935,6,857,3,"value"],[935,11,857,3],[935,13,858,2],[935,22,858,9,"fromErrorMessage"],[935,38,858,25,"fromErrorMessage"],[935,39,858,26,"errorMessage"],[935,51,858,38],[935,53,858,40],[936,8,859,4],[936,12,859,10,"match"],[936,17,859,15],[936,20,859,18,"errorMessage"],[936,32,859,30],[936,33,859,31,"match"],[936,38,859,36],[936,39,859,37,"ERROR_CODE_REGEX"],[936,55,859,53],[936,56,859,54],[937,8,860,4],[937,12,860,10,"code"],[937,16,860,14],[937,19,860,17,"match"],[937,24,860,22],[937,27,860,25,"parseInt"],[937,35,860,33],[937,36,860,34,"match"],[937,41,860,39],[937,42,860,40],[937,43,860,41],[937,44,860,42],[937,46,860,44],[937,48,860,46],[937,49,860,47],[937,52,860,50,"undefined"],[937,61,860,59],[938,8,861,4],[938,15,861,11],[938,19,861,15,"TransactionError"],[938,35,861,31],[938,36,861,32,"errorMessage"],[938,48,861,44],[938,50,861,46,"code"],[938,54,861,50],[938,58,861,54,"typedefs"],[938,66,861,62],[938,67,861,63,"FvmErrorCode"],[938,79,861,75],[938,80,861,76,"UNKNOWN_ERROR"],[938,93,861,89],[938,94,861,90],[939,6,862,2],[940,4,862,3],[941,2,862,3],[941,17,862,3,"_wrapNativeSuper"],[941,33,862,3],[941,34,852,31,"Error"],[941,39,852,36],[942,2,865,0],[942,6,865,6,"TXID_REGEXP"],[942,17,865,17],[942,20,865,20],[942,39,865,39],[944,2,867,0],[945,0,868,0],[946,0,869,0],[948,2,871,0],[949,0,872,0],[950,0,873,0],[952,2,875,0],[952,6,875,6,"POLL"],[952,10,875,10],[952,13,875,13],[952,19,875,19],[953,2,876,0],[953,6,876,6,"TIMEOUT"],[953,13,876,13],[953,16,876,16],[953,25,876,25],[954,2,877,0],[954,6,877,6,"fetchTxStatus"],[954,19,877,19],[955,4,877,19],[955,8,877,19,"_ref6"],[955,13,877,19],[955,16,877,19,"_asyncToGenerator"],[955,33,877,19],[955,34,877,22],[955,45,877,28,"transactionId"],[955,58,877,41],[955,60,877,45],[956,6,878,2],[956,13,878,9,"sdk"],[956,16,878,12],[956,17,878,13,"send"],[956,21,878,17],[956,22,878,18],[956,23,878,19,"sdk"],[956,26,878,22],[956,27,878,23,"getTransactionStatus"],[956,47,878,43],[956,48,878,44,"transactionId"],[956,61,878,57],[956,62,878,58],[956,63,878,59],[956,64,878,60],[956,65,878,61,"then"],[956,69,878,65],[956,70,878,66,"sdk"],[956,73,878,69],[956,74,878,70,"decode"],[956,80,878,76],[956,81,878,77],[957,4,879,0],[957,5,879,1],[958,4,879,1],[958,20,877,6,"fetchTxStatus"],[958,33,877,19,"fetchTxStatus"],[958,34,877,19,"_x18"],[958,38,877,19],[959,6,877,19],[959,13,877,19,"_ref6"],[959,18,877,19],[959,19,877,19,"apply"],[959,24,877,19],[959,31,877,19,"arguments"],[959,40,877,19],[960,4,877,19],[961,2,877,19],[961,5,879,1],[962,2,880,0],[962,6,880,6,"isExpired"],[962,15,880,15],[962,18,880,18,"tx"],[962,20,880,20],[962,24,880,24,"tx"],[962,26,880,26],[962,27,880,27,"status"],[962,33,880,33],[962,38,880,38],[962,39,880,39],[963,2,881,0],[963,6,881,6,"isSealed"],[963,14,881,14],[963,17,881,17,"tx"],[963,19,881,19],[963,23,881,23,"tx"],[963,25,881,25],[963,26,881,26,"status"],[963,32,881,32],[963,36,881,36],[963,37,881,37],[964,2,882,0],[964,6,882,6,"isExecuted"],[964,16,882,16],[964,19,882,19,"tx"],[964,21,882,21],[964,25,882,25,"tx"],[964,27,882,27],[964,28,882,28,"status"],[964,34,882,34],[964,38,882,38],[964,39,882,39],[965,2,883,0],[965,6,883,6,"isFinalized"],[965,17,883,17],[965,20,883,20,"tx"],[965,22,883,22],[965,26,883,26,"tx"],[965,28,883,28],[965,29,883,29,"status"],[965,35,883,35],[965,39,883,39],[965,40,883,40],[966,2,884,0],[966,6,884,6,"isPending"],[966,15,884,15],[966,18,884,18,"tx"],[966,20,884,20],[966,24,884,24,"tx"],[966,26,884,26],[966,27,884,27,"status"],[966,33,884,33],[966,37,884,37],[966,38,884,38],[967,2,885,0],[967,6,885,6,"isUnknown"],[967,15,885,15],[967,18,885,18,"tx"],[967,20,885,20],[967,24,885,24,"tx"],[967,26,885,26],[967,27,885,27,"status"],[967,33,885,33],[967,37,885,37],[967,38,885,38],[968,2,886,0],[968,6,886,6,"isDiff"],[968,12,886,12],[968,15,886,15,"isDiff"],[968,16,886,16,"cur"],[968,19,886,19],[968,21,886,21,"next"],[968,25,886,25],[968,30,886,30],[969,4,887,2],[969,11,887,9,"JSON"],[969,15,887,13],[969,16,887,14,"stringify"],[969,25,887,23],[969,26,887,24,"cur"],[969,29,887,27],[969,30,887,28],[969,35,887,33,"JSON"],[969,39,887,37],[969,40,887,38,"stringify"],[969,49,887,47],[969,50,887,48,"next"],[969,54,887,52],[969,55,887,53],[970,2,888,0],[970,3,888,1],[971,2,889,0],[971,6,889,6,"makeHandlers$1"],[971,20,889,20],[971,23,889,23],[971,32,889,23,"makeHandlers$1"],[971,33,889,23],[971,35,889,35],[972,4,890,2],[972,8,890,6,"opts"],[972,12,890,10],[972,15,890,13,"arguments"],[972,24,890,22],[972,25,890,23,"length"],[972,31,890,29],[972,34,890,32],[972,35,890,33],[972,39,890,37,"arguments"],[972,48,890,46],[972,49,890,47],[972,50,890,48],[972,51,890,49],[972,56,890,54,"undefined"],[972,65,890,63],[972,68,890,66,"arguments"],[972,77,890,75],[972,78,890,76],[972,79,890,77],[972,80,890,78],[972,83,890,81],[972,84,890,82],[972,85,890,83],[973,4,891,2],[973,11,891,9],[974,6,892,4],[974,7,892,5,"utilActor"],[974,16,892,14],[974,17,892,15,"INIT"],[974,21,892,19],[975,8,892,19],[975,12,892,19,"_ref7"],[975,17,892,19],[975,20,892,19,"_asyncToGenerator"],[975,37,892,19],[975,38,892,22],[975,49,892,28,"ctx"],[975,52,892,31],[975,54,892,35],[976,10,893,6,"setTimeout"],[976,20,893,16],[976,21,893,17],[976,27,893,23,"ctx"],[976,30,893,26],[976,31,893,27,"sendSelf"],[976,39,893,35],[976,40,893,36,"TIMEOUT"],[976,47,893,43],[976,48,893,44],[976,50,893,46,"opts"],[976,54,893,50],[976,55,893,51,"txNotFoundTimeout"],[976,72,893,68],[976,73,893,69],[977,10,894,6,"ctx"],[977,13,894,9],[977,14,894,10,"sendSelf"],[977,22,894,18],[977,23,894,19,"POLL"],[977,27,894,23],[977,28,894,24],[978,8,895,4],[978,9,895,5],[979,8,895,5],[979,25,895,5,"_x19"],[979,29,895,5],[980,10,895,5],[980,17,895,5,"_ref7"],[980,22,895,5],[980,23,895,5,"apply"],[980,28,895,5],[980,35,895,5,"arguments"],[980,44,895,5],[981,8,895,5],[982,6,895,5],[983,6,896,4],[983,7,896,5,"utilActor"],[983,16,896,14],[983,17,896,15,"SUBSCRIBE"],[983,26,896,24],[983,29,896,27],[983,30,896,28,"ctx"],[983,33,896,31],[983,35,896,33,"letter"],[983,41,896,39],[983,46,896,44],[984,8,897,6,"ctx"],[984,11,897,9],[984,12,897,10,"subscribe"],[984,21,897,19],[984,22,897,20,"letter"],[984,28,897,26],[984,29,897,27,"from"],[984,33,897,31],[984,34,897,32],[985,8,898,6,"ctx"],[985,11,898,9],[985,12,898,10,"send"],[985,16,898,14],[985,17,898,15,"letter"],[985,23,898,21],[985,24,898,22,"from"],[985,28,898,26],[985,30,898,28,"utilActor"],[985,39,898,37],[985,40,898,38,"UPDATED"],[985,47,898,45],[985,49,898,47,"ctx"],[985,52,898,50],[985,53,898,51,"all"],[985,56,898,54],[985,57,898,55],[985,58,898,56],[985,59,898,57],[986,6,899,4],[986,7,899,5],[987,6,900,4],[987,7,900,5,"utilActor"],[987,16,900,14],[987,17,900,15,"UNSUBSCRIBE"],[987,28,900,26],[987,31,900,29],[987,32,900,30,"ctx"],[987,35,900,33],[987,37,900,35,"letter"],[987,43,900,41],[987,48,900,46],[988,8,901,6,"ctx"],[988,11,901,9],[988,12,901,10,"unsubscribe"],[988,23,901,21],[988,24,901,22,"letter"],[988,30,901,28],[988,31,901,29,"from"],[988,35,901,33],[988,36,901,34],[989,6,902,4],[989,7,902,5],[990,6,903,4],[990,7,903,5,"utilActor"],[990,16,903,14],[990,17,903,15,"SNAPSHOT"],[990,25,903,23],[991,8,903,23],[991,12,903,23,"_ref8"],[991,17,903,23],[991,20,903,23,"_asyncToGenerator"],[991,37,903,23],[991,38,903,26],[991,49,903,33,"ctx"],[991,52,903,36],[991,54,903,38,"letter"],[991,60,903,44],[991,62,903,49],[992,10,904,6,"letter"],[992,16,904,12],[992,17,904,13,"reply"],[992,22,904,18],[992,23,904,19,"ctx"],[992,26,904,22],[992,27,904,23,"all"],[992,30,904,26],[992,31,904,27],[992,32,904,28],[992,33,904,29],[993,8,905,4],[993,9,905,5],[994,8,905,5],[994,25,905,5,"_x20"],[994,29,905,5],[994,31,905,5,"_x21"],[994,35,905,5],[995,10,905,5],[995,17,905,5,"_ref8"],[995,22,905,5],[995,23,905,5,"apply"],[995,28,905,5],[995,35,905,5,"arguments"],[995,44,905,5],[996,8,905,5],[997,6,905,5],[998,6,906,4],[998,7,906,5,"TIMEOUT"],[998,14,906,12],[999,8,906,12],[999,12,906,12,"_ref9"],[999,17,906,12],[999,20,906,12,"_asyncToGenerator"],[999,37,906,12],[999,38,906,15],[999,49,906,21,"ctx"],[999,52,906,24],[999,54,906,28],[1000,10,907,6],[1001,10,908,6],[1001,14,908,10,"Object"],[1001,20,908,16],[1001,21,908,17,"keys"],[1001,25,908,21],[1001,26,908,22,"ctx"],[1001,29,908,25],[1001,30,908,26,"all"],[1001,33,908,29],[1001,34,908,30],[1001,35,908,31],[1001,36,908,32],[1001,37,908,33,"length"],[1001,43,908,39],[1001,48,908,44],[1001,49,908,45],[1001,51,908,47],[1002,12,909,8,"ctx"],[1002,15,909,11],[1002,16,909,12,"fatalError"],[1002,26,909,22],[1002,27,909,23],[1002,31,909,27,"Error"],[1002,36,909,32],[1002,37,909,33],[1002,116,909,112,"opts"],[1002,120,909,116],[1002,121,909,117,"txNotFoundTimeout"],[1002,138,909,134],[1002,143,909,139],[1002,144,909,140],[1002,145,909,141],[1003,10,910,6],[1004,8,911,4],[1004,9,911,5],[1005,8,911,5],[1005,25,911,5,"_x22"],[1005,29,911,5],[1006,10,911,5],[1006,17,911,5,"_ref9"],[1006,22,911,5],[1006,23,911,5,"apply"],[1006,28,911,5],[1006,35,911,5,"arguments"],[1006,44,911,5],[1007,8,911,5],[1008,6,911,5],[1009,6,912,4],[1009,7,912,5,"POLL"],[1009,11,912,9],[1010,8,912,9],[1010,12,912,9,"_ref10"],[1010,18,912,9],[1010,21,912,9,"_asyncToGenerator"],[1010,38,912,9],[1010,39,912,12],[1010,50,912,18,"ctx"],[1010,53,912,21],[1010,55,912,25],[1011,10,913,6],[1012,10,914,6],[1012,14,914,12,"poll"],[1012,18,914,16],[1012,21,914,19,"poll"],[1012,22,914,19],[1012,27,914,25,"setTimeout"],[1012,37,914,35],[1012,38,914,36],[1012,44,914,42,"ctx"],[1012,47,914,45],[1012,48,914,46,"sendSelf"],[1012,56,914,54],[1012,57,914,55,"POLL"],[1012,61,914,59],[1012,62,914,60],[1012,64,914,62,"opts"],[1012,68,914,66],[1012,69,914,67,"pollRate"],[1012,77,914,75],[1012,78,914,76],[1013,10,915,6],[1013,14,915,10,"tx"],[1013,16,915,12],[1014,10,916,6],[1014,14,916,12,"prevTx"],[1014,20,916,18],[1014,23,916,21,"ctx"],[1014,26,916,24],[1014,27,916,25,"all"],[1014,30,916,28],[1014,31,916,29],[1014,32,916,30],[1015,10,917,6],[1015,14,917,10],[1016,12,918,8,"tx"],[1016,14,918,10],[1016,23,918,19,"fetchTxStatus"],[1016,36,918,32],[1016,37,918,33,"ctx"],[1016,40,918,36],[1016,41,918,37,"self"],[1016,45,918,41],[1016,46,918,42],[1016,47,918,43],[1016,48,918,44],[1017,10,919,6],[1017,11,919,7],[1017,12,919,8],[1017,19,919,15,"e"],[1017,20,919,16],[1017,22,919,18],[1018,12,920,8],[1018,16,920,14,"isHttpNotFound"],[1018,30,920,28],[1018,33,920,31,"e"],[1018,34,920,32],[1018,46,920,44,"transportHttp"],[1018,59,920,57],[1018,60,920,58,"HTTPRequestError"],[1018,76,920,74],[1018,80,920,78,"e"],[1018,81,920,79],[1018,82,920,80,"statusCode"],[1018,92,920,90],[1018,97,920,95],[1018,100,920,98],[1019,12,921,8],[1019,16,921,14,"isGrpcNotFound"],[1019,30,921,28],[1019,33,921,31,"e"],[1019,34,921,32],[1019,35,921,33,"code"],[1019,39,921,37],[1019,44,921,42,"grpcWeb"],[1019,51,921,49],[1019,52,921,50,"grpc"],[1019,56,921,54],[1019,57,921,55,"Code"],[1019,61,921,59],[1019,62,921,60,"NotFound"],[1019,70,921,68],[1021,12,923,8],[1022,12,924,8],[1022,16,924,12,"isHttpNotFound"],[1022,30,924,26],[1022,34,924,30,"isGrpcNotFound"],[1022,48,924,44],[1022,50,924,46],[1023,14,925,10],[1023,21,925,17,"poll"],[1023,25,925,21],[1023,26,925,22],[1023,27,925,23],[1024,12,926,8],[1025,12,927,8],[1025,19,927,15,"ctx"],[1025,22,927,18],[1025,23,927,19,"fatalError"],[1025,33,927,29],[1025,34,927,30,"e"],[1025,35,927,31],[1025,36,927,32],[1026,10,928,6],[1027,10,929,6],[1027,14,929,10],[1027,15,929,11,"isSealed"],[1027,23,929,19],[1027,24,929,20,"tx"],[1027,26,929,22],[1027,27,929,23],[1027,29,929,25,"poll"],[1027,33,929,29],[1027,34,929,30],[1027,35,929,31],[1028,10,930,6],[1028,14,930,10,"isDiff"],[1028,20,930,16],[1028,21,930,17,"prevTx"],[1028,27,930,23],[1028,29,930,25,"tx"],[1028,31,930,27],[1028,32,930,28],[1028,34,930,30,"ctx"],[1028,37,930,33],[1028,38,930,34,"broadcast"],[1028,47,930,43],[1028,48,930,44,"utilActor"],[1028,57,930,53],[1028,58,930,54,"UPDATED"],[1028,65,930,61],[1028,67,930,63,"tx"],[1028,69,930,65],[1028,70,930,66],[1029,10,931,6,"ctx"],[1029,13,931,9],[1029,14,931,10,"merge"],[1029,19,931,15],[1029,20,931,16,"tx"],[1029,22,931,18],[1029,23,931,19],[1030,8,932,4],[1030,9,932,5],[1031,8,932,5],[1031,25,932,5,"_x23"],[1031,29,932,5],[1032,10,932,5],[1032,17,932,5,"_ref10"],[1032,23,932,5],[1032,24,932,5,"apply"],[1032,29,932,5],[1032,36,932,5,"arguments"],[1032,45,932,5],[1033,8,932,5],[1034,6,932,5],[1035,4,933,2],[1035,5,933,3],[1036,2,934,0],[1036,3,934,1],[1037,2,935,0],[1037,6,935,6,"scoped"],[1037,12,935,12],[1037,15,935,15,"transactionId"],[1037,28,935,28],[1037,32,935,32],[1038,4,936,2],[1038,8,936,6],[1038,15,936,13,"transactionId"],[1038,28,936,26],[1038,33,936,31],[1038,41,936,39],[1038,43,936,41,"transactionId"],[1038,56,936,54],[1038,59,936,57,"transactionId"],[1038,72,936,70],[1038,73,936,71,"transactionId"],[1038,86,936,84],[1039,4,937,2],[1039,8,937,6,"transactionId"],[1039,21,937,19],[1039,25,937,23],[1039,29,937,27],[1039,31,937,29],[1039,37,937,35],[1039,41,937,39,"Error"],[1039,46,937,44],[1039,47,937,45],[1039,71,937,69],[1039,72,937,70],[1040,4,938,2],[1040,11,938,9,"transactionId"],[1040,24,938,22],[1041,2,939,0],[1041,3,939,1],[1042,2,940,0],[1042,6,940,6,"spawnTransaction"],[1042,22,940,22],[1042,25,940,25],[1042,34,940,25,"spawnTransaction"],[1042,35,940,25],[1042,37,940,37],[1043,4,941,2],[1043,8,941,6,"opts"],[1043,12,941,10],[1043,15,941,13,"arguments"],[1043,24,941,22],[1043,25,941,23,"length"],[1043,31,941,29],[1043,34,941,32],[1043,35,941,33],[1043,39,941,37,"arguments"],[1043,48,941,46],[1043,49,941,47],[1043,50,941,48],[1043,51,941,49],[1043,56,941,54,"undefined"],[1043,65,941,63],[1043,68,941,66,"arguments"],[1043,77,941,75],[1043,78,941,76],[1043,79,941,77],[1043,80,941,78],[1043,83,941,81],[1043,84,941,82],[1043,85,941,83],[1044,4,942,2],[1044,11,942,9,"transactionId"],[1044,24,942,22],[1044,28,942,26],[1045,6,943,4],[1045,13,943,11,"utilActor"],[1045,22,943,20],[1045,23,943,21,"spawn"],[1045,28,943,26],[1045,29,943,27,"makeHandlers$1"],[1045,43,943,41],[1045,44,943,42,"opts"],[1045,48,943,46],[1045,49,943,47],[1045,51,943,49,"scoped"],[1045,57,943,55],[1045,58,943,56,"transactionId"],[1045,71,943,69],[1045,72,943,70],[1045,73,943,71],[1046,4,944,2],[1046,5,944,3],[1047,2,945,0],[1047,3,945,1],[1049,2,947,0],[1050,0,948,0],[1051,0,949,0],[1052,0,950,0],[1053,0,951,0],[1055,2,953,0],[1056,0,954,0],[1057,0,955,0],[1058,0,956,0],[1059,0,957,0],[1060,0,958,0],[1061,0,959,0],[1062,0,960,0],[1063,0,961,0],[1064,0,962,0],[1065,0,963,0],[1066,0,964,0],[1067,0,965,0],[1068,0,966,0],[1069,0,967,0],[1070,0,968,0],[1071,2,969,0],[1071,11,969,9,"transaction"],[1071,22,969,20,"transaction"],[1071,23,969,21,"transactionId"],[1071,36,969,34],[1071,38,969,36],[1072,4,970,2],[1072,8,970,6,"opts"],[1072,12,970,10],[1072,15,970,13,"arguments"],[1072,24,970,22],[1072,25,970,23,"length"],[1072,31,970,29],[1072,34,970,32],[1072,35,970,33],[1072,39,970,37,"arguments"],[1072,48,970,46],[1072,49,970,47],[1072,50,970,48],[1072,51,970,49],[1072,56,970,54,"undefined"],[1072,65,970,63],[1072,68,970,66,"arguments"],[1072,77,970,75],[1072,78,970,76],[1072,79,970,77],[1072,80,970,78],[1072,83,970,81],[1073,6,971,4,"txNotFoundTimeout"],[1073,23,971,21],[1073,25,971,23],[1073,30,971,28],[1074,6,972,4,"pollRate"],[1074,14,972,12],[1074,16,972,14],[1075,4,973,2],[1075,5,973,3],[1076,4,974,2],[1077,4,975,2],[1077,8,975,6],[1077,9,975,7,"TXID_REGEXP"],[1077,20,975,18],[1077,21,975,19,"test"],[1077,25,975,23],[1077,26,975,24,"scoped"],[1077,32,975,30],[1077,33,975,31,"transactionId"],[1077,46,975,44],[1077,47,975,45],[1077,48,975,46],[1077,50,975,48],[1077,56,975,54],[1077,60,975,58,"Error"],[1077,65,975,63],[1077,66,975,64],[1077,89,975,87],[1077,90,975,88],[1078,4,976,2],[1078,13,976,11,"snapshot"],[1078,21,976,19,"snapshot"],[1078,22,976,19],[1078,24,976,22],[1079,6,977,4],[1079,13,977,11,"utilActor"],[1079,22,977,20],[1079,23,977,21,"snapshoter"],[1079,33,977,31],[1079,34,977,32,"transactionId"],[1079,47,977,45],[1079,49,977,47,"spawnTransaction"],[1079,65,977,63],[1079,66,977,64,"opts"],[1079,70,977,68],[1079,71,977,69],[1079,72,977,70],[1080,4,978,2],[1081,4,979,2],[1081,13,979,11,"subscribe"],[1081,22,979,20,"subscribe"],[1081,23,979,21,"callback"],[1081,31,979,29],[1081,33,979,31],[1082,6,980,4],[1082,13,980,11,"utilActor"],[1082,22,980,20],[1082,23,980,21,"subscriber"],[1082,33,980,31],[1082,34,980,32,"scoped"],[1082,40,980,38],[1082,41,980,39,"transactionId"],[1082,54,980,52],[1082,55,980,53],[1082,57,980,55,"spawnTransaction"],[1082,73,980,71],[1082,74,980,72,"opts"],[1082,78,980,76],[1082,79,980,77],[1082,81,980,79,"callback"],[1082,89,980,87],[1082,90,980,88],[1083,4,981,2],[1084,4,982,2],[1084,13,982,11,"once"],[1084,17,982,15,"once"],[1084,18,982,16,"predicate"],[1084,27,982,25],[1084,29,982,27],[1085,6,983,4],[1085,13,983,11],[1085,22,983,20,"innerOnce"],[1085,31,983,29,"innerOnce"],[1085,32,983,29],[1085,34,983,32],[1086,8,984,6],[1086,12,984,10,"opts"],[1086,16,984,14],[1086,19,984,17,"arguments"],[1086,28,984,26],[1086,29,984,27,"length"],[1086,35,984,33],[1086,38,984,36],[1086,39,984,37],[1086,43,984,41,"arguments"],[1086,52,984,50],[1086,53,984,51],[1086,54,984,52],[1086,55,984,53],[1086,60,984,58,"undefined"],[1086,69,984,67],[1086,72,984,70,"arguments"],[1086,81,984,79],[1086,82,984,80],[1086,83,984,81],[1086,84,984,82],[1086,87,984,85],[1086,88,984,86],[1086,89,984,87],[1087,8,985,6],[1087,12,985,12,"suppress"],[1087,20,985,20],[1087,23,985,23,"opts"],[1087,27,985,27],[1087,28,985,28,"suppress"],[1087,36,985,36],[1087,40,985,40],[1087,45,985,45],[1088,8,986,6],[1088,15,986,13],[1088,19,986,17,"Promise"],[1088,26,986,24],[1088,27,986,25],[1088,28,986,26,"resolve"],[1088,35,986,33],[1088,37,986,35,"reject"],[1088,43,986,41],[1088,48,986,46],[1089,10,987,8],[1089,14,987,14,"unsub"],[1089,19,987,19],[1089,22,987,22,"subscribe"],[1089,31,987,31],[1089,32,987,32],[1089,33,987,33,"txStatus"],[1089,41,987,41],[1089,43,987,43,"error"],[1089,48,987,48],[1089,53,987,53],[1090,12,988,10],[1090,16,988,14],[1090,17,988,15,"error"],[1090,22,988,20],[1090,26,988,24,"txStatus"],[1090,34,988,32],[1090,35,988,33,"statusCode"],[1090,45,988,43],[1090,50,988,48],[1090,51,988,49,"suppress"],[1090,59,988,57],[1090,61,988,59],[1091,14,989,12],[1091,18,989,16,"error"],[1091,23,989,21],[1091,27,989,25],[1091,31,989,29],[1091,33,989,31],[1092,16,990,14,"reject"],[1092,22,990,20],[1092,23,990,21,"error"],[1092,28,990,26],[1092,29,990,27],[1093,16,991,14,"unsub"],[1093,21,991,19],[1093,22,991,20],[1093,23,991,21],[1094,14,992,12],[1094,15,992,13],[1094,21,992,19],[1094,25,992,23,"txStatus"],[1094,33,992,31],[1094,34,992,32,"statusCode"],[1094,44,992,42],[1094,49,992,47],[1094,50,992,48],[1094,52,992,50],[1095,16,993,14],[1095,20,993,20,"transactionError"],[1095,36,993,36],[1095,39,993,39,"TransactionError"],[1095,55,993,55],[1095,56,993,56,"fromErrorMessage"],[1095,72,993,72],[1095,73,993,73,"txStatus"],[1095,81,993,81],[1095,82,993,82,"errorMessage"],[1095,94,993,94],[1095,95,993,95],[1096,16,994,14,"reject"],[1096,22,994,20],[1096,23,994,21,"transactionError"],[1096,39,994,37],[1096,40,994,38],[1097,16,995,14,"unsub"],[1097,21,995,19],[1097,22,995,20],[1097,23,995,21],[1098,14,996,12],[1099,14,997,12],[1100,12,998,10],[1101,12,999,10],[1101,16,999,14,"predicate"],[1101,25,999,23],[1101,26,999,24,"txStatus"],[1101,34,999,32],[1101,35,999,33],[1101,37,999,35],[1102,14,1000,12,"resolve"],[1102,21,1000,19],[1102,22,1000,20,"txStatus"],[1102,30,1000,28],[1102,31,1000,29],[1103,14,1001,12,"unsub"],[1103,19,1001,17],[1103,20,1001,18],[1103,21,1001,19],[1104,12,1002,10],[1105,10,1003,8],[1105,11,1003,9],[1105,12,1003,10],[1106,8,1004,6],[1106,9,1004,7],[1106,10,1004,8],[1107,6,1005,4],[1107,7,1005,5],[1108,4,1006,2],[1109,4,1007,2],[1109,11,1007,9],[1110,6,1008,4,"snapshot"],[1110,14,1008,12],[1111,6,1009,4,"subscribe"],[1111,15,1009,13],[1112,6,1010,4,"onceFinalized"],[1112,19,1010,17],[1112,21,1010,19,"once"],[1112,25,1010,23],[1112,26,1010,24,"isFinalized"],[1112,37,1010,35],[1112,38,1010,36],[1113,6,1011,4,"onceExecuted"],[1113,18,1011,16],[1113,20,1011,18,"once"],[1113,24,1011,22],[1113,25,1011,23,"isExecuted"],[1113,35,1011,33],[1113,36,1011,34],[1114,6,1012,4,"onceSealed"],[1114,16,1012,14],[1114,18,1012,16,"once"],[1114,22,1012,20],[1114,23,1012,21,"isSealed"],[1114,31,1012,29],[1115,4,1013,2],[1115,5,1013,3],[1116,2,1014,0],[1117,2,1015,0,"transaction"],[1117,13,1015,11],[1117,14,1015,12,"isUnknown"],[1117,23,1015,21],[1117,26,1015,24,"isUnknown"],[1117,35,1015,33],[1118,2,1016,0,"transaction"],[1118,13,1016,11],[1118,14,1016,12,"isPending"],[1118,23,1016,21],[1118,26,1016,24,"isPending"],[1118,35,1016,33],[1119,2,1017,0,"transaction"],[1119,13,1017,11],[1119,14,1017,12,"isFinalized"],[1119,25,1017,23],[1119,28,1017,26,"isFinalized"],[1119,39,1017,37],[1120,2,1018,0,"transaction"],[1120,13,1018,11],[1120,14,1018,12,"isExecuted"],[1120,24,1018,22],[1120,27,1018,25,"isExecuted"],[1120,37,1018,35],[1121,2,1019,0,"transaction"],[1121,13,1019,11],[1121,14,1019,12,"isSealed"],[1121,22,1019,20],[1121,25,1019,23,"isSealed"],[1121,33,1019,31],[1122,2,1020,0,"transaction"],[1122,13,1020,11],[1122,14,1020,12,"isExpired"],[1122,23,1020,21],[1122,26,1020,24,"isExpired"],[1122,35,1020,33],[1123,2,1022,0],[1123,6,1022,6,"RATE"],[1123,10,1022,10],[1123,13,1022,13],[1123,18,1022,18],[1124,2,1023,0],[1124,6,1023,6,"UPDATED$1"],[1124,15,1023,15],[1124,18,1023,18],[1124,27,1023,27],[1125,2,1024,0],[1125,6,1024,6,"TICK"],[1125,10,1024,10],[1125,13,1024,13],[1125,19,1024,19],[1126,2,1025,0],[1126,6,1025,6,"HIGH_WATER_MARK"],[1126,21,1025,21],[1126,24,1025,24],[1126,29,1025,29],[1127,2,1026,0],[1127,6,1026,6,"scheduleTick"],[1127,18,1026,18],[1128,4,1026,18],[1128,8,1026,18,"_ref11"],[1128,14,1026,18],[1128,17,1026,18,"_asyncToGenerator"],[1128,34,1026,18],[1128,35,1026,21],[1128,46,1026,27,"ctx"],[1128,49,1026,30],[1128,51,1026,34],[1129,6,1027,2],[1129,13,1027,9,"setTimeout"],[1129,23,1027,19],[1129,24,1027,20],[1129,30,1027,26,"ctx"],[1129,33,1027,29],[1129,34,1027,30,"sendSelf"],[1129,42,1027,38],[1129,43,1027,39,"TICK"],[1129,47,1027,43],[1129,48,1027,44],[1129,56,1027,52,"sdk"],[1129,59,1027,55],[1129,60,1027,56,"config"],[1129,66,1027,62],[1129,67,1027,63],[1129,68,1027,64],[1129,69,1027,65,"get"],[1129,72,1027,68],[1129,73,1027,69],[1129,92,1027,88],[1129,94,1027,90,"RATE"],[1129,98,1027,94],[1129,99,1027,95],[1129,100,1027,96],[1130,4,1028,0],[1130,5,1028,1],[1131,4,1028,1],[1131,20,1026,6,"scheduleTick"],[1131,32,1026,18,"scheduleTick"],[1131,33,1026,18,"_x24"],[1131,37,1026,18],[1132,6,1026,18],[1132,13,1026,18,"_ref11"],[1132,19,1026,18],[1132,20,1026,18,"apply"],[1132,25,1026,18],[1132,32,1026,18,"arguments"],[1132,41,1026,18],[1133,4,1026,18],[1134,2,1026,18],[1134,5,1028,1],[1135,2,1029,0],[1135,6,1029,6,"HANDLERS$1"],[1135,16,1029,16],[1135,19,1029,19],[1136,4,1030,2],[1136,5,1030,3,"TICK"],[1136,9,1030,7],[1137,6,1030,7],[1137,10,1030,7,"_ref12"],[1137,16,1030,7],[1137,19,1030,7,"_asyncToGenerator"],[1137,36,1030,7],[1137,37,1030,10],[1137,48,1030,16,"ctx"],[1137,51,1030,19],[1137,53,1030,23],[1138,8,1031,4],[1138,12,1031,8],[1138,13,1031,9,"ctx"],[1138,16,1031,12],[1138,17,1031,13,"hasSubs"],[1138,24,1031,20],[1138,25,1031,21],[1138,26,1031,22],[1138,28,1031,24],[1139,8,1032,4],[1139,12,1032,8,"hwm"],[1139,15,1032,11],[1139,18,1032,14,"ctx"],[1139,21,1032,17],[1139,22,1032,18,"get"],[1139,25,1032,21],[1139,26,1032,22,"HIGH_WATER_MARK"],[1139,41,1032,37],[1139,42,1032,38],[1140,8,1033,4],[1140,12,1033,8,"hwm"],[1140,15,1033,11],[1140,19,1033,15],[1140,23,1033,19],[1140,25,1033,21],[1141,10,1034,6,"ctx"],[1141,13,1034,9],[1141,14,1034,10,"put"],[1141,17,1034,13],[1141,18,1034,14,"HIGH_WATER_MARK"],[1141,33,1034,29],[1141,41,1034,37,"sdk"],[1141,44,1034,40],[1141,45,1034,41,"block"],[1141,50,1034,46],[1141,51,1034,47],[1141,52,1034,48],[1141,53,1034,49],[1142,10,1035,6,"ctx"],[1142,13,1035,9],[1142,14,1035,10,"put"],[1142,17,1035,13],[1142,18,1035,14,"TICK"],[1142,22,1035,18],[1142,30,1035,26,"scheduleTick"],[1142,42,1035,38],[1142,43,1035,39,"ctx"],[1142,46,1035,42],[1142,47,1035,43],[1142,48,1035,44],[1143,8,1036,4],[1143,9,1036,5],[1143,15,1036,11],[1144,10,1037,6],[1144,14,1037,10,"next"],[1144,18,1037,14],[1144,27,1037,23,"sdk"],[1144,30,1037,26],[1144,31,1037,27,"block"],[1144,36,1037,32],[1144,37,1037,33],[1144,38,1037,34],[1145,10,1038,6,"ctx"],[1145,13,1038,9],[1145,14,1038,10,"put"],[1145,17,1038,13],[1145,18,1038,14,"HIGH_WATER_MARK"],[1145,33,1038,29],[1145,35,1038,31,"next"],[1145,39,1038,35],[1145,40,1038,36],[1146,10,1039,6],[1146,14,1039,10,"hwm"],[1146,17,1039,13],[1146,18,1039,14,"height"],[1146,24,1039,20],[1146,27,1039,23,"next"],[1146,31,1039,27],[1146,32,1039,28,"height"],[1146,38,1039,34],[1146,40,1039,36],[1147,12,1040,8],[1147,16,1040,14,"data"],[1147,20,1040,18],[1147,29,1040,27,"sdk"],[1147,32,1040,30],[1147,33,1040,31,"send"],[1147,37,1040,35],[1147,38,1040,36],[1147,39,1040,37,"sdk"],[1147,42,1040,40],[1147,43,1040,41,"getEventsAtBlockHeightRange"],[1147,70,1040,68],[1147,71,1040,69,"ctx"],[1147,74,1040,72],[1147,75,1040,73,"self"],[1147,79,1040,77],[1147,80,1040,78],[1147,81,1040,79],[1147,83,1040,81,"hwm"],[1147,86,1040,84],[1147,87,1040,85,"height"],[1147,93,1040,91],[1147,96,1040,94],[1147,97,1040,95],[1147,99,1040,97,"next"],[1147,103,1040,101],[1147,104,1040,102,"height"],[1147,110,1040,108],[1147,111,1040,109],[1147,112,1040,110],[1147,113,1040,111],[1147,114,1040,112,"then"],[1147,118,1040,116],[1147,119,1040,117,"sdk"],[1147,122,1040,120],[1147,123,1040,121,"decode"],[1147,129,1040,127],[1147,130,1040,128],[1148,12,1041,8],[1148,17,1041,13],[1148,21,1041,17,"d"],[1148,22,1041,18],[1148,26,1041,22,"data"],[1148,30,1041,26],[1148,32,1041,28,"ctx"],[1148,35,1041,31],[1148,36,1041,32,"broadcast"],[1148,45,1041,41],[1148,46,1041,42,"UPDATED$1"],[1148,55,1041,51],[1148,57,1041,53,"d"],[1148,58,1041,54],[1148,59,1041,55,"data"],[1148,63,1041,59],[1148,64,1041,60],[1149,10,1042,6],[1150,10,1043,6,"ctx"],[1150,13,1043,9],[1150,14,1043,10,"put"],[1150,17,1043,13],[1150,18,1043,14,"TICK"],[1150,22,1043,18],[1150,30,1043,26,"scheduleTick"],[1150,42,1043,38],[1150,43,1043,39,"ctx"],[1150,46,1043,42],[1150,47,1043,43],[1150,48,1043,44],[1151,8,1044,4],[1152,6,1045,2],[1152,7,1045,3],[1153,6,1045,3],[1153,23,1045,3,"_x25"],[1153,27,1045,3],[1154,8,1045,3],[1154,15,1045,3,"_ref12"],[1154,21,1045,3],[1154,22,1045,3,"apply"],[1154,27,1045,3],[1154,34,1045,3,"arguments"],[1154,43,1045,3],[1155,6,1045,3],[1156,4,1045,3],[1157,4,1046,2],[1157,5,1046,3,"utilActor"],[1157,14,1046,12],[1157,15,1046,13,"SUBSCRIBE"],[1157,24,1046,22],[1158,6,1046,22],[1158,10,1046,22,"_ref13"],[1158,16,1046,22],[1158,19,1046,22,"_asyncToGenerator"],[1158,36,1046,22],[1158,37,1046,25],[1158,48,1046,32,"ctx"],[1158,51,1046,35],[1158,53,1046,37,"letter"],[1158,59,1046,43],[1158,61,1046,48],[1159,8,1047,4],[1159,12,1047,8],[1159,13,1047,9,"ctx"],[1159,16,1047,12],[1159,17,1047,13,"hasSubs"],[1159,24,1047,20],[1159,25,1047,21],[1159,26,1047,22],[1159,28,1047,24],[1160,10,1048,6,"ctx"],[1160,13,1048,9],[1160,14,1048,10,"put"],[1160,17,1048,13],[1160,18,1048,14,"TICK"],[1160,22,1048,18],[1160,30,1048,26,"scheduleTick"],[1160,42,1048,38],[1160,43,1048,39,"ctx"],[1160,46,1048,42],[1160,47,1048,43],[1160,48,1048,44],[1161,8,1049,4],[1162,8,1050,4,"ctx"],[1162,11,1050,7],[1162,12,1050,8,"subscribe"],[1162,21,1050,17],[1162,22,1050,18,"letter"],[1162,28,1050,24],[1162,29,1050,25,"from"],[1162,33,1050,29],[1162,34,1050,30],[1163,6,1051,2],[1163,7,1051,3],[1164,6,1051,3],[1164,23,1051,3,"_x26"],[1164,27,1051,3],[1164,29,1051,3,"_x27"],[1164,33,1051,3],[1165,8,1051,3],[1165,15,1051,3,"_ref13"],[1165,21,1051,3],[1165,22,1051,3,"apply"],[1165,27,1051,3],[1165,34,1051,3,"arguments"],[1165,43,1051,3],[1166,6,1051,3],[1167,4,1051,3],[1168,4,1052,2],[1168,5,1052,3,"utilActor"],[1168,14,1052,12],[1168,15,1052,13,"UNSUBSCRIBE"],[1168,26,1052,24],[1168,29,1052,27],[1168,30,1052,28,"ctx"],[1168,33,1052,31],[1168,35,1052,33,"letter"],[1168,41,1052,39],[1168,46,1052,44],[1169,6,1053,4,"ctx"],[1169,9,1053,7],[1169,10,1053,8,"unsubscribe"],[1169,21,1053,19],[1169,22,1053,20,"letter"],[1169,28,1053,26],[1169,29,1053,27,"from"],[1169,33,1053,31],[1169,34,1053,32],[1170,6,1054,4],[1170,10,1054,8],[1170,11,1054,9,"ctx"],[1170,14,1054,12],[1170,15,1054,13,"hasSubs"],[1170,22,1054,20],[1170,23,1054,21],[1170,24,1054,22],[1170,26,1054,24],[1171,8,1055,6,"clearTimeout"],[1171,20,1055,18],[1171,21,1055,19,"ctx"],[1171,24,1055,22],[1171,25,1055,23,"get"],[1171,28,1055,26],[1171,29,1055,27,"TICK"],[1171,33,1055,31],[1171,34,1055,32],[1171,35,1055,33],[1172,8,1056,6,"ctx"],[1172,11,1056,9],[1172,12,1056,10,"delete"],[1172,18,1056,16],[1172,19,1056,17,"TICK"],[1172,23,1056,21],[1172,24,1056,22],[1173,8,1057,6,"ctx"],[1173,11,1057,9],[1173,12,1057,10,"delete"],[1173,18,1057,16],[1173,19,1057,17,"HIGH_WATER_MARK"],[1173,34,1057,32],[1173,35,1057,33],[1174,6,1058,4],[1175,4,1059,2],[1176,2,1060,0],[1176,3,1060,1],[1177,2,1061,0],[1177,6,1061,6,"spawnEvents"],[1177,17,1061,17],[1177,20,1061,20,"key"],[1177,23,1061,23],[1177,27,1061,27,"utilActor"],[1177,36,1061,36],[1177,37,1061,37,"spawn"],[1177,42,1061,42],[1177,43,1061,43,"HANDLERS$1"],[1177,53,1061,53],[1177,55,1061,55,"key"],[1177,58,1061,58],[1177,59,1061,59],[1179,2,1063,0],[1180,0,1064,0],[1181,0,1065,0],[1183,2,1067,0],[1184,0,1068,0],[1185,0,1069,0],[1186,0,1070,0],[1188,2,1072,0],[1189,0,1073,0],[1190,0,1074,0],[1191,0,1075,0],[1193,2,1077,0],[1194,0,1078,0],[1195,0,1079,0],[1196,0,1080,0],[1197,0,1081,0],[1198,0,1082,0],[1199,0,1083,0],[1200,0,1084,0],[1201,0,1085,0],[1202,2,1086,0],[1202,11,1086,9,"events$1"],[1202,19,1086,17,"events$1"],[1202,20,1086,18,"key"],[1202,23,1086,21],[1202,25,1086,23],[1203,4,1087,2],[1203,11,1087,9],[1204,6,1088,4],[1205,0,1089,0],[1206,0,1090,0],[1207,0,1091,0],[1208,0,1092,0],[1209,6,1093,4,"subscribe"],[1209,15,1093,13],[1209,17,1093,15,"callback"],[1209,25,1093,23],[1209,29,1093,27,"utilActor"],[1209,38,1093,36],[1209,39,1093,37,"subscriber"],[1209,49,1093,47],[1209,50,1093,48,"key"],[1209,53,1093,51],[1209,55,1093,53,"spawnEvents"],[1209,66,1093,64],[1209,68,1093,66,"callback"],[1209,76,1093,74],[1210,4,1094,2],[1210,5,1094,3],[1211,2,1095,0],[1213,2,1097,0],[1214,0,1098,0],[1215,0,1099,0],[1216,0,1100,0],[1217,0,1101,0],[1218,0,1102,0],[1219,0,1103,0],[1220,0,1104,0],[1221,0,1105,0],[1222,2,1106,0],[1222,11,1106,9,"events"],[1222,17,1106,15,"events"],[1222,18,1106,16,"filterOrType"],[1222,30,1106,28],[1222,32,1106,30],[1223,4,1107,2],[1223,8,1107,6,"filter"],[1223,14,1107,12],[1224,4,1108,2],[1224,8,1108,6],[1224,15,1108,13,"filterOrType"],[1224,27,1108,25],[1224,32,1108,30],[1224,40,1108,38],[1224,42,1108,40],[1225,6,1109,4,"filter"],[1225,12,1109,10],[1225,15,1109,13],[1226,8,1110,6,"eventTypes"],[1226,18,1110,16],[1226,20,1110,18],[1226,21,1110,19,"filterOrType"],[1226,33,1110,31],[1227,6,1111,4],[1227,7,1111,5],[1228,4,1112,2],[1228,5,1112,3],[1228,11,1112,9],[1229,6,1113,4,"filter"],[1229,12,1113,10],[1229,15,1113,13,"filterOrType"],[1229,27,1113,25],[1229,31,1113,29],[1229,32,1113,30],[1229,33,1113,31],[1230,4,1114,2],[1231,4,1115,2],[1231,11,1115,9],[1232,6,1116,4,"subscribe"],[1232,15,1116,13],[1232,17,1116,15,"callback"],[1232,25,1116,23],[1232,29,1116,27],[1233,8,1117,6],[1233,12,1117,12,"streamPromise"],[1233,25,1117,25],[1233,28,1117,28,"sdk"],[1233,31,1117,31],[1233,32,1117,32,"send"],[1233,36,1117,36],[1233,37,1117,37],[1233,38,1117,38,"sdk"],[1233,41,1117,41],[1233,42,1117,42,"subscribeEvents"],[1233,57,1117,57],[1233,58,1117,58,"filter"],[1233,64,1117,64],[1233,65,1117,65],[1233,66,1117,66],[1233,67,1117,67],[1233,68,1117,68,"then"],[1233,72,1117,72],[1233,73,1117,73,"sdk"],[1233,76,1117,76],[1233,77,1117,77,"decode"],[1233,83,1117,83],[1233,84,1117,84],[1235,8,1119,6],[1236,8,1120,6],[1236,12,1120,12,"legacySubscriptionPromise"],[1236,37,1120,37],[1236,40,1120,40,"streamPromise"],[1236,53,1120,53],[1236,54,1120,54,"then"],[1236,58,1120,58],[1236,59,1120,59],[1236,65,1120,65],[1236,69,1120,69],[1236,70,1120,70],[1236,71,1120,71,"catch"],[1236,76,1120,76],[1236,77,1120,77,"e"],[1236,78,1120,78],[1236,82,1120,82],[1237,10,1121,8],[1238,10,1122,8],[1238,14,1122,12,"e"],[1238,15,1122,13],[1238,16,1122,14,"message"],[1238,23,1122,21],[1238,28,1122,26],[1238,97,1122,95],[1238,99,1122,97],[1239,12,1123,10],[1239,18,1123,16,"e"],[1239,19,1123,17],[1240,10,1124,8],[1241,10,1125,8],[1241,14,1125,12],[1241,21,1125,19,"filterOrType"],[1241,33,1125,31],[1241,38,1125,36],[1241,46,1125,44],[1241,48,1125,46],[1242,12,1126,10],[1242,18,1126,16],[1242,22,1126,20,"Error"],[1242,27,1126,25],[1242,28,1126,26],[1242,90,1126,88],[1242,91,1126,89],[1243,10,1127,8],[1244,10,1128,8],[1244,17,1128,15,"events$1"],[1244,25,1128,23],[1244,26,1128,24,"filterOrType"],[1244,38,1128,36],[1244,39,1128,37],[1244,40,1128,38,"subscribe"],[1244,49,1128,47],[1244,50,1128,48,"callback"],[1244,58,1128,56],[1244,59,1128,57],[1245,8,1129,6],[1245,9,1129,7],[1245,10,1129,8],[1247,8,1131,6],[1248,8,1132,6],[1248,17,1132,15,"onEvents"],[1248,25,1132,23,"onEvents"],[1248,26,1132,24,"data"],[1248,30,1132,28],[1248,32,1132,30],[1249,10,1133,8,"data"],[1249,14,1133,12],[1249,15,1133,13,"forEach"],[1249,22,1133,20],[1249,23,1133,21,"event"],[1249,28,1133,26],[1249,32,1133,30,"callback"],[1249,40,1133,38],[1249,41,1133,39,"event"],[1249,46,1133,44],[1249,48,1133,46],[1249,52,1133,50],[1249,53,1133,51],[1249,54,1133,52],[1250,8,1134,6],[1251,8,1135,6],[1251,17,1135,15,"onError"],[1251,24,1135,22,"onError"],[1251,25,1135,23,"error"],[1251,30,1135,28],[1251,32,1135,30],[1252,10,1136,8,"callback"],[1252,18,1136,16],[1252,19,1136,17],[1252,23,1136,21],[1252,25,1136,23,"error"],[1252,30,1136,28],[1252,31,1136,29],[1253,8,1137,6],[1255,8,1139,6],[1256,8,1140,6,"legacySubscriptionPromise"],[1256,33,1140,31],[1256,34,1140,32,"then"],[1256,38,1140,36],[1256,39,1140,37,"legacySubscription"],[1256,57,1140,55],[1256,61,1140,59],[1257,10,1141,8],[1257,14,1141,12],[1257,15,1141,13,"legacySubscription"],[1257,33,1141,31],[1257,35,1141,33],[1258,12,1142,10,"streamPromise"],[1258,25,1142,23],[1258,26,1142,24,"then"],[1258,30,1142,28],[1258,31,1142,29,"stream"],[1258,37,1142,35],[1258,41,1142,39,"stream"],[1258,47,1142,45],[1258,48,1142,46,"on"],[1258,50,1142,48],[1258,51,1142,49],[1258,59,1142,57],[1258,61,1142,59,"onEvents"],[1258,69,1142,67],[1258,70,1142,68],[1258,71,1142,69,"on"],[1258,73,1142,71],[1258,74,1142,72],[1258,81,1142,79],[1258,83,1142,81,"onError"],[1258,90,1142,88],[1258,91,1142,89],[1258,92,1142,90],[1258,93,1142,91,"catch"],[1258,98,1142,96],[1258,99,1142,97,"error"],[1258,104,1142,102],[1258,108,1142,106],[1259,14,1143,12,"streamPromise"],[1259,27,1143,25],[1259,28,1143,26,"then"],[1259,32,1143,30],[1259,33,1143,31,"stream"],[1259,39,1143,37],[1259,43,1143,41,"stream"],[1259,49,1143,47],[1259,50,1143,48,"close"],[1259,55,1143,53],[1259,56,1143,54],[1259,57,1143,55],[1259,58,1143,56],[1260,14,1144,12,"onError"],[1260,21,1144,19],[1260,22,1144,20,"error"],[1260,27,1144,25],[1260,28,1144,26],[1261,12,1145,10],[1261,13,1145,11],[1261,14,1145,12],[1262,10,1146,8],[1263,8,1147,6],[1263,9,1147,7],[1263,10,1147,8],[1265,8,1149,6],[1266,8,1150,6],[1266,15,1150,13],[1266,21,1150,19],[1267,10,1151,8,"legacySubscriptionPromise"],[1267,35,1151,33],[1267,36,1151,34,"then"],[1267,40,1151,38],[1267,41,1151,39,"legacySubscription"],[1267,59,1151,57],[1267,63,1151,61],[1268,12,1152,10],[1268,16,1152,14,"legacySubscription"],[1268,34,1152,32],[1268,36,1152,34],[1269,14,1153,12,"legacySubscription"],[1269,32,1153,30],[1269,33,1153,31],[1269,34,1153,32],[1270,12,1154,10],[1270,13,1154,11],[1270,19,1154,17],[1271,14,1155,12,"streamPromise"],[1271,27,1155,25],[1271,28,1155,26,"then"],[1271,32,1155,30],[1271,33,1155,31,"stream"],[1271,39,1155,37],[1271,43,1155,41,"stream"],[1271,49,1155,47],[1271,50,1155,48,"close"],[1271,55,1155,53],[1271,56,1155,54],[1271,57,1155,55],[1271,58,1155,56],[1272,12,1156,10],[1273,10,1157,8],[1273,11,1157,9],[1273,12,1157,10],[1274,8,1158,6],[1274,9,1158,7],[1275,6,1159,4],[1276,4,1160,2],[1276,5,1160,3],[1277,2,1161,0],[1278,2,1163,0],[1278,6,1163,6,"stub"],[1278,10,1163,10],[1278,13,1163,13,"stub"],[1278,14,1163,13],[1278,19,1163,19],[1279,4,1164,2],[1279,10,1164,8],[1279,14,1164,12,"Error"],[1279,19,1164,17],[1279,20,1164,18],[1279,75,1164,73],[1279,76,1164,74],[1280,2,1165,0],[1280,3,1165,1],[1281,2,1166,0],[1281,6,1166,6,"stubCoreStrategies"],[1281,24,1166,24],[1281,27,1166,27],[1282,4,1167,2],[1282,5,1167,3,"CORE_STRATEGIES"],[1282,20,1167,18],[1282,21,1167,19],[1282,30,1167,28],[1282,31,1167,29],[1282,34,1167,32,"stub"],[1282,38,1167,36],[1283,4,1168,2],[1283,5,1168,3,"CORE_STRATEGIES"],[1283,20,1168,18],[1283,21,1168,19],[1283,32,1168,30],[1283,33,1168,31],[1283,36,1168,34,"stub"],[1283,40,1168,38],[1284,4,1169,2],[1284,5,1169,3,"CORE_STRATEGIES"],[1284,20,1169,18],[1284,21,1169,19],[1284,33,1169,31],[1284,34,1169,32],[1284,37,1169,35,"stub"],[1284,41,1169,39],[1285,4,1170,2],[1285,5,1170,3,"CORE_STRATEGIES"],[1285,20,1170,18],[1285,21,1170,19],[1285,30,1170,28],[1285,31,1170,29],[1285,34,1170,32,"stub"],[1285,38,1170,36],[1286,4,1171,2],[1286,5,1171,3,"CORE_STRATEGIES"],[1286,20,1171,18],[1286,21,1171,19],[1286,30,1171,28],[1286,31,1171,29],[1286,34,1171,32,"stub"],[1286,38,1171,36],[1287,4,1172,2],[1287,5,1172,3,"CORE_STRATEGIES"],[1287,20,1172,18],[1287,21,1172,19],[1287,30,1172,28],[1287,31,1172,29],[1287,34,1172,32,"stub"],[1288,2,1173,0],[1288,3,1173,1],[1289,2,1174,0],[1289,6,1174,6,"supportedPlugins"],[1289,22,1174,22],[1289,25,1174,25],[1289,26,1174,26],[1289,41,1174,41],[1289,42,1174,42],[1290,2,1175,0],[1290,6,1175,6,"supportedServicePlugins"],[1290,29,1175,29],[1290,32,1175,32],[1290,33,1175,33],[1290,52,1175,52],[1290,53,1175,53],[1291,2,1176,0],[1291,6,1176,6,"validateDiscoveryPlugin"],[1291,29,1176,29],[1291,32,1176,32,"servicePlugin"],[1291,45,1176,45],[1291,49,1176,49],[1292,4,1177,2],[1292,8,1177,2,"_servicePlugin$servic"],[1292,29,1177,2],[1292,32,1180,6,"servicePlugin"],[1292,45,1180,19],[1292,46,1178,4,"services"],[1292,54,1178,12],[1293,6,1178,4,"services"],[1293,14,1178,12],[1293,17,1178,12,"_servicePlugin$servic"],[1293,38,1178,12],[1293,52,1178,15],[1293,54,1178,17],[1293,57,1178,17,"_servicePlugin$servic"],[1293,78,1178,17],[1294,6,1179,4,"serviceStrategy"],[1294,21,1179,19],[1294,24,1180,6,"servicePlugin"],[1294,37,1180,19],[1294,38,1179,4,"serviceStrategy"],[1294,53,1179,19],[1295,4,1181,2,"utilInvariant"],[1295,17,1181,15],[1295,18,1181,16,"invariant"],[1295,27,1181,25],[1295,28,1181,26,"Array"],[1295,33,1181,31],[1295,34,1181,32,"isArray"],[1295,41,1181,39],[1295,42,1181,40,"services"],[1295,50,1181,48],[1295,51,1181,49],[1295,53,1181,51],[1295,80,1181,78],[1295,81,1181,79],[1296,4,1182,2],[1296,9,1182,7],[1296,13,1182,13,"ds"],[1296,15,1182,15],[1296,19,1182,19,"services"],[1296,27,1182,27],[1296,29,1182,29],[1297,6,1183,4,"utilInvariant"],[1297,19,1183,17],[1297,20,1183,18,"invariant"],[1297,29,1183,27],[1297,30,1183,28,"isRequired"],[1297,40,1183,38],[1297,41,1183,39,"ds"],[1297,43,1183,41],[1297,44,1183,42,"f_type"],[1297,50,1183,48],[1297,51,1183,49],[1297,55,1183,53,"ds"],[1297,57,1183,55],[1297,58,1183,56,"f_type"],[1297,64,1183,62],[1297,69,1183,67],[1297,78,1183,76],[1297,80,1183,78],[1297,101,1183,99],[1297,102,1183,100],[1298,6,1184,4,"utilInvariant"],[1298,19,1184,17],[1298,20,1184,18,"invariant"],[1298,29,1184,27],[1298,30,1184,28,"isRequired"],[1298,40,1184,38],[1298,41,1184,39,"ds"],[1298,43,1184,41],[1298,44,1184,42,"type"],[1298,48,1184,46],[1298,49,1184,47],[1298,53,1184,51,"ds"],[1298,55,1184,53],[1298,56,1184,54,"type"],[1298,60,1184,58],[1298,65,1184,63],[1298,72,1184,70],[1298,74,1184,72],[1298,114,1184,112,"ds"],[1298,116,1184,114],[1298,117,1184,115,"type"],[1298,121,1184,119],[1298,123,1184,121],[1298,124,1184,122],[1299,6,1185,4,"utilInvariant"],[1299,19,1185,17],[1299,20,1185,18,"invariant"],[1299,29,1185,27],[1299,30,1185,28,"ds"],[1299,32,1185,30],[1299,33,1185,31,"method"],[1299,39,1185,37],[1299,43,1185,41,"CORE_STRATEGIES"],[1299,58,1185,56],[1299,62,1185,60,"serviceStrategy"],[1299,77,1185,75],[1299,78,1185,76,"method"],[1299,84,1185,82],[1299,89,1185,87,"ds"],[1299,91,1185,89],[1299,92,1185,90,"method"],[1299,98,1185,96],[1299,100,1185,98],[1299,118,1185,116,"ds"],[1299,120,1185,118],[1299,121,1185,119,"method"],[1299,127,1185,125],[1299,146,1185,144],[1299,147,1185,145],[1300,4,1186,2],[1301,4,1187,2,"utilInvariant"],[1301,17,1187,15],[1301,18,1187,16,"invariant"],[1301,27,1187,25],[1301,28,1187,26,"isRequired"],[1301,38,1187,36],[1301,39,1187,37,"serviceStrategy"],[1301,54,1187,52],[1301,55,1187,53],[1301,57,1187,55],[1301,87,1187,85],[1301,88,1187,86],[1302,4,1188,2,"utilInvariant"],[1302,17,1188,15],[1302,18,1188,16,"invariant"],[1302,27,1188,25],[1302,28,1188,26,"isRequired"],[1302,38,1188,36],[1302,39,1188,37,"serviceStrategy"],[1302,54,1188,52],[1302,55,1188,53,"method"],[1302,61,1188,59],[1302,62,1188,60],[1302,66,1188,64,"isString"],[1302,74,1188,72],[1302,75,1188,73,"serviceStrategy"],[1302,90,1188,88],[1302,91,1188,89,"method"],[1302,97,1188,95],[1302,98,1188,96],[1302,100,1188,98],[1302,137,1188,135],[1302,138,1188,136],[1303,4,1189,2,"utilInvariant"],[1303,17,1189,15],[1303,18,1189,16,"invariant"],[1303,27,1189,25],[1303,28,1189,26,"isRequired"],[1303,38,1189,36],[1303,39,1189,37,"serviceStrategy"],[1303,54,1189,52],[1303,55,1189,53,"exec"],[1303,59,1189,57],[1303,60,1189,58],[1303,64,1189,62,"isFunc"],[1303,70,1189,68],[1303,71,1189,69,"serviceStrategy"],[1303,86,1189,84],[1303,87,1189,85,"exec"],[1303,91,1189,89],[1303,92,1189,90],[1303,94,1189,92],[1303,138,1189,136],[1303,139,1189,137],[1304,4,1190,2],[1304,11,1190,9],[1305,6,1191,4,"discoveryServices"],[1305,23,1191,21],[1305,25,1191,23,"services"],[1305,33,1191,31],[1306,6,1192,4,"serviceStrategy"],[1307,4,1193,2],[1307,5,1193,3],[1308,2,1194,0],[1308,3,1194,1],[1309,2,1195,0],[1309,6,1195,6,"ServiceRegistry"],[1309,21,1195,21],[1309,24,1195,24,"_ref"],[1309,28,1195,28],[1309,32,1195,32],[1310,4,1196,2],[1310,8,1197,4,"coreStrategies"],[1310,22,1197,18],[1310,25,1198,6,"_ref"],[1310,29,1198,10],[1310,30,1197,4,"coreStrategies"],[1310,44,1197,18],[1311,4,1199,2],[1311,8,1199,6,"services"],[1311,16,1199,14],[1311,19,1199,17],[1311,23,1199,21,"Set"],[1311,26,1199,24],[1311,27,1199,25],[1311,28,1199,26],[1312,4,1200,2],[1312,8,1200,6,"strategies"],[1312,18,1200,16],[1312,21,1200,19],[1312,25,1200,23,"Map"],[1312,28,1200,26],[1312,29,1200,27,"Object"],[1312,35,1200,33],[1312,36,1200,34,"entries"],[1312,43,1200,41],[1312,44,1200,42,"coreStrategies"],[1312,58,1200,56],[1312,59,1200,57],[1312,60,1200,58],[1313,4,1201,2],[1313,8,1201,8,"add"],[1313,11,1201,11],[1313,14,1201,14,"servicePlugin"],[1313,27,1201,27],[1313,31,1201,31],[1314,6,1202,4,"utilInvariant"],[1314,19,1202,17],[1314,20,1202,18,"invariant"],[1314,29,1202,27],[1314,30,1202,28,"supportedServicePlugins"],[1314,53,1202,51],[1314,54,1202,52,"includes"],[1314,62,1202,60],[1314,63,1202,61,"servicePlugin"],[1314,76,1202,74],[1314,77,1202,75,"type"],[1314,81,1202,79],[1314,82,1202,80],[1314,84,1202,82],[1314,107,1202,105,"servicePlugin"],[1314,120,1202,118],[1314,121,1202,119,"type"],[1314,125,1202,123],[1314,144,1202,142],[1314,145,1202,143],[1315,6,1203,4],[1315,10,1203,8,"servicePlugin"],[1315,23,1203,21],[1315,24,1203,22,"type"],[1315,28,1203,26],[1315,33,1203,31],[1315,52,1203,50],[1315,54,1203,52],[1316,8,1204,6],[1316,12,1204,6,"_validateDiscoveryPlu"],[1316,33,1204,6],[1316,36,1207,10,"validateDiscoveryPlugin"],[1316,59,1207,33],[1316,60,1207,34,"servicePlugin"],[1316,73,1207,47],[1316,74,1207,48],[1317,10,1205,8,"discoveryServices"],[1317,27,1205,25],[1317,30,1205,25,"_validateDiscoveryPlu"],[1317,51,1205,25],[1317,52,1205,8,"discoveryServices"],[1317,69,1205,25],[1318,10,1206,8,"serviceStrategy"],[1318,25,1206,23],[1318,28,1206,23,"_validateDiscoveryPlu"],[1318,49,1206,23],[1318,50,1206,8,"serviceStrategy"],[1318,65,1206,23],[1319,8,1208,6,"setServices"],[1319,19,1208,17],[1319,20,1208,18,"discoveryServices"],[1319,37,1208,35],[1319,38,1208,36],[1320,8,1209,6],[1320,12,1209,10],[1320,13,1209,11,"strategies"],[1320,23,1209,21],[1320,24,1209,22,"has"],[1320,27,1209,25],[1320,28,1209,26,"serviceStrategy"],[1320,43,1209,41],[1320,44,1209,42,"method"],[1320,50,1209,48],[1320,51,1209,49],[1320,53,1209,51],[1321,10,1210,8,"strategies"],[1321,20,1210,18],[1321,21,1210,19,"set"],[1321,24,1210,22],[1321,25,1210,23,"serviceStrategy"],[1321,40,1210,38],[1321,41,1210,39,"method"],[1321,47,1210,45],[1321,49,1210,47,"serviceStrategy"],[1321,64,1210,62],[1321,65,1210,63,"exec"],[1321,69,1210,67],[1321,70,1210,68],[1322,8,1211,6],[1322,9,1211,7],[1322,15,1211,13],[1323,10,1212,8,"logger"],[1323,16,1212,14],[1323,17,1212,15,"log"],[1323,20,1212,18],[1323,21,1212,19],[1324,12,1213,10,"title"],[1324,17,1213,15],[1324,19,1213,17],[1324,39,1213,37],[1325,12,1214,10,"message"],[1325,19,1214,17],[1325,21,1214,19],[1325,45,1214,43,"serviceStrategy"],[1325,60,1214,58],[1325,61,1214,59,"method"],[1325,67,1214,65],[1325,84,1214,82],[1326,12,1215,10,"level"],[1326,17,1215,15],[1326,19,1215,17,"logger"],[1326,25,1215,23],[1326,26,1215,24,"LEVELS"],[1326,32,1215,30],[1326,33,1215,31,"warn"],[1327,10,1216,8],[1327,11,1216,9],[1327,12,1216,10],[1328,8,1217,6],[1329,6,1218,4],[1330,4,1219,2],[1330,5,1219,3],[1331,4,1220,2],[1331,8,1220,8,"setServices"],[1331,19,1220,19],[1331,22,1220,22,"discoveryServices"],[1331,39,1220,39],[1331,43,1220,43,"services"],[1331,51,1220,51],[1331,54,1220,54],[1331,58,1220,58,"Set"],[1331,61,1220,61],[1331,62,1220,62],[1331,63,1220,63],[1331,66,1220,66,"discoveryServices"],[1331,83,1220,83],[1331,84,1220,84],[1331,85,1220,85],[1332,4,1221,2],[1332,8,1221,8,"getServices"],[1332,19,1221,19],[1332,22,1221,22,"getServices"],[1332,23,1221,22],[1332,28,1221,28],[1332,29,1221,29],[1332,32,1221,32,"services"],[1332,40,1221,40],[1332,41,1221,41],[1333,4,1222,2],[1333,8,1222,8,"getStrategy"],[1333,19,1222,19],[1333,22,1222,22,"method"],[1333,28,1222,28],[1333,32,1222,32,"strategies"],[1333,42,1222,42],[1333,43,1222,43,"get"],[1333,46,1222,46],[1333,47,1222,47,"method"],[1333,53,1222,53],[1333,54,1222,54],[1334,4,1223,2],[1334,8,1223,8,"getStrategies"],[1334,21,1223,21],[1334,24,1223,24,"getStrategies"],[1334,25,1223,24],[1334,30,1223,30],[1334,31,1223,31],[1334,34,1223,34,"strategies"],[1334,44,1223,44],[1334,45,1223,45,"keys"],[1334,49,1223,49],[1334,50,1223,50],[1334,51,1223,51],[1334,52,1223,52],[1335,4,1224,2],[1335,11,1224,9,"Object"],[1335,17,1224,15],[1335,18,1224,16,"freeze"],[1335,24,1224,22],[1335,25,1224,23],[1336,6,1225,4,"add"],[1336,9,1225,7],[1337,6,1226,4,"getServices"],[1337,17,1226,15],[1338,6,1227,4,"getStrategy"],[1338,17,1227,15],[1339,6,1228,4,"getStrategies"],[1340,4,1229,2],[1340,5,1229,3],[1340,6,1229,4],[1341,2,1230,0],[1341,3,1230,1],[1342,2,1231,0],[1342,6,1231,6,"validatePlugins"],[1342,21,1231,21],[1342,24,1231,24,"plugins"],[1342,31,1231,31],[1342,35,1231,35],[1343,4,1232,2],[1343,8,1232,6,"pluginsArray"],[1343,20,1232,18],[1344,4,1233,2,"utilInvariant"],[1344,17,1233,15],[1344,18,1233,16,"invariant"],[1344,27,1233,25],[1344,28,1233,26],[1344,29,1233,27],[1344,30,1233,28,"plugins"],[1344,37,1233,35],[1344,39,1233,37],[1344,60,1233,58],[1344,61,1233,59],[1345,4,1234,2],[1345,8,1234,6],[1345,9,1234,7,"Array"],[1345,14,1234,12],[1345,15,1234,13,"isArray"],[1345,22,1234,20],[1345,23,1234,21,"plugins"],[1345,30,1234,28],[1345,31,1234,29],[1345,33,1234,31],[1346,6,1235,4,"pluginsArray"],[1346,18,1235,16],[1346,21,1235,19],[1346,22,1235,20,"plugins"],[1346,29,1235,27],[1346,30,1235,28],[1347,4,1236,2],[1347,5,1236,3],[1347,11,1236,9],[1348,6,1237,4,"pluginsArray"],[1348,18,1237,16],[1348,21,1237,19],[1348,22,1237,20],[1348,25,1237,23,"plugins"],[1348,32,1237,30],[1348,33,1237,31],[1349,4,1238,2],[1350,4,1239,2],[1350,9,1239,7],[1350,13,1239,13,"p"],[1350,14,1239,14],[1350,18,1239,18,"pluginsArray"],[1350,30,1239,30],[1350,32,1239,32],[1351,6,1240,4,"utilInvariant"],[1351,19,1240,17],[1351,20,1240,18,"invariant"],[1351,29,1240,27],[1351,30,1240,28,"isRequired"],[1351,40,1240,38],[1351,41,1240,39,"p"],[1351,42,1240,40],[1351,43,1240,41,"name"],[1351,47,1240,45],[1351,48,1240,46],[1351,50,1240,48],[1351,75,1240,73],[1351,76,1240,74],[1352,6,1241,4,"utilInvariant"],[1352,19,1241,17],[1352,20,1241,18,"invariant"],[1352,29,1241,27],[1352,30,1241,28,"isRequired"],[1352,40,1241,38],[1352,41,1241,39,"p"],[1352,42,1241,40],[1352,43,1241,41,"f_type"],[1352,49,1241,47],[1352,50,1241,48],[1352,52,1241,50],[1352,79,1241,77],[1352,80,1241,78],[1353,6,1242,4,"utilInvariant"],[1353,19,1242,17],[1353,20,1242,18,"invariant"],[1353,29,1242,27],[1353,30,1242,28,"supportedPlugins"],[1353,46,1242,44],[1353,47,1242,45,"includes"],[1353,55,1242,53],[1353,56,1242,54,"p"],[1353,57,1242,55],[1353,58,1242,56,"f_type"],[1353,64,1242,62],[1353,65,1242,63],[1353,67,1242,65],[1353,82,1242,80,"p"],[1353,83,1242,81],[1353,84,1242,82,"f_type"],[1353,90,1242,88],[1353,109,1242,107],[1353,110,1242,108],[1354,4,1243,2],[1355,4,1244,2],[1355,11,1244,9,"pluginsArray"],[1355,23,1244,21],[1356,2,1245,0],[1356,3,1245,1],[1357,2,1246,0],[1357,6,1246,6,"PluginRegistry"],[1357,20,1246,20],[1357,23,1246,23,"PluginRegistry"],[1357,24,1246,23],[1357,29,1246,29],[1358,4,1247,2],[1358,8,1247,8,"pluginsMap"],[1358,18,1247,18],[1358,21,1247,21],[1358,25,1247,25,"Map"],[1358,28,1247,28],[1358,29,1247,29],[1358,30,1247,30],[1359,4,1248,2],[1359,8,1248,8,"getPlugins"],[1359,18,1248,18],[1359,21,1248,21,"getPlugins"],[1359,22,1248,21],[1359,27,1248,27,"pluginsMap"],[1359,37,1248,37],[1360,4,1249,2],[1360,8,1249,8,"add"],[1360,11,1249,11],[1360,14,1249,14,"plugins"],[1360,21,1249,21],[1360,25,1249,25],[1361,6,1250,4],[1361,10,1250,10,"pluginsArray"],[1361,22,1250,22],[1361,25,1250,25,"validatePlugins"],[1361,40,1250,40],[1361,41,1250,41,"plugins"],[1361,48,1250,48],[1361,49,1250,49],[1362,6,1251,4],[1362,11,1251,9],[1362,15,1251,15,"p"],[1362,16,1251,16],[1362,20,1251,20,"pluginsArray"],[1362,32,1251,32],[1362,34,1251,34],[1363,8,1252,6,"pluginsMap"],[1363,18,1252,16],[1363,19,1252,17,"set"],[1363,22,1252,20],[1363,23,1252,21,"p"],[1363,24,1252,22],[1363,25,1252,23,"name"],[1363,29,1252,27],[1363,31,1252,29,"p"],[1363,32,1252,30],[1363,33,1252,31],[1364,8,1253,6],[1364,12,1253,10,"p"],[1364,13,1253,11],[1364,14,1253,12,"f_type"],[1364,20,1253,18],[1364,25,1253,23],[1364,40,1253,38],[1364,42,1253,40],[1365,10,1254,8,"serviceRegistry"],[1365,25,1254,23],[1365,26,1254,24,"add"],[1365,29,1254,27],[1365,30,1254,28,"p"],[1365,31,1254,29],[1365,32,1254,30],[1366,8,1255,6],[1367,6,1256,4],[1368,4,1257,2],[1368,5,1257,3],[1369,4,1258,2],[1369,11,1258,9,"Object"],[1369,17,1258,15],[1369,18,1258,16,"freeze"],[1369,24,1258,22],[1369,25,1258,23],[1370,6,1259,4,"add"],[1370,9,1259,7],[1371,6,1260,4,"getPlugins"],[1372,4,1261,2],[1372,5,1261,3],[1372,6,1261,4],[1373,2,1262,0],[1373,3,1262,1],[1374,2,1263,0],[1374,6,1263,4,"serviceRegistry"],[1374,21,1263,19],[1375,2,1264,0],[1375,6,1264,6,"getIsServiceRegistryInitialized"],[1375,37,1264,37],[1375,40,1264,40,"getIsServiceRegistryInitialized"],[1375,41,1264,40],[1375,46,1264,46],[1375,53,1264,53,"serviceRegistry"],[1375,68,1264,68],[1375,73,1264,73],[1375,84,1264,84],[1376,2,1265,0],[1376,6,1265,6,"initServiceRegistry"],[1376,25,1265,25],[1376,28,1265,28,"_ref2"],[1376,33,1265,33],[1376,37,1265,37],[1377,4,1266,2],[1377,8,1267,4,"coreStrategies"],[1377,22,1267,18],[1377,25,1268,6,"_ref2"],[1377,30,1268,11],[1377,31,1267,4,"coreStrategies"],[1377,45,1267,18],[1378,4,1269,2],[1378,8,1269,6,"getIsServiceRegistryInitialized"],[1378,39,1269,37],[1378,40,1269,38],[1378,41,1269,39],[1378,43,1269,41],[1379,6,1270,4],[1379,13,1270,11,"serviceRegistry"],[1379,28,1270,26],[1380,4,1271,2],[1381,4,1272,2],[1381,8,1272,8,"_serviceRegistry"],[1381,24,1272,24],[1381,27,1272,27,"ServiceRegistry"],[1381,42,1272,42],[1381,43,1272,43],[1382,6,1273,4,"coreStrategies"],[1383,4,1274,2],[1383,5,1274,3],[1383,6,1274,4],[1384,4,1275,2,"serviceRegistry"],[1384,19,1275,17],[1384,22,1275,20,"_serviceRegistry"],[1384,38,1275,36],[1385,4,1276,2],[1385,11,1276,9,"_serviceRegistry"],[1385,27,1276,25],[1386,2,1277,0],[1386,3,1277,1],[1387,2,1278,0],[1387,6,1278,6,"getServiceRegistry"],[1387,24,1278,24],[1387,27,1278,27,"getServiceRegistry"],[1387,28,1278,27],[1387,33,1278,33],[1388,4,1279,2],[1388,8,1279,6],[1388,9,1279,7,"getIsServiceRegistryInitialized"],[1388,40,1279,38],[1388,41,1279,39],[1388,42,1279,40],[1388,44,1279,42],[1389,6,1280,4,"console"],[1389,13,1280,11],[1389,14,1280,12,"warn"],[1389,18,1280,16],[1389,19,1280,17],[1389,97,1280,95],[1389,98,1280,96],[1390,6,1281,4],[1390,13,1281,11,"initServiceRegistry"],[1390,32,1281,30],[1390,33,1281,31],[1391,8,1282,6,"coreStrategies"],[1391,22,1282,20],[1391,24,1282,22,"stubCoreStrategies"],[1392,6,1283,4],[1392,7,1283,5],[1392,8,1283,6],[1393,4,1284,2],[1394,4,1285,2],[1394,11,1285,9,"serviceRegistry"],[1394,26,1285,24],[1395,2,1286,0],[1395,3,1286,1],[1396,2,1287,0],[1396,6,1287,6,"pluginRegistry"],[1396,20,1287,20],[1396,23,1287,23,"PluginRegistry"],[1396,37,1287,37],[1396,38,1287,38],[1396,39,1287,39],[1397,2,1289,0],[1397,6,1289,6,"makeDiscoveryServices"],[1397,27,1289,27],[1398,4,1289,27],[1398,8,1289,27,"_ref14"],[1398,14,1289,27],[1398,17,1289,27,"_asyncToGenerator"],[1398,34,1289,27],[1398,35,1289,30],[1398,48,1289,42],[1399,6,1290,2],[1399,10,1290,8,"extensionServices"],[1399,27,1290,25],[1399,30,1290,28,"window"],[1399,36,1290,34],[1399,38,1290,36,"fcl_extensions"],[1399,52,1290,50],[1399,56,1290,54],[1399,58,1290,56],[1400,6,1291,2],[1400,13,1291,9],[1400,14,1291,10],[1400,17,1291,13,"extensionServices"],[1400,34,1291,30],[1400,36,1291,32],[1400,39,1291,35,"getServiceRegistry"],[1400,57,1291,53],[1400,58,1291,54],[1400,59,1291,55],[1400,60,1291,56,"getServices"],[1400,71,1291,67],[1400,72,1291,68],[1400,73,1291,69],[1400,74,1291,70],[1401,4,1292,0],[1401,5,1292,1],[1402,4,1292,1],[1402,20,1289,6,"makeDiscoveryServices"],[1402,41,1289,27,"makeDiscoveryServices"],[1402,42,1289,27],[1403,6,1289,27],[1403,13,1289,27,"_ref14"],[1403,19,1289,27],[1403,20,1289,27,"apply"],[1403,25,1289,27],[1403,32,1289,27,"arguments"],[1403,41,1289,27],[1404,4,1289,27],[1405,2,1289,27],[1405,5,1292,1],[1406,2,1292,2],[1406,11,1293,15,"getDiscoveryService"],[1406,30,1293,34,"getDiscoveryService"],[1406,31,1293,34,"_x28"],[1406,35,1293,34],[1407,4,1293,34],[1407,11,1293,34,"_getDiscoveryService"],[1407,31,1293,34],[1407,32,1293,34,"apply"],[1407,37,1293,34],[1407,44,1293,34,"arguments"],[1407,53,1293,34],[1408,2,1293,34],[1409,2,1293,34],[1409,11,1293,34,"_getDiscoveryService"],[1409,32,1293,34],[1410,4,1293,34,"_getDiscoveryService"],[1410,24,1293,34],[1410,27,1293,34,"_asyncToGenerator"],[1410,44,1293,34],[1410,45,1293,0],[1410,56,1293,35,"service"],[1410,63,1293,42],[1410,65,1293,44],[1411,6,1294,2],[1411,10,1294,8,"discoveryAuthnInclude"],[1411,31,1294,29],[1411,40,1294,38,"config"],[1411,46,1294,44],[1411,47,1294,45,"config"],[1411,53,1294,51],[1411,54,1294,52,"get"],[1411,57,1294,55],[1411,58,1294,56],[1411,83,1294,81],[1411,85,1294,83],[1411,87,1294,85],[1411,88,1294,86],[1412,6,1295,2],[1412,10,1295,8,"discoveryFeaturesSuggested"],[1412,36,1295,34],[1412,45,1295,43,"config"],[1412,51,1295,49],[1412,52,1295,50,"config"],[1412,58,1295,56],[1412,59,1295,57,"get"],[1412,62,1295,60],[1412,63,1295,61],[1412,93,1295,91],[1412,95,1295,93],[1412,97,1295,95],[1412,98,1295,96],[1413,6,1296,2],[1413,10,1296,8,"discoveryWalletMethod"],[1413,31,1296,29],[1413,40,1296,38,"config"],[1413,46,1296,44],[1413,47,1296,45,"config"],[1413,53,1296,51],[1413,54,1296,52,"first"],[1413,59,1296,57],[1413,60,1296,58],[1413,61,1296,59],[1413,86,1296,84],[1413,88,1296,86],[1413,121,1296,119],[1413,122,1296,120],[1413,123,1296,121],[1414,6,1297,2],[1414,10,1297,8,"method"],[1414,16,1297,14],[1414,19,1297,17,"service"],[1414,26,1297,24],[1414,28,1297,26,"method"],[1414,34,1297,32],[1414,37,1297,35,"service"],[1414,44,1297,42],[1414,45,1297,43,"method"],[1414,51,1297,49],[1414,54,1297,52,"discoveryWalletMethod"],[1414,75,1297,73],[1415,6,1298,2],[1415,10,1298,8,"endpoint"],[1415,18,1298,16],[1415,21,1298,19,"service"],[1415,28,1298,26],[1415,30,1298,28,"endpoint"],[1415,38,1298,36],[1415,49,1298,47,"config"],[1415,55,1298,53],[1415,56,1298,54,"config"],[1415,62,1298,60],[1415,63,1298,61,"first"],[1415,68,1298,66],[1415,69,1298,67],[1415,70,1298,68],[1415,88,1298,86],[1415,90,1298,88],[1415,111,1298,109],[1415,112,1298,110],[1415,113,1298,111],[1415,114,1298,112],[1416,6,1299,2,"utilInvariant"],[1416,19,1299,15],[1416,20,1299,16,"invariant"],[1416,29,1299,25],[1416,30,1299,26,"endpoint"],[1416,38,1299,34],[1416,40,1299,36],[1417,0,1300,0],[1418,0,1301,0],[1419,0,1302,0],[1419,5,1302,5],[1419,6,1302,6],[1420,6,1303,2],[1420,13,1303,9],[1421,8,1304,4],[1421,11,1304,7,"service"],[1421,18,1304,14],[1422,8,1305,4,"type"],[1422,12,1305,8],[1422,14,1305,10],[1422,21,1305,17],[1423,8,1306,4,"endpoint"],[1423,16,1306,12],[1424,8,1307,4,"method"],[1424,14,1307,10],[1425,8,1308,4,"discoveryAuthnInclude"],[1425,29,1308,25],[1426,8,1309,4,"discoveryFeaturesSuggested"],[1427,6,1310,2],[1427,7,1310,3],[1428,4,1311,0],[1428,5,1311,1],[1429,4,1311,1],[1429,11,1311,1,"_getDiscoveryService"],[1429,31,1311,1],[1429,32,1311,1,"apply"],[1429,37,1311,1],[1429,44,1311,1,"arguments"],[1429,53,1311,1],[1430,2,1311,1],[1431,2,1311,1],[1431,11,1313,15,"getServices"],[1431,22,1313,26,"getServices"],[1431,23,1313,26,"_x29"],[1431,27,1313,26],[1432,4,1313,26],[1432,11,1313,26,"_getServices"],[1432,23,1313,26],[1432,24,1313,26,"apply"],[1432,29,1313,26],[1432,36,1313,26,"arguments"],[1432,45,1313,26],[1433,2,1313,26],[1434,2,1313,26],[1434,11,1313,26,"_getServices"],[1434,24,1313,26],[1435,4,1313,26,"_getServices"],[1435,16,1313,26],[1435,19,1313,26,"_asyncToGenerator"],[1435,36,1313,26],[1435,37,1313,0],[1435,48,1313,27,"_ref"],[1435,52,1313,31],[1435,54,1313,33],[1436,6,1314,2],[1436,10,1315,4,"types"],[1436,15,1315,9],[1436,18,1316,6,"_ref"],[1436,22,1316,10],[1436,23,1315,4,"types"],[1436,28,1315,9],[1437,6,1317,2],[1437,10,1317,8,"endpoint"],[1437,18,1317,16],[1437,27,1317,25,"config"],[1437,33,1317,31],[1437,34,1317,32,"config"],[1437,40,1317,38],[1437,41,1317,39,"get"],[1437,44,1317,42],[1437,45,1317,43],[1437,71,1317,69],[1437,72,1317,70],[1438,6,1318,2,"utilInvariant"],[1438,19,1318,15],[1438,20,1318,16,"invariant"],[1438,29,1318,25],[1438,30,1318,26,"Boolean"],[1438,37,1318,33],[1438,38,1318,34,"endpoint"],[1438,46,1318,42],[1438,47,1318,43],[1438,49,1318,45],[1438,104,1318,100],[1438,105,1318,101],[1439,6,1319,2],[1439,10,1319,8,"include"],[1439,17,1319,15],[1439,26,1319,24,"config"],[1439,32,1319,30],[1439,33,1319,31,"config"],[1439,39,1319,37],[1439,40,1319,38,"get"],[1439,43,1319,41],[1439,44,1319,42],[1439,69,1319,67],[1439,71,1319,69],[1439,73,1319,71],[1439,74,1319,72],[1440,6,1320,2],[1440,10,1320,8,"url"],[1440,13,1320,11],[1440,16,1320,14],[1440,20,1320,18,"URL"],[1440,23,1320,21],[1440,24,1320,22,"endpoint"],[1440,32,1320,30],[1440,33,1320,31],[1441,6,1321,2],[1441,13,1321,9,"fetch"],[1441,18,1321,14],[1441,19,1321,15,"url"],[1441,22,1321,18],[1441,24,1321,20],[1442,8,1322,4,"method"],[1442,14,1322,10],[1442,16,1322,12],[1442,22,1322,18],[1443,8,1323,4,"headers"],[1443,15,1323,11],[1443,17,1323,13],[1444,10,1324,6],[1444,24,1324,20],[1444,26,1324,22],[1445,8,1325,4],[1445,9,1325,5],[1446,8,1326,4,"body"],[1446,12,1326,8],[1446,14,1326,10,"JSON"],[1446,18,1326,14],[1446,19,1326,15,"stringify"],[1446,28,1326,24],[1446,29,1326,25],[1447,10,1327,6,"type"],[1447,14,1327,10],[1447,16,1327,12,"types"],[1447,21,1327,17],[1448,10,1328,6,"fclVersion"],[1448,20,1328,16],[1448,22,1328,18,"VERSION"],[1448,29,1328,25],[1449,10,1329,6,"include"],[1449,17,1329,13],[1450,10,1330,6,"features"],[1450,18,1330,14],[1450,20,1330,16],[1451,12,1331,8,"suggested"],[1451,21,1331,17],[1451,29,1331,25,"config"],[1451,35,1331,31],[1451,36,1331,32,"config"],[1451,42,1331,38],[1451,43,1331,39,"get"],[1451,46,1331,42],[1451,47,1331,43],[1451,77,1331,73],[1451,79,1331,75],[1451,81,1331,77],[1452,10,1332,6],[1452,11,1332,7],[1453,10,1333,6,"clientServices"],[1453,24,1333,20],[1453,32,1333,28,"makeDiscoveryServices"],[1453,53,1333,49],[1453,54,1333,50],[1453,55,1333,51],[1454,10,1334,6,"supportedStrategies"],[1454,29,1334,25],[1454,31,1334,27,"getServiceRegistry"],[1454,49,1334,45],[1454,50,1334,46],[1454,51,1334,47],[1454,52,1334,48,"getStrategies"],[1454,65,1334,61],[1454,66,1334,62],[1454,67,1334,63],[1455,10,1335,6,"userAgent"],[1455,19,1335,15],[1455,21,1335,17,"window"],[1455,27,1335,23],[1455,29,1335,25,"navigator"],[1455,38,1335,34],[1455,40,1335,36,"userAgent"],[1455,49,1335,45],[1456,10,1336,6,"network"],[1456,17,1336,13],[1456,25,1336,21,"getChainId"],[1456,35,1336,31],[1456,36,1336,32],[1457,8,1337,4],[1457,9,1337,5],[1458,6,1338,2],[1458,7,1338,3],[1458,8,1338,4],[1458,9,1338,5,"then"],[1458,13,1338,9],[1458,14,1338,10,"d"],[1458,15,1338,11],[1458,19,1338,15,"d"],[1458,20,1338,16],[1458,21,1338,17,"json"],[1458,25,1338,21],[1458,26,1338,22],[1458,27,1338,23],[1458,28,1338,24],[1459,4,1339,0],[1459,5,1339,1],[1460,4,1339,1],[1460,11,1339,1,"_getServices"],[1460,23,1339,1],[1460,24,1339,1,"apply"],[1460,29,1339,1],[1460,36,1339,1,"arguments"],[1460,45,1339,1],[1461,2,1339,1],[1462,2,1341,0],[1462,6,1341,6,"SERVICE_ACTOR_KEYS"],[1462,24,1341,24],[1462,27,1341,27],[1463,4,1342,2,"AUTHN"],[1463,9,1342,7],[1463,11,1342,9],[1463,18,1342,16],[1464,4,1343,2,"RESULTS"],[1464,11,1343,9],[1464,13,1343,11],[1464,22,1343,20],[1465,4,1344,2,"SNAPSHOT"],[1465,12,1344,10],[1465,14,1344,12],[1465,24,1344,22],[1466,4,1345,2,"UPDATED"],[1466,11,1345,9],[1466,13,1345,11],[1466,22,1345,20],[1467,4,1346,2,"UPDATE_RESULTS"],[1467,18,1346,16],[1467,20,1346,18],[1468,2,1347,0],[1468,3,1347,1],[1469,2,1348,0],[1469,6,1348,6,"warn"],[1469,10,1348,10],[1469,13,1348,13,"warn"],[1469,14,1348,14,"fact"],[1469,18,1348,18],[1469,20,1348,20,"msg"],[1469,23,1348,23],[1469,28,1348,28],[1470,4,1349,2],[1470,8,1349,6,"fact"],[1470,12,1349,10],[1470,14,1349,12],[1471,6,1350,4,"console"],[1471,13,1350,11],[1471,14,1350,12,"warn"],[1471,18,1350,16],[1471,19,1350,17],[1472,0,1351,0],[1473,0,1352,0],[1474,0,1353,0],[1474,8,1353,8,"msg"],[1474,11,1353,11],[1475,0,1354,0],[1476,0,1355,0],[1477,0,1356,0],[1477,7,1356,7],[1477,9,1356,9],[1477,50,1356,50],[1477,51,1356,51],[1478,4,1357,2],[1479,2,1358,0],[1479,3,1358,1],[1480,2,1359,0],[1480,6,1359,6,"fetchServicesFromDiscovery"],[1480,32,1359,32],[1481,4,1359,32],[1481,8,1359,32,"_ref15"],[1481,14,1359,32],[1481,17,1359,32,"_asyncToGenerator"],[1481,34,1359,32],[1481,35,1359,35],[1481,48,1359,47],[1482,6,1360,2],[1482,10,1360,6],[1483,8,1361,4],[1483,12,1361,10,"services"],[1483,20,1361,18],[1483,29,1361,27,"getServices"],[1483,40,1361,38],[1483,41,1361,39],[1484,10,1362,6,"types"],[1484,15,1362,11],[1484,17,1362,13],[1484,18,1362,14,"SERVICE_ACTOR_KEYS"],[1484,36,1362,32],[1484,37,1362,33,"AUTHN"],[1484,42,1362,38],[1485,8,1363,4],[1485,9,1363,5],[1485,10,1363,6],[1486,8,1364,4,"utilActor"],[1486,17,1364,13],[1486,18,1364,14,"send"],[1486,22,1364,18],[1486,23,1364,19,"SERVICE_ACTOR_KEYS"],[1486,41,1364,37],[1486,42,1364,38,"AUTHN"],[1486,47,1364,43],[1486,49,1364,45,"SERVICE_ACTOR_KEYS"],[1486,67,1364,63],[1486,68,1364,64,"UPDATE_RESULTS"],[1486,82,1364,78],[1486,84,1364,80],[1487,10,1365,6,"results"],[1487,17,1365,13],[1487,19,1365,15,"services"],[1488,8,1366,4],[1488,9,1366,5],[1488,10,1366,6],[1489,6,1367,2],[1489,7,1367,3],[1489,8,1367,4],[1489,15,1367,11,"error"],[1489,20,1367,16],[1489,22,1367,18],[1490,8,1368,4,"logger"],[1490,14,1368,10],[1490,15,1368,11,"log"],[1490,18,1368,14],[1490,19,1368,15],[1491,10,1369,6,"title"],[1491,15,1369,11],[1491,17,1369,13],[1491,20,1369,16,"error"],[1491,25,1369,21],[1491,26,1369,22,"name"],[1491,30,1369,26],[1491,71,1369,67],[1492,10,1370,6,"message"],[1492,17,1370,13],[1492,19,1370,15,"error"],[1492,24,1370,20],[1492,25,1370,21,"message"],[1492,32,1370,28],[1493,10,1371,6,"level"],[1493,15,1371,11],[1493,17,1371,13,"logger"],[1493,23,1371,19],[1493,24,1371,20,"LEVELS"],[1493,30,1371,26],[1493,31,1371,27,"error"],[1494,8,1372,4],[1494,9,1372,5],[1494,10,1372,6],[1495,6,1373,2],[1496,4,1374,0],[1496,5,1374,1],[1497,4,1374,1],[1497,20,1359,6,"fetchServicesFromDiscovery"],[1497,46,1359,32,"fetchServicesFromDiscovery"],[1497,47,1359,32],[1498,6,1359,32],[1498,13,1359,32,"_ref15"],[1498,19,1359,32],[1498,20,1359,32,"apply"],[1498,25,1359,32],[1498,32,1359,32,"arguments"],[1498,41,1359,32],[1499,4,1359,32],[1500,2,1359,32],[1500,5,1374,1],[1501,2,1375,0],[1501,6,1375,6,"HANDLERS"],[1501,14,1375,14],[1501,17,1375,17],[1502,4,1376,2],[1502,5,1376,3,"utilActor"],[1502,14,1376,12],[1502,15,1376,13,"INIT"],[1502,19,1376,17],[1503,6,1376,17],[1503,10,1376,17,"_ref16"],[1503,16,1376,17],[1503,19,1376,17,"_asyncToGenerator"],[1503,36,1376,17],[1503,37,1376,20],[1503,48,1376,26,"ctx"],[1503,51,1376,29],[1503,53,1376,33],[1504,8,1377,4,"warn"],[1504,12,1377,8],[1504,13,1377,9],[1504,20,1377,16,"window"],[1504,26,1377,22],[1504,31,1377,27],[1504,42,1377,38],[1504,44,1377,40],[1504,95,1377,91],[1504,96,1377,92],[1505,8,1378,4],[1506,8,1379,4],[1506,12,1379,8,"document"],[1506,20,1379,16],[1506,21,1379,17,"readyState"],[1506,31,1379,27],[1506,36,1379,32],[1506,46,1379,42],[1506,48,1379,44],[1507,10,1380,6,"fetchServicesFromDiscovery"],[1507,36,1380,32],[1507,37,1380,33],[1507,38,1380,34],[1508,8,1381,4],[1508,9,1381,5],[1508,15,1381,11],[1509,10,1382,6,"window"],[1509,16,1382,12],[1509,17,1382,13,"addEventListener"],[1509,33,1382,29],[1509,34,1382,30],[1509,40,1382,36],[1509,42,1382,38],[1509,48,1382,44],[1510,12,1383,8,"fetchServicesFromDiscovery"],[1510,38,1383,34],[1510,39,1383,35],[1510,40,1383,36],[1511,10,1384,6],[1511,11,1384,7],[1511,12,1384,8],[1512,8,1385,4],[1513,6,1386,2],[1513,7,1386,3],[1514,6,1386,3],[1514,23,1386,3,"_x30"],[1514,27,1386,3],[1515,8,1386,3],[1515,15,1386,3,"_ref16"],[1515,21,1386,3],[1515,22,1386,3,"apply"],[1515,27,1386,3],[1515,34,1386,3,"arguments"],[1515,43,1386,3],[1516,6,1386,3],[1517,4,1386,3],[1518,4,1387,2],[1518,5,1387,3,"SERVICE_ACTOR_KEYS"],[1518,23,1387,21],[1518,24,1387,22,"UPDATE_RESULTS"],[1518,38,1387,36],[1518,41,1387,39],[1518,42,1387,40,"ctx"],[1518,45,1387,43],[1518,47,1387,45,"_letter"],[1518,54,1387,52],[1518,56,1387,54,"data"],[1518,60,1387,58],[1518,65,1387,63],[1519,6,1388,4,"ctx"],[1519,9,1388,7],[1519,10,1388,8,"merge"],[1519,15,1388,13],[1519,16,1388,14,"data"],[1519,20,1388,18],[1519,21,1388,19],[1520,6,1389,4,"ctx"],[1520,9,1389,7],[1520,10,1389,8,"broadcast"],[1520,19,1389,17],[1520,20,1389,18,"SERVICE_ACTOR_KEYS"],[1520,38,1389,36],[1520,39,1389,37,"UPDATED"],[1520,46,1389,44],[1520,48,1389,46],[1521,8,1390,6],[1521,11,1390,9,"ctx"],[1521,14,1390,12],[1521,15,1390,13,"all"],[1521,18,1390,16],[1521,19,1390,17],[1522,6,1391,4],[1522,7,1391,5],[1522,8,1391,6],[1523,4,1392,2],[1523,5,1392,3],[1524,4,1393,2],[1524,5,1393,3,"utilActor"],[1524,14,1393,12],[1524,15,1393,13,"SUBSCRIBE"],[1524,24,1393,22],[1524,27,1393,25],[1524,28,1393,26,"ctx"],[1524,31,1393,29],[1524,33,1393,31,"letter"],[1524,39,1393,37],[1524,44,1393,42],[1525,6,1394,4,"ctx"],[1525,9,1394,7],[1525,10,1394,8,"subscribe"],[1525,19,1394,17],[1525,20,1394,18,"letter"],[1525,26,1394,24],[1525,27,1394,25,"from"],[1525,31,1394,29],[1525,32,1394,30],[1526,6,1395,4,"ctx"],[1526,9,1395,7],[1526,10,1395,8,"send"],[1526,14,1395,12],[1526,15,1395,13,"letter"],[1526,21,1395,19],[1526,22,1395,20,"from"],[1526,26,1395,24],[1526,28,1395,26,"SERVICE_ACTOR_KEYS"],[1526,46,1395,44],[1526,47,1395,45,"UPDATED"],[1526,54,1395,52],[1526,56,1395,54],[1527,8,1396,6],[1527,11,1396,9,"ctx"],[1527,14,1396,12],[1527,15,1396,13,"all"],[1527,18,1396,16],[1527,19,1396,17],[1528,6,1397,4],[1528,7,1397,5],[1528,8,1397,6],[1529,4,1398,2],[1529,5,1398,3],[1530,4,1399,2],[1530,5,1399,3,"utilActor"],[1530,14,1399,12],[1530,15,1399,13,"UNSUBSCRIBE"],[1530,26,1399,24],[1530,29,1399,27],[1530,30,1399,28,"ctx"],[1530,33,1399,31],[1530,35,1399,33,"letter"],[1530,41,1399,39],[1530,46,1399,44,"ctx"],[1530,49,1399,47],[1530,50,1399,48,"unsubscribe"],[1530,61,1399,59],[1530,62,1399,60,"letter"],[1530,68,1399,66],[1530,69,1399,67,"from"],[1530,73,1399,71],[1530,74,1399,72],[1531,4,1400,2],[1531,5,1400,3,"SERVICE_ACTOR_KEYS"],[1531,23,1400,21],[1531,24,1400,22,"SNAPSHOT"],[1531,32,1400,30],[1532,6,1400,30],[1532,10,1400,30,"_ref17"],[1532,16,1400,30],[1532,19,1400,30,"_asyncToGenerator"],[1532,36,1400,30],[1532,37,1400,33],[1532,48,1400,40,"ctx"],[1532,51,1400,43],[1532,53,1400,45,"letter"],[1532,59,1400,51],[1533,8,1400,51],[1533,15,1400,56,"letter"],[1533,21,1400,62],[1533,22,1400,63,"reply"],[1533,27,1400,68],[1533,28,1400,69],[1534,10,1401,4],[1534,13,1401,7,"ctx"],[1534,16,1401,10],[1534,17,1401,11,"all"],[1534,20,1401,14],[1534,21,1401,15],[1535,8,1402,2],[1535,9,1402,3],[1535,10,1402,4],[1536,6,1402,4],[1537,6,1402,4],[1537,23,1402,4,"_x31"],[1537,27,1402,4],[1537,29,1402,4,"_x32"],[1537,33,1402,4],[1538,8,1402,4],[1538,15,1402,4,"_ref17"],[1538,21,1402,4],[1538,22,1402,4,"apply"],[1538,27,1402,4],[1538,34,1402,4,"arguments"],[1538,43,1402,4],[1539,6,1402,4],[1540,4,1402,4],[1541,2,1403,0],[1541,3,1403,1],[1542,2,1404,0],[1542,6,1404,6,"spawnProviders"],[1542,20,1404,20],[1542,23,1404,23,"spawnProviders"],[1542,24,1404,23],[1542,29,1404,29,"utilActor"],[1542,38,1404,38],[1542,39,1404,39,"spawn"],[1542,44,1404,44],[1542,45,1404,45,"HANDLERS"],[1542,53,1404,53],[1542,55,1404,55,"SERVICE_ACTOR_KEYS"],[1542,73,1404,73],[1542,74,1404,74,"AUTHN"],[1542,79,1404,79],[1542,80,1404,80],[1544,2,1406,0],[1545,0,1407,0],[1546,0,1408,0],[1548,2,1410,0],[1549,0,1411,0],[1550,0,1412,0],[1551,0,1413,0],[1553,2,1415,0],[1554,0,1416,0],[1555,0,1417,0],[1556,0,1418,0],[1557,0,1419,0],[1558,0,1420,0],[1559,0,1421,0],[1560,0,1422,0],[1561,0,1423,0],[1562,2,1424,0],[1562,6,1424,6,"authn"],[1562,11,1424,11],[1562,14,1424,14],[1563,4,1425,2],[1564,0,1426,0],[1565,0,1427,0],[1566,0,1428,0],[1567,0,1429,0],[1568,4,1430,2,"subscribe"],[1568,13,1430,11],[1568,15,1430,13,"cb"],[1568,17,1430,15],[1568,21,1430,19,"utilActor"],[1568,30,1430,28],[1568,31,1430,29,"subscriber"],[1568,41,1430,39],[1568,42,1430,40,"SERVICE_ACTOR_KEYS"],[1568,60,1430,58],[1568,61,1430,59,"AUTHN"],[1568,66,1430,64],[1568,68,1430,66,"spawnProviders"],[1568,82,1430,80],[1568,84,1430,82,"cb"],[1568,86,1430,84],[1568,87,1430,85],[1569,4,1431,2],[1570,0,1432,0],[1571,0,1433,0],[1572,0,1434,0],[1573,4,1435,2,"snapshot"],[1573,12,1435,10],[1573,14,1435,12,"snapshot"],[1573,15,1435,12],[1573,20,1435,18,"utilActor"],[1573,29,1435,27],[1573,30,1435,28,"snapshoter"],[1573,40,1435,38],[1573,41,1435,39,"SERVICE_ACTOR_KEYS"],[1573,59,1435,57],[1573,60,1435,58,"AUTHN"],[1573,65,1435,63],[1573,67,1435,65,"spawnProviders"],[1573,81,1435,79],[1573,82,1435,80],[1574,4,1436,2],[1575,0,1437,0],[1576,0,1438,0],[1577,0,1439,0],[1578,4,1440,2,"update"],[1578,10,1440,8],[1578,12,1440,10,"update"],[1578,13,1440,10],[1578,18,1440,16],[1579,6,1441,4],[1580,6,1442,4],[1581,6,1443,4],[1581,10,1443,8,"document"],[1581,18,1443,16],[1581,19,1443,17,"readyState"],[1581,29,1443,27],[1581,34,1443,32],[1581,44,1443,42],[1581,46,1443,44],[1582,8,1444,6,"fetchServicesFromDiscovery"],[1582,34,1444,32],[1582,35,1444,33],[1582,36,1444,34],[1583,6,1445,4],[1584,4,1446,2],[1585,2,1447,0],[1585,3,1447,1],[1586,2,1449,0],[1586,6,1449,6,"discovery"],[1586,15,1449,15],[1586,18,1449,18],[1587,4,1450,2,"authn"],[1588,2,1451,0],[1588,3,1451,1],[1589,2,1453,0],[1589,11,1453,9,"genHash"],[1589,18,1453,16,"genHash"],[1589,19,1453,17,"utf8String"],[1589,29,1453,27],[1589,31,1453,29],[1590,4,1454,2],[1590,8,1454,8,"sha"],[1590,11,1454,11],[1590,14,1454,14],[1590,18,1454,18,"sha3"],[1590,22,1454,22],[1590,23,1454,23,"SHA3"],[1590,27,1454,27],[1590,28,1454,28],[1590,31,1454,31],[1590,32,1454,32],[1591,4,1455,2,"sha"],[1591,7,1455,5],[1591,8,1455,6,"update"],[1591,14,1455,12],[1591,15,1455,13,"rlp"],[1591,18,1455,16],[1591,19,1455,17,"Buffer"],[1591,25,1455,23],[1591,26,1455,24,"from"],[1591,30,1455,28],[1591,31,1455,29,"utf8String"],[1591,41,1455,39],[1591,43,1455,41],[1591,49,1455,47],[1591,50,1455,48],[1591,51,1455,49],[1592,4,1456,2],[1592,11,1456,9,"sha"],[1592,14,1456,12],[1592,15,1456,13,"digest"],[1592,21,1456,19],[1592,22,1456,20],[1592,27,1456,25],[1592,28,1456,26],[1593,2,1457,0],[1595,2,1459,0],[1596,0,1460,0],[1597,0,1461,0],[1598,0,1462,0],[1599,0,1463,0],[1600,0,1464,0],[1601,0,1465,0],[1602,2,1459,0],[1602,11,1466,15,"generateTemplateId$2"],[1602,31,1466,35,"generateTemplateId$2"],[1602,32,1466,35,"_x33"],[1602,36,1466,35],[1603,4,1466,35],[1603,11,1466,35,"_generateTemplateId$"],[1603,31,1466,35],[1603,32,1466,35,"apply"],[1603,37,1466,35],[1603,44,1466,35,"arguments"],[1603,53,1466,35],[1604,2,1466,35],[1605,2,1466,35],[1605,11,1466,35,"_generateTemplateId$"],[1605,32,1466,35],[1606,4,1466,35,"_generateTemplateId$"],[1606,24,1466,35],[1606,27,1466,35,"_asyncToGenerator"],[1606,44,1466,35],[1606,45,1466,0],[1606,56,1466,36,"_ref"],[1606,60,1466,40],[1606,62,1466,42],[1607,6,1467,2],[1607,10,1468,4,"template"],[1607,18,1468,12],[1607,21,1469,6,"_ref"],[1607,25,1469,10],[1607,26,1468,4,"template"],[1607,34,1468,12],[1608,6,1470,2,"sdk"],[1608,9,1470,5],[1608,10,1470,6,"invariant"],[1608,19,1470,15],[1608,20,1470,16,"template"],[1608,28,1470,24],[1608,32,1470,28,"undefined"],[1608,41,1470,37],[1608,43,1470,39],[1608,105,1470,101],[1608,106,1470,102],[1609,6,1471,2,"sdk"],[1609,9,1471,5],[1609,10,1471,6,"invariant"],[1609,19,1471,15],[1609,20,1471,16],[1609,27,1471,23,"template"],[1609,35,1471,31],[1609,40,1471,36],[1609,48,1471,44],[1609,50,1471,46],[1609,114,1471,110],[1609,115,1471,111],[1610,6,1472,2,"sdk"],[1610,9,1472,5],[1610,10,1472,6,"invariant"],[1610,19,1472,15],[1610,20,1472,16,"template"],[1610,28,1472,24],[1610,29,1472,25,"f_type"],[1610,35,1472,31],[1610,40,1472,36],[1610,61,1472,57],[1610,63,1472,59],[1610,147,1472,143],[1610,148,1472,144],[1611,6,1473,2,"sdk"],[1611,9,1473,5],[1611,10,1473,6,"invariant"],[1611,19,1473,15],[1611,20,1473,16,"template"],[1611,28,1473,24],[1611,29,1473,25,"f_version"],[1611,38,1473,34],[1611,43,1473,39],[1611,50,1473,46],[1611,52,1473,48],[1611,130,1473,126],[1611,131,1473,127],[1612,6,1474,2],[1612,10,1474,8,"templateData"],[1612,22,1474,20],[1612,25,1474,23,"template"],[1612,33,1474,31],[1612,34,1474,32,"data"],[1612,38,1474,36],[1613,6,1475,2],[1613,10,1475,8,"messages"],[1613,18,1475,16],[1613,27,1475,25,"Promise"],[1613,34,1475,32],[1613,35,1475,33,"all"],[1613,38,1475,36],[1613,39,1475,37,"Object"],[1613,45,1475,43],[1613,46,1475,44,"keys"],[1613,50,1475,48],[1613,51,1475,49,"templateData"],[1613,63,1475,61],[1613,64,1475,62,"messages"],[1613,72,1475,70],[1613,73,1475,71],[1613,74,1475,72,"map"],[1613,77,1475,75],[1614,8,1475,75],[1614,12,1475,75,"_ref40"],[1614,18,1475,75],[1614,21,1475,75,"_asyncToGenerator"],[1614,38,1475,75],[1614,39,1475,76],[1614,50,1475,82,"messageKey"],[1614,60,1475,92],[1615,10,1475,92],[1615,17,1475,96],[1615,18,1475,97,"genHash"],[1615,25,1475,104],[1615,26,1475,105,"messageKey"],[1615,36,1475,115],[1615,37,1475,116],[1615,45,1475,124,"Promise"],[1615,52,1475,131],[1615,53,1475,132,"all"],[1615,56,1475,135],[1615,57,1475,136,"Object"],[1615,63,1475,142],[1615,64,1475,143,"keys"],[1615,68,1475,147],[1615,69,1475,148,"templateData"],[1615,81,1475,160],[1615,82,1475,161,"messages"],[1615,90,1475,169],[1615,93,1475,172,"messageKey"],[1615,103,1475,182],[1615,104,1475,183],[1615,106,1475,185,"i18n"],[1615,110,1475,189],[1615,111,1475,190],[1615,112,1475,191,"map"],[1615,115,1475,194],[1616,12,1475,194],[1616,16,1475,194,"_ref41"],[1616,22,1475,194],[1616,25,1475,194,"_asyncToGenerator"],[1616,42,1475,194],[1616,43,1475,195],[1616,54,1475,201,"i18nkeylanguage"],[1616,69,1475,216],[1617,14,1475,216],[1617,21,1475,220],[1617,22,1475,221,"genHash"],[1617,29,1475,228],[1617,30,1475,229,"i18nkeylanguage"],[1617,45,1475,244],[1617,46,1475,245],[1617,48,1475,247,"genHash"],[1617,55,1475,254],[1617,56,1475,255,"templateData"],[1617,68,1475,267],[1617,69,1475,268,"messages"],[1617,77,1475,276],[1617,80,1475,279,"messageKey"],[1617,90,1475,289],[1617,91,1475,290],[1617,93,1475,292,"i18n"],[1617,97,1475,296],[1617,100,1475,299,"i18nkeylanguage"],[1617,115,1475,314],[1617,116,1475,315],[1617,117,1475,316],[1617,118,1475,317],[1618,12,1475,317],[1619,12,1475,317],[1619,29,1475,317,"_x70"],[1619,33,1475,317],[1620,14,1475,317],[1620,21,1475,317,"_ref41"],[1620,27,1475,317],[1620,28,1475,317,"apply"],[1620,33,1475,317],[1620,40,1475,317,"arguments"],[1620,49,1475,317],[1621,12,1475,317],[1622,10,1475,317],[1622,14,1475,318],[1622,15,1475,319],[1622,16,1475,320],[1623,8,1475,320],[1624,8,1475,320],[1624,25,1475,320,"_x69"],[1624,29,1475,320],[1625,10,1475,320],[1625,17,1475,320,"_ref40"],[1625,23,1475,320],[1625,24,1475,320,"apply"],[1625,29,1475,320],[1625,36,1475,320,"arguments"],[1625,45,1475,320],[1626,8,1475,320],[1627,6,1475,320],[1627,10,1475,321],[1627,11,1475,322],[1628,6,1476,2],[1628,10,1476,8,"dependencies"],[1628,22,1476,20],[1628,31,1476,29,"Promise"],[1628,38,1476,36],[1628,39,1476,37,"all"],[1628,42,1476,40],[1628,43,1476,41,"Object"],[1628,49,1476,47],[1628,50,1476,48,"keys"],[1628,54,1476,52],[1628,55,1476,53,"templateData"],[1628,67,1476,65],[1628,69,1476,67,"dependencies"],[1628,81,1476,79],[1628,82,1476,80],[1628,83,1476,81,"map"],[1628,86,1476,84],[1629,8,1476,84],[1629,12,1476,84,"_ref42"],[1629,18,1476,84],[1629,21,1476,84,"_asyncToGenerator"],[1629,38,1476,84],[1629,39,1476,85],[1629,50,1476,91,"dependencyAddressPlaceholder"],[1629,78,1476,119],[1630,10,1476,119],[1630,17,1476,123],[1630,18,1476,124,"genHash"],[1630,25,1476,131],[1630,26,1476,132,"dependencyAddressPlaceholder"],[1630,54,1476,160],[1630,55,1476,161],[1630,63,1476,169,"Promise"],[1630,70,1476,176],[1630,71,1476,177,"all"],[1630,74,1476,180],[1630,75,1476,181,"Object"],[1630,81,1476,187],[1630,82,1476,188,"keys"],[1630,86,1476,192],[1630,87,1476,193,"templateData"],[1630,99,1476,205],[1630,101,1476,207,"dependencies"],[1630,113,1476,219],[1630,116,1476,222,"dependencyAddressPlaceholder"],[1630,144,1476,250],[1630,145,1476,251],[1630,146,1476,252],[1630,147,1476,253,"map"],[1630,150,1476,256],[1631,12,1476,256],[1631,16,1476,256,"_ref43"],[1631,22,1476,256],[1631,25,1476,256,"_asyncToGenerator"],[1631,42,1476,256],[1631,43,1476,257],[1631,54,1476,263,"dependencyContract"],[1631,72,1476,281],[1632,14,1476,281],[1632,21,1476,285],[1632,22,1476,286,"genHash"],[1632,29,1476,293],[1632,30,1476,294,"dependencyContract"],[1632,48,1476,312],[1632,49,1476,313],[1632,57,1476,321,"Promise"],[1632,64,1476,328],[1632,65,1476,329,"all"],[1632,68,1476,332],[1632,69,1476,333,"Object"],[1632,75,1476,339],[1632,76,1476,340,"keys"],[1632,80,1476,344],[1632,81,1476,345,"templateData"],[1632,93,1476,357],[1632,95,1476,359,"dependencies"],[1632,107,1476,371],[1632,110,1476,374,"dependencyAddressPlaceholder"],[1632,138,1476,402],[1632,139,1476,403],[1632,142,1476,406,"dependencyContract"],[1632,160,1476,424],[1632,161,1476,425],[1632,162,1476,426],[1632,163,1476,427,"map"],[1632,166,1476,430],[1633,16,1476,430],[1633,20,1476,430,"_ref44"],[1633,26,1476,430],[1633,29,1476,430,"_asyncToGenerator"],[1633,46,1476,430],[1633,47,1476,431],[1633,58,1476,437,"dependencyContractNetwork"],[1633,83,1476,462],[1634,18,1476,462],[1634,25,1476,466],[1634,26,1476,467,"genHash"],[1634,33,1476,474],[1634,34,1476,475,"dependencyContractNetwork"],[1634,59,1476,500],[1634,60,1476,501],[1634,62,1476,503],[1634,63,1476,504,"genHash"],[1634,70,1476,511],[1634,71,1476,512,"templateData"],[1634,83,1476,524],[1634,85,1476,526,"dependencies"],[1634,97,1476,538],[1634,100,1476,541,"dependencyAddressPlaceholder"],[1634,128,1476,569],[1634,129,1476,570],[1634,132,1476,573,"dependencyContract"],[1634,150,1476,591],[1634,151,1476,592],[1634,154,1476,595,"dependencyContractNetwork"],[1634,179,1476,620],[1634,180,1476,621],[1634,181,1476,622,"address"],[1634,188,1476,629],[1634,189,1476,630],[1634,191,1476,632,"genHash"],[1634,198,1476,639],[1634,199,1476,640,"templateData"],[1634,211,1476,652],[1634,213,1476,654,"dependencies"],[1634,225,1476,666],[1634,228,1476,669,"dependencyAddressPlaceholder"],[1634,256,1476,697],[1634,257,1476,698],[1634,260,1476,701,"dependencyContract"],[1634,278,1476,719],[1634,279,1476,720],[1634,282,1476,723,"dependencyContractNetwork"],[1634,307,1476,748],[1634,308,1476,749],[1634,309,1476,750,"contract"],[1634,317,1476,758],[1634,318,1476,759],[1634,320,1476,761,"genHash"],[1634,327,1476,768],[1634,328,1476,769,"templateData"],[1634,340,1476,781],[1634,342,1476,783,"dependencies"],[1634,354,1476,795],[1634,357,1476,798,"dependencyAddressPlaceholder"],[1634,385,1476,826],[1634,386,1476,827],[1634,389,1476,830,"dependencyContract"],[1634,407,1476,848],[1634,408,1476,849],[1634,411,1476,852,"dependencyContractNetwork"],[1634,436,1476,877],[1634,437,1476,878],[1634,438,1476,879,"fq_address"],[1634,448,1476,889],[1634,449,1476,890],[1634,451,1476,892,"genHash"],[1634,458,1476,899],[1634,459,1476,900,"templateData"],[1634,471,1476,912],[1634,473,1476,914,"dependencies"],[1634,485,1476,926],[1634,488,1476,929,"dependencyAddressPlaceholder"],[1634,516,1476,957],[1634,517,1476,958],[1634,520,1476,961,"dependencyContract"],[1634,538,1476,979],[1634,539,1476,980],[1634,542,1476,983,"dependencyContractNetwork"],[1634,567,1476,1008],[1634,568,1476,1009],[1634,569,1476,1010,"pin"],[1634,572,1476,1013],[1634,573,1476,1014],[1634,575,1476,1016,"genHash"],[1634,582,1476,1023],[1634,583,1476,1024,"String"],[1634,589,1476,1030],[1634,590,1476,1031,"templateData"],[1634,602,1476,1043],[1634,604,1476,1045,"dependencies"],[1634,616,1476,1057],[1634,619,1476,1060,"dependencyAddressPlaceholder"],[1634,647,1476,1088],[1634,648,1476,1089],[1634,651,1476,1092,"dependencyContract"],[1634,669,1476,1110],[1634,670,1476,1111],[1634,673,1476,1114,"dependencyContractNetwork"],[1634,698,1476,1139],[1634,699,1476,1140],[1634,700,1476,1141,"pin_block_height"],[1634,716,1476,1157],[1634,717,1476,1158],[1634,718,1476,1159],[1634,719,1476,1160],[1634,720,1476,1161],[1635,16,1476,1161],[1636,16,1476,1161],[1636,33,1476,1161,"_x73"],[1636,37,1476,1161],[1637,18,1476,1161],[1637,25,1476,1161,"_ref44"],[1637,31,1476,1161],[1637,32,1476,1161,"apply"],[1637,37,1476,1161],[1637,44,1476,1161,"arguments"],[1637,53,1476,1161],[1638,16,1476,1161],[1639,14,1476,1161],[1639,18,1476,1162],[1639,19,1476,1163],[1639,20,1476,1164],[1640,12,1476,1164],[1641,12,1476,1164],[1641,29,1476,1164,"_x72"],[1641,33,1476,1164],[1642,14,1476,1164],[1642,21,1476,1164,"_ref43"],[1642,27,1476,1164],[1642,28,1476,1164,"apply"],[1642,33,1476,1164],[1642,40,1476,1164,"arguments"],[1642,49,1476,1164],[1643,12,1476,1164],[1644,10,1476,1164],[1644,14,1476,1165],[1644,15,1476,1166],[1644,16,1476,1167],[1645,8,1476,1167],[1646,8,1476,1167],[1646,25,1476,1167,"_x71"],[1646,29,1476,1167],[1647,10,1476,1167],[1647,17,1476,1167,"_ref42"],[1647,23,1476,1167],[1647,24,1476,1167,"apply"],[1647,29,1476,1167],[1647,36,1476,1167,"arguments"],[1647,45,1476,1167],[1648,8,1476,1167],[1649,6,1476,1167],[1649,10,1476,1168],[1649,11,1476,1169],[1650,6,1477,2],[1650,10,1477,8,"_arguments"],[1650,20,1477,18],[1650,29,1477,27,"Promise"],[1650,36,1477,34],[1650,37,1477,35,"all"],[1650,40,1477,38],[1650,41,1477,39,"Object"],[1650,47,1477,45],[1650,48,1477,46,"keys"],[1650,52,1477,50],[1650,53,1477,51,"templateData"],[1650,65,1477,63],[1650,68,1477,66],[1650,79,1477,77],[1650,80,1477,78],[1650,81,1477,79],[1650,82,1477,80,"map"],[1650,85,1477,83],[1651,8,1477,83],[1651,12,1477,83,"_ref45"],[1651,18,1477,83],[1651,21,1477,83,"_asyncToGenerator"],[1651,38,1477,83],[1651,39,1477,84],[1651,50,1477,90,"argumentLabel"],[1651,63,1477,103],[1652,10,1477,103],[1652,17,1477,107],[1652,18,1477,108,"genHash"],[1652,25,1477,115],[1652,26,1477,116,"argumentLabel"],[1652,39,1477,129],[1652,40,1477,130],[1652,42,1477,132],[1652,43,1477,133,"genHash"],[1652,50,1477,140],[1652,51,1477,141,"String"],[1652,57,1477,147],[1652,58,1477,148,"templateData"],[1652,70,1477,160],[1652,73,1477,163],[1652,84,1477,174],[1652,85,1477,175],[1652,88,1477,178,"argumentLabel"],[1652,101,1477,191],[1652,102,1477,192],[1652,103,1477,193,"index"],[1652,108,1477,198],[1652,109,1477,199],[1652,110,1477,200],[1652,112,1477,202,"genHash"],[1652,119,1477,209],[1652,120,1477,210,"templateData"],[1652,132,1477,222],[1652,135,1477,225],[1652,146,1477,236],[1652,147,1477,237],[1652,150,1477,240,"argumentLabel"],[1652,163,1477,253],[1652,164,1477,254],[1652,165,1477,255,"type"],[1652,169,1477,259],[1652,170,1477,260],[1652,172,1477,262,"genHash"],[1652,179,1477,269],[1652,180,1477,270,"templateData"],[1652,192,1477,282],[1652,195,1477,285],[1652,206,1477,296],[1652,207,1477,297],[1652,210,1477,300,"argumentLabel"],[1652,223,1477,313],[1652,224,1477,314],[1652,225,1477,315,"balance"],[1652,232,1477,322],[1652,236,1477,326],[1652,238,1477,328],[1652,239,1477,329],[1652,247,1477,337,"Promise"],[1652,254,1477,344],[1652,255,1477,345,"all"],[1652,258,1477,348],[1652,259,1477,349,"Object"],[1652,265,1477,355],[1652,266,1477,356,"keys"],[1652,270,1477,360],[1652,271,1477,361,"templateData"],[1652,283,1477,373],[1652,286,1477,376],[1652,297,1477,387],[1652,298,1477,388],[1652,301,1477,391,"argumentLabel"],[1652,314,1477,404],[1652,315,1477,405],[1652,316,1477,406,"messages"],[1652,324,1477,414],[1652,325,1477,415],[1652,326,1477,416,"map"],[1652,329,1477,419],[1653,12,1477,419],[1653,16,1477,419,"_ref46"],[1653,22,1477,419],[1653,25,1477,419,"_asyncToGenerator"],[1653,42,1477,419],[1653,43,1477,420],[1653,54,1477,426,"argumentMessageKey"],[1653,72,1477,444],[1654,14,1477,444],[1654,21,1477,448],[1654,22,1477,449,"genHash"],[1654,29,1477,456],[1654,30,1477,457,"argumentMessageKey"],[1654,48,1477,475],[1654,49,1477,476],[1654,57,1477,484,"Promise"],[1654,64,1477,491],[1654,65,1477,492,"all"],[1654,68,1477,495],[1654,69,1477,496,"Object"],[1654,75,1477,502],[1654,76,1477,503,"keys"],[1654,80,1477,507],[1654,81,1477,508,"templateData"],[1654,93,1477,520],[1654,96,1477,523],[1654,107,1477,534],[1654,108,1477,535],[1654,111,1477,538,"argumentLabel"],[1654,124,1477,551],[1654,125,1477,552],[1654,126,1477,553,"messages"],[1654,134,1477,561],[1654,137,1477,564,"argumentMessageKey"],[1654,155,1477,582],[1654,156,1477,583],[1654,157,1477,584,"i18n"],[1654,161,1477,588],[1654,162,1477,589],[1654,163,1477,590,"map"],[1654,166,1477,593],[1655,16,1477,593],[1655,20,1477,593,"_ref47"],[1655,26,1477,593],[1655,29,1477,593,"_asyncToGenerator"],[1655,46,1477,593],[1655,47,1477,594],[1655,58,1477,600,"i18nkeylanguage"],[1655,73,1477,615],[1656,18,1477,615],[1656,25,1477,619],[1656,26,1477,620,"genHash"],[1656,33,1477,627],[1656,34,1477,628,"i18nkeylanguage"],[1656,49,1477,643],[1656,50,1477,644],[1656,52,1477,646,"genHash"],[1656,59,1477,653],[1656,60,1477,654,"templateData"],[1656,72,1477,666],[1656,75,1477,669],[1656,86,1477,680],[1656,87,1477,681],[1656,90,1477,684,"argumentLabel"],[1656,103,1477,697],[1656,104,1477,698],[1656,105,1477,699,"messages"],[1656,113,1477,707],[1656,116,1477,710,"argumentMessageKey"],[1656,134,1477,728],[1656,135,1477,729],[1656,136,1477,730,"i18n"],[1656,140,1477,734],[1656,143,1477,737,"i18nkeylanguage"],[1656,158,1477,752],[1656,159,1477,753],[1656,160,1477,754],[1656,161,1477,755],[1657,16,1477,755],[1658,16,1477,755],[1658,33,1477,755,"_x76"],[1658,37,1477,755],[1659,18,1477,755],[1659,25,1477,755,"_ref47"],[1659,31,1477,755],[1659,32,1477,755,"apply"],[1659,37,1477,755],[1659,44,1477,755,"arguments"],[1659,53,1477,755],[1660,16,1477,755],[1661,14,1477,755],[1661,18,1477,756],[1661,19,1477,757],[1661,20,1477,758],[1662,12,1477,758],[1663,12,1477,758],[1663,29,1477,758,"_x75"],[1663,33,1477,758],[1664,14,1477,758],[1664,21,1477,758,"_ref46"],[1664,27,1477,758],[1664,28,1477,758,"apply"],[1664,33,1477,758],[1664,40,1477,758,"arguments"],[1664,49,1477,758],[1665,12,1477,758],[1666,10,1477,758],[1666,14,1477,759],[1666,15,1477,760],[1666,16,1477,761],[1666,17,1477,762],[1667,8,1477,762],[1668,8,1477,762],[1668,25,1477,762,"_x74"],[1668,29,1477,762],[1669,10,1477,762],[1669,17,1477,762,"_ref45"],[1669,23,1477,762],[1669,24,1477,762,"apply"],[1669,29,1477,762],[1669,36,1477,762,"arguments"],[1669,45,1477,762],[1670,8,1477,762],[1671,6,1477,762],[1671,10,1477,763],[1671,11,1477,764],[1672,6,1478,2],[1672,10,1478,8,"encodedHex"],[1672,20,1478,18],[1672,23,1478,21,"rlp"],[1672,26,1478,24],[1672,27,1478,25,"encode"],[1672,33,1478,31],[1672,34,1478,32],[1672,35,1478,33,"genHash"],[1672,42,1478,40],[1672,43,1478,41],[1672,64,1478,62],[1672,65,1478,63],[1672,67,1478,65,"genHash"],[1672,74,1478,72],[1672,75,1478,73],[1672,82,1478,80],[1672,83,1478,81],[1672,85,1478,83,"genHash"],[1672,92,1478,90],[1672,93,1478,91,"templateData"],[1672,105,1478,103],[1672,107,1478,105,"type"],[1672,111,1478,109],[1672,112,1478,110],[1672,114,1478,112,"genHash"],[1672,121,1478,119],[1672,122,1478,120,"templateData"],[1672,134,1478,132],[1672,136,1478,134,"interface"],[1672,145,1478,143],[1672,146,1478,144],[1672,148,1478,146,"messages"],[1672,156,1478,154],[1672,158,1478,156,"genHash"],[1672,165,1478,163],[1672,166,1478,164,"templateData"],[1672,178,1478,176],[1672,180,1478,178,"cadence"],[1672,187,1478,185],[1672,188,1478,186],[1672,190,1478,188,"dependencies"],[1672,202,1478,200],[1672,204,1478,202,"_arguments"],[1672,214,1478,212],[1672,215,1478,213],[1672,216,1478,214],[1672,217,1478,215,"toString"],[1672,225,1478,223],[1672,226,1478,224],[1672,231,1478,229],[1672,232,1478,230],[1673,6,1479,2],[1673,13,1479,9,"genHash"],[1673,20,1479,16],[1673,21,1479,17,"encodedHex"],[1673,31,1479,27],[1673,32,1479,28],[1674,4,1480,0],[1674,5,1480,1],[1675,4,1480,1],[1675,11,1480,1,"_generateTemplateId$"],[1675,31,1480,1],[1675,32,1480,1,"apply"],[1675,37,1480,1],[1675,44,1480,1,"arguments"],[1675,53,1480,1],[1676,2,1480,1],[1677,2,1482,0],[1677,11,1482,9,"generateImport"],[1677,25,1482,23,"generateImport"],[1677,26,1482,24,"_ref"],[1677,30,1482,28],[1677,32,1482,30],[1678,4,1483,2],[1678,8,1484,4,"contractName"],[1678,20,1484,16],[1678,23,1486,6,"_ref"],[1678,27,1486,10],[1678,28,1484,4,"contractName"],[1678,40,1484,16],[1679,6,1485,4,"address"],[1679,13,1485,11],[1679,16,1486,6,"_ref"],[1679,20,1486,10],[1679,21,1485,4,"address"],[1679,28,1485,11],[1680,4,1487,2],[1680,11,1487,9],[1681,6,1488,4,"contractName"],[1681,18,1488,16],[1682,6,1489,4,"address"],[1682,13,1489,11],[1683,6,1490,4,"contract"],[1683,14,1490,12],[1683,16,1490,14],[1684,4,1491,2],[1684,5,1491,3],[1685,2,1492,0],[1686,2,1494,0],[1686,11,1494,9,"findImports"],[1686,22,1494,20,"findImports"],[1686,23,1494,21,"cadence"],[1686,30,1494,28],[1686,32,1494,30],[1687,4,1495,2],[1687,8,1495,8,"imports"],[1687,15,1495,15],[1687,18,1495,18],[1687,20,1495,20],[1688,4,1496,2],[1688,8,1496,8,"importsReg"],[1688,18,1496,18],[1688,21,1496,21],[1688,54,1496,54],[1689,4,1497,2],[1689,8,1497,8,"fileImports"],[1689,19,1497,19],[1689,22,1497,22,"cadence"],[1689,29,1497,29],[1689,30,1497,30,"match"],[1689,35,1497,35],[1689,36,1497,36,"importsReg"],[1689,46,1497,46],[1689,47,1497,47],[1689,51,1497,51],[1689,53,1497,53],[1690,4,1498,2],[1690,9,1498,7],[1690,13,1498,13,"fileImport"],[1690,23,1498,23],[1690,27,1498,27,"fileImports"],[1690,38,1498,38],[1690,40,1498,40],[1691,6,1499,4],[1691,10,1499,10,"importLineReg"],[1691,23,1499,23],[1691,26,1499,26],[1691,61,1499,61],[1692,6,1500,4],[1692,10,1500,10,"importLine"],[1692,20,1500,20],[1692,23,1500,23,"importLineReg"],[1692,36,1500,36],[1692,37,1500,37,"exec"],[1692,41,1500,41],[1692,42,1500,42,"fileImport"],[1692,52,1500,52],[1692,53,1500,53],[1693,6,1501,4],[1693,10,1501,10,"contractsReg"],[1693,22,1501,22],[1693,25,1501,25],[1693,40,1501,40],[1694,6,1502,4],[1694,10,1502,10,"contracts"],[1694,19,1502,19],[1694,22,1502,22,"importLine"],[1694,32,1502,32],[1694,33,1502,33],[1694,34,1502,34],[1694,35,1502,35],[1694,36,1502,36,"match"],[1694,41,1502,41],[1694,42,1502,42,"contractsReg"],[1694,54,1502,54],[1694,55,1502,55],[1694,59,1502,59],[1694,61,1502,61],[1695,6,1503,4],[1695,11,1503,9],[1695,15,1503,15,"contract"],[1695,23,1503,23],[1695,27,1503,27,"contracts"],[1695,36,1503,36],[1695,38,1503,38],[1696,8,1504,6,"imports"],[1696,15,1504,13],[1696,16,1504,14,"push"],[1696,20,1504,18],[1696,21,1504,19,"generateImport"],[1696,35,1504,33],[1696,36,1504,34],[1697,10,1505,8,"address"],[1697,17,1505,15],[1697,19,1505,17,"importLine"],[1697,29,1505,27],[1697,30,1505,28],[1697,31,1505,29],[1697,32,1505,30],[1698,10,1506,8,"contractName"],[1698,22,1506,20],[1698,24,1506,22,"contract"],[1698,32,1506,30],[1698,33,1506,31,"replace"],[1698,40,1506,38],[1698,41,1506,39],[1698,45,1506,43],[1698,47,1506,45],[1698,49,1506,47],[1699,8,1507,6],[1699,9,1507,7],[1699,10,1507,8],[1699,11,1507,9],[1700,6,1508,4],[1701,4,1509,2],[1702,4,1510,2],[1702,11,1510,9,"imports"],[1702,18,1510,16],[1703,2,1511,0],[1705,2,1513,0],[1706,0,1514,0],[1707,0,1515,0],[1708,0,1516,0],[1709,0,1517,0],[1710,0,1518,0],[1711,0,1519,0],[1712,0,1520,0],[1713,2,1513,0],[1713,11,1521,15,"generateDependencyPin110"],[1713,35,1521,39,"generateDependencyPin110"],[1713,36,1521,39,"_x34"],[1713,40,1521,39],[1714,4,1521,39],[1714,11,1521,39,"_generateDependencyPin"],[1714,33,1521,39],[1714,34,1521,39,"apply"],[1714,39,1521,39],[1714,46,1521,39,"arguments"],[1714,55,1521,39],[1715,2,1521,39],[1716,2,1521,39],[1716,11,1521,39,"_generateDependencyPin"],[1716,34,1521,39],[1717,4,1521,39,"_generateDependencyPin"],[1717,26,1521,39],[1717,29,1521,39,"_asyncToGenerator"],[1717,46,1521,39],[1717,47,1521,0],[1717,58,1521,40,"_ref"],[1717,62,1521,44],[1717,64,1521,46],[1718,6,1522,2],[1718,10,1523,4,"address"],[1718,17,1523,11],[1718,20,1525,6,"_ref"],[1718,24,1525,10],[1718,25,1523,4,"address"],[1718,32,1523,11],[1719,8,1524,4,"contractName"],[1719,20,1524,16],[1719,23,1525,6,"_ref"],[1719,27,1525,10],[1719,28,1524,4,"contractName"],[1719,40,1524,16],[1720,6,1526,2],[1720,10,1526,6,"opts"],[1720,14,1526,10],[1720,17,1526,13,"arguments"],[1720,26,1526,22],[1720,27,1526,23,"length"],[1720,33,1526,29],[1720,36,1526,32],[1720,37,1526,33],[1720,41,1526,37,"arguments"],[1720,50,1526,46],[1720,51,1526,47],[1720,52,1526,48],[1720,53,1526,49],[1720,58,1526,54,"undefined"],[1720,67,1526,63],[1720,70,1526,66,"arguments"],[1720,79,1526,75],[1720,80,1526,76],[1720,81,1526,77],[1720,82,1526,78],[1720,85,1526,81],[1720,86,1526,82],[1720,87,1526,83],[1721,6,1527,2,"sdk"],[1721,9,1527,5],[1721,10,1527,6,"invariant"],[1721,19,1527,15],[1721,20,1527,16,"address"],[1721,27,1527,23],[1721,31,1527,27,"undefined"],[1721,40,1527,36],[1721,42,1527,38],[1721,105,1527,101],[1721,106,1527,102],[1722,6,1528,2,"sdk"],[1722,9,1528,5],[1722,10,1528,6,"invariant"],[1722,19,1528,15],[1722,20,1528,16,"contractName"],[1722,32,1528,28],[1722,36,1528,32,"undefined"],[1722,45,1528,41],[1722,47,1528,43],[1722,120,1528,116],[1722,121,1528,117],[1723,6,1529,2,"sdk"],[1723,9,1529,5],[1723,10,1529,6,"invariant"],[1723,19,1529,15],[1723,20,1529,16],[1723,27,1529,23,"address"],[1723,34,1529,30],[1723,39,1529,35],[1723,47,1529,43],[1723,49,1529,45],[1723,113,1529,109],[1723,114,1529,110],[1724,6,1530,2,"sdk"],[1724,9,1530,5],[1724,10,1530,6,"invariant"],[1724,19,1530,15],[1724,20,1530,16],[1724,27,1530,23,"contractName"],[1724,39,1530,35],[1724,44,1530,40],[1724,52,1530,48],[1724,54,1530,50],[1724,128,1530,124],[1724,129,1530,125],[1725,6,1531,2],[1725,10,1531,8,"horizon"],[1725,17,1531,15],[1725,20,1531,18],[1725,21,1531,19,"generateImport"],[1725,35,1531,33],[1725,36,1531,34],[1726,8,1532,4,"contractName"],[1726,20,1532,16],[1727,8,1533,4,"address"],[1728,6,1534,2],[1728,7,1534,3],[1728,8,1534,4],[1728,9,1534,5],[1729,6,1535,2],[1729,11,1535,7],[1729,15,1535,13,"horizonImport"],[1729,28,1535,26],[1729,32,1535,30,"horizon"],[1729,39,1535,37],[1729,41,1535,39],[1730,8,1536,4],[1730,12,1536,10,"account"],[1730,19,1536,17],[1730,28,1536,26,"sdk"],[1730,31,1536,29],[1730,32,1536,30,"send"],[1730,36,1536,34],[1730,37,1536,35],[1730,38,1536,36,"sdk"],[1730,41,1536,39],[1730,42,1536,40,"getAccount"],[1730,52,1536,50],[1730,59,1536,57,"sdk"],[1730,62,1536,60],[1730,63,1536,61,"config"],[1730,69,1536,67],[1730,70,1536,68],[1730,71,1536,69],[1730,72,1536,70,"get"],[1730,75,1536,73],[1730,76,1536,74,"horizonImport"],[1730,89,1536,87],[1730,90,1536,88,"address"],[1730,97,1536,95],[1730,99,1536,97,"horizonImport"],[1730,112,1536,110],[1730,113,1536,111,"address"],[1730,120,1536,118],[1730,121,1536,119],[1730,122,1536,120],[1730,123,1536,121],[1730,125,1536,123,"opts"],[1730,129,1536,127],[1730,130,1536,128],[1730,131,1536,129,"then"],[1730,135,1536,133],[1730,136,1536,134,"sdk"],[1730,139,1536,137],[1730,140,1536,138,"decode"],[1730,146,1536,144],[1730,147,1536,145],[1731,8,1537,4,"horizonImport"],[1731,21,1537,17],[1731,22,1537,18,"contract"],[1731,30,1537,26],[1731,33,1537,29,"account"],[1731,40,1537,36],[1731,41,1537,37,"contracts"],[1731,50,1537,46],[1731,53,1537,49,"horizonImport"],[1731,66,1537,62],[1731,67,1537,63,"contractName"],[1731,79,1537,75],[1731,80,1537,76],[1732,8,1538,4],[1732,12,1538,8],[1732,13,1538,9,"horizonImport"],[1732,26,1538,22],[1732,27,1538,23,"contract"],[1732,35,1538,31],[1732,37,1538,33],[1733,10,1539,6,"console"],[1733,17,1539,13],[1733,18,1539,14,"error"],[1733,23,1539,19],[1733,24,1539,20],[1733,56,1539,52],[1733,58,1539,54,"horizonImport"],[1733,71,1539,67],[1733,73,1539,69,"account"],[1733,80,1539,76],[1733,81,1539,77],[1734,10,1540,6],[1734,16,1540,12],[1734,20,1540,16,"Error"],[1734,25,1540,21],[1734,26,1540,22],[1734,58,1540,54],[1734,59,1540,55],[1735,8,1541,4],[1736,8,1542,4],[1736,12,1542,10,"contractImports"],[1736,27,1542,25],[1736,30,1542,28,"findImports"],[1736,41,1542,39],[1736,42,1542,40,"horizonImport"],[1736,55,1542,53],[1736,56,1542,54,"contract"],[1736,64,1542,62],[1736,65,1542,63],[1737,8,1543,4,"horizon"],[1737,15,1543,11],[1737,16,1543,12,"push"],[1737,20,1543,16],[1737,21,1543,17],[1737,24,1543,20,"contractImports"],[1737,39,1543,35],[1737,40,1543,36],[1738,6,1544,2],[1739,6,1545,2],[1739,10,1545,8,"contractPinSelfHashesPromises"],[1739,39,1545,37],[1739,42,1545,40,"horizon"],[1739,49,1545,47],[1739,50,1545,48,"map"],[1739,53,1545,51],[1739,54,1545,52,"iport"],[1739,59,1545,57],[1739,63,1545,61,"genHash"],[1739,70,1545,68],[1739,71,1545,69,"iport"],[1739,76,1545,74],[1739,77,1545,75,"contract"],[1739,85,1545,83],[1739,86,1545,84],[1739,87,1545,85],[1740,6,1546,2],[1741,6,1547,2],[1741,10,1547,8,"contractPinSelfHashes"],[1741,31,1547,29],[1741,40,1547,38,"Promise"],[1741,47,1547,45],[1741,48,1547,46,"all"],[1741,51,1547,49],[1741,52,1547,50,"contractPinSelfHashesPromises"],[1741,81,1547,79],[1741,82,1547,80],[1742,6,1548,2],[1742,10,1548,8,"contractPinHashes"],[1742,27,1548,25],[1742,30,1548,28,"contractPinSelfHashes"],[1742,51,1548,49],[1742,52,1548,50,"join"],[1742,56,1548,54],[1742,57,1548,55],[1742,59,1548,57],[1742,60,1548,58],[1743,6,1549,2],[1743,13,1549,9,"genHash"],[1743,20,1549,16],[1743,21,1549,17,"contractPinHashes"],[1743,38,1549,34],[1743,39,1549,35],[1744,4,1550,0],[1744,5,1550,1],[1745,4,1550,1],[1745,11,1550,1,"_generateDependencyPin"],[1745,33,1550,1],[1745,34,1550,1,"apply"],[1745,39,1550,1],[1745,46,1550,1,"arguments"],[1745,55,1550,1],[1746,2,1550,1],[1747,2,1550,1],[1747,11,1552,15,"generateContractNetworks"],[1747,35,1552,39,"generateContractNetworks"],[1747,36,1552,39,"_x35"],[1747,40,1552,39],[1747,42,1552,39,"_x36"],[1747,46,1552,39],[1748,4,1552,39],[1748,11,1552,39,"_generateContractNetworks"],[1748,36,1552,39],[1748,37,1552,39,"apply"],[1748,42,1552,39],[1748,49,1552,39,"arguments"],[1748,58,1552,39],[1749,2,1552,39],[1750,2,1552,39],[1750,11,1552,39,"_generateContractNetworks"],[1750,37,1552,39],[1751,4,1552,39,"_generateContractNetworks"],[1751,29,1552,39],[1751,32,1552,39,"_asyncToGenerator"],[1751,49,1552,39],[1751,50,1552,0],[1751,61,1552,40,"contractName"],[1751,73,1552,52],[1751,75,1552,54,"networks"],[1751,83,1552,62],[1751,85,1552,64],[1752,6,1553,2],[1752,10,1553,8,"values"],[1752,16,1553,14],[1752,19,1553,17],[1752,21,1553,19],[1753,6,1554,2],[1753,11,1554,7],[1753,15,1554,13,"net"],[1753,18,1554,16],[1753,22,1554,20,"networks"],[1753,30,1554,28],[1753,32,1554,30],[1754,8,1555,4],[1754,12,1555,10,"networkHashes"],[1754,25,1555,23],[1754,28,1555,26],[1754,29,1555,27,"genHash"],[1754,36,1555,34],[1754,37,1555,35,"net"],[1754,40,1555,38],[1754,41,1555,39,"network"],[1754,48,1555,46],[1754,49,1555,47],[1754,50,1555,48],[1755,8,1556,4],[1755,12,1557,6,"address"],[1755,19,1557,13],[1755,22,1559,8,"net"],[1755,25,1559,11],[1755,26,1557,6,"address"],[1755,33,1557,13],[1756,10,1558,6,"dependency_pin_block_height"],[1756,37,1558,33],[1756,40,1559,8,"net"],[1756,43,1559,11],[1756,44,1558,6,"dependency_pin_block_height"],[1756,71,1558,33],[1757,8,1560,4],[1757,12,1560,8,"net"],[1757,15,1560,11],[1757,16,1560,12,"dependency_pin"],[1757,30,1560,26],[1757,32,1560,28],[1758,10,1561,6],[1758,14,1561,12,"hash"],[1758,18,1561,16],[1758,27,1561,25,"generateDependencyPin110"],[1758,51,1561,49],[1758,52,1561,50],[1759,12,1562,8,"address"],[1759,19,1562,15],[1760,12,1563,8,"contractName"],[1760,24,1563,20],[1761,12,1564,8,"blockHeight"],[1761,23,1564,19],[1761,25,1564,21,"dependency_pin_block_height"],[1762,10,1565,6],[1762,11,1565,7],[1762,12,1565,8],[1763,10,1566,6,"networkHashes"],[1763,23,1566,19],[1763,24,1566,20,"push"],[1763,28,1566,24],[1763,29,1566,25,"genHash"],[1763,36,1566,32],[1763,37,1566,33,"hash"],[1763,41,1566,37],[1763,42,1566,38],[1763,43,1566,39],[1764,8,1567,4],[1765,8,1568,4,"values"],[1765,14,1568,10],[1765,15,1568,11,"push"],[1765,19,1568,15],[1765,20,1568,16,"networkHashes"],[1765,33,1568,29],[1765,34,1568,30],[1766,6,1569,2],[1767,6,1570,2],[1767,13,1570,9,"values"],[1767,19,1570,15],[1768,4,1571,0],[1768,5,1571,1],[1769,4,1571,1],[1769,11,1571,1,"_generateContractNetworks"],[1769,36,1571,1],[1769,37,1571,1,"apply"],[1769,42,1571,1],[1769,49,1571,1,"arguments"],[1769,58,1571,1],[1770,2,1571,1],[1771,2,1571,1],[1771,11,1572,15,"generateContractDependencies"],[1771,39,1572,43,"generateContractDependencies"],[1771,40,1572,43,"_x37"],[1771,44,1572,43],[1772,4,1572,43],[1772,11,1572,43,"_generateContractDependencies"],[1772,40,1572,43],[1772,41,1572,43,"apply"],[1772,46,1572,43],[1772,53,1572,43,"arguments"],[1772,62,1572,43],[1773,2,1572,43],[1774,2,1589,0],[1775,0,1590,0],[1776,0,1591,0],[1777,0,1592,0],[1778,0,1593,0],[1779,0,1594,0],[1780,0,1595,0],[1781,2,1589,0],[1781,11,1589,0,"_generateContractDependencies"],[1781,41,1589,0],[1782,4,1589,0,"_generateContractDependencies"],[1782,33,1589,0],[1782,36,1589,0,"_asyncToGenerator"],[1782,53,1589,0],[1782,54,1572,0],[1782,65,1572,44,"dependencies"],[1782,77,1572,56],[1782,79,1572,58],[1783,6,1573,2],[1783,10,1573,8,"values"],[1783,16,1573,14],[1783,19,1573,17],[1783,21,1573,19],[1784,6,1574,2],[1784,11,1574,7],[1784,15,1574,11,"i"],[1784,16,1574,12],[1784,19,1574,15],[1784,20,1574,16],[1784,22,1574,18,"i"],[1784,23,1574,19],[1784,26,1574,22,"dependencies"],[1784,38,1574,34],[1784,39,1574,35,"length"],[1784,45,1574,41],[1784,47,1574,43,"i"],[1784,48,1574,44],[1784,50,1574,46],[1784,52,1574,48],[1785,8,1575,4],[1785,12,1575,10,"dependency"],[1785,22,1575,20],[1785,25,1575,23,"dependencies"],[1785,37,1575,35],[1785,38,1575,36,"i"],[1785,39,1575,37],[1785,40,1575,38],[1786,8,1576,4],[1786,12,1576,10,"contracts"],[1786,21,1576,19],[1786,24,1576,22],[1786,26,1576,24],[1787,8,1577,4],[1787,13,1577,9],[1787,17,1577,13,"j"],[1787,18,1577,14],[1787,21,1577,17],[1787,22,1577,18],[1787,24,1577,20,"j"],[1787,25,1577,21],[1787,28,1577,24,"dependency"],[1787,38,1577,34],[1787,40,1577,36,"contracts"],[1787,49,1577,45],[1787,50,1577,46,"length"],[1787,56,1577,52],[1787,58,1577,54,"j"],[1787,59,1577,55],[1787,61,1577,57],[1787,63,1577,59],[1788,10,1578,6],[1788,14,1578,12,"c"],[1788,15,1578,13],[1788,18,1578,16,"dependency"],[1788,28,1578,26],[1788,30,1578,28,"contracts"],[1788,39,1578,37],[1788,40,1578,38,"j"],[1788,41,1578,39],[1788,42,1578,40],[1789,10,1579,6],[1789,14,1579,12,"contractName"],[1789,26,1579,24],[1789,29,1579,27,"c"],[1789,30,1579,28],[1789,32,1579,30,"contract"],[1789,40,1579,38],[1790,10,1580,6,"contracts"],[1790,19,1580,15],[1790,20,1580,16,"push"],[1790,24,1580,20],[1790,25,1580,21,"genHash"],[1790,32,1580,28],[1790,33,1580,29,"contractName"],[1790,45,1580,41],[1790,46,1580,42],[1790,47,1580,43],[1791,10,1581,6],[1791,14,1581,12,"contractHashes"],[1791,28,1581,26],[1791,37,1581,35,"generateContractNetworks"],[1791,61,1581,59],[1791,62,1581,60,"contractName"],[1791,74,1581,72],[1791,76,1581,74,"c"],[1791,77,1581,75],[1791,79,1581,77,"networks"],[1791,87,1581,85],[1791,88,1581,86],[1792,10,1582,6,"contracts"],[1792,19,1582,15],[1792,20,1582,16,"push"],[1792,24,1582,20],[1792,25,1582,21,"contractHashes"],[1792,39,1582,35],[1792,40,1582,36],[1793,8,1583,4],[1794,8,1584,4,"values"],[1794,14,1584,10],[1794,15,1584,11,"push"],[1794,19,1584,15],[1794,20,1584,16,"contracts"],[1794,29,1584,25],[1794,30,1584,26],[1795,6,1585,2],[1796,6,1586,2],[1796,13,1586,9,"values"],[1796,19,1586,15],[1797,4,1587,0],[1797,5,1587,1],[1798,4,1587,1],[1798,11,1587,1,"_generateContractDependencies"],[1798,40,1587,1],[1798,41,1587,1,"apply"],[1798,46,1587,1],[1798,53,1587,1,"arguments"],[1798,62,1587,1],[1799,2,1587,1],[1800,2,1587,1],[1800,11,1596,15,"generateTemplateId$1"],[1800,31,1596,35,"generateTemplateId$1"],[1800,32,1596,35,"_x38"],[1800,36,1596,35],[1801,4,1596,35],[1801,11,1596,35,"_generateTemplateId$2"],[1801,32,1596,35],[1801,33,1596,35,"apply"],[1801,38,1596,35],[1801,45,1596,35,"arguments"],[1801,54,1596,35],[1802,2,1596,35],[1803,2,1612,0],[1804,0,1613,0],[1805,0,1614,0],[1806,0,1615,0],[1807,0,1616,0],[1808,0,1617,0],[1809,0,1618,0],[1810,2,1612,0],[1810,11,1612,0,"_generateTemplateId$2"],[1810,33,1612,0],[1811,4,1612,0,"_generateTemplateId$2"],[1811,25,1612,0],[1811,28,1612,0,"_asyncToGenerator"],[1811,45,1612,0],[1811,46,1596,0],[1811,57,1596,36,"_ref"],[1811,61,1596,40],[1811,63,1596,42],[1812,6,1597,2],[1812,10,1598,4,"template"],[1812,18,1598,12],[1812,21,1599,6,"_ref"],[1812,25,1599,10],[1812,26,1598,4,"template"],[1812,34,1598,12],[1813,6,1600,2,"utilInvariant"],[1813,19,1600,15],[1813,20,1600,16,"invariant"],[1813,29,1600,25],[1813,30,1600,26,"template"],[1813,38,1600,34],[1813,40,1600,36],[1813,102,1600,98],[1813,103,1600,99],[1814,6,1601,2,"utilInvariant"],[1814,19,1601,15],[1814,20,1601,16,"invariant"],[1814,29,1601,25],[1814,30,1601,26],[1814,37,1601,33,"template"],[1814,45,1601,41],[1814,50,1601,46],[1814,58,1601,54],[1814,60,1601,56],[1814,124,1601,120],[1814,125,1601,121],[1815,6,1602,2,"utilInvariant"],[1815,19,1602,15],[1815,20,1602,16,"invariant"],[1815,29,1602,25],[1815,30,1602,26,"template"],[1815,38,1602,34],[1815,39,1602,35,"f_type"],[1815,45,1602,41],[1815,50,1602,46],[1815,71,1602,67],[1815,73,1602,69],[1815,157,1602,153],[1815,158,1602,154],[1816,6,1603,2,"utilInvariant"],[1816,19,1603,15],[1816,20,1603,16,"invariant"],[1816,29,1603,25],[1816,30,1603,26,"template"],[1816,38,1603,34],[1816,39,1603,35,"f_version"],[1816,48,1603,44],[1816,53,1603,49],[1816,60,1603,56],[1816,62,1603,58],[1816,140,1603,136],[1816,141,1603,137],[1817,6,1604,2],[1817,10,1604,8,"templateData"],[1817,22,1604,20],[1817,25,1604,23,"template"],[1817,33,1604,31],[1817,34,1604,32,"data"],[1817,38,1604,36],[1818,6,1605,2],[1818,10,1605,8,"messages"],[1818,18,1605,16],[1818,27,1605,25,"Promise"],[1818,34,1605,32],[1818,35,1605,33,"all"],[1818,38,1605,36],[1818,39,1605,37,"templateData"],[1818,51,1605,49],[1818,52,1605,50,"messages"],[1818,60,1605,58],[1818,61,1605,59,"map"],[1818,64,1605,62],[1819,8,1605,62],[1819,12,1605,62,"_ref48"],[1819,18,1605,62],[1819,21,1605,62,"_asyncToGenerator"],[1819,38,1605,62],[1819,39,1605,63],[1819,50,1605,69,"templateMessage"],[1819,65,1605,84],[1820,10,1605,84],[1820,17,1605,88],[1820,18,1605,89,"genHash"],[1820,25,1605,96],[1820,26,1605,97,"templateMessage"],[1820,41,1605,112],[1820,42,1605,113,"key"],[1820,45,1605,116],[1820,46,1605,117],[1820,54,1605,125,"Promise"],[1820,61,1605,132],[1820,62,1605,133,"all"],[1820,65,1605,136],[1820,66,1605,137,"templateMessage"],[1820,81,1605,152],[1820,82,1605,153,"i18n"],[1820,86,1605,157],[1820,87,1605,158,"map"],[1820,90,1605,161],[1821,12,1605,161],[1821,16,1605,161,"_ref49"],[1821,22,1605,161],[1821,25,1605,161,"_asyncToGenerator"],[1821,42,1605,161],[1821,43,1605,162],[1821,54,1605,168,"templateMessagei18n"],[1821,73,1605,187],[1822,14,1605,187],[1822,21,1605,191],[1822,22,1605,192,"genHash"],[1822,29,1605,199],[1822,30,1605,200,"templateMessagei18n"],[1822,49,1605,219],[1822,50,1605,220,"tag"],[1822,53,1605,223],[1822,54,1605,224],[1822,56,1605,226,"genHash"],[1822,63,1605,233],[1822,64,1605,234,"templateMessagei18n"],[1822,83,1605,253],[1822,84,1605,254,"translation"],[1822,95,1605,265],[1822,96,1605,266],[1822,97,1605,267],[1823,12,1605,267],[1824,12,1605,267],[1824,29,1605,267,"_x78"],[1824,33,1605,267],[1825,14,1605,267],[1825,21,1605,267,"_ref49"],[1825,27,1605,267],[1825,28,1605,267,"apply"],[1825,33,1605,267],[1825,40,1605,267,"arguments"],[1825,49,1605,267],[1826,12,1605,267],[1827,10,1605,267],[1827,14,1605,268],[1827,15,1605,269],[1827,16,1605,270],[1828,8,1605,270],[1829,8,1605,270],[1829,25,1605,270,"_x77"],[1829,29,1605,270],[1830,10,1605,270],[1830,17,1605,270,"_ref48"],[1830,23,1605,270],[1830,24,1605,270,"apply"],[1830,29,1605,270],[1830,36,1605,270,"arguments"],[1830,45,1605,270],[1831,8,1605,270],[1832,6,1605,270],[1832,10,1605,271],[1832,11,1605,272],[1833,6,1606,2],[1833,10,1606,8,"params"],[1833,16,1606,14],[1833,25,1606,23,"Promise"],[1833,32,1606,30],[1833,33,1606,31,"all"],[1833,36,1606,34],[1833,37,1606,35,"templateData"],[1833,49,1606,47],[1833,52,1606,50],[1833,64,1606,62],[1833,65,1606,63],[1833,66,1606,64,"sort"],[1833,70,1606,68],[1833,71,1606,69],[1833,72,1606,70,"a"],[1833,73,1606,71],[1833,75,1606,73,"b"],[1833,76,1606,74],[1833,81,1606,79,"a"],[1833,82,1606,80],[1833,83,1606,81,"index"],[1833,88,1606,86],[1833,91,1606,89,"b"],[1833,92,1606,90],[1833,93,1606,91,"index"],[1833,98,1606,96],[1833,99,1606,97],[1833,100,1606,98,"map"],[1833,103,1606,101],[1834,8,1606,101],[1834,12,1606,101,"_ref50"],[1834,18,1606,101],[1834,21,1606,101,"_asyncToGenerator"],[1834,38,1606,101],[1834,39,1606,102],[1834,50,1606,108,"arg"],[1834,53,1606,111],[1835,10,1606,111],[1835,17,1606,115],[1835,18,1606,116,"genHash"],[1835,25,1606,123],[1835,26,1606,124,"arg"],[1835,29,1606,127],[1835,30,1606,128,"label"],[1835,35,1606,133],[1835,36,1606,134],[1835,38,1606,136],[1835,39,1606,137,"genHash"],[1835,46,1606,144],[1835,47,1606,145,"String"],[1835,53,1606,151],[1835,54,1606,152,"arg"],[1835,57,1606,155],[1835,58,1606,156,"index"],[1835,63,1606,161],[1835,64,1606,162],[1835,65,1606,163],[1835,67,1606,165,"genHash"],[1835,74,1606,172],[1835,75,1606,173,"arg"],[1835,78,1606,176],[1835,79,1606,177,"type"],[1835,83,1606,181],[1835,84,1606,182],[1835,92,1606,190,"Promise"],[1835,99,1606,197],[1835,100,1606,198,"all"],[1835,103,1606,201],[1835,104,1606,202,"arg"],[1835,107,1606,205],[1835,108,1606,206,"messages"],[1835,116,1606,214],[1835,117,1606,215,"map"],[1835,120,1606,218],[1836,12,1606,218],[1836,16,1606,218,"_ref51"],[1836,22,1606,218],[1836,25,1606,218,"_asyncToGenerator"],[1836,42,1606,218],[1836,43,1606,219],[1836,54,1606,225,"argumentMessage"],[1836,69,1606,240],[1837,14,1606,240],[1837,21,1606,244],[1837,22,1606,245,"genHash"],[1837,29,1606,252],[1837,30,1606,253,"argumentMessage"],[1837,45,1606,268],[1837,46,1606,269,"key"],[1837,49,1606,272],[1837,50,1606,273],[1837,58,1606,281,"Promise"],[1837,65,1606,288],[1837,66,1606,289,"all"],[1837,69,1606,292],[1837,70,1606,293,"argumentMessage"],[1837,85,1606,308],[1837,86,1606,309,"i18n"],[1837,90,1606,313],[1837,91,1606,314,"map"],[1837,94,1606,317],[1838,16,1606,317],[1838,20,1606,317,"_ref52"],[1838,26,1606,317],[1838,29,1606,317,"_asyncToGenerator"],[1838,46,1606,317],[1838,47,1606,318],[1838,58,1606,324,"argumentMessagei18n"],[1838,77,1606,343],[1839,18,1606,343],[1839,25,1606,347],[1839,26,1606,348,"genHash"],[1839,33,1606,355],[1839,34,1606,356,"argumentMessagei18n"],[1839,53,1606,375],[1839,54,1606,376,"tag"],[1839,57,1606,379],[1839,58,1606,380],[1839,60,1606,382,"genHash"],[1839,67,1606,389],[1839,68,1606,390,"argumentMessagei18n"],[1839,87,1606,409],[1839,88,1606,410,"translation"],[1839,99,1606,421],[1839,100,1606,422],[1839,101,1606,423],[1840,16,1606,423],[1841,16,1606,423],[1841,33,1606,423,"_x81"],[1841,37,1606,423],[1842,18,1606,423],[1842,25,1606,423,"_ref52"],[1842,31,1606,423],[1842,32,1606,423,"apply"],[1842,37,1606,423],[1842,44,1606,423,"arguments"],[1842,53,1606,423],[1843,16,1606,423],[1844,14,1606,423],[1844,18,1606,424],[1844,19,1606,425],[1844,20,1606,426],[1845,12,1606,426],[1846,12,1606,426],[1846,29,1606,426,"_x80"],[1846,33,1606,426],[1847,14,1606,426],[1847,21,1606,426,"_ref51"],[1847,27,1606,426],[1847,28,1606,426,"apply"],[1847,33,1606,426],[1847,40,1606,426,"arguments"],[1847,49,1606,426],[1848,12,1606,426],[1849,10,1606,426],[1849,14,1606,427],[1849,15,1606,428],[1849,16,1606,429],[1849,17,1606,430],[1850,8,1606,430],[1851,8,1606,430],[1851,25,1606,430,"_x79"],[1851,29,1606,430],[1852,10,1606,430],[1852,17,1606,430,"_ref50"],[1852,23,1606,430],[1852,24,1606,430,"apply"],[1852,29,1606,430],[1852,36,1606,430,"arguments"],[1852,45,1606,430],[1853,8,1606,430],[1854,6,1606,430],[1854,10,1606,431],[1854,11,1606,432],[1855,6,1607,2],[1855,10,1607,8,"dependencies"],[1855,22,1607,20],[1855,25,1607,23],[1855,32,1607,30,"generateContractDependencies"],[1855,60,1607,58],[1855,61,1607,59,"templateData"],[1855,73,1607,71],[1855,75,1607,73,"dependencies"],[1855,87,1607,85],[1855,88,1607,86],[1855,89,1607,87],[1856,6,1608,2],[1856,10,1608,8,"encodedHex"],[1856,20,1608,18],[1856,23,1608,21,"rlp"],[1856,26,1608,24],[1856,27,1608,25,"encode"],[1856,33,1608,31],[1856,34,1608,32],[1856,35,1608,33,"genHash"],[1856,42,1608,40],[1856,43,1608,41,"template"],[1856,51,1608,49],[1856,53,1608,51,"f_type"],[1856,59,1608,57],[1856,60,1608,58],[1856,62,1608,60,"genHash"],[1856,69,1608,67],[1856,70,1608,68,"template"],[1856,78,1608,76],[1856,80,1608,78,"f_version"],[1856,89,1608,87],[1856,90,1608,88],[1856,92,1608,90,"genHash"],[1856,99,1608,97],[1856,100,1608,98,"templateData"],[1856,112,1608,110],[1856,114,1608,112,"type"],[1856,118,1608,116],[1856,119,1608,117],[1856,121,1608,119,"genHash"],[1856,128,1608,126],[1856,129,1608,127,"templateData"],[1856,141,1608,139],[1856,143,1608,141,"interface"],[1856,152,1608,150],[1856,153,1608,151],[1856,155,1608,153,"messages"],[1856,163,1608,161],[1856,165,1608,163,"genHash"],[1856,172,1608,170],[1856,173,1608,171,"templateData"],[1856,185,1608,183],[1856,187,1608,185,"cadence"],[1856,194,1608,192],[1856,196,1608,194,"body"],[1856,200,1608,198],[1856,201,1608,199],[1856,203,1608,201],[1856,204,1608,202,"dependencies"],[1856,216,1608,214],[1856,217,1608,215],[1856,219,1608,217,"params"],[1856,225,1608,223],[1856,226,1608,224],[1856,227,1608,225],[1856,228,1608,226,"toString"],[1856,236,1608,234],[1856,237,1608,235],[1856,242,1608,240],[1856,243,1608,241],[1857,6,1609,2],[1857,13,1609,9,"genHash"],[1857,20,1609,16],[1857,21,1609,17,"encodedHex"],[1857,31,1609,27],[1857,32,1609,28],[1858,4,1610,0],[1858,5,1610,1],[1859,4,1610,1],[1859,11,1610,1,"_generateTemplateId$2"],[1859,32,1610,1],[1859,33,1610,1,"apply"],[1859,38,1610,1],[1859,45,1610,1,"arguments"],[1859,54,1610,1],[1860,2,1610,1],[1861,2,1610,1],[1861,11,1619,15,"generateTemplateId"],[1861,29,1619,33,"generateTemplateId"],[1861,30,1619,33,"_x39"],[1861,34,1619,33],[1862,4,1619,33],[1862,11,1619,33,"_generateTemplateId"],[1862,30,1619,33],[1862,31,1619,33,"apply"],[1862,36,1619,33],[1862,43,1619,33,"arguments"],[1862,52,1619,33],[1863,2,1619,33],[1864,2,1640,0],[1865,0,1641,0],[1866,0,1642,0],[1867,0,1643,0],[1868,0,1644,0],[1869,0,1645,0],[1870,0,1646,0],[1871,2,1640,0],[1871,11,1640,0,"_generateTemplateId"],[1871,31,1640,0],[1872,4,1640,0,"_generateTemplateId"],[1872,23,1640,0],[1872,26,1640,0,"_asyncToGenerator"],[1872,43,1640,0],[1872,44,1619,0],[1872,55,1619,34,"_ref"],[1872,59,1619,38],[1872,61,1619,40],[1873,6,1620,2],[1873,10,1621,4,"template"],[1873,18,1621,12],[1873,21,1622,6,"_ref"],[1873,25,1622,10],[1873,26,1621,4,"template"],[1873,34,1621,12],[1874,6,1623,2,"utilInvariant"],[1874,19,1623,15],[1874,20,1623,16,"invariant"],[1874,29,1623,25],[1874,30,1623,26,"template"],[1874,38,1623,34],[1874,40,1623,36],[1874,102,1623,98],[1874,103,1623,99],[1875,6,1624,2,"utilInvariant"],[1875,19,1624,15],[1875,20,1624,16,"invariant"],[1875,29,1624,25],[1875,30,1624,26],[1875,37,1624,33,"template"],[1875,45,1624,41],[1875,50,1624,46],[1875,58,1624,54],[1875,60,1624,56],[1875,124,1624,120],[1875,125,1624,121],[1876,6,1625,2,"utilInvariant"],[1876,19,1625,15],[1876,20,1625,16,"invariant"],[1876,29,1625,25],[1876,30,1625,26,"template"],[1876,38,1625,34],[1876,39,1625,35,"f_type"],[1876,45,1625,41],[1876,50,1625,46],[1876,71,1625,67],[1876,73,1625,69],[1876,157,1625,153],[1876,158,1625,154],[1877,6,1626,2],[1877,14,1626,10,"template"],[1877,22,1626,18],[1877,23,1626,19,"f_version"],[1877,32,1626,28],[1878,8,1627,4],[1878,13,1627,9],[1878,20,1627,16],[1879,10,1628,6],[1879,23,1628,19,"generateTemplateId$1"],[1879,43,1628,39],[1879,44,1628,40],[1880,12,1629,8,"template"],[1881,10,1630,6],[1881,11,1630,7],[1881,12,1630,8],[1882,8,1631,4],[1882,13,1631,9],[1882,20,1631,16],[1883,10,1632,6],[1883,23,1632,19,"generateTemplateId$2"],[1883,43,1632,39],[1883,44,1632,40],[1884,12,1633,8,"template"],[1885,10,1634,6],[1885,11,1634,7],[1885,12,1634,8],[1886,8,1635,4],[1887,10,1636,6],[1887,16,1636,12],[1887,20,1636,16,"Error"],[1887,25,1636,21],[1887,26,1636,22],[1887,82,1636,78],[1887,83,1636,79],[1888,6,1637,2],[1889,4,1638,0],[1889,5,1638,1],[1890,4,1638,1],[1890,11,1638,1,"_generateTemplateId"],[1890,30,1638,1],[1890,31,1638,1,"apply"],[1890,36,1638,1],[1890,43,1638,1,"arguments"],[1890,52,1638,1],[1891,2,1638,1],[1892,2,1638,1],[1892,11,1648,15,"verifyGeneratedTemplateId"],[1892,36,1648,40,"verifyGeneratedTemplateId"],[1892,37,1648,40,"_x40"],[1892,41,1648,40],[1893,4,1648,40],[1893,11,1648,40,"_verifyGeneratedTemplateId"],[1893,37,1648,40],[1893,38,1648,40,"apply"],[1893,43,1648,40],[1893,50,1648,40,"arguments"],[1893,59,1648,40],[1894,2,1648,40],[1895,2,1657,0],[1896,0,1658,0],[1897,0,1659,0],[1898,0,1660,0],[1899,0,1661,0],[1900,0,1662,0],[1901,0,1663,0],[1902,0,1664,0],[1903,0,1665,0],[1904,0,1666,0],[1905,2,1657,0],[1905,11,1657,0,"_verifyGeneratedTemplateId"],[1905,38,1657,0],[1906,4,1657,0,"_verifyGeneratedTemplateId"],[1906,30,1657,0],[1906,33,1657,0,"_asyncToGenerator"],[1906,50,1657,0],[1906,51,1648,0],[1906,62,1648,41,"_ref2"],[1906,67,1648,46],[1906,69,1648,48],[1907,6,1649,2],[1907,10,1650,4,"template"],[1907,18,1650,12],[1907,21,1651,6,"_ref2"],[1907,26,1651,11],[1907,27,1650,4,"template"],[1907,35,1650,12],[1908,6,1652,2],[1908,13,1652,9,"template"],[1908,21,1652,17],[1908,22,1652,18,"id"],[1908,24,1652,20],[1908,36,1652,32,"generateTemplateId"],[1908,54,1652,50],[1908,55,1652,51],[1909,8,1653,4,"template"],[1910,6,1654,2],[1910,7,1654,3],[1910,8,1654,4],[1910,9,1654,5],[1911,4,1655,0],[1911,5,1655,1],[1912,4,1655,1],[1912,11,1655,1,"_verifyGeneratedTemplateId"],[1912,37,1655,1],[1912,38,1655,1,"apply"],[1912,43,1655,1],[1912,50,1655,1,"arguments"],[1912,59,1655,1],[1913,2,1655,1],[1914,2,1655,1],[1914,11,1667,15,"getInteractionTemplateAudits"],[1914,39,1667,43,"getInteractionTemplateAudits"],[1914,40,1667,43,"_x41"],[1914,44,1667,43],[1915,4,1667,43],[1915,11,1667,43,"_getInteractionTemplateAudits"],[1915,40,1667,43],[1915,41,1667,43,"apply"],[1915,46,1667,43],[1915,53,1667,43,"arguments"],[1915,62,1667,43],[1916,2,1667,43],[1917,2,1722,0],[1918,0,1723,0],[1919,0,1724,0],[1920,0,1725,0],[1921,0,1726,0],[1922,0,1727,0],[1923,0,1728,0],[1924,0,1729,0],[1925,2,1722,0],[1925,11,1722,0,"_getInteractionTemplateAudits"],[1925,41,1722,0],[1926,4,1722,0,"_getInteractionTemplateAudits"],[1926,33,1722,0],[1926,36,1722,0,"_asyncToGenerator"],[1926,53,1722,0],[1926,54,1667,0],[1926,65,1667,44,"_ref"],[1926,69,1667,48],[1926,71,1667,50],[1927,6,1668,2],[1927,10,1669,4,"template"],[1927,18,1669,12],[1927,21,1671,6,"_ref"],[1927,25,1671,10],[1927,26,1669,4,"template"],[1927,34,1669,12],[1928,8,1670,4,"auditors"],[1928,16,1670,12],[1928,19,1671,6,"_ref"],[1928,23,1671,10],[1928,24,1670,4,"auditors"],[1928,32,1670,12],[1929,6,1672,2],[1929,10,1672,6,"opts"],[1929,14,1672,10],[1929,17,1672,13,"arguments"],[1929,26,1672,22],[1929,27,1672,23,"length"],[1929,33,1672,29],[1929,36,1672,32],[1929,37,1672,33],[1929,41,1672,37,"arguments"],[1929,50,1672,46],[1929,51,1672,47],[1929,52,1672,48],[1929,53,1672,49],[1929,58,1672,54,"undefined"],[1929,67,1672,63],[1929,70,1672,66,"arguments"],[1929,79,1672,75],[1929,80,1672,76],[1929,81,1672,77],[1929,82,1672,78],[1929,85,1672,81],[1929,86,1672,82],[1929,87,1672,83],[1930,6,1673,2,"sdk"],[1930,9,1673,5],[1930,10,1673,6,"invariant"],[1930,19,1673,15],[1930,20,1673,16,"template"],[1930,28,1673,24],[1930,32,1673,28,"undefined"],[1930,41,1673,37],[1930,43,1673,39],[1930,115,1673,111],[1930,116,1673,112],[1931,6,1674,2,"sdk"],[1931,9,1674,5],[1931,10,1674,6,"invariant"],[1931,19,1674,15],[1931,20,1674,16,"template"],[1931,28,1674,24],[1931,29,1674,25,"f_type"],[1931,35,1674,31],[1931,40,1674,36],[1931,61,1674,57],[1931,63,1674,59],[1931,150,1674,146],[1931,151,1674,147],[1933,6,1676,2],[1934,6,1677,2],[1934,10,1677,6,"recomputedTemplateID"],[1934,30,1677,26],[1934,39,1677,35,"generateTemplateId"],[1934,57,1677,53],[1934,58,1677,54],[1935,8,1678,4,"template"],[1936,6,1679,2],[1936,7,1679,3],[1936,8,1679,4],[1937,6,1680,2],[1937,10,1680,6,"recomputedTemplateID"],[1937,30,1680,26],[1937,35,1680,31,"template"],[1937,43,1680,39],[1937,44,1680,40,"id"],[1937,46,1680,42],[1937,48,1680,44],[1938,8,1681,4,"logger"],[1938,14,1681,10],[1938,15,1681,11,"log"],[1938,18,1681,14],[1938,19,1681,15],[1939,10,1682,6,"title"],[1939,15,1682,11],[1939,17,1682,13],[1939,59,1682,55],[1940,10,1683,6,"message"],[1940,17,1683,13],[1940,19,1683,15],[1941,0,1684,0],[1941,28,1684,28,"recomputedTemplateID"],[1941,48,1684,48],[1942,0,1685,0],[1942,28,1685,28,"template"],[1942,36,1685,36],[1942,37,1685,37,"id"],[1942,39,1685,39],[1943,0,1686,0],[1943,13,1686,13],[1944,10,1687,6,"level"],[1944,15,1687,11],[1944,17,1687,13,"logger"],[1944,23,1687,19],[1944,24,1687,20,"LEVELS"],[1944,30,1687,26],[1944,31,1687,27,"debug"],[1945,8,1688,4],[1945,9,1688,5],[1945,10,1688,6],[1946,8,1689,4],[1946,14,1689,10],[1946,18,1689,14,"Error"],[1946,23,1689,19],[1946,24,1689,20],[1946,103,1689,99],[1946,104,1689,100],[1947,6,1690,2],[1948,6,1691,2],[1948,14,1691,10,"template"],[1948,22,1691,18],[1948,23,1691,19,"f_version"],[1948,32,1691,28],[1949,8,1692,4],[1949,13,1692,9],[1949,20,1692,16],[1950,8,1693,4],[1950,13,1693,9],[1950,20,1693,16],[1951,10,1694,6],[1951,14,1694,12,"_auditors"],[1951,23,1694,21],[1951,26,1694,24,"auditors"],[1951,34,1694,32],[1951,45,1694,43,"sdk"],[1951,48,1694,46],[1951,49,1694,47,"config"],[1951,55,1694,53],[1951,56,1694,54],[1951,57,1694,55],[1951,58,1694,56,"get"],[1951,61,1694,59],[1951,62,1694,60],[1951,77,1694,75],[1951,78,1694,76],[1951,79,1694,77],[1952,10,1695,6,"sdk"],[1952,13,1695,9],[1952,14,1695,10,"invariant"],[1952,23,1695,19],[1952,24,1695,20,"_auditors"],[1952,33,1695,29],[1952,35,1695,31],[1952,125,1695,121],[1952,126,1695,122],[1953,10,1696,6,"sdk"],[1953,13,1696,9],[1953,14,1696,10,"invariant"],[1953,23,1696,19],[1953,24,1696,20,"Array"],[1953,29,1696,25],[1953,30,1696,26,"isArray"],[1953,37,1696,33],[1953,38,1696,34,"_auditors"],[1953,47,1696,43],[1953,48,1696,44],[1953,50,1696,46],[1953,145,1696,141],[1953,146,1696,142],[1954,10,1697,6],[1954,14,1697,10,"FlowInteractionAuditContract"],[1954,42,1697,38],[1954,45,1697,41,"opts"],[1954,49,1697,45],[1954,50,1697,46,"flowInteractionAuditContract"],[1954,78,1697,74],[1955,10,1698,6],[1955,14,1698,10],[1955,15,1698,11,"FlowInteractionAuditContract"],[1955,43,1698,39],[1955,45,1698,41],[1956,12,1699,8],[1956,16,1699,14,"fclNetwork"],[1956,26,1699,24],[1956,35,1699,33,"getChainId"],[1956,45,1699,43],[1956,46,1699,44,"opts"],[1956,50,1699,48],[1956,51,1699,49],[1957,12,1700,8,"sdk"],[1957,15,1700,11],[1957,16,1700,12,"invariant"],[1957,25,1700,21],[1957,26,1700,22,"fclNetwork"],[1957,36,1700,32],[1957,41,1700,37],[1957,50,1700,46],[1957,54,1700,50,"fclNetwork"],[1957,64,1700,60],[1957,69,1700,65],[1957,78,1700,74],[1957,80,1700,76],[1957,250,1700,246],[1957,251,1700,247],[1958,12,1701,8],[1958,16,1701,12,"fclNetwork"],[1958,26,1701,22],[1958,31,1701,27],[1958,40,1701,36],[1958,42,1701,38],[1959,14,1702,10,"FlowInteractionAuditContract"],[1959,42,1702,38],[1959,45,1702,41],[1959,65,1702,61],[1960,12,1703,8],[1960,13,1703,9],[1960,19,1703,15],[1961,14,1704,10,"FlowInteractionAuditContract"],[1961,42,1704,38],[1961,45,1704,41],[1961,65,1704,61],[1962,12,1705,8],[1963,10,1706,6],[1964,10,1707,6],[1964,14,1707,12,"audits"],[1964,20,1707,18],[1964,29,1707,27,"query"],[1964,34,1707,32],[1964,35,1707,33],[1965,12,1708,8,"cadence"],[1965,19,1708,15],[1965,21,1708,17],[1966,0,1709,0],[1966,51,1709,51,"FlowInteractionAuditContract"],[1966,79,1709,79],[1967,0,1710,0],[1968,0,1711,0],[1969,0,1712,0],[1970,0,1713,0],[1970,9,1713,9],[1971,12,1714,8,"args"],[1971,16,1714,12],[1971,18,1714,14,"args"],[1971,19,1714,15,"arg"],[1971,22,1714,18],[1971,24,1714,20,"t"],[1971,25,1714,21],[1971,30,1714,26],[1971,31,1714,27,"arg"],[1971,34,1714,30],[1971,35,1714,31,"recomputedTemplateID"],[1971,55,1714,51],[1971,57,1714,53,"t"],[1971,58,1714,54],[1971,59,1714,55,"String"],[1971,65,1714,61],[1971,66,1714,62],[1971,68,1714,64,"arg"],[1971,71,1714,67],[1971,72,1714,68,"_auditors"],[1971,81,1714,77],[1971,83,1714,79,"t"],[1971,84,1714,80],[1971,85,1714,81,"Array"],[1971,90,1714,86],[1971,91,1714,87,"t"],[1971,92,1714,88],[1971,93,1714,89,"Address"],[1971,100,1714,96],[1971,101,1714,97],[1971,102,1714,98],[1972,10,1715,6],[1972,11,1715,7],[1972,12,1715,8],[1973,10,1716,6],[1973,17,1716,13,"audits"],[1973,23,1716,19],[1974,8,1717,4],[1975,10,1718,6],[1975,16,1718,12],[1975,20,1718,16,"Error"],[1975,25,1718,21],[1975,26,1718,22],[1975,92,1718,88],[1975,93,1718,89],[1976,6,1719,2],[1977,4,1720,0],[1977,5,1720,1],[1978,4,1720,1],[1978,11,1720,1,"_getInteractionTemplateAudits"],[1978,40,1720,1],[1978,41,1720,1,"apply"],[1978,46,1720,1],[1978,53,1720,1,"arguments"],[1978,62,1720,1],[1979,2,1720,1],[1980,2,1720,1],[1980,11,1730,15,"generateDependencyPin100"],[1980,35,1730,39,"generateDependencyPin100"],[1980,36,1730,39,"_x42"],[1980,40,1730,39],[1981,4,1730,39],[1981,11,1730,39,"_generateDependencyPin2"],[1981,34,1730,39],[1981,35,1730,39,"apply"],[1981,40,1730,39],[1981,47,1730,39,"arguments"],[1981,56,1730,39],[1982,2,1730,39],[1983,2,1759,0],[1984,0,1760,0],[1985,0,1761,0],[1986,0,1762,0],[1987,0,1763,0],[1988,0,1764,0],[1989,0,1765,0],[1990,0,1766,0],[1991,0,1767,0],[1992,2,1759,0],[1992,11,1759,0,"_generateDependencyPin2"],[1992,35,1759,0],[1993,4,1759,0,"_generateDependencyPin2"],[1993,27,1759,0],[1993,30,1759,0,"_asyncToGenerator"],[1993,47,1759,0],[1993,48,1730,0],[1993,59,1730,40,"_ref"],[1993,63,1730,44],[1993,65,1730,46],[1994,6,1731,2],[1994,10,1732,4,"address"],[1994,17,1732,11],[1994,20,1734,6,"_ref"],[1994,24,1734,10],[1994,25,1732,4,"address"],[1994,32,1732,11],[1995,8,1733,4,"contractName"],[1995,20,1733,16],[1995,23,1734,6,"_ref"],[1995,27,1734,10],[1995,28,1733,4,"contractName"],[1995,40,1733,16],[1996,6,1735,2],[1996,10,1735,6,"opts"],[1996,14,1735,10],[1996,17,1735,13,"arguments"],[1996,26,1735,22],[1996,27,1735,23,"length"],[1996,33,1735,29],[1996,36,1735,32],[1996,37,1735,33],[1996,41,1735,37,"arguments"],[1996,50,1735,46],[1996,51,1735,47],[1996,52,1735,48],[1996,53,1735,49],[1996,58,1735,54,"undefined"],[1996,67,1735,63],[1996,70,1735,66,"arguments"],[1996,79,1735,75],[1996,80,1735,76],[1996,81,1735,77],[1996,82,1735,78],[1996,85,1735,81],[1996,86,1735,82],[1996,87,1735,83],[1997,6,1736,2,"sdk"],[1997,9,1736,5],[1997,10,1736,6,"invariant"],[1997,19,1736,15],[1997,20,1736,16,"address"],[1997,27,1736,23],[1997,31,1736,27,"undefined"],[1997,40,1736,36],[1997,42,1736,38],[1997,105,1736,101],[1997,106,1736,102],[1998,6,1737,2,"sdk"],[1998,9,1737,5],[1998,10,1737,6,"invariant"],[1998,19,1737,15],[1998,20,1737,16,"contractName"],[1998,32,1737,28],[1998,36,1737,32,"undefined"],[1998,45,1737,41],[1998,47,1737,43],[1998,120,1737,116],[1998,121,1737,117],[1999,6,1738,2,"sdk"],[1999,9,1738,5],[1999,10,1738,6,"invariant"],[1999,19,1738,15],[1999,20,1738,16],[1999,27,1738,23,"address"],[1999,34,1738,30],[1999,39,1738,35],[1999,47,1738,43],[1999,49,1738,45],[1999,113,1738,109],[1999,114,1738,110],[2000,6,1739,2,"sdk"],[2000,9,1739,5],[2000,10,1739,6,"invariant"],[2000,19,1739,15],[2000,20,1739,16],[2000,27,1739,23,"contractName"],[2000,39,1739,35],[2000,44,1739,40],[2000,52,1739,48],[2000,54,1739,50],[2000,128,1739,124],[2000,129,1739,125],[2001,6,1740,2],[2001,10,1740,8,"horizon"],[2001,17,1740,15],[2001,20,1740,18],[2001,21,1740,19,"generateImport"],[2001,35,1740,33],[2001,36,1740,34],[2002,8,1741,4,"contractName"],[2002,20,1741,16],[2003,8,1742,4,"address"],[2004,6,1743,2],[2004,7,1743,3],[2004,8,1743,4],[2004,9,1743,5],[2005,6,1744,2],[2005,11,1744,7],[2005,15,1744,13,"horizonImport"],[2005,28,1744,26],[2005,32,1744,30,"horizon"],[2005,39,1744,37],[2005,41,1744,39],[2006,8,1745,4],[2006,12,1745,10,"account"],[2006,19,1745,17],[2006,28,1745,26,"sdk"],[2006,31,1745,29],[2006,32,1745,30,"send"],[2006,36,1745,34],[2006,37,1745,35],[2006,38,1745,36,"sdk"],[2006,41,1745,39],[2006,42,1745,40,"getAccount"],[2006,52,1745,50],[2006,59,1745,57,"sdk"],[2006,62,1745,60],[2006,63,1745,61,"config"],[2006,69,1745,67],[2006,70,1745,68],[2006,71,1745,69],[2006,72,1745,70,"get"],[2006,75,1745,73],[2006,76,1745,74,"horizonImport"],[2006,89,1745,87],[2006,90,1745,88,"address"],[2006,97,1745,95],[2006,99,1745,97,"horizonImport"],[2006,112,1745,110],[2006,113,1745,111,"address"],[2006,120,1745,118],[2006,121,1745,119],[2006,122,1745,120],[2006,123,1745,121],[2006,125,1745,123,"opts"],[2006,129,1745,127],[2006,130,1745,128],[2006,131,1745,129,"then"],[2006,135,1745,133],[2006,136,1745,134,"sdk"],[2006,139,1745,137],[2006,140,1745,138,"decode"],[2006,146,1745,144],[2006,147,1745,145],[2007,8,1746,4,"horizonImport"],[2007,21,1746,17],[2007,22,1746,18,"contract"],[2007,30,1746,26],[2007,33,1746,29,"account"],[2007,40,1746,36],[2007,41,1746,37,"contracts"],[2007,50,1746,46],[2007,53,1746,49,"horizonImport"],[2007,66,1746,62],[2007,67,1746,63,"contractName"],[2007,79,1746,75],[2007,80,1746,76],[2008,8,1747,4],[2008,12,1747,8],[2008,13,1747,9,"horizonImport"],[2008,26,1747,22],[2008,27,1747,23,"contract"],[2008,35,1747,31],[2008,37,1747,33],[2009,10,1748,6,"console"],[2009,17,1748,13],[2009,18,1748,14,"error"],[2009,23,1748,19],[2009,24,1748,20],[2009,56,1748,52],[2009,58,1748,54,"horizonImport"],[2009,71,1748,67],[2009,73,1748,69,"account"],[2009,80,1748,76],[2009,81,1748,77],[2010,10,1749,6],[2010,16,1749,12],[2010,20,1749,16,"Error"],[2010,25,1749,21],[2010,26,1749,22],[2010,58,1749,54],[2010,59,1749,55],[2011,8,1750,4],[2012,8,1751,4],[2012,12,1751,10,"contractImports"],[2012,27,1751,25],[2012,30,1751,28,"findImports"],[2012,41,1751,39],[2012,42,1751,40,"horizonImport"],[2012,55,1751,53],[2012,56,1751,54,"contract"],[2012,64,1751,62],[2012,65,1751,63],[2013,8,1752,4,"horizon"],[2013,15,1752,11],[2013,16,1752,12,"push"],[2013,20,1752,16],[2013,21,1752,17],[2013,24,1752,20,"contractImports"],[2013,39,1752,35],[2013,40,1752,36],[2014,6,1753,2],[2015,6,1754,2],[2015,10,1754,8,"contractHashes"],[2015,24,1754,22],[2015,27,1754,25,"horizon"],[2015,34,1754,32],[2015,35,1754,33,"map"],[2015,38,1754,36],[2015,39,1754,37,"iport"],[2015,44,1754,42],[2015,48,1754,46,"genHash"],[2015,55,1754,53],[2015,56,1754,54,"iport"],[2015,61,1754,59],[2015,62,1754,60,"contract"],[2015,70,1754,68],[2015,71,1754,69],[2015,72,1754,70],[2016,6,1755,2],[2016,10,1755,8,"contractHashesJoined"],[2016,30,1755,28],[2016,33,1755,31,"contractHashes"],[2016,47,1755,45],[2016,48,1755,46,"join"],[2016,52,1755,50],[2016,53,1755,51],[2016,55,1755,53],[2016,56,1755,54],[2017,6,1756,2],[2017,13,1756,9,"genHash"],[2017,20,1756,16],[2017,21,1756,17,"contractHashesJoined"],[2017,41,1756,37],[2017,42,1756,38],[2018,4,1757,0],[2018,5,1757,1],[2019,4,1757,1],[2019,11,1757,1,"_generateDependencyPin2"],[2019,34,1757,1],[2019,35,1757,1,"apply"],[2019,40,1757,1],[2019,47,1757,1,"arguments"],[2019,56,1757,1],[2020,2,1757,1],[2021,2,1757,1],[2021,11,1768,15,"generateDependencyPin"],[2021,32,1768,36,"generateDependencyPin"],[2021,33,1768,36,"_x43"],[2021,37,1768,36],[2022,4,1768,36],[2022,11,1768,36,"_generateDependencyPin3"],[2022,34,1768,36],[2022,35,1768,36,"apply"],[2022,40,1768,36],[2022,47,1768,36,"arguments"],[2022,56,1768,36],[2023,2,1768,36],[2024,2,1794,0],[2025,0,1795,0],[2026,0,1796,0],[2027,0,1797,0],[2028,0,1798,0],[2029,0,1799,0],[2030,0,1800,0],[2031,0,1801,0],[2032,0,1802,0],[2033,2,1794,0],[2033,11,1794,0,"_generateDependencyPin3"],[2033,35,1794,0],[2034,4,1794,0,"_generateDependencyPin3"],[2034,27,1794,0],[2034,30,1794,0,"_asyncToGenerator"],[2034,47,1794,0],[2034,48,1768,0],[2034,59,1768,37,"_ref"],[2034,63,1768,41],[2034,65,1768,43],[2035,6,1769,2],[2035,10,1770,4,"version"],[2035,17,1770,11],[2035,20,1773,6,"_ref"],[2035,24,1773,10],[2035,25,1770,4,"version"],[2035,32,1770,11],[2036,8,1771,4,"address"],[2036,15,1771,11],[2036,18,1773,6,"_ref"],[2036,22,1773,10],[2036,23,1771,4,"address"],[2036,30,1771,11],[2037,8,1772,4,"contractName"],[2037,20,1772,16],[2037,23,1773,6,"_ref"],[2037,27,1773,10],[2037,28,1772,4,"contractName"],[2037,40,1772,16],[2038,6,1774,2,"sdk"],[2038,9,1774,5],[2038,10,1774,6,"invariant"],[2038,19,1774,15],[2038,20,1774,16,"address"],[2038,27,1774,23],[2038,31,1774,27,"undefined"],[2038,40,1774,36],[2038,42,1774,38],[2038,105,1774,101],[2038,106,1774,102],[2039,6,1775,2,"sdk"],[2039,9,1775,5],[2039,10,1775,6,"invariant"],[2039,19,1775,15],[2039,20,1775,16,"contractName"],[2039,32,1775,28],[2039,36,1775,32,"undefined"],[2039,45,1775,41],[2039,47,1775,43],[2039,120,1775,116],[2039,121,1775,117],[2040,6,1776,2,"sdk"],[2040,9,1776,5],[2040,10,1776,6,"invariant"],[2040,19,1776,15],[2040,20,1776,16],[2040,27,1776,23,"address"],[2040,34,1776,30],[2040,39,1776,35],[2040,47,1776,43],[2040,49,1776,45],[2040,113,1776,109],[2040,114,1776,110],[2041,6,1777,2,"sdk"],[2041,9,1777,5],[2041,10,1777,6,"invariant"],[2041,19,1777,15],[2041,20,1777,16],[2041,27,1777,23,"contractName"],[2041,39,1777,35],[2041,44,1777,40],[2041,52,1777,48],[2041,54,1777,50],[2041,128,1777,124],[2041,129,1777,125],[2042,6,1778,2],[2042,14,1778,10,"version"],[2042,21,1778,17],[2043,8,1779,4],[2043,13,1779,9],[2043,20,1779,16],[2044,10,1780,6],[2044,23,1780,19,"generateDependencyPin110"],[2044,47,1780,43],[2044,48,1780,44],[2045,12,1781,8,"address"],[2045,19,1781,15],[2046,12,1782,8,"contractName"],[2047,10,1783,6],[2047,11,1783,7],[2047,12,1783,8],[2048,8,1784,4],[2048,13,1784,9],[2048,20,1784,16],[2049,10,1785,6],[2049,23,1785,19,"generateDependencyPin100"],[2049,47,1785,43],[2049,48,1785,44],[2050,12,1786,8,"address"],[2050,19,1786,15],[2051,12,1787,8,"contractName"],[2052,10,1788,6],[2052,11,1788,7],[2052,12,1788,8],[2053,8,1789,4],[2054,10,1790,6],[2054,16,1790,12],[2054,20,1790,16,"Error"],[2054,25,1790,21],[2054,26,1790,22],[2054,86,1790,82],[2054,87,1790,83],[2055,6,1791,2],[2056,4,1792,0],[2056,5,1792,1],[2057,4,1792,1],[2057,11,1792,1,"_generateDependencyPin3"],[2057,34,1792,1],[2057,35,1792,1,"apply"],[2057,40,1792,1],[2057,47,1792,1,"arguments"],[2057,56,1792,1],[2058,2,1792,1],[2059,2,1792,1],[2059,11,1803,15,"generateDependencyPinAtLatestSealedBlock"],[2059,51,1803,55,"generateDependencyPinAtLatestSealedBlock"],[2059,52,1803,55,"_x44"],[2059,56,1803,55],[2060,4,1803,55],[2060,11,1803,55,"_generateDependencyPinAtLatestSealedBlock"],[2060,52,1803,55],[2060,53,1803,55,"apply"],[2060,58,1803,55],[2060,65,1803,55,"arguments"],[2060,74,1803,55],[2061,2,1803,55],[2062,2,1822,0],[2063,0,1823,0],[2064,0,1824,0],[2065,0,1825,0],[2066,0,1826,0],[2067,0,1827,0],[2068,0,1828,0],[2069,0,1829,0],[2070,0,1830,0],[2071,0,1831,0],[2072,2,1822,0],[2072,11,1822,0,"_generateDependencyPinAtLatestSealedBlock"],[2072,53,1822,0],[2073,4,1822,0,"_generateDependencyPinAtLatestSealedBlock"],[2073,45,1822,0],[2073,48,1822,0,"_asyncToGenerator"],[2073,65,1822,0],[2073,66,1803,0],[2073,77,1803,56,"_ref2"],[2073,82,1803,61],[2073,84,1803,63],[2074,6,1804,2],[2074,10,1805,4,"version"],[2074,17,1805,11],[2074,20,1808,6,"_ref2"],[2074,25,1808,11],[2074,26,1805,4,"version"],[2074,33,1805,11],[2075,8,1806,4,"address"],[2075,15,1806,11],[2075,18,1808,6,"_ref2"],[2075,23,1808,11],[2075,24,1806,4,"address"],[2075,31,1806,11],[2076,8,1807,4,"contractName"],[2076,20,1807,16],[2076,23,1808,6,"_ref2"],[2076,28,1808,11],[2076,29,1807,4,"contractName"],[2076,41,1807,16],[2077,6,1809,2],[2077,10,1809,6,"opts"],[2077,14,1809,10],[2077,17,1809,13,"arguments"],[2077,26,1809,22],[2077,27,1809,23,"length"],[2077,33,1809,29],[2077,36,1809,32],[2077,37,1809,33],[2077,41,1809,37,"arguments"],[2077,50,1809,46],[2077,51,1809,47],[2077,52,1809,48],[2077,53,1809,49],[2077,58,1809,54,"undefined"],[2077,67,1809,63],[2077,70,1809,66,"arguments"],[2077,79,1809,75],[2077,80,1809,76],[2077,81,1809,77],[2077,82,1809,78],[2077,85,1809,81],[2077,86,1809,82],[2077,87,1809,83],[2078,6,1810,2],[2078,10,1810,8,"latestSealedBlock"],[2078,27,1810,25],[2078,36,1810,34,"sdk"],[2078,39,1810,37],[2078,40,1810,38,"block"],[2078,45,1810,43],[2078,46,1810,44],[2079,8,1811,4,"sealed"],[2079,14,1811,10],[2079,16,1811,12],[2080,6,1812,2],[2080,7,1812,3],[2080,9,1812,5,"opts"],[2080,13,1812,9],[2080,14,1812,10],[2081,6,1813,2],[2081,10,1813,8,"latestSealedBlockHeight"],[2081,33,1813,31],[2081,36,1813,34,"latestSealedBlock"],[2081,53,1813,51],[2081,55,1813,53,"height"],[2081,61,1813,59],[2082,6,1814,2],[2082,13,1814,9,"generateDependencyPin"],[2082,34,1814,30],[2082,35,1814,31],[2083,8,1815,4,"version"],[2083,15,1815,11],[2084,8,1816,4,"address"],[2084,15,1816,11],[2085,8,1817,4,"contractName"],[2085,20,1817,16],[2086,8,1818,4,"blockHeight"],[2086,19,1818,15],[2086,21,1818,17,"latestSealedBlockHeight"],[2087,6,1819,2],[2087,7,1819,3],[2087,8,1819,4],[2088,4,1820,0],[2088,5,1820,1],[2089,4,1820,1],[2089,11,1820,1,"_generateDependencyPinAtLatestSealedBlock"],[2089,52,1820,1],[2089,53,1820,1,"apply"],[2089,58,1820,1],[2089,65,1820,1,"arguments"],[2089,74,1820,1],[2090,2,1820,1],[2091,2,1820,1],[2091,11,1832,15,"verifyDependencyPinsSame"],[2091,35,1832,39,"verifyDependencyPinsSame"],[2091,36,1832,39,"_x45"],[2091,40,1832,39],[2092,4,1832,39],[2092,11,1832,39,"_verifyDependencyPinsSame"],[2092,36,1832,39],[2092,37,1832,39,"apply"],[2092,42,1832,39],[2092,49,1832,39,"arguments"],[2092,58,1832,39],[2093,2,1832,39],[2094,2,1917,0],[2095,0,1918,0],[2096,0,1919,0],[2097,0,1920,0],[2098,0,1921,0],[2099,0,1922,0],[2100,0,1923,0],[2101,0,1924,0],[2102,0,1925,0],[2103,2,1917,0],[2103,11,1917,0,"_verifyDependencyPinsSame"],[2103,37,1917,0],[2104,4,1917,0,"_verifyDependencyPinsSame"],[2104,29,1917,0],[2104,32,1917,0,"_asyncToGenerator"],[2104,49,1917,0],[2104,50,1832,0],[2104,61,1832,40,"_ref"],[2104,65,1832,44],[2104,67,1832,46],[2105,6,1833,2],[2105,10,1834,4,"template"],[2105,18,1834,12],[2105,21,1837,6,"_ref"],[2105,25,1837,10],[2105,26,1834,4,"template"],[2105,34,1834,12],[2106,8,1835,4,"blockHeight"],[2106,19,1835,15],[2106,22,1837,6,"_ref"],[2106,26,1837,10],[2106,27,1835,4,"blockHeight"],[2106,38,1835,15],[2107,8,1836,4,"network"],[2107,15,1836,11],[2107,18,1837,6,"_ref"],[2107,22,1837,10],[2107,23,1836,4,"network"],[2107,30,1836,11],[2108,6,1838,2,"sdk"],[2108,9,1838,5],[2108,10,1838,6,"invariant"],[2108,19,1838,15],[2108,20,1838,16,"template"],[2108,28,1838,24],[2108,32,1838,28,"undefined"],[2108,41,1838,37],[2108,43,1838,39],[2108,108,1838,104],[2108,109,1838,105],[2109,6,1839,2,"sdk"],[2109,9,1839,5],[2109,10,1839,6,"invariant"],[2109,19,1839,15],[2109,20,1839,16],[2109,27,1839,23,"template"],[2109,35,1839,31],[2109,40,1839,36],[2109,48,1839,44],[2109,50,1839,46],[2109,117,1839,113],[2109,118,1839,114],[2110,6,1840,2,"sdk"],[2110,9,1840,5],[2110,10,1840,6,"invariant"],[2110,19,1840,15],[2110,20,1840,16,"template"],[2110,28,1840,24],[2110,29,1840,25,"f_type"],[2110,35,1840,31],[2110,40,1840,36],[2110,61,1840,57],[2110,63,1840,59],[2110,143,1840,139],[2110,144,1840,140],[2111,6,1841,2,"sdk"],[2111,9,1841,5],[2111,10,1841,6,"invariant"],[2111,19,1841,15],[2111,20,1841,16,"network"],[2111,27,1841,23],[2111,31,1841,27,"undefined"],[2111,40,1841,36],[2111,42,1841,38],[2111,102,1841,98],[2111,103,1841,99],[2112,6,1842,2,"sdk"],[2112,9,1842,5],[2112,10,1842,6,"invariant"],[2112,19,1842,15],[2112,20,1842,16,"blockHeight"],[2112,31,1842,27],[2112,35,1842,31,"undefined"],[2112,44,1842,40],[2112,46,1842,42],[2112,114,1842,110],[2112,115,1842,111],[2113,6,1843,2,"sdk"],[2113,9,1843,5],[2113,10,1843,6,"invariant"],[2113,19,1843,15],[2113,20,1843,16],[2113,27,1843,23,"blockHeight"],[2113,38,1843,34],[2113,43,1843,39],[2113,51,1843,47],[2113,53,1843,49],[2113,122,1843,118],[2113,123,1843,119],[2114,6,1844,2],[2114,14,1844,10,"template"],[2114,22,1844,18],[2114,23,1844,19,"f_version"],[2114,32,1844,28],[2115,8,1845,4],[2115,13,1845,9],[2115,20,1845,16],[2116,10,1846,6],[2116,14,1846,12,"templateDependenciesPlaceholderKeys"],[2116,49,1846,47],[2116,52,1846,50,"Object"],[2116,58,1846,56],[2116,59,1846,57,"keys"],[2116,63,1846,61],[2116,64,1846,62,"template"],[2116,72,1846,70],[2116,73,1846,71,"data"],[2116,77,1846,75],[2116,78,1846,76,"dependencies"],[2116,90,1846,88],[2116,91,1846,89],[2117,10,1847,6],[2117,15,1847,11],[2117,19,1847,15,"templateDependencyPlaceholderKey"],[2117,51,1847,47],[2117,55,1847,51,"templateDependenciesPlaceholderKeys"],[2117,90,1847,86],[2117,92,1847,88],[2118,12,1848,8],[2118,16,1848,14,"templateDependencyPlaceholder"],[2118,45,1848,43],[2118,48,1848,46,"template"],[2118,56,1848,54],[2118,57,1848,55,"data"],[2118,61,1848,59],[2118,62,1848,60,"dependencies"],[2118,74,1848,72],[2118,75,1848,73,"templateDependencyPlaceholderKey"],[2118,107,1848,105],[2118,108,1848,106],[2119,12,1849,8],[2119,16,1849,14,"templateDependencyPlaceholderContractNames"],[2119,58,1849,56],[2119,61,1849,59,"Object"],[2119,67,1849,65],[2119,68,1849,66,"keys"],[2119,72,1849,70],[2119,73,1849,71,"templateDependencyPlaceholder"],[2119,102,1849,100],[2119,103,1849,101],[2120,12,1850,8],[2120,17,1850,13],[2120,21,1850,17,"templateDependencyPlaceholderContractName"],[2120,62,1850,58],[2120,66,1850,62,"templateDependencyPlaceholderContractNames"],[2120,108,1850,104],[2120,110,1850,106],[2121,14,1851,10],[2121,18,1851,16,"templateDependencyPlaceholderContractNetworks"],[2121,63,1851,61],[2121,66,1851,64,"template"],[2121,74,1851,72],[2121,75,1851,73,"data"],[2121,79,1851,77],[2121,80,1851,78,"dependencies"],[2121,92,1851,90],[2121,93,1851,91,"templateDependencyPlaceholderKey"],[2121,125,1851,123],[2121,126,1851,124],[2121,127,1851,125,"templateDependencyPlaceholderContractName"],[2121,168,1851,166],[2121,169,1851,167],[2122,14,1852,10],[2122,18,1852,16,"templateDependency"],[2122,36,1852,34],[2122,39,1852,37,"templateDependencyPlaceholderContractNetworks"],[2122,84,1852,82],[2122,85,1852,83,"network"],[2122,92,1852,90],[2122,93,1852,91],[2123,14,1853,10],[2123,18,1853,14],[2123,25,1853,21,"templateDependency"],[2123,43,1853,39],[2123,48,1853,44],[2123,59,1853,55],[2123,61,1853,57],[2124,14,1854,10],[2124,18,1854,16,"pin"],[2124,21,1854,19],[2124,30,1854,28,"generateDependencyPin"],[2124,51,1854,49],[2124,52,1854,50],[2125,16,1855,12,"address"],[2125,23,1855,19],[2125,25,1855,21,"templateDependency"],[2125,43,1855,39],[2125,44,1855,40,"address"],[2125,51,1855,47],[2126,16,1856,12,"contractName"],[2126,28,1856,24],[2126,30,1856,26,"templateDependency"],[2126,48,1856,44],[2126,49,1856,45,"contract"],[2126,57,1856,53],[2127,16,1857,12,"blockHeight"],[2128,14,1858,10],[2128,15,1858,11],[2128,16,1858,12],[2129,14,1859,10],[2129,18,1859,14,"pin"],[2129,21,1859,17],[2129,26,1859,22,"templateDependency"],[2129,44,1859,40],[2129,45,1859,41,"pin"],[2129,48,1859,44],[2129,50,1859,46],[2130,16,1860,12,"logger"],[2130,22,1860,18],[2130,23,1860,19,"log"],[2130,26,1860,22],[2130,27,1860,23],[2131,18,1861,14,"title"],[2131,23,1861,19],[2131,25,1861,21],[2131,63,1861,59],[2132,18,1862,14,"message"],[2132,25,1862,21],[2132,27,1862,23],[2133,0,1863,0],[2133,43,1863,43,"templateDependency"],[2133,61,1863,61],[2133,62,1863,62,"address"],[2133,69,1863,69],[2133,85,1863,85,"templateDependency"],[2133,103,1863,103],[2133,104,1863,104,"contract"],[2133,112,1863,112],[2134,0,1864,0],[2134,44,1864,44,"pin"],[2134,47,1864,47],[2135,0,1865,0],[2135,44,1865,44,"templateDependency"],[2135,62,1865,62],[2135,63,1865,63,"pin"],[2135,66,1865,66],[2136,0,1866,0],[2136,29,1866,29],[2137,18,1867,14,"level"],[2137,23,1867,19],[2137,25,1867,21,"logger"],[2137,31,1867,27],[2137,32,1867,28,"LEVELS"],[2137,38,1867,34],[2137,39,1867,35,"debug"],[2138,16,1868,12],[2138,17,1868,13],[2138,18,1868,14],[2139,16,1869,12],[2139,23,1869,19],[2139,28,1869,24],[2140,14,1870,10],[2141,12,1871,8],[2142,10,1872,6],[2143,10,1873,6],[2143,17,1873,13],[2143,21,1873,17],[2144,8,1874,4],[2144,13,1874,9],[2144,20,1874,16],[2145,10,1875,6],[2145,14,1875,10,"isVerified"],[2145,24,1875,20],[2145,27,1875,23],[2145,32,1875,28],[2146,10,1876,6],[2147,10,1877,6],[2147,15,1877,11],[2147,19,1877,15,"i"],[2147,20,1877,16],[2147,23,1877,19],[2147,24,1877,20],[2147,26,1877,22,"i"],[2147,27,1877,23],[2147,30,1877,26,"template"],[2147,38,1877,34],[2147,39,1877,35,"data"],[2147,43,1877,39],[2147,45,1877,41,"dependencies"],[2147,57,1877,53],[2147,58,1877,54,"length"],[2147,64,1877,60],[2147,66,1877,62,"i"],[2147,67,1877,63],[2147,69,1877,65],[2147,71,1877,67],[2148,12,1878,8],[2148,16,1878,14,"dependency"],[2148,26,1878,24],[2148,29,1878,27,"template"],[2148,37,1878,35],[2148,38,1878,36,"data"],[2148,42,1878,40],[2148,44,1878,42,"dependencies"],[2148,56,1878,54],[2148,57,1878,55,"i"],[2148,58,1878,56],[2148,59,1878,57],[2149,12,1879,8],[2150,12,1880,8],[2150,17,1880,13],[2150,21,1880,17,"j"],[2150,22,1880,18],[2150,25,1880,21],[2150,26,1880,22],[2150,28,1880,24,"j"],[2150,29,1880,25],[2150,32,1880,28,"dependency"],[2150,42,1880,38],[2150,44,1880,40,"contracts"],[2150,53,1880,49],[2150,54,1880,50,"length"],[2150,60,1880,56],[2150,62,1880,58,"j"],[2150,63,1880,59],[2150,65,1880,61],[2150,67,1880,63],[2151,14,1881,10],[2151,18,1881,16,"contract"],[2151,26,1881,24],[2151,29,1881,27,"dependency"],[2151,39,1881,37],[2151,41,1881,39,"contracts"],[2151,50,1881,48],[2151,51,1881,49,"j"],[2151,52,1881,50],[2151,53,1881,51],[2152,14,1882,10],[2153,14,1883,10],[2153,19,1883,15],[2153,23,1883,19,"k"],[2153,24,1883,20],[2153,27,1883,23],[2153,28,1883,24],[2153,30,1883,26,"k"],[2153,31,1883,27],[2153,34,1883,30,"contract"],[2153,42,1883,38],[2153,44,1883,40,"networks"],[2153,52,1883,48],[2153,53,1883,49,"length"],[2153,59,1883,55],[2153,61,1883,57,"k"],[2153,62,1883,58],[2153,64,1883,60],[2153,66,1883,62],[2154,16,1884,12],[2154,20,1884,18,"net"],[2154,23,1884,21],[2154,26,1884,24,"contract"],[2154,34,1884,32],[2154,36,1884,34,"networks"],[2154,44,1884,42],[2154,45,1884,43,"k"],[2154,46,1884,44],[2154,47,1884,45],[2155,16,1885,12],[2156,16,1886,12],[2156,20,1886,16,"net"],[2156,23,1886,19],[2156,24,1886,20,"network"],[2156,31,1886,27],[2156,36,1886,32,"network"],[2156,43,1886,39],[2156,45,1886,41],[2157,18,1887,14],[2157,22,1887,20,"pin"],[2157,26,1887,23],[2157,35,1887,32,"generateDependencyPin"],[2157,56,1887,53],[2157,57,1887,54],[2158,20,1888,16,"version"],[2158,27,1888,23],[2158,29,1888,25,"template"],[2158,37,1888,33],[2158,38,1888,34,"f_version"],[2158,47,1888,43],[2159,20,1889,16,"address"],[2159,27,1889,23],[2159,29,1889,25,"net"],[2159,32,1889,28],[2159,33,1889,29,"address"],[2159,40,1889,36],[2160,20,1890,16,"contractName"],[2160,32,1890,28],[2160,34,1890,30,"contract"],[2160,42,1890,38],[2160,43,1890,39,"contract"],[2160,51,1890,47],[2161,20,1891,16,"blockHeight"],[2162,18,1892,14],[2162,19,1892,15],[2162,20,1892,16],[2163,18,1893,14],[2163,22,1893,18,"pin"],[2163,26,1893,21],[2163,31,1893,26,"net"],[2163,34,1893,29],[2163,35,1893,30,"dependency_pin"],[2163,49,1893,44],[2163,50,1893,45,"pin"],[2163,53,1893,48],[2163,55,1893,50],[2164,20,1894,16,"logger"],[2164,26,1894,22],[2164,27,1894,23,"log"],[2164,30,1894,26],[2164,31,1894,27],[2165,22,1895,18,"title"],[2165,27,1895,23],[2165,29,1895,25],[2165,67,1895,63],[2166,22,1896,18,"message"],[2166,29,1896,25],[2166,31,1896,27],[2167,0,1897,0],[2167,47,1897,47,"net"],[2167,50,1897,50],[2167,51,1897,51,"address"],[2167,58,1897,58],[2167,74,1897,74,"contract"],[2167,82,1897,82],[2167,83,1897,83,"contract"],[2167,91,1897,91],[2168,0,1898,0],[2168,48,1898,48,"pin"],[2168,52,1898,51],[2169,0,1899,0],[2169,48,1899,48,"net"],[2169,51,1899,51],[2169,52,1899,52,"pin"],[2169,55,1899,55],[2170,0,1900,0],[2170,33,1900,33],[2171,22,1901,18,"level"],[2171,27,1901,23],[2171,29,1901,25,"logger"],[2171,35,1901,31],[2171,36,1901,32,"LEVELS"],[2171,42,1901,38],[2171,43,1901,39,"debug"],[2172,20,1902,16],[2172,21,1902,17],[2172,22,1902,18],[2173,20,1903,16],[2173,27,1903,23],[2173,32,1903,28],[2174,18,1904,14],[2174,19,1904,15],[2174,25,1904,21],[2175,20,1905,16,"isVerified"],[2175,30,1905,26],[2175,33,1905,29],[2175,37,1905,33],[2176,18,1906,14],[2177,16,1907,12],[2178,14,1908,10],[2179,12,1909,8],[2180,10,1910,6],[2181,10,1911,6],[2181,17,1911,13,"isVerified"],[2181,27,1911,23],[2182,8,1912,4],[2183,10,1913,6],[2183,16,1913,12],[2183,20,1913,16,"Error"],[2183,25,1913,21],[2183,26,1913,22],[2183,88,1913,84],[2183,89,1913,85],[2184,6,1914,2],[2185,4,1915,0],[2185,5,1915,1],[2186,4,1915,1],[2186,11,1915,1,"_verifyDependencyPinsSame"],[2186,36,1915,1],[2186,37,1915,1,"apply"],[2186,42,1915,1],[2186,49,1915,1,"arguments"],[2186,58,1915,1],[2187,2,1915,1],[2188,2,1915,1],[2188,11,1926,15,"verifyDependencyPinsSameAtLatestSealedBlock"],[2188,54,1926,58,"verifyDependencyPinsSameAtLatestSealedBlock"],[2188,55,1926,58,"_x46"],[2188,59,1926,58],[2189,4,1926,58],[2189,11,1926,58,"_verifyDependencyPinsSameAtLatestSealedBlock"],[2189,55,1926,58],[2189,56,1926,58,"apply"],[2189,61,1926,58],[2189,68,1926,58,"arguments"],[2189,77,1926,58],[2190,2,1926,58],[2191,2,1942,0],[2192,0,1943,0],[2193,0,1944,0],[2194,0,1945,0],[2195,0,1946,0],[2196,0,1947,0],[2197,0,1948,0],[2198,0,1949,0],[2199,0,1950,0],[2200,2,1942,0],[2200,11,1942,0,"_verifyDependencyPinsSameAtLatestSealedBlock"],[2200,56,1942,0],[2201,4,1942,0,"_verifyDependencyPinsSameAtLatestSealedBlock"],[2201,48,1942,0],[2201,51,1942,0,"_asyncToGenerator"],[2201,68,1942,0],[2201,69,1926,0],[2201,80,1926,59,"_ref2"],[2201,85,1926,64],[2201,87,1926,66],[2202,6,1927,2],[2202,10,1928,4,"template"],[2202,18,1928,12],[2202,21,1930,6,"_ref2"],[2202,26,1930,11],[2202,27,1928,4,"template"],[2202,35,1928,12],[2203,8,1929,4,"network"],[2203,15,1929,11],[2203,18,1930,6,"_ref2"],[2203,23,1930,11],[2203,24,1929,4,"network"],[2203,31,1929,11],[2204,6,1931,2],[2204,10,1931,8,"latestSealedBlock"],[2204,27,1931,25],[2204,36,1931,34,"sdk"],[2204,39,1931,37],[2204,40,1931,38,"block"],[2204,45,1931,43],[2204,46,1931,44],[2205,8,1932,4,"sealed"],[2205,14,1932,10],[2205,16,1932,12],[2206,6,1933,2],[2206,7,1933,3],[2206,8,1933,4],[2207,6,1934,2],[2207,10,1934,8,"latestSealedBlockHeight"],[2207,33,1934,31],[2207,36,1934,34,"latestSealedBlock"],[2207,53,1934,51],[2207,55,1934,53,"height"],[2207,61,1934,59],[2208,6,1935,2],[2208,13,1935,9,"verifyDependencyPinsSame"],[2208,37,1935,33],[2208,38,1935,34],[2209,8,1936,4,"template"],[2209,16,1936,12],[2210,8,1937,4,"network"],[2210,15,1937,11],[2211,8,1938,4,"blockHeight"],[2211,19,1938,15],[2211,21,1938,17,"latestSealedBlockHeight"],[2212,6,1939,2],[2212,7,1939,3],[2212,8,1939,4],[2213,4,1940,0],[2213,5,1940,1],[2214,4,1940,1],[2214,11,1940,1,"_verifyDependencyPinsSameAtLatestSealedBlock"],[2214,55,1940,1],[2214,56,1940,1,"apply"],[2214,61,1940,1],[2214,68,1940,1,"arguments"],[2214,77,1940,1],[2215,2,1940,1],[2216,2,1951,0],[2216,11,1951,9,"getTemplateMessage"],[2216,29,1951,27,"getTemplateMessage"],[2216,30,1951,28,"_ref"],[2216,34,1951,32],[2216,36,1951,34],[2217,4,1952,2],[2217,8,1952,2,"_ref$localization"],[2217,25,1952,2],[2217,28,1956,6,"_ref"],[2217,32,1956,10],[2217,33,1953,4,"localization"],[2217,45,1953,16],[2218,6,1953,4,"localization"],[2218,18,1953,16],[2218,21,1953,16,"_ref$localization"],[2218,38,1953,16],[2218,52,1953,19],[2218,59,1953,26],[2218,62,1953,26,"_ref$localization"],[2218,79,1953,26],[2219,6,1954,4,"messageKey"],[2219,16,1954,14],[2219,19,1956,6,"_ref"],[2219,23,1956,10],[2219,24,1954,4,"messageKey"],[2219,34,1954,14],[2220,6,1955,4,"template"],[2220,14,1955,12],[2220,17,1956,6,"_ref"],[2220,21,1956,10],[2220,22,1955,4,"template"],[2220,30,1955,12],[2221,4,1957,2,"sdk"],[2221,7,1957,5],[2221,8,1957,6,"invariant"],[2221,17,1957,15],[2221,18,1957,16,"messageKey"],[2221,28,1957,26],[2221,30,1957,28],[2221,96,1957,94],[2221,97,1957,95],[2222,4,1958,2,"sdk"],[2222,7,1958,5],[2222,8,1958,6,"invariant"],[2222,17,1958,15],[2222,18,1958,16],[2222,25,1958,23,"messageKey"],[2222,35,1958,33],[2222,40,1958,38],[2222,48,1958,46],[2222,50,1958,48],[2222,117,1958,115],[2222,118,1958,116],[2223,4,1959,2,"sdk"],[2223,7,1959,5],[2223,8,1959,6,"invariant"],[2223,17,1959,15],[2223,18,1959,16,"localization"],[2223,30,1959,28],[2223,32,1959,30],[2223,102,1959,100],[2223,103,1959,101],[2224,4,1960,2,"sdk"],[2224,7,1960,5],[2224,8,1960,6,"invariant"],[2224,17,1960,15],[2224,18,1960,16],[2224,25,1960,23,"localization"],[2224,37,1960,35],[2224,42,1960,40],[2224,50,1960,48],[2224,52,1960,50],[2224,123,1960,121],[2224,124,1960,122],[2225,4,1961,2,"sdk"],[2225,7,1961,5],[2225,8,1961,6,"invariant"],[2225,17,1961,15],[2225,18,1961,16,"template"],[2225,26,1961,24],[2225,30,1961,28,"undefined"],[2225,39,1961,37],[2225,41,1961,39],[2225,103,1961,101],[2225,104,1961,102],[2226,4,1962,2,"sdk"],[2226,7,1962,5],[2226,8,1962,6,"invariant"],[2226,17,1962,15],[2226,18,1962,16],[2226,25,1962,23,"template"],[2226,33,1962,31],[2226,38,1962,36],[2226,46,1962,44],[2226,48,1962,46],[2226,112,1962,110],[2226,113,1962,111],[2227,4,1963,2,"sdk"],[2227,7,1963,5],[2227,8,1963,6,"invariant"],[2227,17,1963,15],[2227,18,1963,16],[2227,25,1963,23,"template"],[2227,33,1963,31],[2227,34,1963,32,"f_type"],[2227,40,1963,38],[2227,45,1963,43],[2227,66,1963,64],[2227,68,1963,66],[2227,152,1963,150],[2227,153,1963,151],[2228,4,1964,2],[2228,12,1964,10,"template"],[2228,20,1964,18],[2228,21,1964,19,"f_version"],[2228,30,1964,28],[2229,6,1965,4],[2229,11,1965,9],[2229,18,1965,16],[2230,8,1966,6],[2230,12,1966,12,"msg"],[2230,15,1966,15],[2230,18,1966,18,"template"],[2230,26,1966,26],[2230,28,1966,28,"data"],[2230,32,1966,32],[2230,34,1966,34,"messages"],[2230,42,1966,42],[2230,44,1966,44,"find"],[2230,48,1966,48],[2230,49,1966,49,"a"],[2230,50,1966,50],[2230,54,1966,54,"a"],[2230,55,1966,55],[2230,56,1966,56,"key"],[2230,59,1966,59],[2230,64,1966,64,"messageKey"],[2230,74,1966,74],[2230,75,1966,75],[2231,8,1967,6],[2231,12,1967,10],[2231,13,1967,11,"msg"],[2231,16,1967,14],[2231,18,1967,16],[2231,25,1967,23,"undefined"],[2231,34,1967,32],[2232,8,1968,6],[2232,12,1968,12,"lzn"],[2232,15,1968,15],[2232,18,1968,18,"msg"],[2232,21,1968,21],[2232,23,1968,23,"i18n"],[2232,27,1968,27],[2232,29,1968,29,"find"],[2232,33,1968,33],[2232,34,1968,34,"a"],[2232,35,1968,35],[2232,39,1968,39,"a"],[2232,40,1968,40],[2232,41,1968,41,"tag"],[2232,44,1968,44],[2232,49,1968,49,"localization"],[2232,61,1968,61],[2232,62,1968,62],[2233,8,1969,6],[2233,12,1969,10],[2233,13,1969,11,"lzn"],[2233,16,1969,14],[2233,18,1969,16],[2233,25,1969,23,"undefined"],[2233,34,1969,32],[2234,8,1970,6],[2234,15,1970,13,"lzn"],[2234,18,1970,16],[2234,19,1970,17,"translation"],[2234,30,1970,28],[2235,6,1971,4],[2235,11,1971,9],[2235,18,1971,16],[2236,8,1972,6],[2236,15,1972,13,"template"],[2236,23,1972,21],[2236,25,1972,23,"data"],[2236,29,1972,27],[2236,31,1972,29,"messages"],[2236,39,1972,37],[2236,42,1972,40,"messageKey"],[2236,52,1972,50],[2236,53,1972,51],[2236,55,1972,53,"i18n"],[2236,59,1972,57],[2236,62,1972,60,"localization"],[2236,74,1972,72],[2236,75,1972,73],[2237,6,1973,4],[2238,8,1974,6],[2238,14,1974,12],[2238,18,1974,16,"Error"],[2238,23,1974,21],[2238,24,1974,22],[2238,88,1974,86],[2238,89,1974,87],[2239,4,1975,2],[2240,2,1976,0],[2242,2,1978,0],[2243,0,1979,0],[2244,0,1980,0],[2245,0,1981,0],[2246,0,1982,0],[2247,0,1983,0],[2248,0,1984,0],[2249,0,1985,0],[2250,0,1986,0],[2251,0,1987,0],[2252,2,1988,0],[2252,11,1988,9,"getTemplateArgumentMessage"],[2252,37,1988,35,"getTemplateArgumentMessage"],[2252,38,1988,36,"_ref"],[2252,42,1988,40],[2252,44,1988,42],[2253,4,1989,2],[2253,8,1989,2,"_ref$localization2"],[2253,26,1989,2],[2253,29,1994,6,"_ref"],[2253,33,1994,10],[2253,34,1990,4,"localization"],[2253,46,1990,16],[2254,6,1990,4,"localization"],[2254,18,1990,16],[2254,21,1990,16,"_ref$localization2"],[2254,39,1990,16],[2254,53,1990,19],[2254,60,1990,26],[2254,63,1990,26,"_ref$localization2"],[2254,81,1990,26],[2255,6,1991,4,"argumentLabel"],[2255,19,1991,17],[2255,22,1994,6,"_ref"],[2255,26,1994,10],[2255,27,1991,4,"argumentLabel"],[2255,40,1991,17],[2256,6,1992,4,"messageKey"],[2256,16,1992,14],[2256,19,1994,6,"_ref"],[2256,23,1994,10],[2256,24,1992,4,"messageKey"],[2256,34,1992,14],[2257,6,1993,4,"template"],[2257,14,1993,12],[2257,17,1994,6,"_ref"],[2257,21,1994,10],[2257,22,1993,4,"template"],[2257,30,1993,12],[2258,4,1995,2,"sdk"],[2258,7,1995,5],[2258,8,1995,6,"invariant"],[2258,17,1995,15],[2258,18,1995,16,"messageKey"],[2258,28,1995,26],[2258,30,1995,28],[2258,104,1995,102],[2258,105,1995,103],[2259,4,1996,2,"sdk"],[2259,7,1996,5],[2259,8,1996,6,"invariant"],[2259,17,1996,15],[2259,18,1996,16],[2259,25,1996,23,"messageKey"],[2259,35,1996,33],[2259,40,1996,38],[2259,48,1996,46],[2259,50,1996,48],[2259,125,1996,123],[2259,126,1996,124],[2260,4,1997,2,"sdk"],[2260,7,1997,5],[2260,8,1997,6,"invariant"],[2260,17,1997,15],[2260,18,1997,16,"argumentLabel"],[2260,31,1997,29],[2260,33,1997,31],[2260,113,1997,111],[2260,114,1997,112],[2261,4,1998,2,"sdk"],[2261,7,1998,5],[2261,8,1998,6,"invariant"],[2261,17,1998,15],[2261,18,1998,16],[2261,25,1998,23,"messageKey"],[2261,35,1998,33],[2261,40,1998,38],[2261,48,1998,46],[2261,50,1998,48],[2261,131,1998,129],[2261,132,1998,130],[2262,4,1999,2,"sdk"],[2262,7,1999,5],[2262,8,1999,6,"invariant"],[2262,17,1999,15],[2262,18,1999,16,"localization"],[2262,30,1999,28],[2262,32,1999,30],[2262,110,1999,108],[2262,111,1999,109],[2263,4,2000,2,"sdk"],[2263,7,2000,5],[2263,8,2000,6,"invariant"],[2263,17,2000,15],[2263,18,2000,16],[2263,25,2000,23,"localization"],[2263,37,2000,35],[2263,42,2000,40],[2263,50,2000,48],[2263,52,2000,50],[2263,131,2000,129],[2263,132,2000,130],[2264,4,2001,2,"sdk"],[2264,7,2001,5],[2264,8,2001,6,"invariant"],[2264,17,2001,15],[2264,18,2001,16,"template"],[2264,26,2001,24],[2264,30,2001,28,"undefined"],[2264,39,2001,37],[2264,41,2001,39],[2264,111,2001,109],[2264,112,2001,110],[2265,4,2002,2,"sdk"],[2265,7,2002,5],[2265,8,2002,6,"invariant"],[2265,17,2002,15],[2265,18,2002,16],[2265,25,2002,23,"template"],[2265,33,2002,31],[2265,38,2002,36],[2265,46,2002,44],[2265,48,2002,46],[2265,120,2002,118],[2265,121,2002,119],[2266,4,2003,2,"sdk"],[2266,7,2003,5],[2266,8,2003,6,"invariant"],[2266,17,2003,15],[2266,18,2003,16],[2266,25,2003,23,"template"],[2266,33,2003,31],[2266,34,2003,32,"f_type"],[2266,40,2003,38],[2266,45,2003,43],[2266,66,2003,64],[2266,68,2003,66],[2266,160,2003,158],[2266,161,2003,159],[2267,4,2004,2],[2267,12,2004,10,"template"],[2267,20,2004,18],[2267,21,2004,19,"f_version"],[2267,30,2004,28],[2268,6,2005,4],[2268,11,2005,9],[2268,18,2005,16],[2269,8,2006,6],[2269,12,2006,12,"param"],[2269,17,2006,17],[2269,20,2006,20,"template"],[2269,28,2006,28],[2269,30,2006,30,"data"],[2269,34,2006,34],[2269,36,2006,36,"parameters"],[2269,46,2006,46],[2269,48,2006,48,"find"],[2269,52,2006,52],[2269,53,2006,53,"a"],[2269,54,2006,54],[2269,58,2006,58,"a"],[2269,59,2006,59],[2269,60,2006,60,"label"],[2269,65,2006,65],[2269,70,2006,70,"argumentLabel"],[2269,83,2006,83],[2269,84,2006,84],[2270,8,2007,6],[2270,12,2007,10],[2270,13,2007,11,"param"],[2270,18,2007,16],[2270,20,2007,18],[2270,27,2007,25,"undefined"],[2270,36,2007,34],[2271,8,2008,6],[2271,12,2008,12,"message"],[2271,19,2008,19],[2271,22,2008,22,"param"],[2271,27,2008,27],[2271,29,2008,29,"messages"],[2271,37,2008,37],[2271,39,2008,39,"find"],[2271,43,2008,43],[2271,44,2008,44,"a"],[2271,45,2008,45],[2271,49,2008,49,"a"],[2271,50,2008,50],[2271,51,2008,51,"key"],[2271,54,2008,54],[2271,59,2008,59,"messageKey"],[2271,69,2008,69],[2271,70,2008,70],[2272,8,2009,6],[2272,12,2009,10],[2272,13,2009,11,"message"],[2272,20,2009,18],[2272,22,2009,20],[2272,29,2009,27,"undefined"],[2272,38,2009,36],[2273,8,2010,6],[2273,12,2010,12,"lzn"],[2273,15,2010,15],[2273,18,2010,18,"message"],[2273,25,2010,25],[2273,27,2010,27,"i18n"],[2273,31,2010,31],[2273,33,2010,33,"find"],[2273,37,2010,37],[2273,38,2010,38,"a"],[2273,39,2010,39],[2273,43,2010,43,"a"],[2273,44,2010,44],[2273,45,2010,45,"tag"],[2273,48,2010,48],[2273,53,2010,53,"localization"],[2273,65,2010,65],[2273,66,2010,66],[2274,8,2011,6],[2274,12,2011,10],[2274,13,2011,11,"lzn"],[2274,16,2011,14],[2274,18,2011,16],[2274,25,2011,23,"undefined"],[2274,34,2011,32],[2275,8,2012,6],[2275,15,2012,13,"lzn"],[2275,18,2012,16],[2275,19,2012,17,"translation"],[2275,30,2012,28],[2276,6,2013,4],[2276,11,2013,9],[2276,18,2013,16],[2277,8,2014,6],[2277,15,2014,13,"template"],[2277,23,2014,21],[2277,25,2014,23,"data"],[2277,29,2014,27],[2277,31,2014,29,"arguments"],[2277,40,2014,38],[2277,43,2014,41,"argumentLabel"],[2277,56,2014,54],[2277,57,2014,55],[2277,59,2014,57,"messages"],[2277,67,2014,65],[2277,70,2014,68,"messageKey"],[2277,80,2014,78],[2277,81,2014,79],[2277,83,2014,81,"i18n"],[2277,87,2014,85],[2277,90,2014,88,"localization"],[2277,102,2014,100],[2277,103,2014,101],[2278,6,2015,4],[2279,8,2016,6],[2279,14,2016,12],[2279,18,2016,16,"Error"],[2279,23,2016,21],[2279,24,2016,22],[2279,88,2016,86],[2279,89,2016,87],[2280,4,2017,2],[2281,2,2018,0],[2282,2,2020,0],[2282,6,2020,4,"index"],[2282,11,2020,9],[2282,14,2020,12],[2282,27,2020,25,"Object"],[2282,33,2020,31],[2282,34,2020,32,"freeze"],[2282,40,2020,38],[2282,41,2020,39],[2283,4,2021,2,"__proto__"],[2283,13,2021,11],[2283,15,2021,13],[2283,19,2021,17],[2284,4,2022,2,"deriveCadenceByNetwork"],[2284,26,2022,24],[2284,28,2022,26,"deriveCadenceByNetwork"],[2284,50,2022,48],[2285,4,2023,2,"generateDependencyPin"],[2285,25,2023,23],[2285,27,2023,25,"generateDependencyPin"],[2285,48,2023,46],[2286,4,2024,2,"generateDependencyPinAtLatestSealedBlock"],[2286,44,2024,42],[2286,46,2024,44,"generateDependencyPinAtLatestSealedBlock"],[2286,86,2024,84],[2287,4,2025,2,"generateTemplateId"],[2287,22,2025,20],[2287,24,2025,22,"generateTemplateId"],[2287,42,2025,40],[2288,4,2026,2,"getInteractionTemplateAudits"],[2288,32,2026,30],[2288,34,2026,32,"getInteractionTemplateAudits"],[2288,62,2026,60],[2289,4,2027,2,"getTemplateArgumentMessage"],[2289,30,2027,28],[2289,32,2027,30,"getTemplateArgumentMessage"],[2289,58,2027,56],[2290,4,2028,2,"getTemplateMessage"],[2290,22,2028,20],[2290,24,2028,22,"getTemplateMessage"],[2290,42,2028,40],[2291,4,2029,2,"verifyDependencyPinsSame"],[2291,28,2029,26],[2291,30,2029,28,"verifyDependencyPinsSame"],[2291,54,2029,52],[2292,4,2030,2,"verifyDependencyPinsSameAtLatestSealedBlock"],[2292,47,2030,45],[2292,49,2030,47,"verifyDependencyPinsSameAtLatestSealedBlock"],[2292,92,2030,90],[2293,4,2031,2,"verifyGeneratedTemplateId"],[2293,29,2031,27],[2293,31,2031,29,"verifyGeneratedTemplateId"],[2294,2,2032,0],[2294,3,2032,1],[2294,4,2032,2],[2295,2,2032,3],[2295,11,2034,15,"fetchServices"],[2295,24,2034,28,"fetchServices"],[2295,25,2034,28,"_x47"],[2295,29,2034,28],[2295,31,2034,28,"_x48"],[2295,35,2034,28],[2296,4,2034,28],[2296,11,2034,28,"_fetchServices"],[2296,25,2034,28],[2296,26,2034,28,"apply"],[2296,31,2034,28],[2296,38,2034,28,"arguments"],[2296,47,2034,28],[2297,2,2034,28],[2298,2,2034,28],[2298,11,2034,28,"_fetchServices"],[2298,26,2034,28],[2299,4,2034,28,"_fetchServices"],[2299,18,2034,28],[2299,21,2034,28,"_asyncToGenerator"],[2299,38,2034,28],[2299,39,2034,0],[2299,50,2034,29,"servicesURL"],[2299,61,2034,40],[2299,63,2034,42,"code"],[2299,67,2034,46],[2299,69,2034,48],[2300,6,2035,2],[2300,10,2035,6,"servicesURL"],[2300,21,2035,17],[2300,25,2035,21],[2300,29,2035,25],[2300,33,2035,29,"code"],[2300,37,2035,33],[2300,41,2035,37],[2300,45,2035,41],[2300,47,2035,43],[2300,54,2035,50],[2300,56,2035,52],[2301,6,2036,2],[2301,10,2036,8,"url"],[2301,13,2036,11],[2301,16,2036,14],[2301,20,2036,18,"URL"],[2301,23,2036,21],[2301,24,2036,22,"servicesURL"],[2301,35,2036,33],[2301,36,2036,34],[2302,6,2037,2,"url"],[2302,9,2037,5],[2302,10,2037,6,"searchParams"],[2302,22,2037,18],[2302,23,2037,19,"append"],[2302,29,2037,25],[2302,30,2037,26],[2302,36,2037,32],[2302,38,2037,34,"code"],[2302,42,2037,38],[2302,43,2037,39],[2303,6,2038,2],[2303,10,2038,8,"resp"],[2303,14,2038,12],[2303,23,2038,21,"fetch"],[2303,28,2038,26],[2303,29,2038,27,"url"],[2303,32,2038,30],[2303,34,2038,32],[2304,8,2039,4,"method"],[2304,14,2039,10],[2304,16,2039,12],[2304,21,2039,17],[2305,8,2040,4,"headers"],[2305,15,2040,11],[2305,17,2040,13],[2306,10,2041,6],[2306,24,2041,20],[2306,26,2041,22],[2307,8,2042,4],[2308,6,2043,2],[2308,7,2043,3],[2308,8,2043,4],[2308,9,2043,5,"then"],[2308,13,2043,9],[2308,14,2043,10,"d"],[2308,15,2043,11],[2308,19,2043,15,"d"],[2308,20,2043,16],[2308,21,2043,17,"json"],[2308,25,2043,21],[2308,26,2043,22],[2308,27,2043,23],[2308,28,2043,24],[2309,6,2044,2],[2309,10,2044,6,"Array"],[2309,15,2044,11],[2309,16,2044,12,"isArray"],[2309,23,2044,19],[2309,24,2044,20,"resp"],[2309,28,2044,24],[2309,29,2044,25],[2309,31,2044,27],[2309,38,2044,34,"resp"],[2309,42,2044,38],[2311,6,2046,2],[2312,6,2047,2],[2312,10,2047,8,"services"],[2312,18,2047,16],[2312,21,2047,19],[2312,23,2047,21],[2314,6,2049,2],[2315,6,2050,2],[2315,10,2050,6,"Array"],[2315,15,2050,11],[2315,16,2050,12,"isArray"],[2315,23,2050,19],[2315,24,2050,20,"resp"],[2315,28,2050,24],[2315,29,2050,25,"authorizations"],[2315,43,2050,39],[2315,44,2050,40],[2315,46,2050,42],[2316,8,2051,4],[2316,13,2051,9],[2316,17,2051,13,"service"],[2316,24,2051,20],[2316,28,2051,24,"resp"],[2316,32,2051,28],[2316,33,2051,29,"authorizations"],[2316,47,2051,43],[2316,49,2051,45],[2317,10,2052,6,"services"],[2317,18,2052,14],[2317,19,2052,15,"push"],[2317,23,2052,19],[2317,24,2052,20],[2318,12,2053,8,"type"],[2318,16,2053,12],[2318,18,2053,14],[2318,25,2053,21],[2319,12,2054,8,"keyId"],[2319,17,2054,13],[2319,19,2054,15,"resp"],[2319,23,2054,19],[2319,24,2054,20,"keyId"],[2319,29,2054,25],[2320,12,2055,8],[2320,15,2055,11,"service"],[2321,10,2056,6],[2321,11,2056,7],[2321,12,2056,8],[2322,8,2057,4],[2323,6,2058,2],[2325,6,2060,2],[2326,6,2061,2],[2326,10,2061,6,"resp"],[2326,14,2061,10],[2326,15,2061,11,"provider"],[2326,23,2061,19],[2326,27,2061,23],[2326,31,2061,27],[2326,33,2061,29],[2327,8,2062,4,"services"],[2327,16,2062,12],[2327,17,2062,13,"push"],[2327,21,2062,17],[2327,22,2062,18],[2328,10,2063,6,"type"],[2328,14,2063,10],[2328,16,2063,12],[2328,23,2063,19],[2329,10,2064,6,"id"],[2329,12,2064,8],[2329,14,2064,10],[2329,37,2064,33],[2330,10,2065,6],[2330,13,2065,9,"resp"],[2330,17,2065,13],[2330,18,2065,14,"provider"],[2331,8,2066,4],[2331,9,2066,5],[2331,10,2066,6],[2332,6,2067,2],[2333,6,2068,2],[2333,13,2068,9,"services"],[2333,21,2068,17],[2334,4,2069,0],[2334,5,2069,1],[2335,4,2069,1],[2335,11,2069,1,"_fetchServices"],[2335,25,2069,1],[2335,26,2069,1,"apply"],[2335,31,2069,1],[2335,38,2069,1,"arguments"],[2335,47,2069,1],[2336,2,2069,1],[2337,2,2071,0],[2337,11,2071,9,"mergeServices"],[2337,24,2071,22,"mergeServices"],[2337,25,2071,22],[2337,27,2071,25],[2338,4,2072,2],[2338,8,2072,6,"sx1"],[2338,11,2072,9],[2338,14,2072,12,"arguments"],[2338,23,2072,21],[2338,24,2072,22,"length"],[2338,30,2072,28],[2338,33,2072,31],[2338,34,2072,32],[2338,38,2072,36,"arguments"],[2338,47,2072,45],[2338,48,2072,46],[2338,49,2072,47],[2338,50,2072,48],[2338,55,2072,53,"undefined"],[2338,64,2072,62],[2338,67,2072,65,"arguments"],[2338,76,2072,74],[2338,77,2072,75],[2338,78,2072,76],[2338,79,2072,77],[2338,82,2072,80],[2338,84,2072,82],[2339,4,2073,2],[2339,8,2073,6,"sx2"],[2339,11,2073,9],[2339,14,2073,12,"arguments"],[2339,23,2073,21],[2339,24,2073,22,"length"],[2339,30,2073,28],[2339,33,2073,31],[2339,34,2073,32],[2339,38,2073,36,"arguments"],[2339,47,2073,45],[2339,48,2073,46],[2339,49,2073,47],[2339,50,2073,48],[2339,55,2073,53,"undefined"],[2339,64,2073,62],[2339,67,2073,65,"arguments"],[2339,76,2073,74],[2339,77,2073,75],[2339,78,2073,76],[2339,79,2073,77],[2339,82,2073,80],[2339,84,2073,82],[2340,4,2074,2],[2341,4,2075,2],[2341,11,2075,9],[2341,12,2075,10],[2341,15,2075,13,"sx1"],[2341,18,2075,16],[2341,20,2075,18],[2341,23,2075,21,"sx2"],[2341,26,2075,24],[2341,27,2075,25],[2342,2,2076,0],[2344,2,2078,0],[2345,2,2079,0],[2346,2,2080,0],[2347,2,2081,0],[2348,2,2082,0],[2349,2,2083,0],[2350,2,2084,0],[2351,2,2085,0],[2352,2,2086,0],[2353,2,2087,0],[2354,2,2088,0],[2355,2,2089,0],[2356,2,2090,0],[2357,2,2091,0],[2358,2,2092,0],[2359,2,2093,0],[2360,2,2094,0],[2361,2,2095,0],[2361,11,2095,9,"normalizeAuthn"],[2361,25,2095,23,"normalizeAuthn"],[2361,26,2095,24,"service"],[2361,33,2095,31],[2361,35,2095,33],[2362,4,2096,2],[2362,8,2096,6,"service"],[2362,15,2096,13],[2362,19,2096,17],[2362,23,2096,21],[2362,25,2096,23],[2362,32,2096,30],[2362,36,2096,34],[2363,4,2097,2],[2363,8,2097,6],[2363,9,2097,7,"service"],[2363,16,2097,14],[2363,17,2097,15],[2363,24,2097,22],[2363,25,2097,23],[2363,27,2097,25],[2364,6,2098,4],[2364,13,2098,11],[2365,8,2099,6],[2365,11,2099,9,"SERVICE_PRAGMA"],[2365,25,2099,23],[2366,8,2100,6,"type"],[2366,12,2100,10],[2366,14,2100,12,"service"],[2366,21,2100,19],[2366,22,2100,20,"type"],[2366,26,2100,24],[2367,8,2101,6,"uid"],[2367,11,2101,9],[2367,13,2101,11,"service"],[2367,20,2101,18],[2367,21,2101,19,"id"],[2367,23,2101,21],[2368,8,2102,6,"endpoint"],[2368,16,2102,14],[2368,18,2102,16,"service"],[2368,25,2102,23],[2368,26,2102,24,"authn"],[2368,31,2102,29],[2369,8,2103,6,"id"],[2369,10,2103,8],[2369,12,2103,10,"service"],[2369,19,2103,17],[2369,20,2103,18,"pid"],[2369,23,2103,21],[2370,8,2104,6,"provider"],[2370,16,2104,14],[2370,18,2104,16],[2371,10,2105,8,"address"],[2371,17,2105,15],[2371,19,2105,17,"utilAddress"],[2371,30,2105,28],[2371,31,2105,29,"withPrefix"],[2371,41,2105,39],[2371,42,2105,40,"service"],[2371,49,2105,47],[2371,50,2105,48,"addr"],[2371,54,2105,52],[2371,55,2105,53],[2372,10,2106,8,"name"],[2372,14,2106,12],[2372,16,2106,14,"service"],[2372,23,2106,21],[2372,24,2106,22,"name"],[2372,28,2106,26],[2373,10,2107,8,"icon"],[2373,14,2107,12],[2373,16,2107,14,"service"],[2373,23,2107,21],[2373,24,2107,22,"icon"],[2374,8,2108,6],[2375,6,2109,4],[2375,7,2109,5],[2376,4,2110,2],[2377,4,2111,2],[2377,12,2111,10,"service"],[2377,19,2111,17],[2377,20,2111,18],[2377,27,2111,25],[2377,28,2111,26],[2378,6,2112,4],[2378,11,2112,9],[2378,18,2112,16],[2379,8,2113,6],[2379,15,2113,13,"service"],[2379,22,2113,20],[2380,6,2114,4],[2381,8,2115,6],[2381,15,2115,13],[2381,19,2115,17],[2382,4,2116,2],[2383,2,2117,0],[2385,2,2119,0],[2386,2,2120,0],[2387,2,2121,0],[2388,2,2122,0],[2389,2,2123,0],[2390,2,2124,0],[2391,2,2125,0],[2392,2,2126,0],[2393,2,2127,0],[2394,2,2128,0],[2395,2,2129,0],[2396,2,2130,0],[2397,2,2131,0],[2398,2,2132,0],[2399,2,2133,0],[2399,11,2133,9,"normalizeAuthz"],[2399,25,2133,23,"normalizeAuthz"],[2399,26,2133,24,"service"],[2399,33,2133,31],[2399,35,2133,33],[2400,4,2134,2],[2400,8,2134,6,"service"],[2400,15,2134,13],[2400,19,2134,17],[2400,23,2134,21],[2400,25,2134,23],[2400,32,2134,30],[2400,36,2134,34],[2401,4,2135,2],[2401,8,2135,6],[2401,9,2135,7,"service"],[2401,16,2135,14],[2401,17,2135,15],[2401,24,2135,22],[2401,25,2135,23],[2401,27,2135,25],[2402,6,2136,4],[2402,13,2136,11],[2403,8,2137,6],[2403,11,2137,9,"SERVICE_PRAGMA"],[2403,25,2137,23],[2404,8,2138,6,"type"],[2404,12,2138,10],[2404,14,2138,12,"service"],[2404,21,2138,19],[2404,22,2138,20,"type"],[2404,26,2138,24],[2405,8,2139,6,"uid"],[2405,11,2139,9],[2405,13,2139,11,"service"],[2405,20,2139,18],[2405,21,2139,19,"id"],[2405,23,2139,21],[2406,8,2140,6,"endpoint"],[2406,16,2140,14],[2406,18,2140,16,"service"],[2406,25,2140,23],[2406,26,2140,24,"endpoint"],[2406,34,2140,32],[2407,8,2141,6,"method"],[2407,14,2141,12],[2407,16,2141,14,"service"],[2407,23,2141,21],[2407,24,2141,22,"method"],[2407,30,2141,28],[2408,8,2142,6,"identity"],[2408,16,2142,14],[2408,18,2142,16],[2409,10,2143,8],[2409,13,2143,11,"IDENTITY_PRAGMA"],[2409,28,2143,26],[2410,10,2144,8,"address"],[2410,17,2144,15],[2410,19,2144,17,"utilAddress"],[2410,30,2144,28],[2410,31,2144,29,"withPrefix"],[2410,41,2144,39],[2410,42,2144,40,"service"],[2410,49,2144,47],[2410,50,2144,48,"addr"],[2410,54,2144,52],[2410,55,2144,53],[2411,10,2145,8,"keyId"],[2411,15,2145,13],[2411,17,2145,15,"service"],[2411,24,2145,22],[2411,25,2145,23,"keyId"],[2412,8,2146,6],[2412,9,2146,7],[2413,8,2147,6,"params"],[2413,14,2147,12],[2413,16,2147,14,"service"],[2413,23,2147,21],[2413,24,2147,22,"params"],[2413,30,2147,28],[2414,8,2148,6,"data"],[2414,12,2148,10],[2414,14,2148,12,"service"],[2414,21,2148,19],[2414,22,2148,20,"data"],[2415,6,2149,4],[2415,7,2149,5],[2416,4,2150,2],[2417,4,2151,2],[2417,12,2151,10,"service"],[2417,19,2151,17],[2417,20,2151,18],[2417,27,2151,25],[2417,28,2151,26],[2418,6,2152,4],[2418,11,2152,9],[2418,18,2152,16],[2419,8,2153,6],[2419,15,2153,13,"service"],[2419,22,2153,20],[2420,6,2154,4],[2421,8,2155,6],[2421,15,2155,13],[2421,19,2155,17],[2422,4,2156,2],[2423,2,2157,0],[2425,2,2159,0],[2426,2,2160,0],[2427,2,2161,0],[2428,2,2162,0],[2429,2,2163,0],[2430,2,2164,0],[2431,2,2165,0],[2432,2,2166,0],[2433,2,2167,0],[2434,2,2168,0],[2435,2,2169,0],[2436,2,2170,0],[2437,2,2171,0],[2438,2,2172,0],[2439,2,2173,0],[2439,11,2173,9,"normalizePreAuthz"],[2439,28,2173,26,"normalizePreAuthz"],[2439,29,2173,27,"service"],[2439,36,2173,34],[2439,38,2173,36],[2440,4,2174,2],[2440,8,2174,6,"service"],[2440,15,2174,13],[2440,19,2174,17],[2440,23,2174,21],[2440,25,2174,23],[2440,32,2174,30],[2440,36,2174,34],[2441,4,2175,2],[2441,8,2175,6],[2441,9,2175,7,"service"],[2441,16,2175,14],[2441,17,2175,15],[2441,24,2175,22],[2441,25,2175,23],[2441,27,2175,25],[2442,6,2176,4],[2442,13,2176,11],[2443,8,2177,6],[2443,11,2177,9,"SERVICE_PRAGMA"],[2443,25,2177,23],[2444,8,2178,6,"type"],[2444,12,2178,10],[2444,14,2178,12,"service"],[2444,21,2178,19],[2444,22,2178,20,"type"],[2444,26,2178,24],[2445,8,2179,6,"uid"],[2445,11,2179,9],[2445,13,2179,11,"service"],[2445,20,2179,18],[2445,21,2179,19,"id"],[2445,23,2179,21],[2446,8,2180,6,"endpoint"],[2446,16,2180,14],[2446,18,2180,16,"service"],[2446,25,2180,23],[2446,26,2180,24,"endpoint"],[2446,34,2180,32],[2447,8,2181,6,"method"],[2447,14,2181,12],[2447,16,2181,14,"service"],[2447,23,2181,21],[2447,24,2181,22,"method"],[2447,30,2181,28],[2448,8,2182,6,"identity"],[2448,16,2182,14],[2448,18,2182,16],[2449,10,2183,8],[2449,13,2183,11,"IDENTITY_PRAGMA"],[2449,28,2183,26],[2450,10,2184,8,"address"],[2450,17,2184,15],[2450,19,2184,17,"utilAddress"],[2450,30,2184,28],[2450,31,2184,29,"withPrefix"],[2450,41,2184,39],[2450,42,2184,40,"service"],[2450,49,2184,47],[2450,50,2184,48,"addr"],[2450,54,2184,52],[2450,55,2184,53],[2451,10,2185,8,"keyId"],[2451,15,2185,13],[2451,17,2185,15,"service"],[2451,24,2185,22],[2451,25,2185,23,"keyId"],[2452,8,2186,6],[2452,9,2186,7],[2453,8,2187,6,"params"],[2453,14,2187,12],[2453,16,2187,14,"service"],[2453,23,2187,21],[2453,24,2187,22,"params"],[2453,30,2187,28],[2454,8,2188,6,"data"],[2454,12,2188,10],[2454,14,2188,12,"service"],[2454,21,2188,19],[2454,22,2188,20,"data"],[2455,6,2189,4],[2455,7,2189,5],[2456,4,2190,2],[2457,4,2191,2],[2457,12,2191,10,"service"],[2457,19,2191,17],[2457,20,2191,18],[2457,27,2191,25],[2457,28,2191,26],[2458,6,2192,4],[2458,11,2192,9],[2458,18,2192,16],[2459,8,2193,6],[2459,15,2193,13,"service"],[2459,22,2193,20],[2460,6,2194,4],[2461,8,2195,6],[2461,15,2195,13],[2461,19,2195,17],[2462,4,2196,2],[2463,2,2197,0],[2465,2,2199,0],[2466,2,2200,0],[2467,2,2201,0],[2468,2,2202,0],[2469,2,2203,0],[2470,2,2204,0],[2471,2,2205,0],[2472,2,2206,0],[2473,2,2207,0],[2473,11,2207,9,"normalizeFrame"],[2473,25,2207,23,"normalizeFrame"],[2473,26,2207,24,"service"],[2473,33,2207,31],[2473,35,2207,33],[2474,4,2208,2],[2474,8,2208,6,"service"],[2474,15,2208,13],[2474,19,2208,17],[2474,23,2208,21],[2474,25,2208,23],[2474,32,2208,30],[2474,36,2208,34],[2475,4,2209,2],[2475,8,2209,6],[2475,9,2209,7,"service"],[2475,16,2209,14],[2475,17,2209,15],[2475,24,2209,22],[2475,25,2209,23],[2475,27,2209,25],[2476,6,2210,4],[2476,13,2210,11],[2477,8,2211,6,"old"],[2477,11,2211,9],[2477,13,2211,11,"service"],[2477,20,2211,18],[2478,8,2212,6],[2478,11,2212,9,"SERVICE_PRAGMA"],[2478,25,2212,23],[2479,8,2213,6,"type"],[2479,12,2213,10],[2479,14,2213,12],[2479,21,2213,19],[2480,8,2214,6,"endpoint"],[2480,16,2214,14],[2480,18,2214,16,"service"],[2480,25,2214,23],[2480,26,2214,24,"endpoint"],[2480,34,2214,32],[2481,8,2215,6,"params"],[2481,14,2215,12],[2481,16,2215,14,"service"],[2481,23,2215,21],[2481,24,2215,22,"params"],[2481,30,2215,28],[2481,34,2215,32],[2481,35,2215,33],[2481,36,2215,34],[2482,8,2216,6,"data"],[2482,12,2216,10],[2482,14,2216,12,"service"],[2482,21,2216,19],[2482,22,2216,20,"data"],[2482,26,2216,24],[2482,30,2216,28],[2482,31,2216,29],[2483,6,2217,4],[2483,7,2217,5],[2484,4,2218,2],[2485,4,2219,2],[2485,12,2219,10,"service"],[2485,19,2219,17],[2485,20,2219,18],[2485,27,2219,25],[2485,28,2219,26],[2486,6,2220,4],[2486,11,2220,9],[2486,18,2220,16],[2487,8,2221,6],[2487,15,2221,13,"service"],[2487,22,2221,20],[2488,6,2222,4],[2489,8,2223,6],[2489,15,2223,13],[2489,19,2223,17],[2490,4,2224,2],[2491,2,2225,0],[2493,2,2227,0],[2494,2,2228,0],[2495,2,2229,0],[2496,2,2230,0],[2497,2,2231,0],[2498,2,2232,0],[2499,2,2233,0],[2500,2,2234,0],[2501,2,2235,0],[2502,2,2236,0],[2502,11,2236,9,"normalizeBackChannelRpc"],[2502,34,2236,32,"normalizeBackChannelRpc"],[2502,35,2236,33,"service"],[2502,42,2236,40],[2502,44,2236,42],[2503,4,2237,2],[2503,8,2237,6,"service"],[2503,15,2237,13],[2503,19,2237,17],[2503,23,2237,21],[2503,25,2237,23],[2503,32,2237,30],[2503,36,2237,34],[2504,4,2238,2],[2504,8,2238,6],[2504,9,2238,7,"service"],[2504,16,2238,14],[2504,17,2238,15],[2504,24,2238,22],[2504,25,2238,23],[2504,27,2238,25],[2505,6,2239,4],[2505,13,2239,11],[2506,8,2240,6],[2506,11,2240,9,"SERVICE_PRAGMA"],[2506,25,2240,23],[2507,8,2241,6,"type"],[2507,12,2241,10],[2507,14,2241,12],[2507,32,2241,30],[2508,8,2242,6,"endpoint"],[2508,16,2242,14],[2508,18,2242,16,"service"],[2508,25,2242,23],[2508,26,2242,24,"endpoint"],[2508,34,2242,32],[2509,8,2243,6,"method"],[2509,14,2243,12],[2509,16,2243,14,"service"],[2509,23,2243,21],[2509,24,2243,22,"method"],[2509,30,2243,28],[2510,8,2244,6,"params"],[2510,14,2244,12],[2510,16,2244,14,"service"],[2510,23,2244,21],[2510,24,2244,22,"params"],[2510,30,2244,28],[2510,34,2244,32],[2510,35,2244,33],[2510,36,2244,34],[2511,8,2245,6,"data"],[2511,12,2245,10],[2511,14,2245,12,"service"],[2511,21,2245,19],[2511,22,2245,20,"data"],[2511,26,2245,24],[2511,30,2245,28],[2511,31,2245,29],[2512,6,2246,4],[2512,7,2246,5],[2513,4,2247,2],[2514,4,2248,2],[2514,12,2248,10,"service"],[2514,19,2248,17],[2514,20,2248,18],[2514,27,2248,25],[2514,28,2248,26],[2515,6,2249,4],[2515,11,2249,9],[2515,18,2249,16],[2516,8,2250,6],[2516,15,2250,13,"service"],[2516,22,2250,20],[2517,6,2251,4],[2518,8,2252,6],[2518,15,2252,13],[2518,19,2252,17],[2519,4,2253,2],[2520,2,2254,0],[2522,2,2256,0],[2523,2,2257,0],[2524,2,2258,0],[2525,2,2259,0],[2526,2,2260,0],[2527,2,2261,0],[2528,2,2262,0],[2529,2,2263,0],[2530,2,2264,0],[2531,2,2265,0],[2532,2,2266,0],[2533,2,2267,0],[2534,2,2268,0],[2535,2,2269,0],[2536,2,2270,0],[2537,2,2271,0],[2538,2,2272,0],[2539,2,2273,0],[2540,2,2274,0],[2541,2,2275,0],[2542,2,2276,0],[2543,2,2277,0],[2544,2,2278,0],[2545,2,2279,0],[2546,2,2280,0],[2547,2,2281,0],[2548,2,2282,0],[2549,2,2283,0],[2550,2,2284,0],[2551,2,2285,0],[2552,2,2286,0],[2553,2,2287,0],[2554,2,2288,0],[2555,2,2289,0],[2556,2,2290,0],[2557,2,2291,0],[2558,2,2292,0],[2559,2,2293,0],[2560,2,2294,0],[2561,2,2295,0],[2561,11,2295,9,"normalizeOpenId"],[2561,26,2295,24,"normalizeOpenId"],[2561,27,2295,25,"service"],[2561,34,2295,32],[2561,36,2295,34],[2562,4,2296,2],[2562,8,2296,6,"service"],[2562,15,2296,13],[2562,19,2296,17],[2562,23,2296,21],[2562,25,2296,23],[2562,32,2296,30],[2562,36,2296,34],[2563,4,2297,2],[2563,12,2297,10,"service"],[2563,19,2297,17],[2563,20,2297,18],[2563,27,2297,25],[2563,28,2297,26],[2564,6,2298,4],[2564,11,2298,9],[2564,18,2298,16],[2565,8,2299,6],[2565,15,2299,13,"service"],[2565,22,2299,20],[2566,6,2300,4],[2567,8,2301,6],[2567,15,2301,13],[2567,19,2301,17],[2568,4,2302,2],[2569,2,2303,0],[2571,2,2305,0],[2572,2,2306,0],[2573,2,2307,0],[2574,2,2308,0],[2575,2,2309,0],[2576,2,2310,0],[2577,2,2311,0],[2578,2,2312,0],[2579,2,2313,0],[2580,2,2314,0],[2581,2,2315,0],[2582,2,2316,0],[2582,11,2316,9,"normalizeUserSignature"],[2582,33,2316,31,"normalizeUserSignature"],[2582,34,2316,32,"service"],[2582,41,2316,39],[2582,43,2316,41],[2583,4,2317,2],[2583,8,2317,6,"service"],[2583,15,2317,13],[2583,19,2317,17],[2583,23,2317,21],[2583,25,2317,23],[2583,32,2317,30],[2583,36,2317,34],[2584,4,2318,2],[2584,8,2318,6],[2584,9,2318,7,"service"],[2584,16,2318,14],[2584,17,2318,15],[2584,24,2318,22],[2584,25,2318,23],[2584,27,2318,25],[2585,6,2319,4],[2585,12,2319,10],[2585,16,2319,14,"Error"],[2585,21,2319,19],[2585,22,2319,20],[2585,54,2319,52],[2585,55,2319,53],[2586,4,2320,2],[2587,4,2321,2],[2587,12,2321,10,"service"],[2587,19,2321,17],[2587,20,2321,18],[2587,27,2321,25],[2587,28,2321,26],[2588,6,2322,4],[2588,11,2322,9],[2588,18,2322,16],[2589,8,2323,6],[2589,15,2323,13,"service"],[2589,22,2323,20],[2590,6,2324,4],[2591,8,2325,6],[2591,15,2325,13],[2591,19,2325,17],[2592,4,2326,2],[2593,2,2327,0],[2595,2,2329,0],[2596,2,2330,0],[2597,2,2331,0],[2598,2,2332,0],[2599,2,2333,0],[2600,2,2334,0],[2601,2,2335,0],[2602,2,2336,0],[2603,2,2337,0],[2604,2,2338,0],[2604,11,2338,9,"normalizeLocalView"],[2604,29,2338,27,"normalizeLocalView"],[2604,30,2338,28,"resp"],[2604,34,2338,32],[2604,36,2338,34],[2605,4,2339,2],[2605,8,2339,6,"resp"],[2605,12,2339,10],[2605,16,2339,14],[2605,20,2339,18],[2605,22,2339,20],[2605,29,2339,27],[2605,33,2339,31],[2606,4,2340,2],[2606,8,2340,6,"resp"],[2606,12,2340,10],[2606,13,2340,11,"method"],[2606,19,2340,17],[2606,23,2340,21],[2606,27,2340,25],[2606,29,2340,27],[2607,6,2341,4,"resp"],[2607,10,2341,8],[2607,13,2341,11],[2608,8,2342,6],[2608,11,2342,9,"resp"],[2608,15,2342,13],[2609,8,2343,6,"type"],[2609,12,2343,10],[2609,14,2343,12],[2609,26,2343,24],[2610,8,2344,6,"method"],[2610,14,2344,12],[2610,16,2344,14],[2611,6,2345,4],[2611,7,2345,5],[2612,4,2346,2],[2613,4,2347,2],[2613,8,2347,6],[2613,9,2347,7,"resp"],[2613,13,2347,11],[2613,14,2347,12],[2613,21,2347,19],[2613,22,2347,20],[2613,24,2347,22],[2614,6,2348,4],[2614,13,2348,11],[2615,8,2349,6],[2615,11,2349,9,"SERVICE_PRAGMA"],[2615,25,2349,23],[2616,8,2350,6,"type"],[2616,12,2350,10],[2616,14,2350,12,"resp"],[2616,18,2350,16],[2616,19,2350,17,"type"],[2616,23,2350,21],[2616,27,2350,25],[2616,39,2350,37],[2617,8,2351,6,"method"],[2617,14,2351,12],[2617,16,2351,14,"resp"],[2617,20,2351,18],[2617,21,2351,19,"method"],[2617,27,2351,25],[2618,8,2352,6,"endpoint"],[2618,16,2352,14],[2618,18,2352,16,"resp"],[2618,22,2352,20],[2618,23,2352,21,"endpoint"],[2618,31,2352,29],[2619,8,2353,6,"data"],[2619,12,2353,10],[2619,14,2353,12,"resp"],[2619,18,2353,16],[2619,19,2353,17,"data"],[2619,23,2353,21],[2619,27,2353,25],[2619,28,2353,26],[2619,29,2353,27],[2620,8,2354,6,"params"],[2620,14,2354,12],[2620,16,2354,14,"resp"],[2620,20,2354,18],[2620,21,2354,19,"params"],[2620,27,2354,25],[2620,31,2354,29],[2620,32,2354,30],[2621,6,2355,4],[2621,7,2355,5],[2622,4,2356,2],[2623,4,2357,2],[2623,12,2357,10,"resp"],[2623,16,2357,14],[2623,17,2357,15],[2623,24,2357,22],[2623,25,2357,23],[2624,6,2358,4],[2624,11,2358,9],[2624,18,2358,16],[2625,8,2359,6],[2625,15,2359,13,"resp"],[2625,19,2359,17],[2626,6,2360,4],[2627,8,2361,6],[2627,15,2361,13],[2627,19,2361,17],[2628,4,2362,2],[2629,2,2363,0],[2631,2,2365,0],[2632,2,2366,0],[2633,2,2367,0],[2634,2,2368,0],[2635,2,2369,0],[2636,2,2370,0],[2637,2,2371,0],[2638,2,2372,0],[2639,2,2373,0],[2640,2,2374,0],[2641,2,2375,0],[2642,2,2376,0],[2643,2,2377,0],[2645,2,2379,0],[2645,11,2379,9,"normalizeAccountProof"],[2645,32,2379,30,"normalizeAccountProof"],[2645,33,2379,31,"service"],[2645,40,2379,38],[2645,42,2379,40],[2646,4,2380,2],[2646,8,2380,6,"service"],[2646,15,2380,13],[2646,19,2380,17],[2646,23,2380,21],[2646,25,2380,23],[2646,32,2380,30],[2646,36,2380,34],[2647,4,2381,2],[2647,8,2381,6],[2647,9,2381,7,"service"],[2647,16,2381,14],[2647,17,2381,15],[2647,24,2381,22],[2647,25,2381,23],[2647,27,2381,25],[2648,6,2382,4],[2648,12,2382,10],[2648,16,2382,14,"Error"],[2648,21,2382,19],[2648,22,2382,20],[2648,75,2382,73],[2648,76,2382,74],[2649,4,2383,2],[2650,4,2384,2],[2650,12,2384,10,"service"],[2650,19,2384,17],[2650,20,2384,18],[2650,27,2384,25],[2650,28,2384,26],[2651,6,2385,4],[2651,11,2385,9],[2651,18,2385,16],[2652,8,2386,6],[2652,15,2386,13,"service"],[2652,22,2386,20],[2653,6,2387,4],[2654,8,2388,6],[2654,15,2388,13],[2654,19,2388,17],[2655,4,2389,2],[2656,2,2390,0],[2658,2,2392,0],[2659,2,2393,0],[2660,2,2394,0],[2661,2,2395,0],[2662,2,2396,0],[2663,2,2397,0],[2664,2,2398,0],[2665,2,2399,0],[2666,2,2400,0],[2667,2,2401,0],[2668,2,2402,0],[2669,2,2403,0],[2669,11,2403,9,"normalizeAuthnRefresh"],[2669,32,2403,30,"normalizeAuthnRefresh"],[2669,33,2403,31,"service"],[2669,40,2403,38],[2669,42,2403,40],[2670,4,2404,2],[2670,8,2404,6,"service"],[2670,15,2404,13],[2670,19,2404,17],[2670,23,2404,21],[2670,25,2404,23],[2670,32,2404,30],[2670,36,2404,34],[2671,4,2405,2],[2671,8,2405,6],[2671,9,2405,7,"service"],[2671,16,2405,14],[2671,17,2405,15],[2671,24,2405,22],[2671,25,2405,23],[2671,27,2405,25],[2672,6,2406,4],[2672,12,2406,10],[2672,16,2406,14,"Error"],[2672,21,2406,19],[2672,22,2406,20],[2672,53,2406,51],[2672,54,2406,52],[2673,4,2407,2],[2674,4,2408,2],[2674,12,2408,10,"service"],[2674,19,2408,17],[2674,20,2408,18],[2674,27,2408,25],[2674,28,2408,26],[2675,6,2409,4],[2675,11,2409,9],[2675,18,2409,16],[2676,8,2410,6],[2676,15,2410,13,"service"],[2676,22,2410,20],[2677,6,2411,4],[2678,8,2412,6],[2678,15,2412,13],[2678,19,2412,17],[2679,4,2413,2],[2680,2,2414,0],[2681,2,2416,0],[2681,11,2416,9,"normalizeServices"],[2681,28,2416,26,"normalizeServices"],[2681,29,2416,27,"services"],[2681,37,2416,35],[2681,39,2416,37,"data"],[2681,43,2416,41],[2681,45,2416,43],[2682,4,2417,2],[2682,11,2417,9,"services"],[2682,19,2417,17],[2682,20,2417,18,"map"],[2682,23,2417,21],[2682,24,2417,22,"service"],[2682,31,2417,29],[2682,35,2417,33,"normalizeService"],[2682,51,2417,49],[2682,52,2417,50,"service"],[2682,59,2417,57],[2682,61,2417,59,"data"],[2682,65,2417,63],[2682,66,2417,64],[2682,67,2417,65],[2682,68,2417,66,"filter"],[2682,74,2417,72],[2682,75,2417,73,"Boolean"],[2682,82,2417,80],[2682,83,2417,81],[2683,2,2418,0],[2684,2,2419,0],[2684,6,2419,6,"serviceNormalizers"],[2684,24,2419,24],[2684,27,2419,27],[2685,4,2420,2],[2685,22,2420,20],[2685,24,2420,22,"normalizeBackChannelRpc"],[2685,47,2420,45],[2686,4,2421,2],[2686,15,2421,13],[2686,17,2421,15,"normalizePreAuthz"],[2686,34,2421,32],[2687,4,2422,2,"authz"],[2687,9,2422,7],[2687,11,2422,9,"normalizeAuthz"],[2687,25,2422,23],[2688,4,2423,2,"authn"],[2688,9,2423,7],[2688,11,2423,9,"normalizeAuthn"],[2688,25,2423,23],[2689,4,2424,2,"frame"],[2689,9,2424,7],[2689,11,2424,9,"normalizeFrame"],[2689,25,2424,23],[2690,4,2425,2],[2690,13,2425,11],[2690,15,2425,13,"normalizeOpenId"],[2690,30,2425,28],[2691,4,2426,2],[2691,20,2426,18],[2691,22,2426,20,"normalizeUserSignature"],[2691,44,2426,42],[2692,4,2427,2],[2692,16,2427,14],[2692,18,2427,16,"normalizeLocalView"],[2692,36,2427,34],[2693,4,2428,2],[2693,19,2428,17],[2693,21,2428,19,"normalizeAccountProof"],[2693,42,2428,40],[2694,4,2429,2],[2694,19,2429,17],[2694,21,2429,19,"normalizeAuthnRefresh"],[2695,2,2430,0],[2695,3,2430,1],[2696,2,2431,0],[2696,11,2431,9,"normalizeService"],[2696,27,2431,25,"normalizeService"],[2696,28,2431,26,"service"],[2696,35,2431,33],[2696,37,2431,35,"data"],[2696,41,2431,39],[2696,43,2431,41],[2697,4,2432,2],[2697,8,2432,6],[2698,6,2433,4],[2698,10,2433,8,"normalized"],[2698,20,2433,18],[2698,23,2433,21,"serviceNormalizers"],[2698,41,2433,39],[2698,42,2433,40,"service"],[2698,49,2433,47],[2698,50,2433,48,"type"],[2698,54,2433,52],[2698,55,2433,53],[2698,56,2433,54,"service"],[2698,63,2433,61],[2698,65,2433,63,"data"],[2698,69,2433,67],[2698,70,2433,68],[2699,6,2434,4],[2699,13,2434,11,"normalized"],[2699,23,2434,21],[2700,4,2435,2],[2700,5,2435,3],[2700,6,2435,4],[2700,13,2435,11,"error"],[2700,18,2435,16],[2700,20,2435,18],[2701,6,2436,4,"console"],[2701,13,2436,11],[2701,14,2436,12,"error"],[2701,19,2436,17],[2701,20,2436,18],[2701,54,2436,52,"service"],[2701,61,2436,59],[2701,62,2436,60,"type"],[2701,66,2436,64],[2701,69,2436,67],[2701,71,2436,69,"service"],[2701,78,2436,76],[2701,80,2436,78,"error"],[2701,85,2436,83],[2701,86,2436,84],[2702,6,2437,4],[2702,13,2437,11,"service"],[2702,20,2437,18],[2703,4,2438,2],[2704,2,2439,0],[2705,2,2441,0],[2705,11,2441,9,"serviceOfType"],[2705,24,2441,22,"serviceOfType"],[2705,25,2441,22],[2705,27,2441,25],[2706,4,2442,2],[2706,8,2442,6,"services"],[2706,16,2442,14],[2706,19,2442,17,"arguments"],[2706,28,2442,26],[2706,29,2442,27,"length"],[2706,35,2442,33],[2706,38,2442,36],[2706,39,2442,37],[2706,43,2442,41,"arguments"],[2706,52,2442,50],[2706,53,2442,51],[2706,54,2442,52],[2706,55,2442,53],[2706,60,2442,58,"undefined"],[2706,69,2442,67],[2706,72,2442,70,"arguments"],[2706,81,2442,79],[2706,82,2442,80],[2706,83,2442,81],[2706,84,2442,82],[2706,87,2442,85],[2706,89,2442,87],[2707,4,2443,2],[2707,8,2443,6,"type"],[2707,12,2443,10],[2707,15,2443,13,"arguments"],[2707,24,2443,22],[2707,25,2443,23,"length"],[2707,31,2443,29],[2707,34,2443,32],[2707,35,2443,33],[2707,38,2443,36,"arguments"],[2707,47,2443,45],[2707,48,2443,46],[2707,49,2443,47],[2707,50,2443,48],[2707,53,2443,51,"undefined"],[2707,62,2443,60],[2708,4,2444,2],[2709,4,2445,2],[2709,11,2445,9,"services"],[2709,19,2445,17],[2709,20,2445,18,"reduce"],[2709,26,2445,24],[2709,27,2445,25],[2709,28,2445,26,"mostRecent"],[2709,38,2445,36],[2709,40,2445,38,"service"],[2709,47,2445,45],[2709,52,2445,50,"service"],[2709,59,2445,57],[2709,60,2445,58,"type"],[2709,64,2445,62],[2709,69,2445,67,"type"],[2709,73,2445,71],[2709,76,2445,74],[2709,77,2445,75,"mostRecent"],[2709,87,2445,85],[2709,91,2445,89,"semver__namespace"],[2709,108,2445,106],[2709,109,2445,107,"compare"],[2709,116,2445,114],[2709,117,2445,115,"service"],[2709,124,2445,122],[2709,125,2445,123,"f_vsn"],[2709,130,2445,128],[2709,132,2445,130,"mostRecent"],[2709,142,2445,140],[2709,143,2445,141,"f_vsn"],[2709,148,2445,146],[2709,149,2445,147],[2709,152,2445,150],[2709,153,2445,151],[2709,156,2445,154,"service"],[2709,163,2445,161],[2709,166,2445,164,"mostRecent"],[2709,176,2445,174],[2709,179,2445,177,"mostRecent"],[2709,189,2445,187],[2709,191,2445,189],[2709,195,2445,193],[2709,196,2445,194],[2710,2,2446,0],[2711,2,2448,0],[2711,11,2448,9,"deriveCompositeId"],[2711,28,2448,26,"deriveCompositeId"],[2711,29,2448,27,"authn"],[2711,34,2448,32],[2711,36,2448,34],[2712,4,2449,2],[2712,11,2449,9,"rlp__namespace"],[2712,25,2449,23],[2712,26,2449,24,"encode"],[2712,32,2449,30],[2712,33,2449,31],[2712,34,2449,32,"authn"],[2712,39,2449,37],[2712,40,2449,38,"provider"],[2712,48,2449,46],[2712,50,2449,48,"address"],[2712,57,2449,55],[2712,61,2449,59,"authn"],[2712,66,2449,64],[2712,67,2449,65,"provider"],[2712,75,2449,73],[2712,77,2449,75,"name"],[2712,81,2449,79],[2712,85,2449,83],[2712,98,2449,96],[2712,100,2449,98,"authn"],[2712,105,2449,103],[2712,106,2449,104,"id"],[2712,108,2449,106],[2712,109,2449,107],[2712,110,2449,108],[2712,111,2449,109,"toString"],[2712,119,2449,117],[2712,120,2449,118],[2712,125,2449,123],[2712,126,2449,124],[2713,2,2450,0],[2714,2,2451,0],[2714,11,2451,9,"normalizeData"],[2714,24,2451,22,"normalizeData"],[2714,25,2451,23,"data"],[2714,29,2451,27],[2714,31,2451,29],[2715,4,2452,2,"data"],[2715,8,2452,6],[2715,9,2452,7,"addr"],[2715,13,2452,11],[2715,16,2452,14,"data"],[2715,20,2452,18],[2715,21,2452,19,"addr"],[2715,25,2452,23],[2715,28,2452,26,"utilAddress"],[2715,39,2452,37],[2715,40,2452,38,"withPrefix"],[2715,50,2452,48],[2715,51,2452,49,"data"],[2715,55,2452,53],[2715,56,2452,54,"addr"],[2715,60,2452,58],[2715,61,2452,59],[2715,64,2452,62],[2715,68,2452,66],[2716,4,2453,2,"data"],[2716,8,2453,6],[2716,9,2453,7,"paddr"],[2716,14,2453,12],[2716,17,2453,15,"data"],[2716,21,2453,19],[2716,22,2453,20,"paddr"],[2716,27,2453,25],[2716,30,2453,28,"utilAddress"],[2716,41,2453,39],[2716,42,2453,40,"withPrefix"],[2716,52,2453,50],[2716,53,2453,51,"data"],[2716,57,2453,55],[2716,58,2453,56,"paddr"],[2716,63,2453,61],[2716,64,2453,62],[2716,67,2453,65],[2716,71,2453,69],[2717,4,2454,2],[2717,11,2454,9,"data"],[2717,15,2454,13],[2718,2,2455,0],[2719,2,2455,1],[2719,11,2456,15,"buildUser"],[2719,20,2456,24,"buildUser"],[2719,21,2456,24,"_x49"],[2719,25,2456,24],[2720,4,2456,24],[2720,11,2456,24,"_buildUser"],[2720,21,2456,24],[2720,22,2456,24,"apply"],[2720,27,2456,24],[2720,34,2456,24,"arguments"],[2720,43,2456,24],[2721,2,2456,24],[2722,2,2456,24],[2722,11,2456,24,"_buildUser"],[2722,22,2456,24],[2723,4,2456,24,"_buildUser"],[2723,14,2456,24],[2723,17,2456,24,"_asyncToGenerator"],[2723,34,2456,24],[2723,35,2456,0],[2723,46,2456,25,"data"],[2723,50,2456,29],[2723,52,2456,31],[2724,6,2457,2,"data"],[2724,10,2457,6],[2724,13,2457,9,"normalizeData"],[2724,26,2457,22],[2724,27,2457,23,"data"],[2724,31,2457,27],[2724,32,2457,28],[2725,6,2458,2],[2725,10,2458,6,"services"],[2725,18,2458,14],[2725,21,2458,17,"normalizeServices"],[2725,38,2458,34],[2725,39,2458,35,"mergeServices"],[2725,52,2458,48],[2725,53,2458,49,"data"],[2725,57,2458,53],[2725,58,2458,54,"services"],[2725,66,2458,62],[2725,70,2458,66],[2725,72,2458,68],[2725,80,2458,76,"fetchServices"],[2725,93,2458,89],[2725,94,2458,90,"data"],[2725,98,2458,94],[2725,99,2458,95,"hks"],[2725,102,2458,98],[2725,104,2458,100,"data"],[2725,108,2458,104],[2725,109,2458,105,"code"],[2725,113,2458,109],[2725,114,2458,110],[2725,115,2458,111],[2725,116,2458,112],[2726,6,2459,2],[2726,10,2459,8,"authn"],[2726,15,2459,13],[2726,18,2459,16,"serviceOfType"],[2726,31,2459,29],[2726,32,2459,30,"services"],[2726,40,2459,38],[2726,42,2459,40],[2726,49,2459,47],[2726,50,2459,48],[2727,6,2460,2],[2727,13,2460,9],[2728,8,2461,4],[2728,11,2461,7,"USER_PRAGMA"],[2728,22,2461,18],[2729,8,2462,4,"addr"],[2729,12,2462,8],[2729,14,2462,10,"utilAddress"],[2729,25,2462,21],[2729,26,2462,22,"withPrefix"],[2729,36,2462,32],[2729,37,2462,33,"data"],[2729,41,2462,37],[2729,42,2462,38,"addr"],[2729,46,2462,42],[2729,47,2462,43],[2730,8,2463,4,"cid"],[2730,11,2463,7],[2730,13,2463,9,"deriveCompositeId"],[2730,30,2463,26],[2730,31,2463,27,"authn"],[2730,36,2463,32],[2730,37,2463,33],[2731,8,2464,4,"loggedIn"],[2731,16,2464,12],[2731,18,2464,14],[2731,22,2464,18],[2732,8,2465,4,"services"],[2732,16,2465,12],[2732,18,2465,14,"services"],[2732,26,2465,22],[2733,8,2466,4,"expiresAt"],[2733,17,2466,13],[2733,19,2466,15,"data"],[2733,23,2466,19],[2733,24,2466,20,"expires"],[2734,6,2467,2],[2734,7,2467,3],[2735,4,2468,0],[2735,5,2468,1],[2736,4,2468,1],[2736,11,2468,1,"_buildUser"],[2736,21,2468,1],[2736,22,2468,1,"apply"],[2736,27,2468,1],[2736,34,2468,1,"arguments"],[2736,43,2468,1],[2737,2,2468,1],[2738,2,2470,0],[2738,6,2470,6,"FCL_WC_SERVICE_METHOD"],[2738,27,2470,27],[2738,30,2470,30],[2738,38,2470,38],[2739,2,2471,0],[2739,6,2471,6,"isServerSide"],[2739,18,2471,18],[2739,21,2471,21],[2739,28,2471,28,"window"],[2739,34,2471,34],[2739,39,2471,39],[2739,50,2471,50],[2741,2,2473,0],[2742,2,2474,0],[2742,11,2474,9,"checkWalletConnectEnabled"],[2742,36,2474,34,"checkWalletConnectEnabled"],[2742,37,2474,34],[2742,39,2474,37],[2743,4,2475,2],[2743,8,2475,6,"isServerSide"],[2743,20,2475,18],[2743,22,2475,20],[2744,4,2476,2],[2744,8,2476,8,"serviceRegistry"],[2744,23,2476,23],[2744,26,2476,26,"getServiceRegistry"],[2744,44,2476,44],[2744,45,2476,45],[2744,46,2476,46],[2745,4,2477,2],[2745,8,2477,8,"strategies"],[2745,18,2477,18],[2745,21,2477,21,"serviceRegistry"],[2745,36,2477,36],[2745,37,2477,37,"getStrategies"],[2745,50,2477,50],[2745,51,2477,51],[2745,52,2477,52],[2746,4,2478,2],[2746,8,2478,6],[2746,9,2478,7,"strategies"],[2746,19,2478,17],[2746,20,2478,18,"includes"],[2746,28,2478,26],[2746,29,2478,27,"FCL_WC_SERVICE_METHOD"],[2746,50,2478,48],[2746,51,2478,49],[2746,53,2478,51],[2747,6,2479,4,"logger__namespace"],[2747,23,2479,21],[2747,24,2479,22,"log"],[2747,27,2479,25],[2747,28,2479,26],[2748,8,2480,6,"title"],[2748,13,2480,11],[2748,15,2480,13],[2748,49,2480,47],[2749,8,2481,6,"level"],[2749,13,2481,11],[2749,15,2481,13,"logger__namespace"],[2749,32,2481,30],[2749,33,2481,31,"LEVELS"],[2749,39,2481,37],[2749,40,2481,38,"error"],[2749,45,2481,43],[2750,8,2482,6,"message"],[2750,15,2482,13],[2750,17,2482,15],[2751,6,2483,4],[2751,7,2483,5],[2751,8,2483,6],[2752,4,2484,2],[2753,2,2485,0],[2754,2,2487,0],[2754,6,2487,6,"AbortController"],[2754,21,2487,21],[2754,24,2487,24,"globalThis"],[2754,34,2487,34],[2754,35,2487,35,"AbortController"],[2754,50,2487,50],[2754,54,2487,54,"require"],[2754,61,2487,61],[2754,62,2487,61,"_dependencyMap"],[2754,76,2487,61],[2754,100,2487,80],[2754,101,2487,81],[2755,2,2488,0],[2755,6,2488,6,"execStrategy"],[2755,18,2488,18],[2756,4,2488,18],[2756,8,2488,18,"_ref18"],[2756,14,2488,18],[2756,17,2488,18,"_asyncToGenerator"],[2756,34,2488,18],[2756,35,2488,21],[2756,46,2488,27,"_ref"],[2756,50,2488,31],[2756,52,2488,35],[2757,6,2489,2],[2757,10,2490,4,"service"],[2757,17,2490,11],[2757,20,2497,6,"_ref"],[2757,24,2497,10],[2757,25,2490,4,"service"],[2757,32,2490,11],[2758,8,2491,4,"body"],[2758,12,2491,8],[2758,15,2497,6,"_ref"],[2758,19,2497,10],[2758,20,2491,4,"body"],[2758,24,2491,8],[2759,8,2492,4,"config"],[2759,14,2492,10],[2759,17,2497,6,"_ref"],[2759,21,2497,10],[2759,22,2492,4,"config"],[2759,28,2492,10],[2760,8,2493,4,"abortSignal"],[2760,19,2493,15],[2760,22,2497,6,"_ref"],[2760,26,2497,10],[2760,27,2493,4,"abortSignal"],[2760,38,2493,15],[2761,8,2494,4,"customRpc"],[2761,17,2494,13],[2761,20,2497,6,"_ref"],[2761,24,2497,10],[2761,25,2494,4,"customRpc"],[2761,34,2494,13],[2762,8,2495,4,"user"],[2762,12,2495,8],[2762,15,2497,6,"_ref"],[2762,19,2497,10],[2762,20,2495,4,"user"],[2762,24,2495,8],[2763,8,2496,4,"opts"],[2763,12,2496,8],[2763,15,2497,6,"_ref"],[2763,19,2497,10],[2763,20,2496,4,"opts"],[2763,24,2496,8],[2764,6,2498,2],[2764,10,2498,8,"strategy"],[2764,18,2498,16],[2764,21,2498,19,"getServiceRegistry"],[2764,39,2498,37],[2764,40,2498,38],[2764,41,2498,39],[2764,42,2498,40,"getStrategy"],[2764,53,2498,51],[2764,54,2498,52,"service"],[2764,61,2498,59],[2764,62,2498,60,"method"],[2764,68,2498,66],[2764,69,2498,67],[2765,6,2499,2],[2765,13,2499,9,"strategy"],[2765,21,2499,17],[2765,22,2499,18],[2766,8,2500,4,"service"],[2766,15,2500,11],[2767,8,2501,4,"body"],[2767,12,2501,8],[2768,8,2502,4,"config"],[2768,14,2502,10],[2769,8,2503,4,"abortSignal"],[2769,19,2503,15],[2770,8,2504,4,"customRpc"],[2770,17,2504,13],[2771,8,2505,4,"opts"],[2771,12,2505,8],[2772,8,2506,4,"user"],[2773,6,2507,2],[2773,7,2507,3],[2773,8,2507,4],[2774,4,2508,0],[2774,5,2508,1],[2775,4,2508,1],[2775,20,2488,6,"execStrategy"],[2775,32,2488,18,"execStrategy"],[2775,33,2488,18,"_x50"],[2775,37,2488,18],[2776,6,2488,18],[2776,13,2488,18,"_ref18"],[2776,19,2488,18],[2776,20,2488,18,"apply"],[2776,25,2488,18],[2776,32,2488,18,"arguments"],[2776,41,2488,18],[2777,4,2488,18],[2778,2,2488,18],[2778,5,2508,1],[2779,2,2508,2],[2779,11,2509,15,"execService"],[2779,22,2509,26,"execService"],[2779,23,2509,26,"_x51"],[2779,27,2509,26],[2780,4,2509,26],[2780,11,2509,26,"_execService"],[2780,23,2509,26],[2780,24,2509,26,"apply"],[2780,29,2509,26],[2780,36,2509,26,"arguments"],[2780,45,2509,26],[2781,2,2509,26],[2781,4,2568,0],[2782,2,2569,0],[2783,2,2570,0],[2784,2,2571,0],[2785,2,2572,0],[2786,2,2573,0],[2787,2,2574,0],[2788,2,2574,0],[2788,11,2574,0,"_execService"],[2788,24,2574,0],[2789,4,2574,0,"_execService"],[2789,16,2574,0],[2789,19,2574,0,"_asyncToGenerator"],[2789,36,2574,0],[2789,37,2509,0],[2789,48,2509,27,"_ref2"],[2789,53,2509,32],[2789,55,2509,34],[2790,6,2510,2],[2790,10,2511,4,"service"],[2790,17,2511,11],[2790,20,2519,6,"_ref2"],[2790,25,2519,11],[2790,26,2511,4,"service"],[2790,33,2511,11],[2791,8,2511,11,"_ref2$msg"],[2791,17,2511,11],[2791,20,2519,6,"_ref2"],[2791,25,2519,11],[2791,26,2512,4,"msg"],[2791,29,2512,7],[2792,8,2512,4,"msg"],[2792,11,2512,7],[2792,14,2512,7,"_ref2$msg"],[2792,23,2512,7],[2792,37,2512,10],[2792,38,2512,11],[2792,39,2512,12],[2792,42,2512,12,"_ref2$msg"],[2792,51,2512,12],[2793,8,2512,12,"_ref2$config"],[2793,20,2512,12],[2793,23,2519,6,"_ref2"],[2793,28,2519,11],[2793,29,2513,4,"config"],[2793,35,2513,10],[2794,8,2513,4,"config"],[2794,14,2513,10],[2794,17,2513,10,"_ref2$config"],[2794,29,2513,10],[2794,43,2513,13],[2794,44,2513,14],[2794,45,2513,15],[2794,48,2513,15,"_ref2$config"],[2794,60,2513,15],[2795,8,2513,15,"_ref2$opts"],[2795,18,2513,15],[2795,21,2519,6,"_ref2"],[2795,26,2519,11],[2795,27,2514,4,"opts"],[2795,31,2514,8],[2796,8,2514,4,"opts"],[2796,12,2514,8],[2796,15,2514,8,"_ref2$opts"],[2796,25,2514,8],[2796,39,2514,11],[2796,40,2514,12],[2796,41,2514,13],[2796,44,2514,13,"_ref2$opts"],[2796,54,2514,13],[2797,8,2515,4,"platform"],[2797,16,2515,12],[2797,19,2519,6,"_ref2"],[2797,24,2519,11],[2797,25,2515,4,"platform"],[2797,33,2515,12],[2798,8,2515,12,"_ref2$abortSignal"],[2798,25,2515,12],[2798,28,2519,6,"_ref2"],[2798,33,2519,11],[2798,34,2516,4,"abortSignal"],[2798,45,2516,15],[2799,8,2516,4,"abortSignal"],[2799,19,2516,15],[2799,22,2516,15,"_ref2$abortSignal"],[2799,39,2516,15],[2799,53,2516,18],[2799,57,2516,22,"AbortController"],[2799,72,2516,37],[2799,73,2516,38],[2799,74,2516,39],[2799,75,2516,40,"signal"],[2799,81,2516,46],[2799,84,2516,46,"_ref2$abortSignal"],[2799,101,2516,46],[2800,8,2517,18,"_execStrategy"],[2800,21,2517,31],[2800,24,2519,6,"_ref2"],[2800,29,2519,11],[2800,30,2517,4,"execStrategy"],[2800,42,2517,16],[2801,8,2518,4,"user"],[2801,12,2518,8],[2801,15,2519,6,"_ref2"],[2801,20,2519,11],[2801,21,2518,4,"user"],[2801,25,2518,8],[2802,6,2520,2],[2803,6,2521,2,"checkWalletConnectEnabled"],[2803,31,2521,27],[2803,32,2521,28],[2803,33,2521,29],[2804,6,2522,2,"msg"],[2804,9,2522,5],[2804,10,2522,6,"data"],[2804,14,2522,10],[2804,17,2522,13,"service"],[2804,24,2522,20],[2804,25,2522,21,"data"],[2804,29,2522,25],[2805,6,2523,2],[2805,10,2523,8,"execConfig"],[2805,20,2523,18],[2805,23,2523,21],[2806,8,2524,4,"services"],[2806,16,2524,12],[2806,24,2524,20,"configLens"],[2806,34,2524,30],[2806,35,2524,31],[2806,47,2524,43],[2806,48,2524,44],[2807,8,2525,4,"app"],[2807,11,2525,7],[2807,19,2525,15,"configLens"],[2807,29,2525,25],[2807,30,2525,26],[2807,46,2525,42],[2807,47,2525,43],[2808,8,2526,4,"client"],[2808,14,2526,10],[2808,16,2526,12],[2809,10,2527,6],[2809,13,2527,9,"config"],[2809,19,2527,15],[2809,20,2527,16,"client"],[2809,26,2527,22],[2810,10,2528,6,"platform"],[2810,18,2528,14],[2811,10,2529,6,"fclVersion"],[2811,20,2529,16],[2811,22,2529,18,"VERSION"],[2811,29,2529,25],[2812,10,2530,6,"fclLibrary"],[2812,20,2530,16],[2812,22,2530,18],[2812,56,2530,52],[2813,10,2531,6,"hostname"],[2813,18,2531,14],[2813,20,2531,16,"window"],[2813,26,2531,22],[2813,28,2531,24,"location"],[2813,36,2531,32],[2813,38,2531,34,"hostname"],[2813,46,2531,42],[2813,50,2531,46],[2813,54,2531,50],[2814,10,2532,6,"network"],[2814,17,2532,13],[2814,25,2532,21,"getChainId"],[2814,35,2532,31],[2814,36,2532,32,"opts"],[2814,40,2532,36],[2815,8,2533,4],[2816,6,2534,2],[2816,7,2534,3],[2817,6,2535,2],[2817,10,2535,6],[2818,8,2536,4],[2818,12,2536,10,"res"],[2818,15,2536,13],[2818,24,2536,22],[2818,25,2536,23,"_execStrategy"],[2818,38,2536,36],[2818,42,2536,40,"execStrategy"],[2818,54,2536,52],[2818,56,2536,54],[2819,10,2537,6,"service"],[2819,17,2537,13],[2820,10,2538,6,"body"],[2820,14,2538,10],[2820,16,2538,12,"msg"],[2820,19,2538,15],[2821,10,2539,6,"config"],[2821,16,2539,12],[2821,18,2539,14,"execConfig"],[2821,28,2539,24],[2822,10,2540,6,"opts"],[2822,14,2540,10],[2823,10,2541,6,"user"],[2823,14,2541,10],[2824,10,2542,6,"abortSignal"],[2825,8,2543,4],[2825,9,2543,5],[2825,10,2543,6],[2826,8,2544,4],[2826,12,2544,8,"res"],[2826,15,2544,11],[2826,16,2544,12,"status"],[2826,22,2544,18],[2826,27,2544,23],[2826,37,2544,33],[2826,39,2544,35],[2827,10,2545,6,"utilInvariant"],[2827,23,2545,19],[2827,24,2545,20,"invariant"],[2827,33,2545,29],[2827,34,2545,30,"service"],[2827,41,2545,37],[2827,42,2545,38,"type"],[2827,46,2545,42],[2827,51,2545,47,"res"],[2827,54,2545,50],[2827,55,2545,51,"data"],[2827,59,2545,55],[2827,60,2545,56,"type"],[2827,64,2545,60],[2827,66,2545,62],[2827,118,2545,114],[2827,119,2545,115],[2828,10,2546,6],[2828,23,2546,19,"execService"],[2828,34,2546,30],[2828,35,2546,31],[2829,12,2547,8,"service"],[2829,19,2547,15],[2829,21,2547,17,"res"],[2829,24,2547,20],[2829,25,2547,21,"data"],[2829,29,2547,25],[2830,12,2548,8,"msg"],[2830,15,2548,11],[2831,12,2549,8,"config"],[2831,18,2549,14],[2831,20,2549,16,"execConfig"],[2831,30,2549,26],[2832,12,2550,8,"opts"],[2832,16,2550,12],[2833,12,2551,8,"abortSignal"],[2833,23,2551,19],[2834,12,2552,8,"platform"],[2834,20,2552,16],[2835,12,2553,8,"user"],[2836,10,2554,6],[2836,11,2554,7],[2836,12,2554,8],[2837,8,2555,4],[2837,9,2555,5],[2837,15,2555,11],[2838,10,2556,6],[2838,17,2556,13,"res"],[2838,20,2556,16],[2839,8,2557,4],[2840,6,2558,2],[2840,7,2558,3],[2840,8,2558,4],[2840,15,2558,11,"error"],[2840,20,2558,16],[2840,22,2558,18],[2841,8,2559,4,"logger"],[2841,14,2559,10],[2841,15,2559,11,"log"],[2841,18,2559,14],[2841,19,2559,15],[2842,10,2560,6,"title"],[2842,15,2560,11],[2842,17,2560,13],[2842,41,2560,37,"service"],[2842,48,2560,44],[2842,50,2560,46,"type"],[2842,54,2560,50],[2842,56,2560,52],[2843,10,2561,6,"message"],[2843,17,2561,13],[2843,19,2561,15,"error"],[2843,24,2561,20],[2844,10,2562,6,"level"],[2844,15,2562,11],[2844,17,2562,13,"logger"],[2844,23,2562,19],[2844,24,2562,20,"LEVELS"],[2844,30,2562,26],[2844,31,2562,27,"error"],[2845,8,2563,4],[2845,9,2563,5],[2845,10,2563,6],[2846,8,2564,4],[2846,14,2564,10,"error"],[2846,19,2564,15],[2847,6,2565,2],[2848,4,2566,0],[2848,5,2566,1],[2849,4,2566,1],[2849,11,2566,1,"_execService"],[2849,23,2566,1],[2849,24,2566,1,"apply"],[2849,29,2566,1],[2849,36,2566,1,"arguments"],[2849,45,2566,1],[2850,2,2566,1],[2851,2,2575,0],[2851,11,2575,9,"normalizeCompositeSignature"],[2851,38,2575,36,"normalizeCompositeSignature"],[2851,39,2575,37,"resp"],[2851,43,2575,41],[2851,45,2575,43],[2852,4,2576,2],[2852,8,2576,6,"resp"],[2852,12,2576,10],[2852,16,2576,14],[2852,20,2576,18],[2852,22,2576,20],[2852,29,2576,27],[2852,33,2576,31],[2853,4,2577,2],[2853,8,2577,6],[2853,9,2577,7,"resp"],[2853,13,2577,11],[2853,14,2577,12],[2853,21,2577,19],[2853,22,2577,20],[2853,24,2577,22],[2854,6,2578,4],[2854,13,2578,11],[2855,8,2579,6],[2855,11,2579,9,"COMPOSITE_SIGNATURE_PRAGMA"],[2855,37,2579,35],[2856,8,2580,6,"addr"],[2856,12,2580,10],[2856,14,2580,12,"utilAddress"],[2856,25,2580,23],[2856,26,2580,24,"sansPrefix"],[2856,36,2580,34],[2856,37,2580,35,"resp"],[2856,41,2580,39],[2856,42,2580,40,"addr"],[2856,46,2580,44],[2856,50,2580,48,"resp"],[2856,54,2580,52],[2856,55,2580,53,"address"],[2856,62,2580,60],[2856,63,2580,61],[2857,8,2581,6,"signature"],[2857,17,2581,15],[2857,19,2581,17,"resp"],[2857,23,2581,21],[2857,24,2581,22,"signature"],[2857,33,2581,31],[2857,37,2581,35,"resp"],[2857,41,2581,39],[2857,42,2581,40,"sig"],[2857,45,2581,43],[2858,8,2582,6,"keyId"],[2858,13,2582,11],[2858,15,2582,13,"resp"],[2858,19,2582,17],[2858,20,2582,18,"keyId"],[2859,6,2583,4],[2859,7,2583,5],[2860,4,2584,2],[2861,4,2585,2],[2861,12,2585,10,"resp"],[2861,16,2585,14],[2861,17,2585,15],[2861,24,2585,22],[2861,25,2585,23],[2862,6,2586,4],[2862,11,2586,9],[2862,18,2586,16],[2863,8,2587,6],[2863,15,2587,13,"resp"],[2863,19,2587,17],[2864,6,2588,4],[2865,8,2589,6],[2865,15,2589,13],[2865,19,2589,17],[2866,4,2590,2],[2867,2,2591,0],[2869,2,2593,0],[2870,0,2594,0],[2871,0,2595,0],[2872,0,2596,0],[2874,2,2598,0],[2874,6,2598,6,"isFn"],[2874,10,2598,10],[2874,13,2598,13,"d"],[2874,14,2598,14],[2874,18,2598,18],[2874,25,2598,25,"d"],[2874,26,2598,26],[2874,31,2598,31],[2874,41,2598,41],[2875,2,2599,0],[2875,6,2599,6,"NAME"],[2875,10,2599,10],[2875,13,2599,13],[2875,27,2599,27],[2876,2,2600,0],[2876,6,2600,6,"UPDATED"],[2876,13,2600,13],[2876,16,2600,16],[2876,38,2600,38],[2877,2,2601,0],[2877,6,2601,6,"SNAPSHOT"],[2877,14,2601,14],[2877,17,2601,17],[2877,27,2601,27],[2878,2,2602,0],[2878,6,2602,6,"SET_CURRENT_USER"],[2878,22,2602,22],[2878,25,2602,25],[2878,43,2602,43],[2879,2,2603,0],[2879,6,2603,6,"DEL_CURRENT_USER"],[2879,22,2603,22],[2879,25,2603,25],[2879,43,2603,43],[2880,2,2604,0],[2880,6,2604,6,"DATA"],[2880,10,2604,10],[2880,13,2604,13],[2881,0,2605,0],[2882,0,2606,0],[2883,0,2607,0],[2884,0,2608,0],[2885,0,2609,0],[2886,0,2610,0],[2887,0,2611,0],[2888,0,2612,0],[2888,2,2612,2],[2889,2,2613,0],[2889,6,2613,6,"getStoredUser"],[2889,19,2613,19],[2890,4,2613,19],[2890,8,2613,19,"_ref19"],[2890,14,2613,19],[2890,17,2613,19,"_asyncToGenerator"],[2890,34,2613,19],[2890,35,2613,22],[2890,46,2613,28,"storage"],[2890,53,2613,35],[2890,55,2613,39],[2891,6,2614,2],[2891,10,2614,8,"fallback"],[2891,18,2614,16],[2891,21,2614,19,"JSON"],[2891,25,2614,23],[2891,26,2614,24,"parse"],[2891,31,2614,29],[2891,32,2614,30,"DATA"],[2891,36,2614,34],[2891,37,2614,35],[2892,6,2615,2],[2892,10,2615,8,"stored"],[2892,16,2615,14],[2892,25,2615,23,"storage"],[2892,32,2615,30],[2892,33,2615,31,"get"],[2892,36,2615,34],[2892,37,2615,35,"NAME"],[2892,41,2615,39],[2892,42,2615,40],[2893,6,2616,2],[2893,10,2616,6,"stored"],[2893,16,2616,12],[2893,20,2616,16],[2893,24,2616,20],[2893,28,2616,24,"fallback"],[2893,36,2616,32],[2893,37,2616,33],[2893,44,2616,40],[2893,45,2616,41],[2893,50,2616,46,"stored"],[2893,56,2616,52],[2893,57,2616,53],[2893,64,2616,60],[2893,65,2616,61],[2893,67,2616,63],[2894,8,2617,4,"storage"],[2894,15,2617,11],[2894,16,2617,12,"removeItem"],[2894,26,2617,22],[2894,27,2617,23,"NAME"],[2894,31,2617,27],[2894,32,2617,28],[2895,8,2618,4],[2895,15,2618,11,"fallback"],[2895,23,2618,19],[2896,6,2619,2],[2897,6,2620,2],[2897,13,2620,9,"stored"],[2897,19,2620,15],[2897,23,2620,19,"fallback"],[2897,31,2620,27],[2898,4,2621,0],[2898,5,2621,1],[2899,4,2621,1],[2899,20,2613,6,"getStoredUser"],[2899,33,2613,19,"getStoredUser"],[2899,34,2613,19,"_x52"],[2899,38,2613,19],[2900,6,2613,19],[2900,13,2613,19,"_ref19"],[2900,19,2613,19],[2900,20,2613,19,"apply"],[2900,25,2613,19],[2900,32,2613,19,"arguments"],[2900,41,2613,19],[2901,4,2613,19],[2902,2,2613,19],[2902,5,2621,1],[2903,2,2622,0],[2903,6,2622,6,"makeHandlers"],[2903,18,2622,18],[2903,21,2622,21,"cfg"],[2903,24,2622,24],[2903,28,2622,28],[2904,4,2623,2],[2905,4,2624,2],[2905,8,2624,8,"getStorageProvider"],[2905,26,2624,26],[2906,6,2624,26],[2906,10,2624,26,"_ref20"],[2906,16,2624,26],[2906,19,2624,26,"_asyncToGenerator"],[2906,36,2624,26],[2906,37,2624,29],[2906,50,2624,41],[2907,8,2625,4],[2907,12,2625,8,"cfg"],[2907,15,2625,11],[2907,16,2625,12,"getStorageProvider"],[2907,34,2625,30],[2907,36,2625,32],[2907,49,2625,45,"cfg"],[2907,52,2625,48],[2907,53,2625,49,"getStorageProvider"],[2907,71,2625,67],[2907,72,2625,68],[2907,73,2625,69],[2908,8,2626,4],[2908,21,2626,17,"config"],[2908,27,2626,23],[2908,28,2626,24,"config"],[2908,34,2626,30],[2908,35,2626,31,"first"],[2908,40,2626,36],[2908,41,2626,37],[2908,42,2626,38],[2908,55,2626,51],[2908,57,2626,53],[2908,78,2626,74],[2908,79,2626,75],[2908,80,2626,76],[2909,6,2627,2],[2909,7,2627,3],[2910,6,2627,3],[2910,22,2624,8,"getStorageProvider"],[2910,40,2624,26,"getStorageProvider"],[2910,41,2624,26],[2911,8,2624,26],[2911,15,2624,26,"_ref20"],[2911,21,2624,26],[2911,22,2624,26,"apply"],[2911,27,2624,26],[2911,34,2624,26,"arguments"],[2911,43,2624,26],[2912,6,2624,26],[2913,4,2624,26],[2913,7,2627,3],[2914,4,2628,2],[2914,11,2628,9],[2915,6,2629,4],[2915,7,2629,5,"utilActor"],[2915,16,2629,14],[2915,17,2629,15,"INIT"],[2915,21,2629,19],[2916,8,2629,19],[2916,12,2629,19,"_ref21"],[2916,18,2629,19],[2916,21,2629,19,"_asyncToGenerator"],[2916,38,2629,19],[2916,39,2629,22],[2916,50,2629,28,"ctx"],[2916,53,2629,31],[2916,55,2629,35],[2917,10,2630,6],[2917,14,2630,10],[2917,21,2630,17,"window"],[2917,27,2630,23],[2917,32,2630,28],[2917,43,2630,39],[2917,45,2630,41],[2918,12,2631,8,"console"],[2918,19,2631,15],[2918,20,2631,16,"warn"],[2918,24,2631,20],[2918,25,2631,21],[2919,0,2632,0],[2920,0,2633,0],[2921,0,2634,0],[2922,0,2635,0],[2923,0,2636,0],[2924,0,2637,0],[2924,9,2637,9],[2924,11,2637,11],[2924,52,2637,52],[2924,53,2637,53],[2925,10,2638,6],[2926,10,2639,6,"ctx"],[2926,13,2639,9],[2926,14,2639,10,"merge"],[2926,19,2639,15],[2926,20,2639,16,"JSON"],[2926,24,2639,20],[2926,25,2639,21,"parse"],[2926,30,2639,26],[2926,31,2639,27,"DATA"],[2926,35,2639,31],[2926,36,2639,32],[2926,37,2639,33],[2927,10,2640,6],[2927,14,2640,12,"storage"],[2927,21,2640,19],[2927,30,2640,28,"getStorageProvider"],[2927,48,2640,46],[2927,49,2640,47],[2927,50,2640,48],[2928,10,2641,6],[2928,14,2641,10,"storage"],[2928,21,2641,17],[2928,22,2641,18,"can"],[2928,25,2641,21],[2928,27,2641,23],[2929,12,2642,8],[2929,16,2642,14,"user"],[2929,20,2642,18],[2929,29,2642,27,"getStoredUser"],[2929,42,2642,40],[2929,43,2642,41,"storage"],[2929,50,2642,48],[2929,51,2642,49],[2930,12,2643,8],[2930,16,2643,12,"notExpired"],[2930,26,2643,22],[2930,27,2643,23,"user"],[2930,31,2643,27],[2930,32,2643,28],[2930,34,2643,30,"ctx"],[2930,37,2643,33],[2930,38,2643,34,"merge"],[2930,43,2643,39],[2930,44,2643,40,"user"],[2930,48,2643,44],[2930,49,2643,45],[2931,10,2644,6],[2932,8,2645,4],[2932,9,2645,5],[2933,8,2645,5],[2933,25,2645,5,"_x53"],[2933,29,2645,5],[2934,10,2645,5],[2934,17,2645,5,"_ref21"],[2934,23,2645,5],[2934,24,2645,5,"apply"],[2934,29,2645,5],[2934,36,2645,5,"arguments"],[2934,45,2645,5],[2935,8,2645,5],[2936,6,2645,5],[2937,6,2646,4],[2937,7,2646,5,"utilActor"],[2937,16,2646,14],[2937,17,2646,15,"SUBSCRIBE"],[2937,26,2646,24],[2937,29,2646,27],[2937,30,2646,28,"ctx"],[2937,33,2646,31],[2937,35,2646,33,"letter"],[2937,41,2646,39],[2937,46,2646,44],[2938,8,2647,6,"ctx"],[2938,11,2647,9],[2938,12,2647,10,"subscribe"],[2938,21,2647,19],[2938,22,2647,20,"letter"],[2938,28,2647,26],[2938,29,2647,27,"from"],[2938,33,2647,31],[2938,34,2647,32],[2939,8,2648,6,"ctx"],[2939,11,2648,9],[2939,12,2648,10,"send"],[2939,16,2648,14],[2939,17,2648,15,"letter"],[2939,23,2648,21],[2939,24,2648,22,"from"],[2939,28,2648,26],[2939,30,2648,28,"UPDATED"],[2939,37,2648,35],[2939,39,2648,37],[2940,10,2649,8],[2940,13,2649,11,"ctx"],[2940,16,2649,14],[2940,17,2649,15,"all"],[2940,20,2649,18],[2940,21,2649,19],[2941,8,2650,6],[2941,9,2650,7],[2941,10,2650,8],[2942,6,2651,4],[2942,7,2651,5],[2943,6,2652,4],[2943,7,2652,5,"utilActor"],[2943,16,2652,14],[2943,17,2652,15,"UNSUBSCRIBE"],[2943,28,2652,26],[2943,31,2652,29],[2943,32,2652,30,"ctx"],[2943,35,2652,33],[2943,37,2652,35,"letter"],[2943,43,2652,41],[2943,48,2652,46],[2944,8,2653,6,"ctx"],[2944,11,2653,9],[2944,12,2653,10,"unsubscribe"],[2944,23,2653,21],[2944,24,2653,22,"letter"],[2944,30,2653,28],[2944,31,2653,29,"from"],[2944,35,2653,33],[2944,36,2653,34],[2945,6,2654,4],[2945,7,2654,5],[2946,6,2655,4],[2946,7,2655,5,"SNAPSHOT"],[2946,15,2655,13],[2947,8,2655,13],[2947,12,2655,13,"_ref22"],[2947,18,2655,13],[2947,21,2655,13,"_asyncToGenerator"],[2947,38,2655,13],[2947,39,2655,16],[2947,50,2655,23,"ctx"],[2947,53,2655,26],[2947,55,2655,28,"letter"],[2947,61,2655,34],[2947,63,2655,39],[2948,10,2656,6,"letter"],[2948,16,2656,12],[2948,17,2656,13,"reply"],[2948,22,2656,18],[2948,23,2656,19],[2949,12,2657,8],[2949,15,2657,11,"ctx"],[2949,18,2657,14],[2949,19,2657,15,"all"],[2949,22,2657,18],[2949,23,2657,19],[2950,10,2658,6],[2950,11,2658,7],[2950,12,2658,8],[2951,8,2659,4],[2951,9,2659,5],[2952,8,2659,5],[2952,25,2659,5,"_x54"],[2952,29,2659,5],[2952,31,2659,5,"_x55"],[2952,35,2659,5],[2953,10,2659,5],[2953,17,2659,5,"_ref22"],[2953,23,2659,5],[2953,24,2659,5,"apply"],[2953,29,2659,5],[2953,36,2659,5,"arguments"],[2953,45,2659,5],[2954,8,2659,5],[2955,6,2659,5],[2956,6,2660,4],[2956,7,2660,5,"SET_CURRENT_USER"],[2956,23,2660,21],[2957,8,2660,21],[2957,12,2660,21,"_ref23"],[2957,18,2660,21],[2957,21,2660,21,"_asyncToGenerator"],[2957,38,2660,21],[2957,39,2660,24],[2957,50,2660,31,"ctx"],[2957,53,2660,34],[2957,55,2660,36,"letter"],[2957,61,2660,42],[2957,63,2660,44,"data"],[2957,67,2660,48],[2957,69,2660,53],[2958,10,2661,6,"ctx"],[2958,13,2661,9],[2958,14,2661,10,"merge"],[2958,19,2661,15],[2958,20,2661,16,"data"],[2958,24,2661,20],[2958,25,2661,21],[2959,10,2662,6],[2959,14,2662,12,"storage"],[2959,21,2662,19],[2959,30,2662,28,"getStorageProvider"],[2959,48,2662,46],[2959,49,2662,47],[2959,50,2662,48],[2960,10,2663,6],[2960,14,2663,10,"storage"],[2960,21,2663,17],[2960,22,2663,18,"can"],[2960,25,2663,21],[2960,27,2663,23,"storage"],[2960,34,2663,30],[2960,35,2663,31,"put"],[2960,38,2663,34],[2960,39,2663,35,"NAME"],[2960,43,2663,39],[2960,45,2663,41,"ctx"],[2960,48,2663,44],[2960,49,2663,45,"all"],[2960,52,2663,48],[2960,53,2663,49],[2960,54,2663,50],[2960,55,2663,51],[2961,10,2664,6,"ctx"],[2961,13,2664,9],[2961,14,2664,10,"broadcast"],[2961,23,2664,19],[2961,24,2664,20,"UPDATED"],[2961,31,2664,27],[2961,33,2664,29],[2962,12,2665,8],[2962,15,2665,11,"ctx"],[2962,18,2665,14],[2962,19,2665,15,"all"],[2962,22,2665,18],[2962,23,2665,19],[2963,10,2666,6],[2963,11,2666,7],[2963,12,2666,8],[2964,8,2667,4],[2964,9,2667,5],[2965,8,2667,5],[2965,25,2667,5,"_x56"],[2965,29,2667,5],[2965,31,2667,5,"_x57"],[2965,35,2667,5],[2965,37,2667,5,"_x58"],[2965,41,2667,5],[2966,10,2667,5],[2966,17,2667,5,"_ref23"],[2966,23,2667,5],[2966,24,2667,5,"apply"],[2966,29,2667,5],[2966,36,2667,5,"arguments"],[2966,45,2667,5],[2967,8,2667,5],[2968,6,2667,5],[2969,6,2668,4],[2969,7,2668,5,"DEL_CURRENT_USER"],[2969,23,2668,21],[2970,8,2668,21],[2970,12,2668,21,"_ref24"],[2970,18,2668,21],[2970,21,2668,21,"_asyncToGenerator"],[2970,38,2668,21],[2970,39,2668,24],[2970,50,2668,31,"ctx"],[2970,53,2668,34],[2970,55,2668,36,"letter"],[2970,61,2668,42],[2970,63,2668,47],[2971,10,2669,6,"ctx"],[2971,13,2669,9],[2971,14,2669,10,"merge"],[2971,19,2669,15],[2971,20,2669,16,"JSON"],[2971,24,2669,20],[2971,25,2669,21,"parse"],[2971,30,2669,26],[2971,31,2669,27,"DATA"],[2971,35,2669,31],[2971,36,2669,32],[2971,37,2669,33],[2972,10,2670,6],[2972,14,2670,12,"storage"],[2972,21,2670,19],[2972,30,2670,28,"getStorageProvider"],[2972,48,2670,46],[2972,49,2670,47],[2972,50,2670,48],[2973,10,2671,6],[2973,14,2671,10,"storage"],[2973,21,2671,17],[2973,22,2671,18,"can"],[2973,25,2671,21],[2973,27,2671,23,"storage"],[2973,34,2671,30],[2973,35,2671,31,"put"],[2973,38,2671,34],[2973,39,2671,35,"NAME"],[2973,43,2671,39],[2973,45,2671,41,"ctx"],[2973,48,2671,44],[2973,49,2671,45,"all"],[2973,52,2671,48],[2973,53,2671,49],[2973,54,2671,50],[2973,55,2671,51],[2974,10,2672,6,"ctx"],[2974,13,2672,9],[2974,14,2672,10,"broadcast"],[2974,23,2672,19],[2974,24,2672,20,"UPDATED"],[2974,31,2672,27],[2974,33,2672,29],[2975,12,2673,8],[2975,15,2673,11,"ctx"],[2975,18,2673,14],[2975,19,2673,15,"all"],[2975,22,2673,18],[2975,23,2673,19],[2976,10,2674,6],[2976,11,2674,7],[2976,12,2674,8],[2977,8,2675,4],[2977,9,2675,5],[2978,8,2675,5],[2978,25,2675,5,"_x59"],[2978,29,2675,5],[2978,31,2675,5,"_x60"],[2978,35,2675,5],[2979,10,2675,5],[2979,17,2675,5,"_ref24"],[2979,23,2675,5],[2979,24,2675,5,"apply"],[2979,29,2675,5],[2979,36,2675,5,"arguments"],[2979,45,2675,5],[2980,8,2675,5],[2981,6,2675,5],[2982,4,2676,2],[2982,5,2676,3],[2983,2,2677,0],[2983,3,2677,1],[2984,2,2678,0],[2984,6,2678,6,"spawnCurrentUser"],[2984,22,2678,22],[2984,25,2678,25,"cfg"],[2984,28,2678,28],[2984,32,2678,32,"utilActor"],[2984,41,2678,41],[2984,42,2678,42,"spawn"],[2984,47,2678,47],[2984,48,2678,48,"makeHandlers"],[2984,60,2678,60],[2984,61,2678,61,"cfg"],[2984,64,2678,64],[2984,65,2678,65],[2984,67,2678,67,"NAME"],[2984,71,2678,71],[2984,72,2678,72],[2985,2,2679,0],[2985,11,2679,9,"notExpired"],[2985,21,2679,19,"notExpired"],[2985,22,2679,20,"user"],[2985,26,2679,24],[2985,28,2679,26],[2986,4,2680,2],[2986,11,2680,9,"user"],[2986,15,2680,13],[2986,16,2680,14,"expiresAt"],[2986,25,2680,23],[2986,29,2680,27],[2986,33,2680,31],[2986,37,2680,35,"user"],[2986,41,2680,39],[2986,42,2680,40,"expiresAt"],[2986,51,2680,49],[2986,56,2680,54],[2986,57,2680,55],[2986,61,2680,59,"user"],[2986,65,2680,63],[2986,66,2680,64,"expiresAt"],[2986,75,2680,73],[2986,78,2680,76,"Date"],[2986,82,2680,80],[2986,83,2680,81,"now"],[2986,86,2680,84],[2986,87,2680,85],[2986,88,2680,86],[2987,2,2681,0],[2988,2,2681,1],[2988,11,2682,15,"getAccountProofData"],[2988,30,2682,34,"getAccountProofData"],[2988,31,2682,34],[2989,4,2682,34],[2989,11,2682,34,"_getAccountProofData"],[2989,31,2682,34],[2989,32,2682,34,"apply"],[2989,37,2682,34],[2989,44,2682,34,"arguments"],[2989,53,2682,34],[2990,2,2682,34],[2991,2,2682,34],[2991,11,2682,34,"_getAccountProofData"],[2991,32,2682,34],[2992,4,2682,34,"_getAccountProofData"],[2992,24,2682,34],[2992,27,2682,34,"_asyncToGenerator"],[2992,44,2682,34],[2992,45,2682,0],[2992,58,2682,37],[2993,6,2683,2],[2993,10,2683,6,"accountProofDataResolver"],[2993,34,2683,30],[2993,43,2683,39,"config"],[2993,49,2683,45],[2993,50,2683,46,"config"],[2993,56,2683,52],[2993,57,2683,53,"get"],[2993,60,2683,56],[2993,61,2683,57],[2993,88,2683,84],[2993,89,2683,85],[2994,6,2684,2],[2994,10,2684,6,"accountProofDataResolver"],[2994,34,2684,30],[2994,38,2684,34],[2994,42,2684,38],[2994,44,2684,40],[2995,6,2685,2],[2995,10,2685,6],[2995,11,2685,7,"isFn"],[2995,15,2685,11],[2995,16,2685,12,"accountProofDataResolver"],[2995,40,2685,36],[2995,41,2685,37],[2995,43,2685,39],[2996,8,2686,4,"logger"],[2996,14,2686,10],[2996,15,2686,11,"log"],[2996,18,2686,14],[2996,19,2686,15],[2997,10,2687,6,"title"],[2997,15,2687,11],[2997,17,2687,13],[2997,65,2687,61],[2998,10,2688,6,"message"],[2998,17,2688,13],[2998,19,2688,15],[2999,0,2689,0],[3000,0,2690,0],[3000,55,2690,55],[3000,62,2690,62,"accountProofDataResolver"],[3000,86,2690,86],[3001,0,2691,0],[3001,17,2691,17],[3002,10,2692,6,"level"],[3002,15,2692,11],[3002,17,2692,13,"logger"],[3002,23,2692,19],[3002,24,2692,20,"LEVELS"],[3002,30,2692,26],[3002,31,2692,27,"warn"],[3003,8,2693,4],[3003,9,2693,5],[3003,10,2693,6],[3004,8,2694,4],[3005,6,2695,2],[3006,6,2696,2],[3006,10,2696,8,"accountProofData"],[3006,26,2696,24],[3006,35,2696,33,"accountProofDataResolver"],[3006,59,2696,57],[3006,60,2696,58],[3006,61,2696,59],[3007,6,2697,2],[3007,10,2697,6,"accountProofData"],[3007,26,2697,22],[3007,30,2697,26],[3007,34,2697,30],[3007,36,2697,32],[3008,6,2698,2,"utilInvariant"],[3008,19,2698,15],[3008,20,2698,16,"invariant"],[3008,29,2698,25],[3008,30,2698,26],[3008,37,2698,33,"accountProofData"],[3008,53,2698,49],[3008,54,2698,50,"appIdentifier"],[3008,67,2698,63],[3008,72,2698,68],[3008,80,2698,76],[3008,82,2698,78],[3008,114,2698,110],[3008,115,2698,111],[3009,6,2699,2,"utilInvariant"],[3009,19,2699,15],[3009,20,2699,16,"invariant"],[3009,29,2699,25],[3009,30,2699,26],[3009,44,2699,40],[3009,45,2699,41,"test"],[3009,49,2699,45],[3009,50,2699,46,"accountProofData"],[3009,66,2699,62],[3009,67,2699,63,"nonce"],[3009,72,2699,68],[3009,73,2699,69],[3009,75,2699,71],[3009,103,2699,99],[3009,104,2699,100],[3010,6,2700,2],[3010,13,2700,9,"accountProofData"],[3010,29,2700,25],[3011,4,2701,0],[3011,5,2701,1],[3012,4,2701,1],[3012,11,2701,1,"_getAccountProofData"],[3012,31,2701,1],[3012,32,2701,1,"apply"],[3012,37,2701,1],[3012,44,2701,1,"arguments"],[3012,53,2701,1],[3013,2,2701,1],[3014,2,2702,0],[3014,6,2702,6,"makeConfig"],[3014,16,2702,16],[3015,4,2702,16],[3015,8,2702,16,"_ref25"],[3015,14,2702,16],[3015,17,2702,16,"_asyncToGenerator"],[3015,34,2702,16],[3015,35,2702,19],[3015,46,2702,25,"_ref"],[3015,50,2702,29],[3015,52,2702,33],[3016,6,2703,2],[3016,10,2704,4,"discoveryAuthnInclude"],[3016,31,2704,25],[3016,34,2706,6,"_ref"],[3016,38,2706,10],[3016,39,2704,4,"discoveryAuthnInclude"],[3016,60,2704,25],[3017,8,2705,4,"discoveryFeaturesSuggested"],[3017,34,2705,30],[3017,37,2706,6,"_ref"],[3017,41,2706,10],[3017,42,2705,4,"discoveryFeaturesSuggested"],[3017,68,2705,30],[3018,6,2707,2],[3018,13,2707,9],[3019,8,2708,4,"client"],[3019,14,2708,10],[3019,16,2708,12],[3020,10,2709,6,"discoveryAuthnInclude"],[3020,31,2709,27],[3021,10,2710,6,"discoveryFeaturesSuggested"],[3021,36,2710,32],[3022,10,2711,6,"clientServices"],[3022,24,2711,20],[3022,32,2711,28,"makeDiscoveryServices"],[3022,53,2711,49],[3022,54,2711,50],[3022,55,2711,51],[3023,10,2712,6,"supportedStrategies"],[3023,29,2712,25],[3023,31,2712,27,"getServiceRegistry"],[3023,49,2712,45],[3023,50,2712,46],[3023,51,2712,47],[3023,52,2712,48,"getStrategies"],[3023,65,2712,61],[3023,66,2712,62],[3024,8,2713,4],[3025,6,2714,2],[3025,7,2714,3],[3026,4,2715,0],[3026,5,2715,1],[3027,4,2715,1],[3027,20,2702,6,"makeConfig"],[3027,30,2702,16,"makeConfig"],[3027,31,2702,16,"_x61"],[3027,35,2702,16],[3028,6,2702,16],[3028,13,2702,16,"_ref25"],[3028,19,2702,16],[3028,20,2702,16,"apply"],[3028,25,2702,16],[3028,32,2702,16,"arguments"],[3028,41,2702,16],[3029,4,2702,16],[3030,2,2702,16],[3030,5,2715,1],[3032,2,2717,0],[3033,0,2718,0],[3034,0,2719,0],[3035,0,2720,0],[3036,2,2721,0],[3036,6,2721,6,"getAuthenticate"],[3036,21,2721,21],[3036,24,2721,24,"config"],[3036,30,2721,30],[3037,2,2721,30],[3038,2,2722,0],[3039,0,2723,0],[3040,0,2724,0],[3041,0,2725,0],[3042,0,2726,0],[3043,0,2727,0],[3044,0,2728,0],[3045,2,2722,0,"_asyncToGenerator"],[3045,19,2722,0],[3045,20,2729,0],[3045,33,2729,18],[3046,4,2730,2],[3046,8,2730,2,"_ref27"],[3046,14,2730,2],[3046,17,2733,6,"arguments"],[3046,26,2733,15],[3046,27,2733,16,"length"],[3046,33,2733,22],[3046,36,2733,25],[3046,37,2733,26],[3046,41,2733,30,"arguments"],[3046,50,2733,39],[3046,51,2733,40],[3046,52,2733,41],[3046,53,2733,42],[3046,58,2733,47,"undefined"],[3046,67,2733,56],[3046,70,2733,59,"arguments"],[3046,79,2733,68],[3046,80,2733,69],[3046,81,2733,70],[3046,82,2733,71],[3046,85,2733,74],[3046,86,2733,75],[3046,87,2733,76],[3047,6,2731,4,"service"],[3047,13,2731,11],[3047,16,2731,11,"_ref27"],[3047,22,2731,11],[3047,23,2731,4,"service"],[3047,30,2731,11],[3048,6,2731,11,"_ref27$redir"],[3048,18,2731,11],[3048,21,2731,11,"_ref27"],[3048,27,2731,11],[3048,28,2732,4,"redir"],[3048,33,2732,9],[3049,6,2732,4,"redir"],[3049,11,2732,9],[3049,14,2732,9,"_ref27$redir"],[3049,26,2732,9],[3049,40,2732,12],[3049,45,2732,17],[3049,48,2732,17,"_ref27$redir"],[3049,60,2732,17],[3050,4,2734,2],[3050,8,2734,6,"service"],[3050,15,2734,13],[3050,19,2734,17],[3050,20,2734,18,"service"],[3050,27,2734,25],[3050,29,2734,27,"provider"],[3050,37,2734,35],[3050,39,2734,37,"is_installed"],[3050,51,2734,49],[3050,55,2734,53,"service"],[3050,62,2734,60],[3050,64,2734,62,"provider"],[3050,72,2734,70],[3050,74,2734,72,"requires_install"],[3050,90,2734,88],[3050,92,2734,90],[3051,6,2735,4,"window"],[3051,12,2735,10],[3051,13,2735,11,"location"],[3051,21,2735,19],[3051,22,2735,20,"href"],[3051,26,2735,24],[3051,29,2735,27,"service"],[3051,36,2735,34],[3051,38,2735,36,"provider"],[3051,46,2735,44],[3051,48,2735,46,"install_link"],[3051,60,2735,58],[3052,6,2736,4],[3053,4,2737,2],[3054,4,2738,2],[3054,11,2738,9],[3054,15,2738,13,"Promise"],[3054,22,2738,20],[3055,6,2738,20],[3055,10,2738,20,"_ref28"],[3055,16,2738,20],[3055,19,2738,20,"_asyncToGenerator"],[3055,36,2738,20],[3055,37,2738,21],[3055,48,2738,28,"resolve"],[3055,55,2738,35],[3055,57,2738,37,"reject"],[3055,63,2738,43],[3055,65,2738,48],[3056,8,2739,4,"spawnCurrentUser"],[3056,24,2739,20],[3056,25,2739,21,"config"],[3056,31,2739,27],[3056,32,2739,28],[3057,8,2740,4],[3057,12,2740,10,"opts"],[3057,16,2740,14],[3057,19,2740,17],[3058,10,2741,6,"redir"],[3059,8,2742,4],[3059,9,2742,5],[3060,8,2743,4],[3060,12,2743,10,"user"],[3060,16,2743,14],[3060,25,2743,23,"getSnapshot"],[3060,36,2743,34],[3060,37,2743,35,"config"],[3060,43,2743,41],[3060,44,2743,42],[3060,45,2743,43],[3060,46,2743,44],[3061,8,2744,4],[3061,12,2744,10,"discoveryService"],[3061,28,2744,26],[3061,37,2744,35,"getDiscoveryService"],[3061,56,2744,54],[3061,57,2744,55,"service"],[3061,64,2744,62],[3061,65,2744,63],[3062,8,2745,4],[3062,12,2745,10,"refreshService"],[3062,26,2745,24],[3062,29,2745,27,"serviceOfType"],[3062,42,2745,40],[3062,43,2745,41,"user"],[3062,47,2745,45],[3062,48,2745,46,"services"],[3062,56,2745,54],[3062,58,2745,56],[3062,73,2745,71],[3062,74,2745,72],[3063,8,2746,4],[3063,12,2746,8,"accountProofData"],[3063,28,2746,24],[3064,8,2747,4],[3064,12,2747,8,"user"],[3064,16,2747,12],[3064,17,2747,13,"loggedIn"],[3064,25,2747,21],[3064,27,2747,23],[3065,10,2748,6],[3065,14,2748,10,"refreshService"],[3065,28,2748,24],[3065,30,2748,26],[3066,12,2749,8],[3066,16,2749,12],[3067,14,2750,10],[3067,18,2750,16,"response"],[3067,26,2750,24],[3067,35,2750,33,"execService"],[3067,46,2750,44],[3067,47,2750,45],[3068,16,2751,12,"service"],[3068,23,2751,19],[3068,25,2751,21,"refreshService"],[3068,39,2751,35],[3069,16,2752,12,"msg"],[3069,19,2752,15],[3069,21,2752,17,"accountProofData"],[3069,37,2752,33],[3070,16,2753,12,"opts"],[3070,20,2753,16],[3071,16,2754,12,"platform"],[3071,24,2754,20],[3071,26,2754,22,"config"],[3071,32,2754,28],[3071,33,2754,29,"platform"],[3071,41,2754,37],[3072,16,2755,12,"user"],[3073,14,2756,10],[3073,15,2756,11],[3073,16,2756,12],[3074,14,2757,10,"utilActor"],[3074,23,2757,19],[3074,24,2757,20,"send"],[3074,28,2757,24],[3074,29,2757,25,"NAME"],[3074,33,2757,29],[3074,35,2757,31,"SET_CURRENT_USER"],[3074,51,2757,47],[3074,59,2757,55,"buildUser"],[3074,68,2757,64],[3074,69,2757,65,"response"],[3074,77,2757,73],[3074,78,2757,74],[3074,79,2757,75],[3075,12,2758,8],[3075,13,2758,9],[3075,14,2758,10],[3075,21,2758,17,"error"],[3075,26,2758,22],[3075,28,2758,24],[3076,14,2759,10,"logger"],[3076,20,2759,16],[3076,21,2759,17,"log"],[3076,24,2759,20],[3076,25,2759,21],[3077,16,2760,12,"title"],[3077,21,2760,17],[3077,23,2760,19],[3077,26,2760,22,"error"],[3077,31,2760,27],[3077,32,2760,28,"name"],[3077,36,2760,32],[3077,79,2760,75],[3078,16,2761,12,"message"],[3078,23,2761,19],[3078,25,2761,21,"error"],[3078,30,2761,26],[3078,31,2761,27,"message"],[3078,38,2761,34],[3079,16,2762,12,"level"],[3079,21,2762,17],[3079,23,2762,19,"logger"],[3079,29,2762,25],[3079,30,2762,26,"LEVELS"],[3079,36,2762,32],[3079,37,2762,33,"error"],[3080,14,2763,10],[3080,15,2763,11],[3080,16,2763,12],[3081,12,2764,8],[3081,13,2764,9],[3081,22,2764,18],[3082,14,2765,10],[3082,21,2765,17,"resolve"],[3082,28,2765,24],[3082,35,2765,31,"getSnapshot"],[3082,46,2765,42],[3082,47,2765,43,"config"],[3082,53,2765,49],[3082,54,2765,50],[3082,55,2765,51],[3082,56,2765,52],[3082,57,2765,53],[3083,12,2766,8],[3084,10,2767,6],[3084,11,2767,7],[3084,17,2767,13],[3085,12,2768,8],[3085,19,2768,15,"resolve"],[3085,26,2768,22],[3085,27,2768,23,"user"],[3085,31,2768,27],[3085,32,2768,28],[3086,10,2769,6],[3087,8,2770,4],[3088,8,2771,4],[3088,12,2771,8],[3089,10,2772,6,"accountProofData"],[3089,26,2772,22],[3089,35,2772,31,"getAccountProofData"],[3089,54,2772,50],[3089,55,2772,51],[3089,56,2772,52],[3090,8,2773,4],[3090,9,2773,5],[3090,10,2773,6],[3090,17,2773,13,"error"],[3090,22,2773,18],[3090,24,2773,20],[3091,10,2774,6,"logger"],[3091,16,2774,12],[3091,17,2774,13,"log"],[3091,20,2774,16],[3091,21,2774,17],[3092,12,2775,8,"title"],[3092,17,2775,13],[3092,19,2775,15],[3092,22,2775,18,"error"],[3092,27,2775,23],[3092,28,2775,24,"name"],[3092,32,2775,28],[3092,91,2775,87],[3093,12,2776,8,"message"],[3093,19,2776,15],[3093,21,2776,17,"error"],[3093,26,2776,22],[3093,27,2776,23,"message"],[3093,34,2776,30],[3094,12,2777,8,"level"],[3094,17,2777,13],[3094,19,2777,15,"logger"],[3094,25,2777,21],[3094,26,2777,22,"LEVELS"],[3094,32,2777,28],[3094,33,2777,29,"error"],[3095,10,2778,6],[3095,11,2778,7],[3095,12,2778,8],[3096,10,2779,6],[3096,17,2779,13,"reject"],[3096,23,2779,19],[3096,24,2779,20,"error"],[3096,29,2779,25],[3096,30,2779,26],[3097,8,2780,4],[3098,8,2781,4],[3098,12,2781,8],[3099,10,2782,6],[3099,14,2782,12,"response"],[3099,23,2782,20],[3099,32,2782,29,"execService"],[3099,43,2782,40],[3099,44,2782,41],[3100,12,2783,8,"service"],[3100,19,2783,15],[3100,21,2783,17,"discoveryService"],[3100,37,2783,33],[3101,12,2784,8,"msg"],[3101,15,2784,11],[3101,17,2784,13,"accountProofData"],[3101,33,2784,29],[3102,12,2785,8,"config"],[3102,18,2785,14],[3102,26,2785,22,"makeConfig"],[3102,36,2785,32],[3102,37,2785,33,"discoveryService"],[3102,53,2785,49],[3102,54,2785,50],[3103,12,2786,8,"opts"],[3103,16,2786,12],[3104,12,2787,8,"platform"],[3104,20,2787,16],[3104,22,2787,18,"config"],[3104,28,2787,24],[3104,29,2787,25,"platform"],[3104,37,2787,33],[3105,12,2788,8,"execStrategy"],[3105,24,2788,20],[3105,26,2788,22,"config"],[3105,32,2788,28],[3105,33,2788,29,"discovery"],[3105,42,2788,38],[3105,44,2788,40,"execStrategy"],[3105,56,2788,52],[3106,12,2789,8,"user"],[3107,10,2790,6],[3107,11,2790,7],[3107,12,2790,8],[3108,10,2791,6,"utilActor"],[3108,19,2791,15],[3108,20,2791,16,"send"],[3108,24,2791,20],[3108,25,2791,21,"NAME"],[3108,29,2791,25],[3108,31,2791,27,"SET_CURRENT_USER"],[3108,47,2791,43],[3108,55,2791,51,"buildUser"],[3108,64,2791,60],[3108,65,2791,61,"response"],[3108,74,2791,69],[3108,75,2791,70],[3108,76,2791,71],[3109,8,2792,4],[3109,9,2792,5],[3109,10,2792,6],[3109,17,2792,13,"error"],[3109,22,2792,18],[3109,24,2792,20],[3110,10,2793,6,"logger"],[3110,16,2793,12],[3110,17,2793,13,"log"],[3110,20,2793,16],[3110,21,2793,17],[3111,12,2794,8,"title"],[3111,17,2794,13],[3111,19,2794,15],[3111,22,2794,18,"error"],[3111,27,2794,23],[3111,47,2794,43],[3112,12,2795,8,"message"],[3112,19,2795,15],[3112,21,2795,17,"error"],[3112,26,2795,22],[3113,12,2796,8,"level"],[3113,17,2796,13],[3113,19,2796,15,"logger"],[3113,25,2796,21],[3113,26,2796,22,"LEVELS"],[3113,32,2796,28],[3113,33,2796,29,"error"],[3114,10,2797,6],[3114,11,2797,7],[3114,12,2797,8],[3115,8,2798,4],[3115,9,2798,5],[3115,18,2798,14],[3116,10,2799,6,"resolve"],[3116,17,2799,13],[3116,24,2799,20,"getSnapshot"],[3116,35,2799,31],[3116,36,2799,32,"config"],[3116,42,2799,38],[3116,43,2799,39],[3116,44,2799,40],[3116,45,2799,41],[3116,46,2799,42],[3117,8,2800,4],[3118,6,2801,2],[3118,7,2801,3],[3119,6,2801,3],[3119,23,2801,3,"_x62"],[3119,27,2801,3],[3119,29,2801,3,"_x63"],[3119,33,2801,3],[3120,8,2801,3],[3120,15,2801,3,"_ref28"],[3120,21,2801,3],[3120,22,2801,3,"apply"],[3120,27,2801,3],[3120,34,2801,3,"arguments"],[3120,43,2801,3],[3121,6,2801,3],[3122,4,2801,3],[3122,8,2801,4],[3123,2,2802,0],[3123,3,2802,1],[3125,2,2804,0],[3126,0,2805,0],[3127,0,2806,0],[3128,0,2807,0],[3129,2,2808,0],[3129,11,2808,9,"getUnauthenticate"],[3129,28,2808,26,"getUnauthenticate"],[3129,29,2808,27,"config"],[3129,35,2808,33],[3129,37,2808,35],[3130,4,2809,2],[3131,0,2810,0],[3132,0,2811,0],[3133,4,2812,2],[3133,11,2812,9],[3133,20,2812,18,"unauthenticate"],[3133,34,2812,32,"unauthenticate"],[3133,35,2812,32],[3133,37,2812,35],[3134,6,2813,4,"spawnCurrentUser"],[3134,22,2813,20],[3134,23,2813,21,"config"],[3134,29,2813,27],[3134,30,2813,28],[3135,6,2814,4,"utilActor"],[3135,15,2814,13],[3135,16,2814,14,"send"],[3135,20,2814,18],[3135,21,2814,19,"NAME"],[3135,25,2814,23],[3135,27,2814,25,"DEL_CURRENT_USER"],[3135,43,2814,41],[3135,44,2814,42],[3136,4,2815,2],[3136,5,2815,3],[3137,2,2816,0],[3138,2,2817,0],[3138,6,2817,6,"normalizePreAuthzResponse"],[3138,31,2817,31],[3138,34,2817,34,"authz"],[3138,39,2817,39],[3138,44,2817,44],[3139,4,2818,2,"f_type"],[3139,10,2818,8],[3139,12,2818,10],[3139,30,2818,28],[3140,4,2819,2,"f_vsn"],[3140,9,2819,7],[3140,11,2819,9],[3140,18,2819,16],[3141,4,2820,2,"proposer"],[3141,12,2820,10],[3141,14,2820,12],[3141,15,2820,13,"authz"],[3141,20,2820,18],[3141,24,2820,22],[3141,25,2820,23],[3141,26,2820,24],[3141,28,2820,26,"proposer"],[3141,36,2820,34],[3142,4,2821,2,"payer"],[3142,9,2821,7],[3142,11,2821,9],[3142,12,2821,10,"authz"],[3142,17,2821,15],[3142,21,2821,19],[3142,22,2821,20],[3142,23,2821,21],[3142,25,2821,23,"payer"],[3142,30,2821,28],[3142,34,2821,32],[3142,36,2821,34],[3143,4,2822,2,"authorization"],[3143,17,2822,15],[3143,19,2822,17],[3143,20,2822,18,"authz"],[3143,25,2822,23],[3143,29,2822,27],[3143,30,2822,28],[3143,31,2822,29],[3143,33,2822,31,"authorization"],[3143,46,2822,44],[3143,50,2822,48],[3144,2,2823,0],[3144,3,2823,1],[3144,4,2823,2],[3146,2,2825,0],[3147,0,2826,0],[3148,0,2827,0],[3149,0,2828,0],[3150,2,2829,0],[3150,6,2829,6,"getResolvePreAuthz"],[3150,24,2829,24],[3150,27,2829,27,"config"],[3150,33,2829,33],[3150,37,2829,37],[3150,38,2829,38,"authz"],[3150,43,2829,43],[3150,45,2829,45,"_ref2"],[3150,50,2829,50],[3150,55,2829,55],[3151,4,2830,2],[3151,8,2831,4,"user"],[3151,12,2831,8],[3151,15,2832,6,"_ref2"],[3151,20,2832,11],[3151,21,2831,4,"user"],[3151,25,2831,8],[3152,4,2833,2],[3152,8,2833,8,"resp"],[3152,12,2833,12],[3152,15,2833,15,"normalizePreAuthzResponse"],[3152,40,2833,40],[3152,41,2833,41,"authz"],[3152,46,2833,46],[3152,47,2833,47],[3153,4,2834,2],[3153,8,2834,8,"axs"],[3153,11,2834,11],[3153,14,2834,14],[3153,16,2834,16],[3154,4,2835,2],[3154,8,2835,6,"resp"],[3154,12,2835,10],[3154,13,2835,11,"proposer"],[3154,21,2835,19],[3154,25,2835,23],[3154,29,2835,27],[3154,31,2835,29,"axs"],[3154,34,2835,32],[3154,35,2835,33,"push"],[3154,39,2835,37],[3154,40,2835,38],[3154,41,2835,39],[3154,51,2835,49],[3154,53,2835,51,"resp"],[3154,57,2835,55],[3154,58,2835,56,"proposer"],[3154,66,2835,64],[3154,67,2835,65],[3154,68,2835,66],[3155,4,2836,2],[3155,9,2836,7],[3155,13,2836,11,"az"],[3155,15,2836,13],[3155,19,2836,17,"resp"],[3155,23,2836,21],[3155,24,2836,22,"payer"],[3155,29,2836,27],[3155,33,2836,31],[3155,35,2836,33],[3155,37,2836,35,"axs"],[3155,40,2836,38],[3155,41,2836,39,"push"],[3155,45,2836,43],[3155,46,2836,44],[3155,47,2836,45],[3155,54,2836,52],[3155,56,2836,54,"az"],[3155,58,2836,56],[3155,59,2836,57],[3155,60,2836,58],[3156,4,2837,2],[3156,9,2837,7],[3156,13,2837,11,"az"],[3156,16,2837,13],[3156,20,2837,17,"resp"],[3156,24,2837,21],[3156,25,2837,22,"authorization"],[3156,38,2837,35],[3156,42,2837,39],[3156,44,2837,41],[3156,46,2837,43,"axs"],[3156,49,2837,46],[3156,50,2837,47,"push"],[3156,54,2837,51],[3156,55,2837,52],[3156,56,2837,53],[3156,68,2837,65],[3156,70,2837,67,"az"],[3156,73,2837,69],[3156,74,2837,70],[3156,75,2837,71],[3157,4,2838,2],[3157,8,2838,6,"result"],[3157,14,2838,12],[3157,17,2838,15,"axs"],[3157,20,2838,18],[3157,21,2838,19,"map"],[3157,24,2838,22],[3157,25,2838,23,"_ref3"],[3157,30,2838,28],[3157,34,2838,32],[3158,6,2839,4],[3158,10,2839,4,"_ref29"],[3158,16,2839,4],[3158,19,2839,4,"_slicedToArray"],[3158,33,2839,4],[3158,34,2839,21,"_ref3"],[3158,39,2839,26],[3159,8,2839,9,"role"],[3159,12,2839,13],[3159,15,2839,13,"_ref29"],[3159,21,2839,13],[3160,8,2839,15,"az"],[3160,10,2839,17],[3160,13,2839,17,"_ref29"],[3160,19,2839,17],[3161,6,2840,4],[3161,13,2840,11],[3162,8,2841,6,"tempId"],[3162,14,2841,12],[3162,16,2841,14],[3162,17,2841,15,"az"],[3162,19,2841,17],[3162,20,2841,18,"identity"],[3162,28,2841,26],[3162,29,2841,27,"address"],[3162,36,2841,34],[3162,38,2841,36,"az"],[3162,40,2841,38],[3162,41,2841,39,"identity"],[3162,49,2841,47],[3162,50,2841,48,"keyId"],[3162,55,2841,53],[3162,56,2841,54],[3162,57,2841,55,"join"],[3162,61,2841,59],[3162,62,2841,60],[3162,65,2841,63],[3162,66,2841,64],[3163,8,2842,6,"addr"],[3163,12,2842,10],[3163,14,2842,12,"az"],[3163,16,2842,14],[3163,17,2842,15,"identity"],[3163,25,2842,23],[3163,26,2842,24,"address"],[3163,33,2842,31],[3164,8,2843,6,"keyId"],[3164,13,2843,11],[3164,15,2843,13,"az"],[3164,17,2843,15],[3164,18,2843,16,"identity"],[3164,26,2843,24],[3164,27,2843,25,"keyId"],[3164,32,2843,30],[3165,8,2844,6,"signingFunction"],[3165,23,2844,21,"signingFunction"],[3165,24,2844,22,"signable"],[3165,32,2844,30],[3165,34,2844,32],[3166,10,2845,8],[3166,17,2845,15,"execService"],[3166,28,2845,26],[3166,29,2845,27],[3167,12,2846,10,"service"],[3167,19,2846,17],[3167,21,2846,19,"az"],[3167,23,2846,21],[3168,12,2847,10,"msg"],[3168,15,2847,13],[3168,17,2847,15,"signable"],[3168,25,2847,23],[3169,12,2848,10,"platform"],[3169,20,2848,18],[3169,22,2848,20,"config"],[3169,28,2848,26],[3169,29,2848,27,"platform"],[3169,37,2848,35],[3170,12,2849,10,"user"],[3171,10,2850,8],[3171,11,2850,9],[3171,12,2850,10],[3172,8,2851,6],[3172,9,2851,7],[3173,8,2852,6,"role"],[3173,12,2852,10],[3173,14,2852,12],[3174,10,2853,8,"proposer"],[3174,18,2853,16],[3174,20,2853,18,"role"],[3174,24,2853,22],[3174,29,2853,27],[3174,39,2853,37],[3175,10,2854,8,"payer"],[3175,15,2854,13],[3175,17,2854,15,"role"],[3175,21,2854,19],[3175,26,2854,24],[3175,33,2854,31],[3176,10,2855,8,"authorizer"],[3176,20,2855,18],[3176,22,2855,20,"role"],[3176,26,2855,24],[3176,31,2855,29],[3177,8,2856,6],[3178,6,2857,4],[3178,7,2857,5],[3179,4,2858,2],[3179,5,2858,3],[3179,6,2858,4],[3180,4,2859,2],[3180,11,2859,9,"result"],[3180,17,2859,15],[3181,2,2860,0],[3181,3,2860,1],[3183,2,2862,0],[3184,0,2863,0],[3185,0,2864,0],[3186,0,2865,0],[3187,0,2866,0],[3188,2,2867,0],[3188,6,2867,6,"getAuthorization"],[3188,22,2867,22],[3188,25,2867,25,"config"],[3188,31,2867,31],[3189,2,2867,31],[3190,2,2868,0],[3191,0,2869,0],[3192,0,2870,0],[3193,0,2871,0],[3194,0,2872,0],[3195,0,2873,0],[3196,0,2874,0],[3197,2,2868,0],[3198,4,2868,0],[3198,8,2868,0,"_ref30"],[3198,14,2868,0],[3198,17,2868,0,"_asyncToGenerator"],[3198,34,2868,0],[3198,35,2875,0],[3198,46,2875,6,"account"],[3198,53,2875,13],[3198,55,2875,17],[3199,6,2876,2,"spawnCurrentUser"],[3199,22,2876,18],[3199,23,2876,19,"config"],[3199,29,2876,25],[3199,30,2876,26],[3200,6,2877,2],[3200,13,2877,9],[3201,8,2878,4],[3201,11,2878,7,"account"],[3201,18,2878,14],[3202,8,2879,4,"tempId"],[3202,14,2879,10],[3202,16,2879,12],[3202,30,2879,26],[3203,8,2880,10,"resolve"],[3203,15,2880,17,"resolve"],[3203,16,2880,18,"account"],[3203,23,2880,25],[3203,25,2880,27,"preSignable"],[3203,36,2880,38],[3203,38,2880,40],[3204,10,2880,40],[3204,17,2880,40,"_asyncToGenerator"],[3204,34,2880,40],[3205,12,2881,6],[3205,16,2881,12,"user"],[3205,20,2881,16],[3205,29,2881,25,"getAuthenticate"],[3205,44,2881,40],[3205,45,2881,41,"config"],[3205,51,2881,47],[3205,52,2881,48],[3205,53,2881,49],[3206,14,2882,8,"redir"],[3206,19,2882,13],[3206,21,2882,15],[3207,12,2883,6],[3207,13,2883,7],[3207,14,2883,8],[3208,12,2884,6],[3208,16,2884,12,"authz"],[3208,21,2884,17],[3208,24,2884,20,"serviceOfType"],[3208,37,2884,33],[3208,38,2884,34,"user"],[3208,42,2884,38],[3208,43,2884,39,"services"],[3208,51,2884,47],[3208,53,2884,49],[3208,60,2884,56],[3208,61,2884,57],[3209,12,2885,6],[3209,16,2885,12,"preAuthz"],[3209,24,2885,20],[3209,27,2885,23,"serviceOfType"],[3209,40,2885,36],[3209,41,2885,37,"user"],[3209,45,2885,41],[3209,46,2885,42,"services"],[3209,54,2885,50],[3209,56,2885,52],[3209,67,2885,63],[3209,68,2885,64],[3210,12,2886,6],[3210,16,2886,10,"preAuthz"],[3210,24,2886,18],[3210,26,2886,20],[3210,33,2886,27,"getResolvePreAuthz"],[3210,51,2886,45],[3210,52,2886,46,"config"],[3210,58,2886,52],[3210,59,2886,53],[3210,66,2886,60,"execService"],[3210,77,2886,71],[3210,78,2886,72],[3211,14,2887,8,"service"],[3211,21,2887,15],[3211,23,2887,17,"preAuthz"],[3211,31,2887,25],[3212,14,2888,8,"msg"],[3212,17,2888,11],[3212,19,2888,13,"preSignable"],[3212,30,2888,24],[3213,14,2889,8,"platform"],[3213,22,2889,16],[3213,24,2889,18,"config"],[3213,30,2889,24],[3213,31,2889,25,"platform"],[3213,39,2889,33],[3214,14,2890,8,"user"],[3215,12,2891,6],[3215,13,2891,7],[3215,14,2891,8],[3215,16,2891,10],[3216,14,2892,8,"user"],[3217,12,2893,6],[3217,13,2893,7],[3217,14,2893,8],[3218,12,2894,6],[3218,16,2894,10,"authz"],[3218,21,2894,15],[3218,23,2894,17],[3219,14,2895,8],[3219,21,2895,15],[3220,16,2896,10],[3220,19,2896,13,"account"],[3220,26,2896,20],[3221,16,2897,10,"tempId"],[3221,22,2897,16],[3221,24,2897,18],[3221,38,2897,32],[3222,16,2898,10,"resolve"],[3222,23,2898,17],[3222,25,2898,19],[3222,29,2898,23],[3223,16,2899,10,"addr"],[3223,20,2899,14],[3223,22,2899,16,"utilAddress"],[3223,33,2899,27],[3223,34,2899,28,"sansPrefix"],[3223,44,2899,38],[3223,45,2899,39,"authz"],[3223,50,2899,44],[3223,51,2899,45,"identity"],[3223,59,2899,53],[3223,60,2899,54,"address"],[3223,67,2899,61],[3223,68,2899,62],[3224,16,2900,10,"keyId"],[3224,21,2900,15],[3224,23,2900,17,"authz"],[3224,28,2900,22],[3224,29,2900,23,"identity"],[3224,37,2900,31],[3224,38,2900,32,"keyId"],[3224,43,2900,37],[3225,16,2901,10,"sequenceNum"],[3225,27,2901,21],[3225,29,2901,23],[3225,33,2901,27],[3226,16,2902,10,"signature"],[3226,25,2902,19],[3226,27,2902,21],[3226,31,2902,25],[3227,16,2903,16,"signingFunction"],[3227,31,2903,31,"signingFunction"],[3227,32,2903,32,"signable"],[3227,40,2903,40],[3227,42,2903,42],[3228,18,2903,42],[3228,25,2903,42,"_asyncToGenerator"],[3228,42,2903,42],[3229,20,2904,12],[3229,27,2904,19,"normalizeCompositeSignature"],[3229,54,2904,46],[3229,61,2904,53,"execService"],[3229,72,2904,64],[3229,73,2904,65],[3230,22,2905,14,"service"],[3230,29,2905,21],[3230,31,2905,23,"authz"],[3230,36,2905,28],[3231,22,2906,14,"msg"],[3231,25,2906,17],[3231,27,2906,19,"signable"],[3231,35,2906,27],[3232,22,2907,14,"opts"],[3232,26,2907,18],[3232,28,2907,20],[3233,24,2908,16,"includeOlderJsonRpcCall"],[3233,47,2908,39],[3233,49,2908,41],[3234,22,2909,14],[3234,23,2909,15],[3235,22,2910,14,"platform"],[3235,30,2910,22],[3235,32,2910,24,"config"],[3235,38,2910,30],[3235,39,2910,31,"platform"],[3235,47,2910,39],[3236,22,2911,14,"user"],[3237,20,2912,12],[3237,21,2912,13],[3237,22,2912,14],[3237,23,2912,15],[3238,18,2912,16],[3239,16,2913,10],[3240,14,2914,8],[3240,15,2914,9],[3241,12,2915,6],[3242,12,2916,6],[3242,18,2916,12],[3242,22,2916,16,"Error"],[3242,27,2916,21],[3242,28,2916,22],[3242,86,2916,80],[3242,87,2916,81],[3243,10,2916,82],[3244,8,2917,4],[3245,6,2918,2],[3245,7,2918,3],[3246,4,2919,0],[3246,5,2919,1],[3247,4,2919,1],[3247,21,2919,1,"_x64"],[3247,25,2919,1],[3248,6,2919,1],[3248,13,2919,1,"_ref30"],[3248,19,2919,1],[3248,20,2919,1,"apply"],[3248,25,2919,1],[3248,32,2919,1,"arguments"],[3248,41,2919,1],[3249,4,2919,1],[3250,2,2919,1],[3252,2,2921,0],[3253,0,2922,0],[3254,0,2923,0],[3255,0,2924,0],[3256,2,2925,0],[3256,11,2925,9,"getSubscribe"],[3256,23,2925,21,"getSubscribe"],[3256,24,2925,22,"config"],[3256,30,2925,28],[3256,32,2925,30],[3257,4,2926,2],[3258,0,2927,0],[3259,0,2928,0],[3260,0,2929,0],[3261,0,2930,0],[3262,0,2931,0],[3263,0,2932,0],[3264,4,2933,2],[3264,11,2933,9],[3264,20,2933,18,"subscribe"],[3264,29,2933,27,"subscribe"],[3264,30,2933,28,"callback"],[3264,38,2933,36],[3264,40,2933,38],[3265,6,2934,4,"spawnCurrentUser"],[3265,22,2934,20],[3265,23,2934,21,"config"],[3265,29,2934,27],[3265,30,2934,28],[3266,6,2935,4],[3266,10,2935,10,"EXIT"],[3266,14,2935,14],[3266,17,2935,17],[3266,24,2935,24],[3267,6,2936,4],[3267,10,2936,10,"self"],[3267,14,2936,14],[3267,17,2936,17,"utilActor"],[3267,26,2936,26],[3267,27,2936,27,"spawn"],[3267,32,2936,32],[3268,8,2936,32],[3268,12,2936,32,"_ref31"],[3268,18,2936,32],[3268,21,2936,32,"_asyncToGenerator"],[3268,38,2936,32],[3268,39,2936,33],[3268,50,2936,39,"ctx"],[3268,53,2936,42],[3268,55,2936,46],[3269,10,2937,6,"ctx"],[3269,13,2937,9],[3269,14,2937,10,"send"],[3269,18,2937,14],[3269,19,2937,15,"NAME"],[3269,23,2937,19],[3269,25,2937,21,"utilActor"],[3269,34,2937,30],[3269,35,2937,31,"SUBSCRIBE"],[3269,44,2937,40],[3269,45,2937,41],[3270,10,2938,6],[3270,17,2938,13],[3270,18,2938,14],[3270,20,2938,16],[3271,12,2939,8],[3271,16,2939,14,"letter"],[3271,22,2939,20],[3271,31,2939,29,"ctx"],[3271,34,2939,32],[3271,35,2939,33,"receive"],[3271,42,2939,40],[3271,43,2939,41],[3271,44,2939,42],[3272,12,2940,8],[3272,16,2940,12,"letter"],[3272,22,2940,18],[3272,23,2940,19,"tag"],[3272,26,2940,22],[3272,31,2940,27,"EXIT"],[3272,35,2940,31],[3272,37,2940,33],[3273,14,2941,10,"ctx"],[3273,17,2941,13],[3273,18,2941,14,"send"],[3273,22,2941,18],[3273,23,2941,19,"NAME"],[3273,27,2941,23],[3273,29,2941,25,"utilActor"],[3273,38,2941,34],[3273,39,2941,35,"UNSUBSCRIBE"],[3273,50,2941,46],[3273,51,2941,47],[3274,14,2942,10],[3275,12,2943,8],[3276,12,2944,8,"callback"],[3276,20,2944,16],[3276,21,2944,17,"letter"],[3276,27,2944,23],[3276,28,2944,24,"data"],[3276,32,2944,28],[3276,33,2944,29],[3277,10,2945,6],[3278,8,2946,4],[3278,9,2946,5],[3279,8,2946,5],[3279,25,2946,5,"_x65"],[3279,29,2946,5],[3280,10,2946,5],[3280,17,2946,5,"_ref31"],[3280,23,2946,5],[3280,24,2946,5,"apply"],[3280,29,2946,5],[3280,36,2946,5,"arguments"],[3280,45,2946,5],[3281,8,2946,5],[3282,6,2946,5],[3282,10,2946,6],[3283,6,2947,4],[3283,13,2947,11],[3283,19,2947,17,"utilActor"],[3283,28,2947,26],[3283,29,2947,27,"send"],[3283,33,2947,31],[3283,34,2947,32,"self"],[3283,38,2947,36],[3283,40,2947,38,"EXIT"],[3283,44,2947,42],[3283,45,2947,43],[3284,4,2948,2],[3284,5,2948,3],[3285,2,2949,0],[3287,2,2951,0],[3288,0,2952,0],[3289,0,2953,0],[3290,0,2954,0],[3291,2,2955,0],[3291,11,2955,9,"getSnapshot"],[3291,22,2955,20,"getSnapshot"],[3291,23,2955,21,"config"],[3291,29,2955,27],[3291,31,2955,29],[3292,4,2956,2],[3293,0,2957,0],[3294,0,2958,0],[3295,0,2959,0],[3296,4,2960,2],[3296,11,2960,9],[3296,20,2960,18,"snapshot"],[3296,28,2960,26,"snapshot"],[3296,29,2960,26],[3296,31,2960,29],[3297,6,2961,4,"spawnCurrentUser"],[3297,22,2961,20],[3297,23,2961,21,"config"],[3297,29,2961,27],[3297,30,2961,28],[3298,6,2962,4],[3298,13,2962,11,"utilActor"],[3298,22,2962,20],[3298,23,2962,21,"send"],[3298,27,2962,25],[3298,28,2962,26,"NAME"],[3298,32,2962,30],[3298,34,2962,32,"SNAPSHOT"],[3298,42,2962,40],[3298,44,2962,42],[3298,48,2962,46],[3298,50,2962,48],[3299,8,2963,6,"expectReply"],[3299,19,2963,17],[3299,21,2963,19],[3299,25,2963,23],[3300,8,2964,6,"timeout"],[3300,15,2964,13],[3300,17,2964,15],[3301,6,2965,4],[3301,7,2965,5],[3301,8,2965,6],[3302,4,2966,2],[3302,5,2966,3],[3303,2,2967,0],[3305,2,2969,0],[3306,0,2970,0],[3307,0,2971,0],[3308,0,2972,0],[3309,0,2973,0],[3310,2,2974,0],[3310,6,2974,6,"getResolveArgument"],[3310,24,2974,24],[3310,27,2974,27,"config"],[3310,33,2974,33],[3310,50,2974,33,"_asyncToGenerator"],[3310,67,2974,33],[3310,68,2974,37],[3310,81,2974,49],[3311,4,2975,2],[3311,8,2975,2,"_yield$getAuthenticat"],[3311,29,2975,2],[3311,38,2977,12,"getAuthenticate"],[3311,53,2977,27],[3311,54,2977,28,"config"],[3311,60,2977,34],[3311,61,2977,35],[3311,62,2977,36],[3311,63,2977,37],[3312,6,2976,4,"addr"],[3312,10,2976,8],[3312,13,2976,8,"_yield$getAuthenticat"],[3312,34,2976,8],[3312,35,2976,4,"addr"],[3312,39,2976,8],[3313,4,2978,2],[3313,11,2978,9,"sdk"],[3313,14,2978,12],[3313,15,2978,13,"arg"],[3313,18,2978,16],[3313,19,2978,17,"utilAddress"],[3313,30,2978,28],[3313,31,2978,29,"withPrefix"],[3313,41,2978,39],[3313,42,2978,40,"addr"],[3313,46,2978,44],[3313,47,2978,45],[3313,49,2978,47,"t__namespace"],[3313,61,2978,59],[3313,62,2978,60,"Address"],[3313,69,2978,67],[3313,70,2978,68],[3314,2,2979,0],[3314,3,2979,1],[3315,2,2980,0],[3315,6,2980,6,"makeSignable"],[3315,18,2980,18],[3315,21,2980,21,"msg"],[3315,24,2980,24],[3315,28,2980,28],[3316,4,2981,2,"utilInvariant"],[3316,17,2981,15],[3316,18,2981,16,"invariant"],[3316,27,2981,25],[3316,28,2981,26],[3316,42,2981,40],[3316,43,2981,41,"test"],[3316,47,2981,45],[3316,48,2981,46,"msg"],[3316,51,2981,49],[3316,52,2981,50],[3316,54,2981,52],[3316,84,2981,82],[3316,85,2981,83],[3317,4,2982,2],[3317,11,2982,9],[3318,6,2983,4,"message"],[3318,13,2983,11],[3318,15,2983,13,"msg"],[3319,4,2984,2],[3319,5,2984,3],[3320,2,2985,0],[3320,3,2985,1],[3322,2,2987,0],[3323,0,2988,0],[3324,0,2989,0],[3325,0,2990,0],[3326,2,2991,0],[3326,6,2991,6,"getSignUserMessage"],[3326,24,2991,24],[3326,27,2991,27,"config"],[3326,33,2991,33],[3327,2,2991,33],[3328,2,2992,0],[3329,0,2993,0],[3330,0,2994,0],[3331,0,2995,0],[3332,0,2996,0],[3333,2,2992,0],[3334,4,2992,0],[3334,8,2992,0,"_ref33"],[3334,14,2992,0],[3334,17,2992,0,"_asyncToGenerator"],[3334,34,2992,0],[3334,35,2997,0],[3334,46,2997,6,"msg"],[3334,49,2997,9],[3334,51,2997,13],[3335,6,2998,2,"spawnCurrentUser"],[3335,22,2998,18],[3335,23,2998,19,"config"],[3335,29,2998,25],[3335,30,2998,26],[3336,6,2999,2],[3336,10,2999,8,"user"],[3336,14,2999,12],[3336,23,2999,21,"getAuthenticate"],[3336,38,2999,36],[3336,39,2999,37,"config"],[3336,45,2999,43],[3336,46,2999,44],[3336,47,2999,45],[3337,8,3000,4,"redir"],[3337,13,3000,9],[3337,15,3000,11],[3338,6,3001,2],[3338,7,3001,3],[3338,8,3001,4],[3339,6,3002,2],[3339,10,3002,8,"signingService"],[3339,24,3002,22],[3339,27,3002,25,"serviceOfType"],[3339,40,3002,38],[3339,41,3002,39,"user"],[3339,45,3002,43],[3339,46,3002,44,"services"],[3339,54,3002,52],[3339,56,3002,54],[3339,72,3002,70],[3339,73,3002,71],[3340,6,3003,2,"utilInvariant"],[3340,19,3003,15],[3340,20,3003,16,"invariant"],[3340,29,3003,25],[3340,30,3003,26,"signingService"],[3340,44,3003,40],[3340,46,3003,42],[3340,100,3003,96],[3340,101,3003,97],[3341,6,3004,2],[3341,10,3004,6],[3342,8,3005,4],[3342,12,3005,10,"response"],[3342,20,3005,18],[3342,29,3005,27,"execService"],[3342,40,3005,38],[3342,41,3005,39],[3343,10,3006,6,"service"],[3343,17,3006,13],[3343,19,3006,15,"signingService"],[3343,33,3006,29],[3344,10,3007,6,"msg"],[3344,13,3007,9],[3344,15,3007,11,"makeSignable"],[3344,27,3007,23],[3344,28,3007,24,"msg"],[3344,31,3007,27],[3344,32,3007,28],[3345,10,3008,6,"platform"],[3345,18,3008,14],[3345,20,3008,16,"config"],[3345,26,3008,22],[3345,27,3008,23,"platform"],[3345,35,3008,31],[3346,10,3009,6,"user"],[3347,8,3010,4],[3347,9,3010,5],[3347,10,3010,6],[3348,8,3011,4],[3348,12,3011,8,"Array"],[3348,17,3011,13],[3348,18,3011,14,"isArray"],[3348,25,3011,21],[3348,26,3011,22,"response"],[3348,34,3011,30],[3348,35,3011,31],[3348,37,3011,33],[3349,10,3012,6],[3349,17,3012,13,"response"],[3349,25,3012,21],[3349,26,3012,22,"map"],[3349,29,3012,25],[3349,30,3012,26,"compSigs"],[3349,38,3012,34],[3349,42,3012,38,"normalizeCompositeSignature"],[3349,69,3012,65],[3349,70,3012,66,"compSigs"],[3349,78,3012,74],[3349,79,3012,75],[3349,80,3012,76],[3350,8,3013,4],[3350,9,3013,5],[3350,15,3013,11],[3351,10,3014,6],[3351,17,3014,13],[3351,18,3014,14,"normalizeCompositeSignature"],[3351,45,3014,41],[3351,46,3014,42,"response"],[3351,54,3014,50],[3351,55,3014,51],[3351,56,3014,52],[3352,8,3015,4],[3353,6,3016,2],[3353,7,3016,3],[3353,8,3016,4],[3353,15,3016,11,"error"],[3353,20,3016,16],[3353,22,3016,18],[3354,8,3017,4],[3354,15,3017,11,"error"],[3354,20,3017,16],[3355,6,3018,2],[3356,4,3019,0],[3356,5,3019,1],[3357,4,3019,1],[3357,21,3019,1,"_x66"],[3357,25,3019,1],[3358,6,3019,1],[3358,13,3019,1,"_ref33"],[3358,19,3019,1],[3358,20,3019,1,"apply"],[3358,25,3019,1],[3358,32,3019,1,"arguments"],[3358,41,3019,1],[3359,4,3019,1],[3360,2,3019,1],[3362,2,3021,0],[3363,0,3022,0],[3364,0,3023,0],[3365,0,3024,0],[3366,0,3025,0],[3367,0,3026,0],[3369,2,3028,0],[3370,0,3029,0],[3371,0,3030,0],[3372,0,3031,0],[3373,0,3032,0],[3374,0,3033,0],[3375,2,3034,0],[3375,6,3034,6,"getCurrentUser"],[3375,20,3034,20],[3375,23,3034,23,"config"],[3375,29,3034,29],[3375,33,3034,33],[3376,4,3035,2],[3376,8,3035,8,"currentUser"],[3376,19,3035,19],[3376,22,3035,22],[3377,6,3036,4,"authenticate"],[3377,18,3036,16],[3377,20,3036,18,"getAuthenticate"],[3377,35,3036,33],[3377,36,3036,34,"config"],[3377,42,3036,40],[3377,43,3036,41],[3378,6,3037,4,"unauthenticate"],[3378,20,3037,18],[3378,22,3037,20,"getUnauthenticate"],[3378,39,3037,37],[3378,40,3037,38,"config"],[3378,46,3037,44],[3378,47,3037,45],[3379,6,3038,4,"authorization"],[3379,19,3038,17],[3379,21,3038,19,"getAuthorization"],[3379,37,3038,35],[3379,38,3038,36,"config"],[3379,44,3038,42],[3379,45,3038,43],[3380,6,3039,4,"signUserMessage"],[3380,21,3039,19],[3380,23,3039,21,"getSignUserMessage"],[3380,41,3039,39],[3380,42,3039,40,"config"],[3380,48,3039,46],[3380,49,3039,47],[3381,6,3040,4,"subscribe"],[3381,15,3040,13],[3381,17,3040,15,"getSubscribe"],[3381,29,3040,27],[3381,30,3040,28,"config"],[3381,36,3040,34],[3381,37,3040,35],[3382,6,3041,4,"snapshot"],[3382,14,3041,12],[3382,16,3041,14,"getSnapshot"],[3382,27,3041,25],[3382,28,3041,26,"config"],[3382,34,3041,32],[3382,35,3041,33],[3383,6,3042,4,"resolveArgument"],[3383,21,3042,19],[3383,23,3042,21,"getResolveArgument"],[3383,41,3042,39],[3383,42,3042,40,"config"],[3383,48,3042,46],[3384,4,3043,2],[3384,5,3043,3],[3385,4,3044,2],[3385,11,3044,9,"Object"],[3385,17,3044,15],[3385,18,3044,16,"assign"],[3385,24,3044,22],[3385,25,3044,23],[3385,31,3044,29],[3386,6,3045,4],[3386,13,3045,11],[3387,8,3046,6],[3387,11,3046,9,"currentUser"],[3388,6,3047,4],[3388,7,3047,5],[3389,4,3048,2],[3389,5,3048,3],[3389,7,3048,5],[3390,6,3049,4],[3390,9,3049,7,"currentUser"],[3391,4,3050,2],[3391,5,3050,3],[3391,6,3050,4],[3392,2,3051,0],[3392,3,3051,1],[3394,2,3053,0],[3395,0,3054,0],[3396,0,3055,0],[3397,0,3056,0],[3398,0,3057,0],[3399,0,3058,0],[3400,2,3059,0],[3400,6,3059,6,"getMutate"],[3400,15,3059,15],[3400,18,3059,18,"currentUserOrConfig"],[3400,37,3059,37],[3400,41,3059,41],[3401,4,3060,2],[3402,0,3061,0],[3403,0,3062,0],[3404,0,3063,0],[3405,0,3064,0],[3406,0,3065,0],[3407,0,3066,0],[3408,0,3067,0],[3409,0,3068,0],[3410,0,3069,0],[3411,0,3070,0],[3412,0,3071,0],[3413,0,3072,0],[3414,0,3073,0],[3415,0,3074,0],[3416,0,3075,0],[3417,0,3076,0],[3418,0,3077,0],[3419,0,3078,0],[3420,0,3079,0],[3421,0,3080,0],[3422,0,3081,0],[3423,0,3082,0],[3424,0,3083,0],[3425,0,3084,0],[3426,0,3085,0],[3427,0,3086,0],[3428,0,3087,0],[3429,0,3088,0],[3430,0,3089,0],[3431,0,3090,0],[3432,0,3091,0],[3433,0,3092,0],[3434,0,3093,0],[3435,0,3094,0],[3436,0,3095,0],[3437,0,3096,0],[3438,0,3097,0],[3439,0,3098,0],[3440,0,3099,0],[3441,0,3100,0],[3442,0,3101,0],[3443,0,3102,0],[3444,0,3103,0],[3445,0,3104,0],[3446,0,3105,0],[3447,0,3106,0],[3448,4,3107,2],[3448,8,3107,8,"mutate"],[3448,14,3107,14],[3449,6,3107,14],[3449,10,3107,14,"_ref34"],[3449,16,3107,14],[3449,19,3107,14,"_asyncToGenerator"],[3449,36,3107,14],[3449,37,3107,17],[3449,50,3107,35],[3450,8,3108,4],[3450,12,3108,8,"opts"],[3450,16,3108,12],[3450,19,3108,15,"arguments"],[3450,28,3108,24],[3450,29,3108,25,"length"],[3450,35,3108,31],[3450,38,3108,34],[3450,39,3108,35],[3450,43,3108,39,"arguments"],[3450,52,3108,48],[3450,53,3108,49],[3450,54,3108,50],[3450,55,3108,51],[3450,60,3108,56,"undefined"],[3450,69,3108,65],[3450,72,3108,68,"arguments"],[3450,81,3108,77],[3450,82,3108,78],[3450,83,3108,79],[3450,84,3108,80],[3450,87,3108,83],[3450,88,3108,84],[3450,89,3108,85],[3451,8,3109,4],[3451,12,3109,8,"txid"],[3451,16,3109,12],[3452,8,3110,4],[3452,12,3110,8],[3453,10,3111,6],[3453,16,3111,12,"preMutate"],[3453,25,3111,21],[3453,26,3111,22,"opts"],[3453,30,3111,26],[3453,31,3111,27],[3454,10,3112,6,"opts"],[3454,14,3112,10],[3454,23,3112,19,"prepTemplateOpts"],[3454,39,3112,35],[3454,40,3112,36,"opts"],[3454,44,3112,40],[3454,45,3112,41],[3455,10,3113,6],[3456,10,3114,6],[3457,10,3115,6],[3457,14,3115,12,"currentUser"],[3457,25,3115,23],[3457,28,3115,26],[3457,35,3115,33,"currentUserOrConfig"],[3457,54,3115,52],[3457,59,3115,57],[3457,69,3115,67],[3457,72,3115,70,"currentUserOrConfig"],[3457,91,3115,89],[3457,94,3115,92,"getCurrentUser"],[3457,108,3115,106],[3457,109,3115,107,"currentUserOrConfig"],[3457,128,3115,126],[3457,129,3115,127],[3458,10,3116,6],[3458,14,3116,12,"authz"],[3458,19,3116,17],[3458,28,3116,26,"sdk__namespace"],[3458,42,3116,40],[3458,43,3116,41,"config"],[3458,49,3116,47],[3458,50,3116,48],[3458,51,3116,49],[3458,52,3116,50,"get"],[3458,55,3116,53],[3458,56,3116,54],[3458,67,3116,65],[3458,69,3116,67,"currentUser"],[3458,80,3116,78],[3458,81,3116,79],[3458,82,3116,80],[3458,83,3116,81,"authorization"],[3458,96,3116,94],[3458,97,3116,95],[3459,10,3117,6,"txid"],[3459,14,3117,10],[3459,17,3117,13,"sdk__namespace"],[3459,31,3117,27],[3459,32,3117,28,"send"],[3459,36,3117,32],[3459,37,3117,33],[3459,38,3117,34,"sdk__namespace"],[3459,52,3117,48],[3459,53,3117,49,"transaction"],[3459,64,3117,60],[3459,65,3117,61,"opts"],[3459,69,3117,65],[3459,70,3117,66,"cadence"],[3459,77,3117,73],[3459,78,3117,74],[3459,80,3117,76,"sdk__namespace"],[3459,94,3117,90],[3459,95,3117,91,"args"],[3459,99,3117,95],[3459,100,3117,96,"normalizeArgs"],[3459,113,3117,109],[3459,114,3117,110,"opts"],[3459,118,3117,114],[3459,119,3117,115,"args"],[3459,123,3117,119],[3459,127,3117,123],[3459,129,3117,125],[3459,130,3117,126],[3459,131,3117,127],[3459,133,3117,129,"opts"],[3459,137,3117,133],[3459,138,3117,134,"limit"],[3459,143,3117,139],[3459,147,3117,143,"isNumber"],[3459,155,3117,151],[3459,156,3117,152,"opts"],[3459,160,3117,156],[3459,161,3117,157,"limit"],[3459,166,3117,162],[3459,167,3117,163],[3459,171,3117,167,"sdk__namespace"],[3459,185,3117,181],[3459,186,3117,182,"limit"],[3459,191,3117,187],[3459,192,3117,188,"opts"],[3459,196,3117,192],[3459,197,3117,193,"limit"],[3459,202,3117,198],[3459,203,3117,199],[3460,10,3118,6],[3461,10,3119,6,"sdk__namespace"],[3461,24,3119,20],[3461,25,3119,21,"proposer"],[3461,33,3119,29],[3461,34,3119,30,"opts"],[3461,38,3119,34],[3461,39,3119,35,"proposer"],[3461,47,3119,43],[3461,51,3119,47,"opts"],[3461,55,3119,51],[3461,56,3119,52,"authz"],[3461,61,3119,57],[3461,65,3119,61,"authz"],[3461,70,3119,66],[3461,71,3119,67],[3462,10,3120,6],[3463,10,3121,6,"sdk__namespace"],[3463,24,3121,20],[3463,25,3121,21,"payer"],[3463,30,3121,26],[3463,31,3121,27,"opts"],[3463,35,3121,31],[3463,36,3121,32,"payer"],[3463,41,3121,37],[3463,45,3121,41,"opts"],[3463,49,3121,45],[3463,50,3121,46,"authz"],[3463,55,3121,51],[3463,59,3121,55,"authz"],[3463,64,3121,60],[3463,65,3121,61],[3464,10,3122,6],[3465,10,3123,6,"sdk__namespace"],[3465,24,3123,20],[3465,25,3123,21,"authorizations"],[3465,39,3123,35],[3465,40,3123,36,"opts"],[3465,44,3123,40],[3465,45,3123,41,"authorizations"],[3465,59,3123,55],[3465,63,3123,59],[3465,64,3123,60,"opts"],[3465,68,3123,64],[3465,69,3123,65,"authz"],[3465,74,3123,70],[3465,78,3123,74,"authz"],[3465,83,3123,79],[3465,84,3123,80],[3465,85,3123,81],[3465,86,3123,82],[3465,87,3123,83],[3465,88,3123,84,"then"],[3465,92,3123,88],[3465,93,3123,89,"sdk__namespace"],[3465,107,3123,103],[3465,108,3123,104,"decode"],[3465,114,3123,110],[3465,115,3123,111],[3466,10,3124,6],[3466,17,3124,13,"txid"],[3466,21,3124,17],[3467,8,3125,4],[3467,9,3125,5],[3467,10,3125,6],[3467,17,3125,13,"error"],[3467,22,3125,18],[3467,24,3125,20],[3468,10,3126,6],[3468,16,3126,12,"error"],[3468,21,3126,17],[3469,8,3127,4],[3470,6,3128,2],[3470,7,3128,3],[3471,6,3128,3],[3471,22,3107,8,"mutate"],[3471,28,3107,14,"mutate"],[3471,29,3107,14],[3472,8,3107,14],[3472,15,3107,14,"_ref34"],[3472,21,3107,14],[3472,22,3107,14,"apply"],[3472,27,3107,14],[3472,34,3107,14,"arguments"],[3472,43,3107,14],[3473,6,3107,14],[3474,4,3107,14],[3474,7,3128,3],[3475,4,3129,2],[3475,11,3129,9,"mutate"],[3475,17,3129,15],[3476,2,3130,0],[3476,3,3130,1],[3477,2,3132,0],[3477,11,3132,9,"serviceEndpoint"],[3477,26,3132,24,"serviceEndpoint"],[3477,27,3132,25,"service"],[3477,34,3132,32],[3477,36,3132,34],[3478,4,3133,2],[3478,8,3133,8,"url"],[3478,11,3133,11],[3478,14,3133,14],[3478,18,3133,18,"URL"],[3478,21,3133,21],[3478,22,3133,22,"service"],[3478,29,3133,29],[3478,30,3133,30,"endpoint"],[3478,38,3133,38],[3478,39,3133,39],[3479,4,3134,2],[3479,8,3134,6,"window"],[3479,14,3134,12],[3479,16,3134,14,"location"],[3479,24,3134,22],[3479,26,3134,24,"origin"],[3479,32,3134,30],[3479,34,3134,32],[3480,6,3135,4,"url"],[3480,9,3135,7],[3480,10,3135,8,"searchParams"],[3480,22,3135,20],[3480,23,3135,21,"append"],[3480,29,3135,27],[3480,30,3135,28],[3480,35,3135,33],[3480,37,3135,35,"window"],[3480,43,3135,41],[3480,44,3135,42,"location"],[3480,52,3135,50],[3480,53,3135,51,"origin"],[3480,59,3135,57],[3480,60,3135,58],[3481,4,3136,2],[3482,4,3137,2],[3482,8,3137,6,"service"],[3482,15,3137,13],[3482,16,3137,14,"params"],[3482,22,3137,20],[3482,26,3137,24],[3482,30,3137,28],[3482,32,3137,30],[3483,6,3138,4],[3483,15,3138,4,"_ref35"],[3483,21,3138,4],[3483,25,3138,29,"Object"],[3483,31,3138,35],[3483,32,3138,36,"entries"],[3483,39,3138,43],[3483,40,3138,44,"service"],[3483,47,3138,51],[3483,48,3138,52,"params"],[3483,54,3138,58],[3483,58,3138,62],[3483,59,3138,63],[3483,60,3138,64],[3483,61,3138,65],[3483,63,3138,67],[3484,8,3138,67],[3484,12,3138,67,"_ref36"],[3484,18,3138,67],[3484,21,3138,67,"_slicedToArray"],[3484,35,3138,67],[3484,36,3138,67,"_ref35"],[3484,42,3138,67],[3485,8,3138,67],[3485,12,3138,14,"key"],[3485,15,3138,17],[3485,18,3138,17,"_ref36"],[3485,24,3138,17],[3486,8,3138,17],[3486,12,3138,19,"value"],[3486,17,3138,24],[3486,20,3138,24,"_ref36"],[3486,26,3138,24],[3487,8,3139,6,"url"],[3487,11,3139,9],[3487,12,3139,10,"searchParams"],[3487,24,3139,22],[3487,25,3139,23,"append"],[3487,31,3139,29],[3487,32,3139,30,"key"],[3487,35,3139,33],[3487,37,3139,35,"value"],[3487,42,3139,40],[3487,43,3139,41],[3488,6,3140,4],[3489,4,3141,2],[3490,4,3142,2],[3490,11,3142,9,"url"],[3490,14,3142,12],[3491,2,3143,0],[3492,2,3145,0],[3492,11,3145,9,"fetchService"],[3492,23,3145,21,"fetchService"],[3492,24,3145,22,"service"],[3492,31,3145,29],[3492,33,3145,31],[3493,4,3146,2],[3493,8,3146,6,"opts"],[3493,12,3146,10],[3493,15,3146,13,"arguments"],[3493,24,3146,22],[3493,25,3146,23,"length"],[3493,31,3146,29],[3493,34,3146,32],[3493,35,3146,33],[3493,39,3146,37,"arguments"],[3493,48,3146,46],[3493,49,3146,47],[3493,50,3146,48],[3493,51,3146,49],[3493,56,3146,54,"undefined"],[3493,65,3146,63],[3493,68,3146,66,"arguments"],[3493,77,3146,75],[3493,78,3146,76],[3493,79,3146,77],[3493,80,3146,78],[3493,83,3146,81],[3493,84,3146,82],[3493,85,3146,83],[3494,4,3147,2],[3494,8,3147,8,"method"],[3494,14,3147,14],[3494,17,3147,17,"opts"],[3494,21,3147,21],[3494,22,3147,22,"method"],[3494,28,3147,28],[3494,32,3147,32],[3494,38,3147,38],[3495,4,3148,2],[3495,8,3148,8,"body"],[3495,12,3148,12],[3495,15,3148,15,"method"],[3495,21,3148,21],[3495,26,3148,26],[3495,31,3148,31],[3495,34,3148,34,"undefined"],[3495,43,3148,43],[3495,46,3148,46,"JSON"],[3495,50,3148,50],[3495,51,3148,51,"stringify"],[3495,60,3148,60],[3495,61,3148,61,"opts"],[3495,65,3148,65],[3495,66,3148,66,"data"],[3495,70,3148,70],[3495,74,3148,74,"service"],[3495,81,3148,81],[3495,82,3148,82,"data"],[3495,86,3148,86],[3495,90,3148,90],[3495,91,3148,91],[3495,92,3148,92],[3495,93,3148,93],[3496,4,3149,2],[3496,11,3149,9,"fetch"],[3496,16,3149,14],[3496,17,3149,15,"serviceEndpoint"],[3496,32,3149,30],[3496,33,3149,31,"service"],[3496,40,3149,38],[3496,41,3149,39],[3496,43,3149,41],[3497,6,3150,4,"method"],[3497,12,3150,10],[3497,14,3150,12,"method"],[3497,20,3150,18],[3498,6,3151,4,"headers"],[3498,13,3151,11],[3498,15,3151,13],[3499,8,3152,6],[3499,12,3152,10,"service"],[3499,19,3152,17],[3499,20,3152,18,"headers"],[3499,27,3152,25],[3499,31,3152,29],[3499,32,3152,30],[3499,33,3152,31],[3499,34,3152,32],[3500,8,3153,6],[3500,12,3153,10,"opts"],[3500,16,3153,14],[3500,17,3153,15,"headers"],[3500,24,3153,22],[3500,28,3153,26],[3500,29,3153,27],[3500,30,3153,28],[3500,31,3153,29],[3501,8,3154,6],[3501,22,3154,20],[3501,24,3154,22],[3502,6,3155,4],[3502,7,3155,5],[3503,6,3156,4,"body"],[3503,10,3156,8],[3503,12,3156,10,"body"],[3504,4,3157,2],[3504,5,3157,3],[3504,6,3157,4],[3504,7,3157,5,"then"],[3504,11,3157,9],[3504,12,3157,10,"d"],[3504,13,3157,11],[3504,17,3157,15,"d"],[3504,18,3157,16],[3504,19,3157,17,"json"],[3504,23,3157,21],[3504,24,3157,22],[3504,25,3157,23],[3504,26,3157,24],[3505,2,3158,0],[3507,2,3160,0],[3508,2,3161,0],[3509,2,3162,0],[3510,2,3163,0],[3511,2,3164,0],[3512,2,3165,0],[3513,2,3166,0],[3514,2,3167,0],[3515,2,3168,0],[3516,2,3169,0],[3516,11,3169,9,"normalizePollingResponse"],[3516,35,3169,33,"normalizePollingResponse"],[3516,36,3169,34,"resp"],[3516,40,3169,38],[3516,42,3169,40],[3517,4,3170,2],[3517,8,3170,6,"resp"],[3517,12,3170,10],[3517,16,3170,14],[3517,20,3170,18],[3517,22,3170,20],[3517,29,3170,27],[3517,33,3170,31],[3518,4,3171,2],[3518,8,3171,6],[3518,9,3171,7,"resp"],[3518,13,3171,11],[3518,14,3171,12],[3518,21,3171,19],[3518,22,3171,20],[3518,24,3171,22],[3519,6,3172,4],[3519,13,3172,11],[3520,8,3173,6],[3520,11,3173,9,"POLLING_RESPONSE_PRAGMA"],[3520,34,3173,32],[3521,8,3174,6,"status"],[3521,14,3174,12],[3521,16,3174,14,"resp"],[3521,20,3174,18],[3521,21,3174,19,"status"],[3521,27,3174,25],[3521,31,3174,29],[3521,41,3174,39],[3522,8,3175,6,"reason"],[3522,14,3175,12],[3522,16,3175,14,"resp"],[3522,20,3175,18],[3522,21,3175,19,"reason"],[3522,27,3175,25],[3522,31,3175,29],[3522,35,3175,33],[3523,8,3176,6,"data"],[3523,12,3176,10],[3523,14,3176,12,"resp"],[3523,18,3176,16],[3523,19,3176,17,"compositeSignature"],[3523,37,3176,35],[3523,41,3176,39,"resp"],[3523,45,3176,43],[3523,46,3176,44,"data"],[3523,50,3176,48],[3523,54,3176,52],[3524,10,3177,8],[3524,13,3177,11,"resp"],[3525,8,3178,6],[3525,9,3178,7],[3525,13,3178,11],[3525,14,3178,12],[3525,15,3178,13],[3526,8,3179,6,"updates"],[3526,15,3179,13],[3526,17,3179,15,"normalizeBackChannelRpc"],[3526,40,3179,38],[3526,41,3179,39,"resp"],[3526,45,3179,43],[3526,46,3179,44,"authorizationUpdates"],[3526,66,3179,64],[3526,67,3179,65],[3527,8,3180,6,"local"],[3527,13,3180,11],[3527,15,3180,13,"normalizeFrame"],[3527,29,3180,27],[3527,30,3180,28],[3527,31,3180,29,"resp"],[3527,35,3180,33],[3527,36,3180,34,"local"],[3527,41,3180,39],[3527,45,3180,43],[3527,47,3180,45],[3527,49,3180,47],[3527,50,3180,48],[3527,51,3180,49],[3528,6,3181,4],[3528,7,3181,5],[3529,4,3182,2],[3530,4,3183,2],[3530,12,3183,10,"resp"],[3530,16,3183,14],[3530,17,3183,15],[3530,24,3183,22],[3530,25,3183,23],[3531,6,3184,4],[3531,11,3184,9],[3531,18,3184,16],[3532,8,3185,6],[3532,15,3185,13,"resp"],[3532,19,3185,17],[3533,6,3186,4],[3534,8,3187,6],[3534,15,3187,13],[3534,19,3187,17],[3535,4,3188,2],[3536,2,3189,0],[3537,2,3191,0],[3537,6,3191,6,"OPTIONS"],[3537,13,3191,13],[3537,16,3191,16],[3538,4,3192,2],[3538,14,3192,12],[3538,16,3192,14],[3538,21,3192,19],[3539,4,3193,2],[3539,15,3193,13],[3539,17,3193,15],[3540,2,3194,0],[3540,3,3194,1],[3541,2,3195,0],[3541,6,3195,6,"serviceMethod"],[3541,19,3195,19],[3541,22,3195,22,"service"],[3541,29,3195,29],[3541,33,3195,33],[3542,4,3196,2,"utilInvariant"],[3542,17,3196,15],[3542,18,3196,16,"invariant"],[3542,27,3196,25],[3542,28,3196,26,"OPTIONS"],[3542,35,3196,33],[3542,36,3196,34,"service"],[3542,43,3196,41],[3542,44,3196,42,"method"],[3542,50,3196,48],[3542,51,3196,49],[3542,53,3196,51],[3542,103,3196,101],[3542,105,3196,103],[3543,6,3197,4,"service"],[3544,4,3198,2],[3544,5,3198,3],[3544,6,3198,4],[3545,4,3199,2],[3545,11,3199,9,"OPTIONS"],[3545,18,3199,16],[3545,19,3199,17,"service"],[3545,26,3199,24],[3545,27,3199,25,"method"],[3545,33,3199,31],[3545,34,3199,32],[3546,2,3200,0],[3546,3,3200,1],[3547,2,3200,2],[3547,11,3201,15,"poll"],[3547,15,3201,19,"poll"],[3547,16,3201,19,"_x67"],[3547,20,3201,19],[3548,4,3201,19],[3548,11,3201,19,"_poll"],[3548,16,3201,19],[3548,17,3201,19,"apply"],[3548,22,3201,19],[3548,29,3201,19,"arguments"],[3548,38,3201,19],[3549,2,3201,19],[3550,2,3201,19],[3550,11,3201,19,"_poll"],[3550,17,3201,19],[3551,4,3201,19,"_poll"],[3551,9,3201,19],[3551,12,3201,19,"_asyncToGenerator"],[3551,29,3201,19],[3551,30,3201,0],[3551,41,3201,20,"service"],[3551,48,3201,27],[3551,50,3201,29],[3552,6,3202,2],[3552,10,3202,6,"checkCanContinue"],[3552,26,3202,22],[3552,29,3202,25,"arguments"],[3552,38,3202,34],[3552,39,3202,35,"length"],[3552,45,3202,41],[3552,48,3202,44],[3552,49,3202,45],[3552,53,3202,49,"arguments"],[3552,62,3202,58],[3552,63,3202,59],[3552,64,3202,60],[3552,65,3202,61],[3552,70,3202,66,"undefined"],[3552,79,3202,75],[3552,82,3202,78,"arguments"],[3552,91,3202,87],[3552,92,3202,88],[3552,93,3202,89],[3552,94,3202,90],[3552,97,3202,93],[3552,103,3202,99],[3552,107,3202,103],[3553,6,3203,2,"utilInvariant"],[3553,19,3203,15],[3553,20,3203,16,"invariant"],[3553,29,3203,25],[3553,30,3203,26,"service"],[3553,37,3203,33],[3553,39,3203,35],[3553,64,3203,60],[3553,66,3203,62],[3554,8,3204,4,"service"],[3555,6,3205,2],[3555,7,3205,3],[3555,8,3205,4],[3556,6,3206,2],[3556,10,3206,8,"canContinue"],[3556,21,3206,19],[3556,24,3206,22,"checkCanContinue"],[3556,40,3206,38],[3556,41,3206,39],[3556,42,3206,40],[3557,6,3207,2],[3557,10,3207,6],[3557,11,3207,7,"canContinue"],[3557,22,3207,18],[3557,24,3207,20],[3557,30,3207,26],[3557,34,3207,30,"Error"],[3557,39,3207,35],[3557,40,3207,36],[3557,59,3207,55],[3557,60,3207,56],[3558,6,3208,2],[3558,10,3208,6,"resp"],[3558,14,3208,10],[3559,6,3209,2],[3559,10,3209,6],[3560,8,3210,4],[3560,12,3210,8],[3560,19,3210,15,"document"],[3560,27,3210,23],[3560,32,3210,28],[3560,43,3210,39],[3560,47,3210,43,"document"],[3560,55,3210,51],[3560,56,3210,52,"visibilityState"],[3560,71,3210,67],[3560,76,3210,72],[3560,84,3210,80],[3560,86,3210,82],[3561,10,3211,6],[3561,16,3211,12],[3561,20,3211,16,"Promise"],[3561,27,3211,23],[3561,28,3211,24,"r"],[3561,29,3211,25],[3561,33,3211,29,"setTimeout"],[3561,43,3211,39],[3561,44,3211,40,"r"],[3561,45,3211,41],[3561,47,3211,43],[3561,50,3211,46],[3561,51,3211,47],[3561,52,3211,48],[3562,10,3212,6],[3562,17,3212,13,"poll"],[3562,21,3212,17],[3562,22,3212,18,"service"],[3562,29,3212,25],[3562,31,3212,27,"checkCanContinue"],[3562,47,3212,43],[3562,48,3212,44],[3563,8,3213,4],[3564,8,3214,4,"resp"],[3564,12,3214,8],[3564,21,3214,17,"fetchService"],[3564,33,3214,29],[3564,34,3214,30,"service"],[3564,41,3214,37],[3564,43,3214,39],[3565,10,3215,6,"method"],[3565,16,3215,12],[3565,18,3215,14,"serviceMethod"],[3565,31,3215,27],[3565,32,3215,28,"service"],[3565,39,3215,35],[3566,8,3216,4],[3566,9,3216,5],[3566,10,3216,6],[3566,11,3216,7,"then"],[3566,15,3216,11],[3566,16,3216,12,"normalizePollingResponse"],[3566,40,3216,36],[3566,41,3216,37],[3567,6,3217,2],[3567,7,3217,3],[3567,8,3217,4],[3567,15,3217,11,"error"],[3567,20,3217,16],[3567,22,3217,18],[3568,8,3218,4],[3568,14,3218,10,"error"],[3568,19,3218,15],[3569,6,3219,2],[3570,6,3220,2],[3570,14,3220,10,"resp"],[3570,18,3220,14],[3570,19,3220,15,"status"],[3570,25,3220,21],[3571,8,3221,4],[3571,13,3221,9],[3571,23,3221,19],[3572,10,3222,6],[3572,17,3222,13,"resp"],[3572,21,3222,17],[3572,22,3222,18,"data"],[3572,26,3222,22],[3573,8,3223,4],[3573,13,3223,9],[3573,23,3223,19],[3574,10,3224,6],[3574,16,3224,12],[3574,20,3224,16,"Error"],[3574,25,3224,21],[3574,26,3224,22],[3574,39,3224,35,"resp"],[3574,43,3224,39],[3574,44,3224,40,"reason"],[3574,50,3224,46],[3574,54,3224,50],[3574,75,3224,71],[3574,77,3224,73],[3574,78,3224,74],[3575,8,3225,4],[3576,10,3226,6],[3576,16,3226,12],[3576,20,3226,16,"Promise"],[3576,27,3226,23],[3576,28,3226,24,"r"],[3576,29,3226,25],[3576,33,3226,29,"setTimeout"],[3576,43,3226,39],[3576,44,3226,40,"r"],[3576,45,3226,41],[3576,47,3226,43],[3576,50,3226,46],[3576,51,3226,47],[3576,52,3226,48],[3577,10,3227,6],[3577,17,3227,13,"poll"],[3577,21,3227,17],[3577,22,3227,18,"resp"],[3577,26,3227,22],[3577,27,3227,23,"updates"],[3577,34,3227,30],[3577,36,3227,32,"checkCanContinue"],[3577,52,3227,48],[3577,53,3227,49],[3578,6,3228,2],[3579,4,3229,0],[3579,5,3229,1],[3580,4,3229,1],[3580,11,3229,1,"_poll"],[3580,16,3229,1],[3580,17,3229,1,"apply"],[3580,22,3229,1],[3580,29,3229,1,"arguments"],[3580,38,3229,1],[3581,2,3229,1],[3582,2,3231,0],[3582,6,3231,6,"getExecHttpPost"],[3582,21,3231,21],[3582,24,3231,24,"execLocal"],[3582,33,3231,33],[3583,4,3231,33],[3583,8,3231,33,"_ref37"],[3583,14,3231,33],[3583,17,3231,33,"_asyncToGenerator"],[3583,34,3231,33],[3583,35,3231,37],[3583,46,3231,43,"_ref"],[3583,50,3231,47],[3583,52,3231,51],[3584,6,3232,2],[3584,10,3233,4,"service"],[3584,17,3233,11],[3584,20,3237,6,"_ref"],[3584,24,3237,10],[3584,25,3233,4,"service"],[3584,32,3233,11],[3585,8,3234,4,"body"],[3585,12,3234,8],[3585,15,3237,6,"_ref"],[3585,19,3237,10],[3585,20,3234,4,"body"],[3585,24,3234,8],[3586,8,3235,4,"config"],[3586,14,3235,10],[3586,17,3237,6,"_ref"],[3586,21,3237,10],[3586,22,3235,4,"config"],[3586,28,3235,10],[3587,8,3236,4,"opts"],[3587,12,3236,8],[3587,15,3237,6,"_ref"],[3587,19,3237,10],[3587,20,3236,4,"opts"],[3587,24,3236,8],[3588,6,3238,2],[3588,10,3238,8,"resp"],[3588,14,3238,12],[3588,23,3238,21,"fetchService"],[3588,35,3238,33],[3588,36,3238,34,"service"],[3588,43,3238,41],[3588,45,3238,43],[3589,8,3239,4,"data"],[3589,12,3239,8],[3589,14,3239,10],[3590,10,3240,6,"fclVersion"],[3590,20,3240,16],[3590,22,3240,18,"VERSION"],[3590,29,3240,25],[3591,10,3241,6,"service"],[3591,17,3241,13],[3591,19,3241,15],[3592,12,3242,8,"params"],[3592,18,3242,14],[3592,20,3242,16,"service"],[3592,27,3242,23],[3592,28,3242,24,"params"],[3592,34,3242,30],[3593,12,3243,8,"data"],[3593,16,3243,12],[3593,18,3243,14,"service"],[3593,25,3243,21],[3593,26,3243,22,"data"],[3593,30,3243,26],[3594,12,3244,8,"type"],[3594,16,3244,12],[3594,18,3244,14,"service"],[3594,25,3244,21],[3594,26,3244,22,"type"],[3595,10,3245,6],[3595,11,3245,7],[3596,10,3246,6,"config"],[3596,16,3246,12],[3597,10,3247,6],[3597,13,3247,9,"body"],[3598,8,3248,4],[3599,6,3249,2],[3599,7,3249,3],[3599,8,3249,4],[3599,9,3249,5,"then"],[3599,13,3249,9],[3599,14,3249,10,"normalizePollingResponse"],[3599,38,3249,34],[3599,39,3249,35],[3600,6,3250,2],[3600,10,3250,6,"resp"],[3600,14,3250,10],[3600,15,3250,11,"status"],[3600,21,3250,17],[3600,26,3250,22],[3600,36,3250,32],[3600,38,3250,34],[3601,8,3251,4],[3601,15,3251,11,"resp"],[3601,19,3251,15],[3601,20,3251,16,"data"],[3601,24,3251,20],[3602,6,3252,2],[3602,7,3252,3],[3602,13,3252,9],[3602,17,3252,13,"resp"],[3602,21,3252,17],[3602,22,3252,18,"status"],[3602,28,3252,24],[3602,33,3252,29],[3602,43,3252,39],[3602,45,3252,41],[3603,8,3253,4],[3603,14,3253,10],[3603,18,3253,14,"Error"],[3603,23,3253,19],[3603,24,3253,20],[3603,37,3253,33,"resp"],[3603,41,3253,37],[3603,42,3253,38,"reason"],[3603,48,3253,44],[3603,52,3253,48],[3603,73,3253,69],[3603,75,3253,71],[3603,76,3253,72],[3604,6,3254,2],[3604,7,3254,3],[3604,13,3254,9],[3604,17,3254,13,"resp"],[3604,21,3254,17],[3604,22,3254,18,"status"],[3604,28,3254,24],[3604,33,3254,29],[3604,43,3254,39],[3604,45,3254,41],[3605,8,3255,4],[3605,15,3255,11,"resp"],[3605,19,3255,15],[3606,6,3256,2],[3606,7,3256,3],[3606,13,3256,9],[3606,17,3256,13,"resp"],[3606,21,3256,17],[3606,22,3256,18,"status"],[3606,28,3256,24],[3606,33,3256,29],[3606,42,3256,38],[3606,44,3256,40],[3607,8,3257,4],[3608,8,3258,4],[3608,12,3258,8,"canContinue"],[3608,23,3258,19],[3608,26,3258,22],[3608,30,3258,26],[3609,8,3259,4],[3609,12,3259,8,"shouldContinue"],[3609,26,3259,22],[3609,29,3259,25],[3609,33,3259,29],[3610,8,3260,4],[3610,12,3260,4,"_yield$execLocal"],[3610,28,3260,4],[3610,37,3260,31,"execLocal"],[3610,46,3260,40],[3610,47,3260,41,"normalizeLocalView"],[3610,65,3260,59],[3610,66,3260,60,"resp"],[3610,70,3260,64],[3610,71,3260,65,"local"],[3610,76,3260,70],[3610,77,3260,71],[3610,79,3260,73],[3611,12,3261,6,"serviceEndpoint"],[3611,27,3261,21],[3612,12,3262,6,"onClose"],[3612,19,3262,13],[3612,21,3262,15,"onClose"],[3612,22,3262,15],[3612,27,3262,21,"shouldContinue"],[3612,41,3262,35],[3612,44,3262,38],[3613,10,3263,4],[3613,11,3263,5],[3613,12,3263,6],[3614,10,3263,6,"_yield$execLocal2"],[3614,27,3263,6],[3614,30,3263,6,"_slicedToArray"],[3614,44,3263,6],[3614,45,3263,6,"_yield$execLocal"],[3614,61,3263,6],[3615,10,3260,11,"_"],[3615,12,3260,12],[3615,15,3260,12,"_yield$execLocal2"],[3615,32,3260,12],[3616,10,3260,14,"unmount"],[3616,17,3260,21],[3616,20,3260,21,"_yield$execLocal2"],[3616,37,3260,21],[3617,8,3264,4],[3617,12,3264,10,"close"],[3617,18,3264,15],[3617,21,3264,18,"close"],[3617,22,3264,18],[3617,27,3264,24],[3618,10,3265,6],[3618,14,3265,10],[3619,12,3266,8,"unmount"],[3619,19,3266,15],[3619,20,3266,16],[3619,21,3266,17],[3620,12,3267,8,"shouldContinue"],[3620,26,3267,22],[3620,29,3267,25],[3620,34,3267,30],[3621,10,3268,6],[3621,11,3268,7],[3621,12,3268,8],[3621,19,3268,15,"error"],[3621,24,3268,20],[3621,26,3268,22],[3622,12,3269,8,"console"],[3622,19,3269,15],[3622,20,3269,16,"error"],[3622,25,3269,21],[3622,26,3269,22],[3622,45,3269,41],[3622,47,3269,43,"error"],[3622,52,3269,48],[3622,53,3269,49],[3623,10,3270,6],[3624,8,3271,4],[3624,9,3271,5],[3625,8,3272,4],[3626,0,3273,0],[3627,0,3274,0],[3628,0,3275,0],[3629,0,3276,0],[3630,0,3277,0],[3631,0,3278,0],[3632,0,3279,0],[3633,0,3280,0],[3634,8,3281,4],[3634,12,3281,10,"checkCanContinue"],[3634,28,3281,26],[3634,31,3281,29,"checkCanContinue"],[3634,32,3281,29],[3634,37,3281,35],[3635,10,3282,6],[3635,14,3282,12,"offsetCanContinue"],[3635,31,3282,29],[3635,34,3282,32,"canContinue"],[3635,45,3282,43],[3636,10,3283,6,"canContinue"],[3636,21,3283,17],[3636,24,3283,20,"shouldContinue"],[3636,38,3283,34],[3637,10,3284,6],[3637,17,3284,13,"offsetCanContinue"],[3637,34,3284,30],[3638,8,3285,4],[3638,9,3285,5],[3639,8,3286,4],[3639,15,3286,11,"poll"],[3639,19,3286,15],[3639,20,3286,16,"resp"],[3639,24,3286,20],[3639,25,3286,21,"updates"],[3639,32,3286,28],[3639,34,3286,30,"checkCanContinue"],[3639,50,3286,46],[3639,51,3286,47],[3639,52,3286,48,"then"],[3639,56,3286,52],[3639,57,3286,53,"serviceResponse"],[3639,72,3286,68],[3639,76,3286,72],[3640,10,3287,6,"close"],[3640,16,3287,11],[3640,17,3287,12],[3640,18,3287,13],[3641,10,3288,6],[3641,17,3288,13,"serviceResponse"],[3641,32,3288,28],[3642,8,3289,4],[3642,9,3289,5],[3642,10,3289,6],[3642,11,3289,7,"catch"],[3642,16,3289,12],[3642,17,3289,13,"error"],[3642,22,3289,18],[3642,26,3289,22],[3643,10,3290,6,"console"],[3643,17,3290,13],[3643,18,3290,14,"error"],[3643,23,3290,19],[3643,24,3290,20,"error"],[3643,29,3290,25],[3643,30,3290,26],[3644,10,3291,6,"close"],[3644,16,3291,11],[3644,17,3291,12],[3644,18,3291,13],[3645,10,3292,6],[3645,16,3292,12,"error"],[3645,21,3292,17],[3646,8,3293,4],[3646,9,3293,5],[3646,10,3293,6],[3647,6,3294,2],[3647,7,3294,3],[3647,13,3294,9],[3648,8,3295,4,"console"],[3648,15,3295,11],[3648,16,3295,12,"error"],[3648,21,3295,17],[3648,22,3295,18],[3648,54,3295,50],[3648,56,3295,52],[3649,10,3296,6,"service"],[3649,17,3296,13],[3650,10,3297,6,"resp"],[3651,8,3298,4],[3651,9,3298,5],[3651,10,3298,6],[3652,8,3299,4],[3652,14,3299,10],[3652,18,3299,14,"Error"],[3652,23,3299,19],[3652,24,3299,20],[3652,56,3299,52],[3652,57,3299,53],[3653,6,3300,2],[3654,4,3301,0],[3654,5,3301,1],[3655,4,3301,1],[3655,21,3301,1,"_x68"],[3655,25,3301,1],[3656,6,3301,1],[3656,13,3301,1,"_ref37"],[3656,19,3301,1],[3656,20,3301,1,"apply"],[3656,25,3301,1],[3656,32,3301,1,"arguments"],[3656,41,3301,1],[3657,4,3301,1],[3658,2,3301,1],[3659,2,3303,0],[3659,6,3303,6,"CLOSE_EVENT"],[3659,17,3303,17],[3659,20,3303,20],[3659,36,3303,36],[3660,2,3304,0],[3660,6,3304,6,"READY_EVENT"],[3660,17,3304,17],[3660,20,3304,20],[3660,36,3304,36],[3661,2,3305,0],[3661,6,3305,6,"RESPONSE_EVENT"],[3661,20,3305,20],[3661,23,3305,23],[3661,42,3305,42],[3662,2,3306,0],[3662,6,3306,6,"CUSTOM_RPC"],[3662,16,3306,16],[3662,19,3306,19],[3662,40,3306,40],[3663,2,3307,0],[3663,6,3307,6,"_"],[3663,7,3307,7],[3663,10,3307,10,"e"],[3663,11,3307,11],[3663,15,3307,15],[3663,22,3307,22,"e"],[3663,23,3307,23],[3663,28,3307,28],[3663,36,3307,36],[3663,40,3307,40,"e"],[3663,41,3307,41],[3663,42,3307,42,"toLowerCase"],[3663,53,3307,53],[3663,54,3307,54],[3663,55,3307,55],[3664,2,3308,0],[3664,6,3308,6,"IGNORE"],[3664,12,3308,12],[3664,15,3308,15],[3664,19,3308,19,"Set"],[3664,22,3308,22],[3664,23,3308,23],[3664,24,3308,24],[3664,43,3308,43],[3664,45,3308,45],[3664,66,3308,66],[3664,68,3308,68],[3664,90,3308,90],[3664,92,3308,92],[3664,110,3308,110],[3664,111,3308,111],[3664,112,3308,112],[3665,2,3309,0],[3665,6,3309,6,"deprecate"],[3665,15,3309,15],[3665,18,3309,18,"deprecate"],[3665,19,3309,19,"was"],[3665,22,3309,22],[3665,24,3309,24,"want"],[3665,28,3309,28],[3665,33,3309,33,"console"],[3665,40,3309,40],[3665,41,3309,41,"warn"],[3665,45,3309,45],[3665,46,3309,46],[3665,66,3309,66],[3665,68,3309,68],[3665,80,3309,80,"was"],[3665,83,3309,83],[3665,99,3309,99,"want"],[3665,103,3309,103],[3665,141,3309,141],[3665,142,3309,142],[3666,2,3310,0],[3666,6,3310,6,"buildMessageHandler"],[3666,25,3310,25],[3666,28,3310,28,"_ref"],[3666,32,3310,32],[3666,36,3310,36],[3667,4,3311,2],[3667,8,3312,4,"close"],[3667,13,3312,9],[3667,16,3319,6,"_ref"],[3667,20,3319,10],[3667,21,3312,4,"close"],[3667,26,3312,9],[3668,6,3313,4,"send"],[3668,10,3313,8],[3668,13,3319,6,"_ref"],[3668,17,3319,10],[3668,18,3313,4,"send"],[3668,22,3313,8],[3669,6,3314,4,"onReady"],[3669,13,3314,11],[3669,16,3319,6,"_ref"],[3669,20,3319,10],[3669,21,3314,4,"onReady"],[3669,28,3314,11],[3670,6,3315,4,"onResponse"],[3670,16,3315,14],[3670,19,3319,6,"_ref"],[3670,23,3319,10],[3670,24,3315,4,"onResponse"],[3670,34,3315,14],[3671,6,3316,4,"onMessage"],[3671,15,3316,13],[3671,18,3319,6,"_ref"],[3671,22,3319,10],[3671,23,3316,4,"onMessage"],[3671,32,3316,13],[3672,6,3317,4,"onCustomRpc"],[3672,17,3317,15],[3672,20,3319,6,"_ref"],[3672,24,3319,10],[3672,25,3317,4,"onCustomRpc"],[3672,36,3317,15],[3673,6,3318,4,"getSource"],[3673,15,3318,13],[3673,18,3319,6,"_ref"],[3673,22,3319,10],[3673,23,3318,4,"getSource"],[3673,32,3318,13],[3674,4,3320,2],[3674,8,3320,6,"source"],[3674,14,3320,12],[3675,4,3321,2],[3675,11,3321,9,"e"],[3675,12,3321,10],[3675,16,3321,14],[3676,6,3322,4],[3676,10,3322,8],[3677,8,3323,6,"source"],[3677,14,3323,12],[3677,17,3323,15,"getSource"],[3677,26,3323,24],[3677,29,3323,27],[3677,30,3323,28],[3677,34,3323,32,"source"],[3677,40,3323,38],[3678,6,3324,4],[3678,7,3324,5],[3678,8,3324,6],[3678,15,3324,13,"_"],[3678,16,3324,14],[3678,18,3324,16],[3679,8,3325,6],[3680,8,3326,6],[3681,8,3327,6,"source"],[3681,14,3327,12],[3681,17,3327,15],[3681,21,3327,19],[3682,6,3328,4],[3683,6,3329,4],[3683,10,3329,8],[3684,8,3330,6],[3684,12,3330,10],[3684,19,3330,17,"e"],[3684,20,3330,18],[3684,21,3330,19,"data"],[3684,25,3330,23],[3684,30,3330,28],[3684,38,3330,36],[3684,40,3330,38],[3685,8,3331,6],[3685,12,3331,10,"IGNORE"],[3685,18,3331,16],[3685,19,3331,17,"has"],[3685,22,3331,20],[3685,23,3331,21,"e"],[3685,24,3331,22],[3685,25,3331,23,"data"],[3685,29,3331,27],[3685,30,3331,28,"type"],[3685,34,3331,32],[3685,35,3331,33],[3685,37,3331,35],[3686,8,3332,6],[3686,12,3332,10,"source"],[3686,18,3332,16],[3686,22,3332,20],[3686,26,3332,24],[3686,30,3332,28,"e"],[3686,31,3332,29],[3686,32,3332,30,"source"],[3686,38,3332,36],[3686,43,3332,41,"source"],[3686,49,3332,47],[3686,51,3332,49],[3687,8,3333,6],[3687,12,3333,10,"_"],[3687,13,3333,11],[3687,14,3333,12,"e"],[3687,15,3333,13],[3687,16,3333,14,"data"],[3687,20,3333,18],[3687,21,3333,19,"type"],[3687,25,3333,23],[3687,26,3333,24],[3687,31,3333,29,"_"],[3687,32,3333,30],[3687,33,3333,31,"CLOSE_EVENT"],[3687,44,3333,42],[3687,45,3333,43],[3687,47,3333,45,"close"],[3687,52,3333,50],[3687,53,3333,51],[3687,54,3333,52],[3688,8,3334,6],[3688,12,3334,10,"_"],[3688,13,3334,11],[3688,14,3334,12,"e"],[3688,15,3334,13],[3688,16,3334,14,"data"],[3688,20,3334,18],[3688,21,3334,19,"type"],[3688,25,3334,23],[3688,26,3334,24],[3688,31,3334,29,"_"],[3688,32,3334,30],[3688,33,3334,31,"READY_EVENT"],[3688,44,3334,42],[3688,45,3334,43],[3688,47,3334,45],[3689,10,3335,8,"onReady"],[3689,17,3335,15],[3689,18,3335,16,"e"],[3689,19,3335,17],[3689,21,3335,19],[3690,12,3336,10,"send"],[3690,16,3336,14],[3691,12,3337,10,"close"],[3692,10,3338,8],[3692,11,3338,9],[3692,12,3338,10],[3693,10,3339,8,"source"],[3693,16,3339,14],[3693,21,3339,19,"e"],[3693,22,3339,20],[3693,23,3339,21,"source"],[3693,29,3339,27],[3694,8,3340,6],[3695,8,3341,6],[3695,12,3341,10,"_"],[3695,13,3341,11],[3695,14,3341,12,"e"],[3695,15,3341,13],[3695,16,3341,14,"data"],[3695,20,3341,18],[3695,21,3341,19,"type"],[3695,25,3341,23],[3695,26,3341,24],[3695,31,3341,29,"_"],[3695,32,3341,30],[3695,33,3341,31,"RESPONSE_EVENT"],[3695,47,3341,45],[3695,48,3341,46],[3695,50,3341,48,"onResponse"],[3695,60,3341,58],[3695,61,3341,59,"e"],[3695,62,3341,60],[3695,64,3341,62],[3696,10,3342,8,"send"],[3696,14,3342,12],[3697,10,3343,8,"close"],[3698,8,3344,6],[3698,9,3344,7],[3698,10,3344,8],[3699,8,3345,6],[3699,12,3345,10,"_"],[3699,13,3345,11],[3699,14,3345,12,"e"],[3699,15,3345,13],[3699,16,3345,14,"data"],[3699,20,3345,18],[3699,21,3345,19,"type"],[3699,25,3345,23],[3699,26,3345,24],[3699,31,3345,29,"_"],[3699,32,3345,30],[3699,33,3345,31,"CUSTOM_RPC"],[3699,43,3345,41],[3699,44,3345,42],[3699,46,3345,44,"onCustomRpc"],[3699,57,3345,55],[3699,58,3345,56,"e"],[3699,59,3345,57],[3699,60,3345,58,"data"],[3699,64,3345,62],[3699,65,3345,63,"payload"],[3699,72,3345,70],[3699,74,3345,72],[3700,10,3346,8,"send"],[3700,14,3346,12],[3701,10,3347,8,"close"],[3702,8,3348,6],[3702,9,3348,7],[3702,10,3348,8],[3703,8,3349,6,"onMessage"],[3703,17,3349,15],[3703,18,3349,16,"e"],[3703,19,3349,17],[3703,21,3349,19],[3704,10,3350,8,"send"],[3704,14,3350,12],[3705,10,3351,8,"close"],[3706,8,3352,6],[3706,9,3352,7],[3706,10,3352,8],[3708,8,3354,6],[3709,8,3355,6],[3709,12,3355,10,"_"],[3709,13,3355,11],[3709,14,3355,12,"e"],[3709,15,3355,13],[3709,16,3355,14,"data"],[3709,20,3355,18],[3709,21,3355,19,"type"],[3709,25,3355,23],[3709,26,3355,24],[3709,31,3355,29,"_"],[3709,32,3355,30],[3709,33,3355,31],[3709,50,3355,48],[3709,51,3355,49],[3709,53,3355,51],[3710,10,3356,8,"deprecate"],[3710,19,3356,17],[3710,20,3356,18,"e"],[3710,21,3356,19],[3710,22,3356,20,"data"],[3710,26,3356,24],[3710,27,3356,25,"type"],[3710,31,3356,29],[3710,33,3356,31,"READY_EVENT"],[3710,44,3356,42],[3710,45,3356,43],[3711,10,3357,8,"onReady"],[3711,17,3357,15],[3711,18,3357,16,"e"],[3711,19,3357,17],[3711,21,3357,19],[3712,12,3358,10,"send"],[3712,16,3358,14],[3713,12,3359,10,"close"],[3714,10,3360,8],[3714,11,3360,9],[3714,12,3360,10],[3715,10,3361,8,"source"],[3715,16,3361,14],[3715,21,3361,19,"e"],[3715,22,3361,20],[3715,23,3361,21,"source"],[3715,29,3361,27],[3716,8,3362,6],[3717,8,3363,6],[3717,12,3363,10,"_"],[3717,13,3363,11],[3717,14,3363,12,"e"],[3717,15,3363,13],[3717,16,3363,14,"data"],[3717,20,3363,18],[3717,21,3363,19,"type"],[3717,25,3363,23],[3717,26,3363,24],[3717,31,3363,29,"_"],[3717,32,3363,30],[3717,33,3363,31],[3717,53,3363,51],[3717,54,3363,52],[3717,56,3363,54],[3718,10,3364,8,"deprecate"],[3718,19,3364,17],[3718,20,3364,18,"e"],[3718,21,3364,19],[3718,22,3364,20,"data"],[3718,26,3364,24],[3718,27,3364,25,"type"],[3718,31,3364,29],[3718,33,3364,31,"RESPONSE_EVENT"],[3718,47,3364,45],[3718,48,3364,46],[3719,10,3365,8,"onResponse"],[3719,20,3365,18],[3719,21,3365,19,"e"],[3719,22,3365,20],[3719,24,3365,22],[3720,12,3366,10,"send"],[3720,16,3366,14],[3721,12,3367,10,"close"],[3722,10,3368,8],[3722,11,3368,9],[3722,12,3368,10],[3723,8,3369,6],[3724,8,3370,6],[3724,12,3370,10,"_"],[3724,13,3370,11],[3724,14,3370,12,"e"],[3724,15,3370,13],[3724,16,3370,14,"data"],[3724,20,3370,18],[3724,21,3370,19,"type"],[3724,25,3370,23],[3724,26,3370,24],[3724,31,3370,29,"_"],[3724,32,3370,30],[3724,33,3370,31],[3724,50,3370,48],[3724,51,3370,49],[3724,53,3370,51],[3725,10,3371,8,"deprecate"],[3725,19,3371,17],[3725,20,3371,18,"e"],[3725,21,3371,19],[3725,22,3371,20,"data"],[3725,26,3371,24],[3725,27,3371,25,"type"],[3725,31,3371,29],[3725,33,3371,31,"CLOSE_EVENT"],[3725,44,3371,42],[3725,45,3371,43],[3726,10,3372,8,"close"],[3726,15,3372,13],[3726,16,3372,14],[3726,17,3372,15],[3727,8,3373,6],[3728,8,3374,6],[3729,8,3375,6],[3729,12,3375,10,"_"],[3729,13,3375,11],[3729,14,3375,12,"e"],[3729,15,3375,13],[3729,16,3375,14,"data"],[3729,20,3375,18],[3729,21,3375,19,"type"],[3729,25,3375,23],[3729,26,3375,24],[3729,31,3375,29,"_"],[3729,32,3375,30],[3729,33,3375,31],[3729,59,3375,57],[3729,60,3375,58],[3729,62,3375,60],[3730,10,3376,8,"deprecate"],[3730,19,3376,17],[3730,20,3376,18,"e"],[3730,21,3376,19],[3730,22,3376,20,"data"],[3730,26,3376,24],[3730,27,3376,25,"type"],[3730,31,3376,29],[3730,33,3376,31,"RESPONSE_EVENT"],[3730,47,3376,45],[3730,48,3376,46],[3731,10,3377,8,"onResponse"],[3731,20,3377,18],[3731,21,3377,19,"e"],[3731,22,3377,20],[3731,24,3377,22],[3732,12,3378,10,"send"],[3732,16,3378,14],[3733,12,3379,10,"close"],[3734,10,3380,8],[3734,11,3380,9],[3734,12,3380,10],[3735,8,3381,6],[3736,8,3382,6],[3736,12,3382,10,"_"],[3736,13,3382,11],[3736,14,3382,12,"e"],[3736,15,3382,13],[3736,16,3382,14,"data"],[3736,20,3382,18],[3736,21,3382,19,"type"],[3736,25,3382,23],[3736,26,3382,24],[3736,31,3382,29,"_"],[3736,32,3382,30],[3736,33,3382,31],[3736,51,3382,49],[3736,52,3382,50],[3736,54,3382,52],[3737,10,3383,8,"deprecate"],[3737,19,3383,17],[3737,20,3383,18,"e"],[3737,21,3383,19],[3737,22,3383,20,"data"],[3737,26,3383,24],[3737,27,3383,25,"type"],[3737,31,3383,29],[3737,33,3383,31,"READY_EVENT"],[3737,44,3383,42],[3737,45,3383,43],[3738,10,3384,8,"onReady"],[3738,17,3384,15],[3738,18,3384,16,"e"],[3738,19,3384,17],[3738,21,3384,19],[3739,12,3385,10,"send"],[3739,16,3385,14],[3740,12,3386,10,"close"],[3741,10,3387,8],[3741,11,3387,9],[3741,12,3387,10],[3742,10,3388,8,"source"],[3742,16,3388,14],[3742,21,3388,19,"e"],[3742,22,3388,20],[3742,23,3388,21,"source"],[3742,29,3388,27],[3743,8,3389,6],[3744,8,3390,6],[3744,12,3390,10,"_"],[3744,13,3390,11],[3744,14,3390,12,"e"],[3744,15,3390,13],[3744,16,3390,14,"data"],[3744,20,3390,18],[3744,21,3390,19,"type"],[3744,25,3390,23],[3744,26,3390,24],[3744,31,3390,29,"_"],[3744,32,3390,30],[3744,33,3390,31],[3744,57,3390,55],[3744,58,3390,56],[3744,60,3390,58],[3745,10,3391,8,"deprecate"],[3745,19,3391,17],[3745,20,3391,18,"e"],[3745,21,3391,19],[3745,22,3391,20,"data"],[3745,26,3391,24],[3745,27,3391,25,"type"],[3745,31,3391,29],[3745,33,3391,31,"CLOSE_EVENT"],[3745,44,3391,42],[3745,45,3391,43],[3746,10,3392,8,"close"],[3746,15,3392,13],[3746,16,3392,14],[3746,17,3392,15],[3747,8,3393,6],[3748,8,3394,6],[3748,12,3394,10,"_"],[3748,13,3394,11],[3748,14,3394,12,"e"],[3748,15,3394,13],[3748,16,3394,14,"data"],[3748,20,3394,18],[3748,21,3394,19,"type"],[3748,25,3394,23],[3748,26,3394,24],[3748,31,3394,29,"_"],[3748,32,3394,30],[3748,33,3394,31],[3748,46,3394,44],[3748,47,3394,45],[3748,49,3394,47],[3749,10,3395,8,"deprecate"],[3749,19,3395,17],[3749,20,3395,18,"e"],[3749,21,3395,19],[3749,22,3395,20,"data"],[3749,26,3395,24],[3749,27,3395,25,"type"],[3749,31,3395,29],[3749,33,3395,31,"CLOSE_EVENT"],[3749,44,3395,42],[3749,45,3395,43],[3750,10,3396,8,"close"],[3750,15,3396,13],[3750,16,3396,14],[3750,17,3396,15],[3751,8,3397,6],[3752,6,3398,4],[3752,7,3398,5],[3752,8,3398,6],[3752,15,3398,13,"error"],[3752,20,3398,18],[3752,22,3398,20],[3753,8,3399,6,"console"],[3753,15,3399,13],[3753,16,3399,14,"error"],[3753,21,3399,19],[3753,22,3399,20],[3753,44,3399,42],[3753,46,3399,44,"error"],[3753,51,3399,49],[3753,52,3399,50],[3754,8,3400,6,"close"],[3754,13,3400,11],[3754,14,3400,12],[3754,15,3400,13],[3755,6,3401,4],[3756,4,3402,2],[3756,5,3402,3],[3757,2,3403,0],[3757,3,3403,1],[3759,2,3405,0],[3760,2,3406,0,"watchForChainIdChanges"],[3760,24,3406,22],[3760,25,3406,23],[3760,26,3406,24],[3761,2,3408,0,"Object"],[3761,8,3408,6],[3761,9,3408,7,"defineProperty"],[3761,23,3408,21],[3761,24,3408,22,"exports"],[3761,31,3408,29],[3761,33,3408,31],[3761,44,3408,42],[3761,46,3408,44],[3762,4,3409,2,"enumerable"],[3762,14,3409,12],[3762,16,3409,14],[3762,20,3409,18],[3763,4,3410,2,"get"],[3763,7,3410,5],[3763,9,3410,7],[3763,18,3410,7,"get"],[3763,19,3410,7],[3763,21,3410,19],[3764,6,3410,21],[3764,13,3410,28,"sdk"],[3764,16,3410,31],[3764,17,3410,32,"TestUtils"],[3764,26,3410,41],[3765,4,3410,43],[3766,2,3411,0],[3766,3,3411,1],[3766,4,3411,2],[3767,2,3412,0,"Object"],[3767,8,3412,6],[3767,9,3412,7,"defineProperty"],[3767,23,3412,21],[3767,24,3412,22,"exports"],[3767,31,3412,29],[3767,33,3412,31],[3767,42,3412,40],[3767,44,3412,42],[3768,4,3413,2,"enumerable"],[3768,14,3413,12],[3768,16,3413,14],[3768,20,3413,18],[3769,4,3414,2,"get"],[3769,7,3414,5],[3769,9,3414,7],[3769,18,3414,7,"get"],[3769,19,3414,7],[3769,21,3414,19],[3770,6,3414,21],[3770,13,3414,28,"sdk"],[3770,16,3414,31],[3770,17,3414,32,"account"],[3770,24,3414,39],[3771,4,3414,41],[3772,2,3415,0],[3772,3,3415,1],[3772,4,3415,2],[3773,2,3416,0,"Object"],[3773,8,3416,6],[3773,9,3416,7,"defineProperty"],[3773,23,3416,21],[3773,24,3416,22,"exports"],[3773,31,3416,29],[3773,33,3416,31],[3773,38,3416,36],[3773,40,3416,38],[3774,4,3417,2,"enumerable"],[3774,14,3417,12],[3774,16,3417,14],[3774,20,3417,18],[3775,4,3418,2,"get"],[3775,7,3418,5],[3775,9,3418,7],[3775,18,3418,7,"get"],[3775,19,3418,7],[3775,21,3418,19],[3776,6,3418,21],[3776,13,3418,28,"sdk"],[3776,16,3418,31],[3776,17,3418,32,"arg"],[3776,20,3418,35],[3777,4,3418,37],[3778,2,3419,0],[3778,3,3419,1],[3778,4,3419,2],[3779,2,3420,0,"Object"],[3779,8,3420,6],[3779,9,3420,7,"defineProperty"],[3779,23,3420,21],[3779,24,3420,22,"exports"],[3779,31,3420,29],[3779,33,3420,31],[3779,39,3420,37],[3779,41,3420,39],[3780,4,3421,2,"enumerable"],[3780,14,3421,12],[3780,16,3421,14],[3780,20,3421,18],[3781,4,3422,2,"get"],[3781,7,3422,5],[3781,9,3422,7],[3781,18,3422,7,"get"],[3781,19,3422,7],[3781,21,3422,19],[3782,6,3422,21],[3782,13,3422,28,"sdk"],[3782,16,3422,31],[3782,17,3422,32,"args"],[3782,21,3422,36],[3783,4,3422,38],[3784,2,3423,0],[3784,3,3423,1],[3784,4,3423,2],[3785,2,3424,0,"Object"],[3785,8,3424,6],[3785,9,3424,7,"defineProperty"],[3785,23,3424,21],[3785,24,3424,22,"exports"],[3785,31,3424,29],[3785,33,3424,31],[3785,48,3424,46],[3785,50,3424,48],[3786,4,3425,2,"enumerable"],[3786,14,3425,12],[3786,16,3425,14],[3786,20,3425,18],[3787,4,3426,2,"get"],[3787,7,3426,5],[3787,9,3426,7],[3787,18,3426,7,"get"],[3787,19,3426,7],[3787,21,3426,19],[3788,6,3426,21],[3788,13,3426,28,"sdk"],[3788,16,3426,31],[3788,17,3426,32,"atBlockHeight"],[3788,30,3426,45],[3789,4,3426,47],[3790,2,3427,0],[3790,3,3427,1],[3790,4,3427,2],[3791,2,3428,0,"Object"],[3791,8,3428,6],[3791,9,3428,7,"defineProperty"],[3791,23,3428,21],[3791,24,3428,22,"exports"],[3791,31,3428,29],[3791,33,3428,31],[3791,44,3428,42],[3791,46,3428,44],[3792,4,3429,2,"enumerable"],[3792,14,3429,12],[3792,16,3429,14],[3792,20,3429,18],[3793,4,3430,2,"get"],[3793,7,3430,5],[3793,9,3430,7],[3793,18,3430,7,"get"],[3793,19,3430,7],[3793,21,3430,19],[3794,6,3430,21],[3794,13,3430,28,"sdk"],[3794,16,3430,31],[3794,17,3430,32,"atBlockId"],[3794,26,3430,41],[3795,4,3430,43],[3796,2,3431,0],[3796,3,3431,1],[3796,4,3431,2],[3797,2,3432,0,"Object"],[3797,8,3432,6],[3797,9,3432,7,"defineProperty"],[3797,23,3432,21],[3797,24,3432,22,"exports"],[3797,31,3432,29],[3797,33,3432,31],[3797,48,3432,46],[3797,50,3432,48],[3798,4,3433,2,"enumerable"],[3798,14,3433,12],[3798,16,3433,14],[3798,20,3433,18],[3799,4,3434,2,"get"],[3799,7,3434,5],[3799,9,3434,7],[3799,18,3434,7,"get"],[3799,19,3434,7],[3799,21,3434,19],[3800,6,3434,21],[3800,13,3434,28,"sdk"],[3800,16,3434,31],[3800,17,3434,32,"authorization"],[3800,30,3434,45],[3801,4,3434,47],[3802,2,3435,0],[3802,3,3435,1],[3802,4,3435,2],[3803,2,3436,0,"Object"],[3803,8,3436,6],[3803,9,3436,7,"defineProperty"],[3803,23,3436,21],[3803,24,3436,22,"exports"],[3803,31,3436,29],[3803,33,3436,31],[3803,49,3436,47],[3803,51,3436,49],[3804,4,3437,2,"enumerable"],[3804,14,3437,12],[3804,16,3437,14],[3804,20,3437,18],[3805,4,3438,2,"get"],[3805,7,3438,5],[3805,9,3438,7],[3805,18,3438,7,"get"],[3805,19,3438,7],[3805,21,3438,19],[3806,6,3438,21],[3806,13,3438,28,"sdk"],[3806,16,3438,31],[3806,17,3438,32,"authorizations"],[3806,31,3438,46],[3807,4,3438,48],[3808,2,3439,0],[3808,3,3439,1],[3808,4,3439,2],[3809,2,3440,0,"Object"],[3809,8,3440,6],[3809,9,3440,7,"defineProperty"],[3809,23,3440,21],[3809,24,3440,22,"exports"],[3809,31,3440,29],[3809,33,3440,31],[3809,40,3440,38],[3809,42,3440,40],[3810,4,3441,2,"enumerable"],[3810,14,3441,12],[3810,16,3441,14],[3810,20,3441,18],[3811,4,3442,2,"get"],[3811,7,3442,5],[3811,9,3442,7],[3811,18,3442,7,"get"],[3811,19,3442,7],[3811,21,3442,19],[3812,6,3442,21],[3812,13,3442,28,"sdk"],[3812,16,3442,31],[3812,17,3442,32,"block"],[3812,22,3442,37],[3813,4,3442,39],[3814,2,3443,0],[3814,3,3443,1],[3814,4,3443,2],[3815,2,3444,0,"Object"],[3815,8,3444,6],[3815,9,3444,7,"defineProperty"],[3815,23,3444,21],[3815,24,3444,22,"exports"],[3815,31,3444,29],[3815,33,3444,31],[3815,40,3444,38],[3815,42,3444,40],[3816,4,3445,2,"enumerable"],[3816,14,3445,12],[3816,16,3445,14],[3816,20,3445,18],[3817,4,3446,2,"get"],[3817,7,3446,5],[3817,9,3446,7],[3817,18,3446,7,"get"],[3817,19,3446,7],[3817,21,3446,19],[3818,6,3446,21],[3818,13,3446,28,"sdk"],[3818,16,3446,31],[3818,17,3446,32,"build"],[3818,22,3446,37],[3819,4,3446,39],[3820,2,3447,0],[3820,3,3447,1],[3820,4,3447,2],[3821,2,3448,0,"Object"],[3821,8,3448,6],[3821,9,3448,7,"defineProperty"],[3821,23,3448,21],[3821,24,3448,22,"exports"],[3821,31,3448,29],[3821,33,3448,31],[3821,56,3448,54],[3821,58,3448,56],[3822,4,3449,2,"enumerable"],[3822,14,3449,12],[3822,16,3449,14],[3822,20,3449,18],[3823,4,3450,2,"get"],[3823,7,3450,5],[3823,9,3450,7],[3823,18,3450,7,"get"],[3823,19,3450,7],[3823,21,3450,19],[3824,6,3450,21],[3824,13,3450,28,"sdk"],[3824,16,3450,31],[3824,17,3450,32,"createSignableVoucher"],[3824,38,3450,53],[3825,4,3450,55],[3826,2,3451,0],[3826,3,3451,1],[3826,4,3451,2],[3827,2,3452,0,"Object"],[3827,8,3452,6],[3827,9,3452,7,"defineProperty"],[3827,23,3452,21],[3827,24,3452,22,"exports"],[3827,31,3452,29],[3827,33,3452,31],[3827,41,3452,39],[3827,43,3452,41],[3828,4,3453,2,"enumerable"],[3828,14,3453,12],[3828,16,3453,14],[3828,20,3453,18],[3829,4,3454,2,"get"],[3829,7,3454,5],[3829,9,3454,7],[3829,18,3454,7,"get"],[3829,19,3454,7],[3829,21,3454,19],[3830,6,3454,21],[3830,13,3454,28,"sdk"],[3830,16,3454,31],[3830,17,3454,32,"decode"],[3830,23,3454,38],[3831,4,3454,40],[3832,2,3455,0],[3832,3,3455,1],[3832,4,3455,2],[3833,2,3456,0,"Object"],[3833,8,3456,6],[3833,9,3456,7,"defineProperty"],[3833,23,3456,21],[3833,24,3456,22,"exports"],[3833,31,3456,29],[3833,33,3456,31],[3833,45,3456,43],[3833,47,3456,45],[3834,4,3457,2,"enumerable"],[3834,14,3457,12],[3834,16,3457,14],[3834,20,3457,18],[3835,4,3458,2,"get"],[3835,7,3458,5],[3835,9,3458,7],[3835,18,3458,7,"get"],[3835,19,3458,7],[3835,21,3458,19],[3836,6,3458,21],[3836,13,3458,28,"sdk"],[3836,16,3458,31],[3836,17,3458,32,"getAccount"],[3836,27,3458,42],[3837,4,3458,44],[3838,2,3459,0],[3838,3,3459,1],[3838,4,3459,2],[3839,2,3460,0,"Object"],[3839,8,3460,6],[3839,9,3460,7,"defineProperty"],[3839,23,3460,21],[3839,24,3460,22,"exports"],[3839,31,3460,29],[3839,33,3460,31],[3839,43,3460,41],[3839,45,3460,43],[3840,4,3461,2,"enumerable"],[3840,14,3461,12],[3840,16,3461,14],[3840,20,3461,18],[3841,4,3462,2,"get"],[3841,7,3462,5],[3841,9,3462,7],[3841,18,3462,7,"get"],[3841,19,3462,7],[3841,21,3462,19],[3842,6,3462,21],[3842,13,3462,28,"sdk"],[3842,16,3462,31],[3842,17,3462,32,"getBlock"],[3842,25,3462,40],[3843,4,3462,42],[3844,2,3463,0],[3844,3,3463,1],[3844,4,3463,2],[3845,2,3464,0,"Object"],[3845,8,3464,6],[3845,9,3464,7,"defineProperty"],[3845,23,3464,21],[3845,24,3464,22,"exports"],[3845,31,3464,29],[3845,33,3464,31],[3845,49,3464,47],[3845,51,3464,49],[3846,4,3465,2,"enumerable"],[3846,14,3465,12],[3846,16,3465,14],[3846,20,3465,18],[3847,4,3466,2,"get"],[3847,7,3466,5],[3847,9,3466,7],[3847,18,3466,7,"get"],[3847,19,3466,7],[3847,21,3466,19],[3848,6,3466,21],[3848,13,3466,28,"sdk"],[3848,16,3466,31],[3848,17,3466,32,"getBlockHeader"],[3848,31,3466,46],[3849,4,3466,48],[3850,2,3467,0],[3850,3,3467,1],[3850,4,3467,2],[3851,2,3468,0,"Object"],[3851,8,3468,6],[3851,9,3468,7,"defineProperty"],[3851,23,3468,21],[3851,24,3468,22,"exports"],[3851,31,3468,29],[3851,33,3468,31],[3851,48,3468,46],[3851,50,3468,48],[3852,4,3469,2,"enumerable"],[3852,14,3469,12],[3852,16,3469,14],[3852,20,3469,18],[3853,4,3470,2,"get"],[3853,7,3470,5],[3853,9,3470,7],[3853,18,3470,7,"get"],[3853,19,3470,7],[3853,21,3470,19],[3854,6,3470,21],[3854,13,3470,28,"sdk"],[3854,16,3470,31],[3854,17,3470,32,"getCollection"],[3854,30,3470,45],[3855,4,3470,47],[3856,2,3471,0],[3856,3,3471,1],[3856,4,3471,2],[3857,2,3472,0,"Object"],[3857,8,3472,6],[3857,9,3472,7,"defineProperty"],[3857,23,3472,21],[3857,24,3472,22,"exports"],[3857,31,3472,29],[3857,33,3472,31],[3857,44,3472,42],[3857,46,3472,44],[3858,4,3473,2,"enumerable"],[3858,14,3473,12],[3858,16,3473,14],[3858,20,3473,18],[3859,4,3474,2,"get"],[3859,7,3474,5],[3859,9,3474,7],[3859,18,3474,7,"get"],[3859,19,3474,7],[3859,21,3474,19],[3860,6,3474,21],[3860,13,3474,28,"sdk"],[3860,16,3474,31],[3860,17,3474,32,"getEvents"],[3860,26,3474,41],[3861,4,3474,43],[3862,2,3475,0],[3862,3,3475,1],[3862,4,3475,2],[3863,2,3476,0,"Object"],[3863,8,3476,6],[3863,9,3476,7,"defineProperty"],[3863,23,3476,21],[3863,24,3476,22,"exports"],[3863,31,3476,29],[3863,33,3476,31],[3863,62,3476,60],[3863,64,3476,62],[3864,4,3477,2,"enumerable"],[3864,14,3477,12],[3864,16,3477,14],[3864,20,3477,18],[3865,4,3478,2,"get"],[3865,7,3478,5],[3865,9,3478,7],[3865,18,3478,7,"get"],[3865,19,3478,7],[3865,21,3478,19],[3866,6,3478,21],[3866,13,3478,28,"sdk"],[3866,16,3478,31],[3866,17,3478,32,"getEventsAtBlockHeightRange"],[3866,44,3478,59],[3867,4,3478,61],[3868,2,3479,0],[3868,3,3479,1],[3868,4,3479,2],[3869,2,3480,0,"Object"],[3869,8,3480,6],[3869,9,3480,7,"defineProperty"],[3869,23,3480,21],[3869,24,3480,22,"exports"],[3869,31,3480,29],[3869,33,3480,31],[3869,54,3480,52],[3869,56,3480,54],[3870,4,3481,2,"enumerable"],[3870,14,3481,12],[3870,16,3481,14],[3870,20,3481,18],[3871,4,3482,2,"get"],[3871,7,3482,5],[3871,9,3482,7],[3871,18,3482,7,"get"],[3871,19,3482,7],[3871,21,3482,19],[3872,6,3482,21],[3872,13,3482,28,"sdk"],[3872,16,3482,31],[3872,17,3482,32,"getEventsAtBlockIds"],[3872,36,3482,51],[3873,4,3482,53],[3874,2,3483,0],[3874,3,3483,1],[3874,4,3483,2],[3875,2,3484,0,"Object"],[3875,8,3484,6],[3875,9,3484,7,"defineProperty"],[3875,23,3484,21],[3875,24,3484,22,"exports"],[3875,31,3484,29],[3875,33,3484,31],[3875,55,3484,53],[3875,57,3484,55],[3876,4,3485,2,"enumerable"],[3876,14,3485,12],[3876,16,3485,14],[3876,20,3485,18],[3877,4,3486,2,"get"],[3877,7,3486,5],[3877,9,3486,7],[3877,18,3486,7,"get"],[3877,19,3486,7],[3877,21,3486,19],[3878,6,3486,21],[3878,13,3486,28,"sdk"],[3878,16,3486,31],[3878,17,3486,32,"getNetworkParameters"],[3878,37,3486,52],[3879,4,3486,54],[3880,2,3487,0],[3880,3,3487,1],[3880,4,3487,2],[3881,2,3488,0,"Object"],[3881,8,3488,6],[3881,9,3488,7,"defineProperty"],[3881,23,3488,21],[3881,24,3488,22,"exports"],[3881,31,3488,29],[3881,33,3488,31],[3881,53,3488,51],[3881,55,3488,53],[3882,4,3489,2,"enumerable"],[3882,14,3489,12],[3882,16,3489,14],[3882,20,3489,18],[3883,4,3490,2,"get"],[3883,7,3490,5],[3883,9,3490,7],[3883,18,3490,7,"get"],[3883,19,3490,7],[3883,21,3490,19],[3884,6,3490,21],[3884,13,3490,28,"sdk"],[3884,16,3490,31],[3884,17,3490,32,"getNodeVersionInfo"],[3884,35,3490,50],[3885,4,3490,52],[3886,2,3491,0],[3886,3,3491,1],[3886,4,3491,2],[3887,2,3492,0,"Object"],[3887,8,3492,6],[3887,9,3492,7,"defineProperty"],[3887,23,3492,21],[3887,24,3492,22,"exports"],[3887,31,3492,29],[3887,33,3492,31],[3887,49,3492,47],[3887,51,3492,49],[3888,4,3493,2,"enumerable"],[3888,14,3493,12],[3888,16,3493,14],[3888,20,3493,18],[3889,4,3494,2,"get"],[3889,7,3494,5],[3889,9,3494,7],[3889,18,3494,7,"get"],[3889,19,3494,7],[3889,21,3494,19],[3890,6,3494,21],[3890,13,3494,28,"sdk"],[3890,16,3494,31],[3890,17,3494,32,"getTransaction"],[3890,31,3494,46],[3891,4,3494,48],[3892,2,3495,0],[3892,3,3495,1],[3892,4,3495,2],[3893,2,3496,0,"Object"],[3893,8,3496,6],[3893,9,3496,7,"defineProperty"],[3893,23,3496,21],[3893,24,3496,22,"exports"],[3893,31,3496,29],[3893,33,3496,31],[3893,55,3496,53],[3893,57,3496,55],[3894,4,3497,2,"enumerable"],[3894,14,3497,12],[3894,16,3497,14],[3894,20,3497,18],[3895,4,3498,2,"get"],[3895,7,3498,5],[3895,9,3498,7],[3895,18,3498,7,"get"],[3895,19,3498,7],[3895,21,3498,19],[3896,6,3498,21],[3896,13,3498,28,"sdk"],[3896,16,3498,31],[3896,17,3498,32,"getTransactionStatus"],[3896,37,3498,52],[3897,4,3498,54],[3898,2,3499,0],[3898,3,3499,1],[3898,4,3499,2],[3899,2,3500,0,"Object"],[3899,8,3500,6],[3899,9,3500,7,"defineProperty"],[3899,23,3500,21],[3899,24,3500,22,"exports"],[3899,31,3500,29],[3899,33,3500,31],[3899,44,3500,42],[3899,46,3500,44],[3900,4,3501,2,"enumerable"],[3900,14,3501,12],[3900,16,3501,14],[3900,20,3501,18],[3901,4,3502,2,"get"],[3901,7,3502,5],[3901,9,3502,7],[3901,18,3502,7,"get"],[3901,19,3502,7],[3901,21,3502,19],[3902,6,3502,21],[3902,13,3502,28,"sdk"],[3902,16,3502,31],[3902,17,3502,32,"invariant"],[3902,26,3502,41],[3903,4,3502,43],[3904,2,3503,0],[3904,3,3503,1],[3904,4,3503,2],[3905,2,3504,0,"Object"],[3905,8,3504,6],[3905,9,3504,7,"defineProperty"],[3905,23,3504,21],[3905,24,3504,22,"exports"],[3905,31,3504,29],[3905,33,3504,31],[3905,40,3504,38],[3905,42,3504,40],[3906,4,3505,2,"enumerable"],[3906,14,3505,12],[3906,16,3505,14],[3906,20,3505,18],[3907,4,3506,2,"get"],[3907,7,3506,5],[3907,9,3506,7],[3907,18,3506,7,"get"],[3907,19,3506,7],[3907,21,3506,19],[3908,6,3506,21],[3908,13,3506,28,"sdk"],[3908,16,3506,31],[3908,17,3506,32,"isBad"],[3908,22,3506,37],[3909,4,3506,39],[3910,2,3507,0],[3910,3,3507,1],[3910,4,3507,2],[3911,2,3508,0,"Object"],[3911,8,3508,6],[3911,9,3508,7,"defineProperty"],[3911,23,3508,21],[3911,24,3508,22,"exports"],[3911,31,3508,29],[3911,33,3508,31],[3911,39,3508,37],[3911,41,3508,39],[3912,4,3509,2,"enumerable"],[3912,14,3509,12],[3912,16,3509,14],[3912,20,3509,18],[3913,4,3510,2,"get"],[3913,7,3510,5],[3913,9,3510,7],[3913,18,3510,7,"get"],[3913,19,3510,7],[3913,21,3510,19],[3914,6,3510,21],[3914,13,3510,28,"sdk"],[3914,16,3510,31],[3914,17,3510,32,"isOk"],[3914,21,3510,36],[3915,4,3510,38],[3916,2,3511,0],[3916,3,3511,1],[3916,4,3511,2],[3917,2,3512,0,"Object"],[3917,8,3512,6],[3917,9,3512,7,"defineProperty"],[3917,23,3512,21],[3917,24,3512,22,"exports"],[3917,31,3512,29],[3917,33,3512,31],[3917,40,3512,38],[3917,42,3512,40],[3918,4,3513,2,"enumerable"],[3918,14,3513,12],[3918,16,3513,14],[3918,20,3513,18],[3919,4,3514,2,"get"],[3919,7,3514,5],[3919,9,3514,7],[3919,18,3514,7,"get"],[3919,19,3514,7],[3919,21,3514,19],[3920,6,3514,21],[3920,13,3514,28,"sdk"],[3920,16,3514,31],[3920,17,3514,32,"limit"],[3920,22,3514,37],[3921,4,3514,39],[3922,2,3515,0],[3922,3,3515,1],[3922,4,3515,2],[3923,2,3516,0,"Object"],[3923,8,3516,6],[3923,9,3516,7,"defineProperty"],[3923,23,3516,21],[3923,24,3516,22,"exports"],[3923,31,3516,29],[3923,33,3516,31],[3923,50,3516,48],[3923,52,3516,50],[3924,4,3517,2,"enumerable"],[3924,14,3517,12],[3924,16,3517,14],[3924,20,3517,18],[3925,4,3518,2,"get"],[3925,7,3518,5],[3925,9,3518,7],[3925,18,3518,7,"get"],[3925,19,3518,7],[3925,21,3518,19],[3926,6,3518,21],[3926,13,3518,28,"sdk"],[3926,16,3518,31],[3926,17,3518,32,"nodeVersionInfo"],[3926,32,3518,47],[3927,4,3518,49],[3928,2,3519,0],[3928,3,3519,1],[3928,4,3519,2],[3929,2,3520,0,"Object"],[3929,8,3520,6],[3929,9,3520,7,"defineProperty"],[3929,23,3520,21],[3929,24,3520,22,"exports"],[3929,31,3520,29],[3929,33,3520,31],[3929,40,3520,38],[3929,42,3520,40],[3930,4,3521,2,"enumerable"],[3930,14,3521,12],[3930,16,3521,14],[3930,20,3521,18],[3931,4,3522,2,"get"],[3931,7,3522,5],[3931,9,3522,7],[3931,18,3522,7,"get"],[3931,19,3522,7],[3931,21,3522,19],[3932,6,3522,21],[3932,13,3522,28,"sdk"],[3932,16,3522,31],[3932,17,3522,32,"param"],[3932,22,3522,37],[3933,4,3522,39],[3934,2,3523,0],[3934,3,3523,1],[3934,4,3523,2],[3935,2,3524,0,"Object"],[3935,8,3524,6],[3935,9,3524,7,"defineProperty"],[3935,23,3524,21],[3935,24,3524,22,"exports"],[3935,31,3524,29],[3935,33,3524,31],[3935,41,3524,39],[3935,43,3524,41],[3936,4,3525,2,"enumerable"],[3936,14,3525,12],[3936,16,3525,14],[3936,20,3525,18],[3937,4,3526,2,"get"],[3937,7,3526,5],[3937,9,3526,7],[3937,18,3526,7,"get"],[3937,19,3526,7],[3937,21,3526,19],[3938,6,3526,21],[3938,13,3526,28,"sdk"],[3938,16,3526,31],[3938,17,3526,32,"params"],[3938,23,3526,38],[3939,4,3526,40],[3940,2,3527,0],[3940,3,3527,1],[3940,4,3527,2],[3941,2,3528,0,"Object"],[3941,8,3528,6],[3941,9,3528,7,"defineProperty"],[3941,23,3528,21],[3941,24,3528,22,"exports"],[3941,31,3528,29],[3941,33,3528,31],[3941,40,3528,38],[3941,42,3528,40],[3942,4,3529,2,"enumerable"],[3942,14,3529,12],[3942,16,3529,14],[3942,20,3529,18],[3943,4,3530,2,"get"],[3943,7,3530,5],[3943,9,3530,7],[3943,18,3530,7,"get"],[3943,19,3530,7],[3943,21,3530,19],[3944,6,3530,21],[3944,13,3530,28,"sdk"],[3944,16,3530,31],[3944,17,3530,32,"payer"],[3944,22,3530,37],[3945,4,3530,39],[3946,2,3531,0],[3946,3,3531,1],[3946,4,3531,2],[3947,2,3532,0,"Object"],[3947,8,3532,6],[3947,9,3532,7,"defineProperty"],[3947,23,3532,21],[3947,24,3532,22,"exports"],[3947,31,3532,29],[3947,33,3532,31],[3947,39,3532,37],[3947,41,3532,39],[3948,4,3533,2,"enumerable"],[3948,14,3533,12],[3948,16,3533,14],[3948,20,3533,18],[3949,4,3534,2,"get"],[3949,7,3534,5],[3949,9,3534,7],[3949,18,3534,7,"get"],[3949,19,3534,7],[3949,21,3534,19],[3950,6,3534,21],[3950,13,3534,28,"sdk"],[3950,16,3534,31],[3950,17,3534,32,"ping"],[3950,21,3534,36],[3951,4,3534,38],[3952,2,3535,0],[3952,3,3535,1],[3952,4,3535,2],[3953,2,3536,0,"Object"],[3953,8,3536,6],[3953,9,3536,7,"defineProperty"],[3953,23,3536,21],[3953,24,3536,22,"exports"],[3953,31,3536,29],[3953,33,3536,31],[3953,39,3536,37],[3953,41,3536,39],[3954,4,3537,2,"enumerable"],[3954,14,3537,12],[3954,16,3537,14],[3954,20,3537,18],[3955,4,3538,2,"get"],[3955,7,3538,5],[3955,9,3538,7],[3955,18,3538,7,"get"],[3955,19,3538,7],[3955,21,3538,19],[3956,6,3538,21],[3956,13,3538,28,"sdk"],[3956,16,3538,31],[3956,17,3538,32,"pipe"],[3956,21,3538,36],[3957,4,3538,38],[3958,2,3539,0],[3958,3,3539,1],[3958,4,3539,2],[3959,2,3540,0,"Object"],[3959,8,3540,6],[3959,9,3540,7,"defineProperty"],[3959,23,3540,21],[3959,24,3540,22,"exports"],[3959,31,3540,29],[3959,33,3540,31],[3959,43,3540,41],[3959,45,3540,43],[3960,4,3541,2,"enumerable"],[3960,14,3541,12],[3960,16,3541,14],[3960,20,3541,18],[3961,4,3542,2,"get"],[3961,7,3542,5],[3961,9,3542,7],[3961,18,3542,7,"get"],[3961,19,3542,7],[3961,21,3542,19],[3962,6,3542,21],[3962,13,3542,28,"sdk"],[3962,16,3542,31],[3962,17,3542,32,"proposer"],[3962,25,3542,40],[3963,4,3542,42],[3964,2,3543,0],[3964,3,3543,1],[3964,4,3543,2],[3965,2,3544,0,"Object"],[3965,8,3544,6],[3965,9,3544,7,"defineProperty"],[3965,23,3544,21],[3965,24,3544,22,"exports"],[3965,31,3544,29],[3965,33,3544,31],[3965,38,3544,36],[3965,40,3544,38],[3966,4,3545,2,"enumerable"],[3966,14,3545,12],[3966,16,3545,14],[3966,20,3545,18],[3967,4,3546,2,"get"],[3967,7,3546,5],[3967,9,3546,7],[3967,18,3546,7,"get"],[3967,19,3546,7],[3967,21,3546,19],[3968,6,3546,21],[3968,13,3546,28,"sdk"],[3968,16,3546,31],[3968,17,3546,32,"ref"],[3968,20,3546,35],[3969,4,3546,37],[3970,2,3547,0],[3970,3,3547,1],[3970,4,3547,2],[3971,2,3548,0,"Object"],[3971,8,3548,6],[3971,9,3548,7,"defineProperty"],[3971,23,3548,21],[3971,24,3548,22,"exports"],[3971,31,3548,29],[3971,33,3548,31],[3971,41,3548,39],[3971,43,3548,41],[3972,4,3549,2,"enumerable"],[3972,14,3549,12],[3972,16,3549,14],[3972,20,3549,18],[3973,4,3550,2,"get"],[3973,7,3550,5],[3973,9,3550,7],[3973,18,3550,7,"get"],[3973,19,3550,7],[3973,21,3550,19],[3974,6,3550,21],[3974,13,3550,28,"sdk"],[3974,16,3550,31],[3974,17,3550,32,"script"],[3974,23,3550,38],[3975,4,3550,40],[3976,2,3551,0],[3976,3,3551,1],[3976,4,3551,2],[3977,2,3552,0,"Object"],[3977,8,3552,6],[3977,9,3552,7,"defineProperty"],[3977,23,3552,21],[3977,24,3552,22,"exports"],[3977,31,3552,29],[3977,33,3552,31],[3977,39,3552,37],[3977,41,3552,39],[3978,4,3553,2,"enumerable"],[3978,14,3553,12],[3978,16,3553,14],[3978,20,3553,18],[3979,4,3554,2,"get"],[3979,7,3554,5],[3979,9,3554,7],[3979,18,3554,7,"get"],[3979,19,3554,7],[3979,21,3554,19],[3980,6,3554,21],[3980,13,3554,28,"sdk"],[3980,16,3554,31],[3980,17,3554,32,"send"],[3980,21,3554,36],[3981,4,3554,38],[3982,2,3555,0],[3982,3,3555,1],[3982,4,3555,2],[3983,2,3556,0,"Object"],[3983,8,3556,6],[3983,9,3556,7,"defineProperty"],[3983,23,3556,21],[3983,24,3556,22,"exports"],[3983,31,3556,29],[3983,33,3556,31],[3983,50,3556,48],[3983,52,3556,50],[3984,4,3557,2,"enumerable"],[3984,14,3557,12],[3984,16,3557,14],[3984,20,3557,18],[3985,4,3558,2,"get"],[3985,7,3558,5],[3985,9,3558,7],[3985,18,3558,7,"get"],[3985,19,3558,7],[3985,21,3558,19],[3986,6,3558,21],[3986,13,3558,28,"sdk"],[3986,16,3558,31],[3986,17,3558,32,"subscribeEvents"],[3986,32,3558,47],[3987,4,3558,49],[3988,2,3559,0],[3988,3,3559,1],[3988,4,3559,2],[3989,2,3560,0,"Object"],[3989,8,3560,6],[3989,9,3560,7,"defineProperty"],[3989,23,3560,21],[3989,24,3560,22,"exports"],[3989,31,3560,29],[3989,33,3560,31],[3989,46,3560,44],[3989,48,3560,46],[3990,4,3561,2,"enumerable"],[3990,14,3561,12],[3990,16,3561,14],[3990,20,3561,18],[3991,4,3562,2,"get"],[3991,7,3562,5],[3991,9,3562,7],[3991,18,3562,7,"get"],[3991,19,3562,7],[3991,21,3562,19],[3992,6,3562,21],[3992,13,3562,28,"sdk"],[3992,16,3562,31],[3992,17,3562,32,"transaction"],[3992,28,3562,43],[3993,4,3562,45],[3994,2,3563,0],[3994,3,3563,1],[3994,4,3563,2],[3995,2,3564,0,"Object"],[3995,8,3564,6],[3995,9,3564,7,"defineProperty"],[3995,23,3564,21],[3995,24,3564,22,"exports"],[3995,31,3564,29],[3995,33,3564,31],[3995,44,3564,42],[3995,46,3564,44],[3996,4,3565,2,"enumerable"],[3996,14,3565,12],[3996,16,3565,14],[3996,20,3565,18],[3997,4,3566,2,"get"],[3997,7,3566,5],[3997,9,3566,7],[3997,18,3566,7,"get"],[3997,19,3566,7],[3997,21,3566,19],[3998,6,3566,21],[3998,13,3566,28,"sdk"],[3998,16,3566,31],[3998,17,3566,32,"validator"],[3998,26,3566,41],[3999,4,3566,43],[4000,2,3567,0],[4000,3,3567,1],[4000,4,3567,2],[4001,2,3568,0,"Object"],[4001,8,3568,6],[4001,9,3568,7,"defineProperty"],[4001,23,3568,21],[4001,24,3568,22,"exports"],[4001,31,3568,29],[4001,33,3568,31],[4001,51,3568,49],[4001,53,3568,51],[4002,4,3569,2,"enumerable"],[4002,14,3569,12],[4002,16,3569,14],[4002,20,3569,18],[4003,4,3570,2,"get"],[4003,7,3570,5],[4003,9,3570,7],[4003,18,3570,7,"get"],[4003,19,3570,7],[4003,21,3570,19],[4004,6,3570,21],[4004,13,3570,28,"sdk"],[4004,16,3570,31],[4004,17,3570,32,"voucherIntercept"],[4004,33,3570,48],[4005,4,3570,50],[4006,2,3571,0],[4006,3,3571,1],[4006,4,3571,2],[4007,2,3572,0,"Object"],[4007,8,3572,6],[4007,9,3572,7,"defineProperty"],[4007,23,3572,21],[4007,24,3572,22,"exports"],[4007,31,3572,29],[4007,33,3572,31],[4007,48,3572,46],[4007,50,3572,48],[4008,4,3573,2,"enumerable"],[4008,14,3573,12],[4008,16,3573,14],[4008,20,3573,18],[4009,4,3574,2,"get"],[4009,7,3574,5],[4009,9,3574,7],[4009,18,3574,7,"get"],[4009,19,3574,7],[4009,21,3574,19],[4010,6,3574,21],[4010,13,3574,28,"sdk"],[4010,16,3574,31],[4010,17,3574,32,"voucherToTxId"],[4010,30,3574,45],[4011,4,3574,47],[4012,2,3575,0],[4012,3,3575,1],[4012,4,3575,2],[4013,2,3576,0,"Object"],[4013,8,3576,6],[4013,9,3576,7,"defineProperty"],[4013,23,3576,21],[4013,24,3576,22,"exports"],[4013,31,3576,29],[4013,33,3576,31],[4013,38,3576,36],[4013,40,3576,38],[4014,4,3577,2,"enumerable"],[4014,14,3577,12],[4014,16,3577,14],[4014,20,3577,18],[4015,4,3578,2,"get"],[4015,7,3578,5],[4015,9,3578,7],[4015,18,3578,7,"get"],[4015,19,3578,7],[4015,21,3578,19],[4016,6,3578,21],[4016,13,3578,28,"sdk"],[4016,16,3578,31],[4016,17,3578,32,"why"],[4016,20,3578,35],[4017,4,3578,37],[4018,2,3579,0],[4018,3,3579,1],[4018,4,3579,2],[4019,2,3580,0,"exports"],[4019,9,3580,7],[4019,10,3580,8,"t"],[4019,11,3580,9],[4019,14,3580,12,"t__namespace"],[4019,26,3580,24],[4020,2,3581,0,"Object"],[4020,8,3581,6],[4020,9,3581,7,"defineProperty"],[4020,23,3581,21],[4020,24,3581,22,"exports"],[4020,31,3581,29],[4020,33,3581,31],[4020,41,3581,39],[4020,43,3581,41],[4021,4,3582,2,"enumerable"],[4021,14,3582,12],[4021,16,3582,14],[4021,20,3582,18],[4022,4,3583,2,"get"],[4022,7,3583,5],[4022,9,3583,7],[4022,18,3583,7,"get"],[4022,19,3583,7],[4022,21,3583,19],[4023,6,3583,21],[4023,13,3583,28,"config"],[4023,19,3583,34],[4023,20,3583,35,"config"],[4023,26,3583,41],[4024,4,3583,43],[4025,2,3584,0],[4025,3,3584,1],[4025,4,3584,2],[4026,2,3585,0,"Object"],[4026,8,3585,6],[4026,9,3585,7,"defineProperty"],[4026,23,3585,21],[4026,24,3585,22,"exports"],[4026,31,3585,29],[4026,33,3585,31],[4026,42,3585,40],[4026,44,3585,42],[4027,4,3586,2,"enumerable"],[4027,14,3586,12],[4027,16,3586,14],[4027,20,3586,18],[4028,4,3587,2,"get"],[4028,7,3587,5],[4028,9,3587,7],[4028,18,3587,7,"get"],[4028,19,3587,7],[4028,21,3587,19],[4029,6,3587,21],[4029,13,3587,28,"utilAddress"],[4029,24,3587,39],[4029,25,3587,40,"display"],[4029,32,3587,47],[4030,4,3587,49],[4031,2,3588,0],[4031,3,3588,1],[4031,4,3588,2],[4032,2,3589,0,"Object"],[4032,8,3589,6],[4032,9,3589,7,"defineProperty"],[4032,23,3589,21],[4032,24,3589,22,"exports"],[4032,31,3589,29],[4032,33,3589,31],[4032,45,3589,43],[4032,47,3589,45],[4033,4,3590,2,"enumerable"],[4033,14,3590,12],[4033,16,3590,14],[4033,20,3590,18],[4034,4,3591,2,"get"],[4034,7,3591,5],[4034,9,3591,7],[4034,18,3591,7,"get"],[4034,19,3591,7],[4034,21,3591,19],[4035,6,3591,21],[4035,13,3591,28,"utilAddress"],[4035,24,3591,39],[4035,25,3591,40,"sansPrefix"],[4035,35,3591,50],[4036,4,3591,52],[4037,2,3592,0],[4037,3,3592,1],[4037,4,3592,2],[4038,2,3593,0,"Object"],[4038,8,3593,6],[4038,9,3593,7,"defineProperty"],[4038,23,3593,21],[4038,24,3593,22,"exports"],[4038,31,3593,29],[4038,33,3593,31],[4038,45,3593,43],[4038,47,3593,45],[4039,4,3594,2,"enumerable"],[4039,14,3594,12],[4039,16,3594,14],[4039,20,3594,18],[4040,4,3595,2,"get"],[4040,7,3595,5],[4040,9,3595,7],[4040,18,3595,7,"get"],[4040,19,3595,7],[4040,21,3595,19],[4041,6,3595,21],[4041,13,3595,28,"utilAddress"],[4041,24,3595,39],[4041,25,3595,40,"withPrefix"],[4041,35,3595,50],[4042,4,3595,52],[4043,2,3596,0],[4043,3,3596,1],[4043,4,3596,2],[4044,2,3597,0,"Object"],[4044,8,3597,6],[4044,9,3597,7,"defineProperty"],[4044,23,3597,21],[4044,24,3597,22,"exports"],[4044,31,3597,29],[4044,33,3597,31],[4044,42,3597,40],[4044,44,3597,42],[4045,4,3598,2,"enumerable"],[4045,14,3598,12],[4045,16,3598,14],[4045,20,3598,18],[4046,4,3599,2,"get"],[4046,7,3599,5],[4046,9,3599,7],[4046,18,3599,7,"get"],[4046,19,3599,7],[4046,21,3599,19],[4047,6,3599,21],[4047,13,3599,28,"utilTemplate"],[4047,25,3599,40],[4047,26,3599,41,"template"],[4047,34,3599,49],[4048,4,3599,51],[4049,2,3600,0],[4049,3,3600,1],[4049,4,3600,2],[4050,2,3601,0,"Object"],[4050,8,3601,6],[4050,9,3601,7,"defineProperty"],[4050,23,3601,21],[4050,24,3601,22,"exports"],[4050,31,3601,29],[4050,33,3601,31],[4050,38,3601,36],[4050,40,3601,38],[4051,4,3602,2,"enumerable"],[4051,14,3602,12],[4051,16,3602,14],[4051,20,3602,18],[4052,4,3603,2,"get"],[4052,7,3603,5],[4052,9,3603,7],[4052,18,3603,7,"get"],[4052,19,3603,7],[4052,21,3603,19],[4053,6,3603,21],[4053,13,3603,28,"utilTemplate"],[4053,25,3603,40],[4053,26,3603,41,"template"],[4053,34,3603,49],[4054,4,3603,51],[4055,2,3604,0],[4055,3,3604,1],[4055,4,3604,2],[4056,2,3605,0,"exports"],[4056,9,3605,7],[4056,10,3605,8,"AppUtils"],[4056,18,3605,16],[4056,21,3605,19,"index$1"],[4056,28,3605,26],[4057,2,3606,0,"exports"],[4057,9,3606,7],[4057,10,3606,8,"CORE_STRATEGIES"],[4057,25,3606,23],[4057,28,3606,26,"CORE_STRATEGIES"],[4057,43,3606,41],[4058,2,3607,0,"exports"],[4058,9,3607,7],[4058,10,3607,8,"FCL_REDIRECT_URL_PARAM_NAME"],[4058,37,3607,35],[4058,40,3607,38,"FCL_REDIRECT_URL_PARAM_NAME"],[4058,67,3607,65],[4059,2,3608,0,"exports"],[4059,9,3608,7],[4059,10,3608,8,"FCL_RESPONSE_PARAM_NAME"],[4059,33,3608,31],[4059,36,3608,34,"FCL_RESPONSE_PARAM_NAME"],[4059,59,3608,57],[4060,2,3609,0,"exports"],[4060,9,3609,7],[4060,10,3609,8,"InteractionTemplateUtils"],[4060,34,3609,32],[4060,37,3609,35,"index"],[4060,42,3609,40],[4061,2,3610,0,"exports"],[4061,9,3610,7],[4061,10,3610,8,"TransactionError"],[4061,26,3610,24],[4061,29,3610,27,"TransactionError"],[4061,45,3610,43],[4062,2,3611,0,"exports"],[4062,9,3611,7],[4062,10,3611,8,"URL"],[4062,13,3611,11],[4062,16,3611,14,"URL"],[4062,19,3611,17],[4063,2,3612,0,"exports"],[4063,9,3612,7],[4063,10,3612,8,"VERSION"],[4063,17,3612,15],[4063,20,3612,18,"VERSION"],[4063,27,3612,25],[4064,2,3613,0,"exports"],[4064,9,3613,7],[4064,10,3613,8,"WalletUtils"],[4064,21,3613,19],[4064,24,3613,22,"index$2"],[4064,31,3613,29],[4065,2,3614,0,"exports"],[4065,9,3614,7],[4065,10,3614,8,"buildMessageHandler"],[4065,29,3614,27],[4065,32,3614,30,"buildMessageHandler"],[4065,51,3614,49],[4066,2,3615,0,"exports"],[4066,9,3615,7],[4066,10,3615,8,"discovery"],[4066,19,3615,17],[4066,22,3615,20,"discovery"],[4066,31,3615,29],[4067,2,3616,0,"exports"],[4067,9,3616,7],[4067,10,3616,8,"events"],[4067,16,3616,14],[4067,19,3616,17,"events"],[4067,25,3616,23],[4068,2,3617,0,"exports"],[4068,9,3617,7],[4068,10,3617,8,"execStrategy"],[4068,22,3617,20],[4068,25,3617,23,"execStrategy"],[4068,37,3617,35],[4069,2,3618,0,"exports"],[4069,9,3618,7],[4069,10,3618,8,"getChainId"],[4069,20,3618,18],[4069,23,3618,21,"getChainId"],[4069,33,3618,31],[4070,2,3619,0,"exports"],[4070,9,3619,7],[4070,10,3619,8,"getCurrentUser"],[4070,24,3619,22],[4070,27,3619,25,"getCurrentUser"],[4070,41,3619,39],[4071,2,3620,0,"exports"],[4071,9,3620,7],[4071,10,3620,8,"getExecHttpPost"],[4071,25,3620,23],[4071,28,3620,26,"getExecHttpPost"],[4071,43,3620,41],[4072,2,3621,0,"exports"],[4072,9,3621,7],[4072,10,3621,8,"getMutate"],[4072,19,3621,17],[4072,22,3621,20,"getMutate"],[4072,31,3621,29],[4073,2,3622,0,"exports"],[4073,9,3622,7],[4073,10,3622,8,"initServiceRegistry"],[4073,29,3622,27],[4073,32,3622,30,"initServiceRegistry"],[4073,51,3622,49],[4074,2,3623,0,"exports"],[4074,9,3623,7],[4074,10,3623,8,"isReactNative"],[4074,23,3623,21],[4074,26,3623,24,"isReactNative"],[4074,39,3623,37],[4075,2,3624,0,"exports"],[4075,9,3624,7],[4075,10,3624,8,"normalizePollingResponse"],[4075,34,3624,32],[4075,37,3624,35,"normalizePollingResponse"],[4075,61,3624,59],[4076,2,3625,0,"exports"],[4076,9,3625,7],[4076,10,3625,8,"pluginRegistry"],[4076,24,3625,22],[4076,27,3625,25,"pluginRegistry"],[4076,41,3625,39],[4077,2,3626,0,"exports"],[4077,9,3626,7],[4077,10,3626,8,"query"],[4077,15,3626,13],[4077,18,3626,16,"query"],[4077,23,3626,21],[4078,2,3627,0,"exports"],[4078,9,3627,7],[4078,10,3627,8,"serialize"],[4078,19,3627,17],[4078,22,3627,20,"serialize"],[4078,31,3627,29],[4079,2,3628,0,"exports"],[4079,9,3628,7],[4079,10,3628,8,"serviceEndpoint"],[4079,25,3628,23],[4079,28,3628,26,"serviceEndpoint"],[4079,43,3628,41],[4080,2,3629,0,"exports"],[4080,9,3629,7],[4080,10,3629,8,"setIsReactNative"],[4080,26,3629,24],[4080,29,3629,27,"setIsReactNative"],[4080,45,3629,43],[4081,2,3630,0,"exports"],[4081,9,3630,7],[4081,10,3630,8,"tx"],[4081,12,3630,10],[4081,15,3630,13,"transaction"],[4081,26,3630,24],[4082,2,3631,0,"exports"],[4082,9,3631,7],[4082,10,3631,8,"verifyUserSignatures"],[4082,30,3631,28],[4082,33,3631,31,"verifyUserSignatures"],[4082,53,3631,51],[4083,0,3631,52],[4083,3]],"functionMap":{"names":["<global>","_interopNamespaceDefault","Object.keys.forEach$argument_0","get","is","<anonymous>","isRequired","normalizeArgs","httpDocumentResolver","retrieve","Object.keys.map$argument_0","deriveCadenceByNetwork100","networkDependencies.reduce$argument_0","replaceStringImports","Object.keys.reduce$argument_0","deriveCadenceByNetwork110","template.data.dependencies.forEach$argument_0","dependency.contracts.forEach$argument_0","contract.networks.forEach$argument_0","deriveCadenceByNetwork","fetchChainId","getChainId","fetchChainId._catch$argument_0","watchForChainIdChanges","config.config.subscribe$argument_0","getChainId._catch$argument_0","prepTemplateOpts","pre","preMutate","preQuery","query","onMessageFromFCL","buildData","internal","isReactNative","setIsReactNative","URL","URL#constructor","sendMsgToFCL","ready","close","approve","decline","redirect","CompositeSignature","rightPaddedHexBuffer","leftPaddedHexBuffer","addressBuffer","nonceBuffer","encodeAccountProof","injectExtService","validateArgs","signatures.every$argument_0","signatures.map$argument_0","signatures.map.every$argument_0","compSigs.every$argument_0","compSigs.map$argument_0","compSigs.map.every$argument_0","getVerifySignaturesScript","verifyAccountProof","query$argument_0.args","verifyUserSignatures$1","verifyUserSignatures","serialize","configLens","Object.entries.map$argument_0","TransactionError","TransactionError#constructor","TransactionError.fromErrorMessage","fetchTxStatus","isExpired","isSealed","isExecuted","isFinalized","isPending","isUnknown","isDiff","makeHandlers$1","utilActor.INIT","setTimeout$argument_0","utilActor.SUBSCRIBE","utilActor.UNSUBSCRIBE","utilActor.SNAPSHOT","TIMEOUT","POLL","poll","scoped","spawnTransaction","transaction","snapshot","subscribe","once","innerOnce","Promise$argument_0","subscribe$argument_0","scheduleTick","HANDLERS$1.TICK","HANDLERS$1.utilActor.SUBSCRIBE","HANDLERS$1.utilActor.UNSUBSCRIBE","spawnEvents","events$1","events","streamPromise.then$argument_0","streamPromise.then._catch$argument_0","onEvents","data.forEach$argument_0","onError","legacySubscriptionPromise.then$argument_0","stub","validateDiscoveryPlugin","ServiceRegistry","add","setServices","getServices","getStrategy","getStrategies","validatePlugins","PluginRegistry","getPlugins","getIsServiceRegistryInitialized","initServiceRegistry","getServiceRegistry","makeDiscoveryServices","getDiscoveryService","fetch.then$argument_0","warn","fetchServicesFromDiscovery","HANDLERS.utilActor.INIT","window.addEventListener$argument_1","HANDLERS.SERVICE_ACTOR_KEYS.UPDATE_RESULTS","HANDLERS.utilActor.SUBSCRIBE","HANDLERS.utilActor.UNSUBSCRIBE","HANDLERS.SERVICE_ACTOR_KEYS.SNAPSHOT","spawnProviders","authn.subscribe","authn.snapshot","authn.update","genHash","generateTemplateId$2","generateImport","findImports","generateDependencyPin110","horizon.map$argument_0","generateContractNetworks","generateContractDependencies","generateTemplateId$1","templateData.messages.map$argument_0","templateMessage.i18n.map$argument_0","templateData.parameters.sort$argument_0","templateData.parameters.sort.map$argument_0","arg.messages.map$argument_0","argumentMessage.i18n.map$argument_0","generateTemplateId","verifyGeneratedTemplateId","getInteractionTemplateAudits","generateDependencyPin100","generateDependencyPin","generateDependencyPinAtLatestSealedBlock","verifyDependencyPinsSame","verifyDependencyPinsSameAtLatestSealedBlock","getTemplateMessage","template.data.messages.find$argument_0","msg.i18n.find$argument_0","getTemplateArgumentMessage","template.data.parameters.find$argument_0","param.messages.find$argument_0","message.i18n.find$argument_0","fetchServices","mergeServices","normalizeAuthn","normalizeAuthz","normalizePreAuthz","normalizeFrame","normalizeBackChannelRpc","normalizeOpenId","normalizeUserSignature","normalizeLocalView","normalizeAccountProof","normalizeAuthnRefresh","normalizeServices","services.map$argument_0","normalizeService","serviceOfType","services.reduce$argument_0","deriveCompositeId","normalizeData","buildUser","checkWalletConnectEnabled","execStrategy","execService","normalizeCompositeSignature","isFn","getStoredUser","makeHandlers","getStorageProvider","SNAPSHOT","SET_CURRENT_USER","DEL_CURRENT_USER","spawnCurrentUser","notExpired","getAccountProofData","makeConfig","getAuthenticate","getUnauthenticate","unauthenticate","normalizePreAuthzResponse","getResolvePreAuthz","axs.map$argument_0","signingFunction","getAuthorization","resolve","getSubscribe","utilActor.spawn$argument_0","getSnapshot","getResolveArgument","makeSignable","getSignUserMessage","response.map$argument_0","getCurrentUser","Object.assign$argument_0","getMutate","mutate","serviceEndpoint","fetchService","normalizePollingResponse","serviceMethod","getExecHttpPost","execLocal$argument_1.onClose","checkCanContinue","poll.then$argument_0","poll.then._catch$argument_0","_","deprecate","buildMessageHandler","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACkB;2BCG;eCK,4BD;KDG;CDI;WIU,QC,sBL;mBMC,cN;AOM;CPG;AQE;CRa;ASE;+CCO;GDI;CTW;AWU;4EDM;GCQ;oCCC;GDI;CXC;AaU;iDCK;GDI;CbC;AeU;uCCS;iCCC;gCCE;ODI;KDE;GDC;CfQ;AmBU;CnBwB;AoBE;CpBI;AqBmB;wDCqC;KDI;CrBiB;AuBS;iCCC;aCI,QD;GDC;CvBC;A0BE;C1BY;A2BE;C3Ba;A4BC;C5BE;A6BC;C7BE;A8B8B;C9BK;yB+BsB;+E1BC,Q0B;oBCC;GDI;mBEC;GFQ;S1BE,qD0B;C/BC;AkCG;ClCE;AmCC;CnCE;AoCQ;ECC;GDe;CpCC;qBsCmB;CtCyB;cuCU;CvCG;cwCQ;CxCE;gByCS;CzCQ;gB0CS;C1CQ;iB2CS;C3CQ;A4C+B;C5CM;6B6CE,kE7C;4B8CC,oE9C;sB+CC,oC/C;oBgDC,sChD;2BiDC;CjDgB;AkDE;ClDS;qBmDmB;0ECW,oDD;2CEC,aF,QG,iCH;sEIU,oDJ;yCKC,aL,QM,iCN;CnDG;kC0DI;C1DsB;A2D6B;UC0B,6JD;C3DE;A6DuB;UDgB,qIC;C7DE;Y8DkB;G9DE;kB+DG;C/DM;AgEE;mFCC;GDG;ChEC;AkEG;ECC;GDI;EEC;GFI;ClEC;sBqEc;CrEE;kBsEC,qBtE;iBuEC,oBvE;mBwEC,oBxE;oByEC,oBzE;kB0EC,oB1E;kB2EC,oB3E;e4EC;C5EE;uB6EC;sBCG;iBCC,2BD;KDE;2BGC;KHG;6BIC;KJE;0BKC;KLE;eMC;KNK;YOC;mBCE,iBN,wBM,gBD;KPkB;C7EE;esFC;CtFI;yBuFC;SlFE;GkFE;CvFC;AwFwB;ECO;GDE;EEC;GFE;EGC;WCC;yBCG;gCCC;SDgB;ODC;KDC;GHC;CxFQ;qB+FY;oBhBC,wBgB;C/FC;UgGE;GhGe;yBiGC;GjGK;2BkGC;GlGO;oBmGE,uCnG;AoGyB;eVO,4DU;CpGE;AqGW;eXU;2DYI,UZ,Qa;ObS;McG;qBCC,8BD;OdC;MgBC;OhBE;qCiBG;6BLE,4DK,QJ;+BDC,wBC;WIE;OjBE;arFG;uCsGC;+BLI,wBK;StGE;OqFC;KWC;CrGE;a4GE;C5GE;gC6GW;C7GkB;wB8GC;cCM;GDkB;sBEC,+DF;sBGC,mBH;sBIC,gCJ;wBKC,4BL;C9GO;wBoHC;CpHc;uBqHC;qBCE,gBD;cNC;GMQ;CrHK;wCuHE,4CvH;4BwHC;CxHY;2ByHC;CzHQ;8B0HG;C1HG;A2HC;C3HkB;AiHE;UWyB,aX;CjHC;a6HS;C7HU;mC8HC;C9He;oB+HE;sCCM;ODE;G/HE;uCiIC;GjIK;yBkIC;GlIK;2BmIC,6CnI;iCoIC;IpIE;uBqIE,yDrI;asI0B,wEtI;YuIK,oEvI;UwIK;GxIM;AyIO;CzII;A0IS;4EhIS,oPgI;qFhIC,0jCgI;oFhIC,sqBgI;C1IG;A2IE;C3IU;A4IE;C5IiB;A6IU;oDCwB,gCD;C7IK;A+IE;C/ImB;AgJC;ChJe;AiJS;+DCS,mGC,yGD,GD;qEGC,2BH,MI,qHC,mGC,yGD,GD,IJ;CjJI;AwJS;CxJmB;AyJU;CzJO;A0JY;c9F+C,qF8F;C1JM;A2JU;qCbwB,gCa;C3JG;A4JW;C5JwB;A6JW;C7JiB;A8JY;C9JmF;A+JW;C/Jc;AgKW;iDCe,yBD;kCEE,2BF;ChKQ;AmKY;qDCkB,8BD;4CEE,yBF;sCGE,2BH;CnKQ;AuKgB;U3CS,a2C;CvK0B;AwKE;CxKK;AyKmB;CzKsB;A0KgB;C1KwB;A2KgB;C3KwB;A4KU;C5KkB;A6KW;C7KkB;A8KyC;C9KQ;A+Ka;C/KW;AgLW;ChLyB;AiLgB;CjLW;AkLa;ClLW;AmLE;sBCC,0CD;CnLC;AqLa;CrLQ;AsLE;yBCI,kKD;CtLC;AwLE;CxLE;AyLC;CzLI;A0LC;C1LY;A2LM;C3LW;qB4LG;C5LoB;A6LC;C7LyD;A8LS;C9LgB;a+LO,4B/L;sBgMe;ChMQ;qBiMC;6BCE;GDG;sBnHE;KmHgB;2BjHC;KiHK;6BhHC;KgHE;gBEC;KFI;wBGC;KHO;wBIC;KJO;CjME;yBsMC,+CtM;AuMC;CvME;AwMC;CxMmB;mByMC;CzMa;wB0MM;ArMQ;qBwFS;GxF+D;CLC;A2MM;SCI;GDG;C3MC;kC6MC;E7MM;2B8MM,UzM;uB0MS;MCM;ODO;G1MO;CLE;yBiNO;A5MQ;I6MK;UFuB;WEU;K7MI;CLE;AmNM;SzHQ;iC0HG;K1HU;WrFC,gCqF;GyHC;CnNC;AqNM;S5HK;G4HM;CrNC;2BsNO,UjN;CLK;qBuNC;CvNK;2BwNM;AnNM;0BoNe,iDpN;CLO;uB0Ne;uBCU;GDI;C1NG;kB4NQ;iBCgD;GDqB;C5NE;A8NE;C9NW;A+NE;UnGY,amG;C/NC;AgOW;ChOoB;sBiOM;CjOK;AqFC;6FhFC,UgF;wBQS,uBR;wBQe,uBR;CrFG;wBkOE,a7N;e8N+B,4B9N;kBmCE;KnCO;6B+NU;K/NI;qDgOC;KhOG,QiO;KjOI;CLQ;UuOM,6CvO;kBwOE,4HxO;4ByOC;SpOW;GoOiF;CzOC;O0OO,qC1O;O0OI,mC1O;O0OI,+B1O;O0OI,gC1O;O0OI,yC1O;O0OI,qC1O;O0OI,yC1O;O0OI,0C1O;O0OI,iC1O;O0OI,iC1O;O0OI,iD1O;O0OI,kC1O;O0OI,sC1O;O0OI,oC1O;O0OI,0C1O;O0OI,yC1O;O0OI,qC1O;O0OI,uD1O;O0OI,+C1O;O0OI,gD1O;O0OI,8C1O;O0OI,0C1O;O0OI,gD1O;O0OI,qC1O;O0OI,iC1O;O0OI,gC1O;O0OI,iC1O;O0OI,2C1O;O0OI,iC1O;O0OI,kC1O;O0OI,iC1O;O0OI,gC1O;O0OI,gC1O;O0OI,oC1O;O0OI,+B1O;O0OI,kC1O;O0OI,gC1O;O0OI,2C1O;O0OI,uC1O;O0OI,qC1O;O0OI,4C1O;O0OI,yC1O;O0OI,+B1O;O0OK,qC1O;O0OI,2C1O;O0OI,8C1O;O0OI,8C1O;O0OI,6C1O;O0OI,6C1O"}},"type":"js/module"}]}