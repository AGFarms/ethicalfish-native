{"dependencies":[{"name":"multiformats/basics","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":43,"index":58}}],"key":"k1VuWWM3aPSkRdPiUjetLVbgx6I="}},{"name":"../alloc.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":12,"index":72},"end":{"line":4,"column":34,"index":94}}],"key":"XCbwVBvW9CYNnqUmQkZozbxwpPg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var basics = require(_dependencyMap[0], \"multiformats/basics\");\n  var alloc = require(_dependencyMap[1], \"../alloc.js\");\n  function createCodec(name, prefix, encode, decode) {\n    return {\n      name,\n      prefix,\n      encoder: {\n        name,\n        prefix,\n        encode\n      },\n      decoder: {\n        decode\n      }\n    };\n  }\n  var string = createCodec('utf8', 'u', buf => {\n    var decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n  }, str => {\n    var encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n  });\n  var ascii = createCodec('ascii', 'a', buf => {\n    var string = 'a';\n    for (var i = 0; i < buf.length; i++) {\n      string += String.fromCharCode(buf[i]);\n    }\n    return string;\n  }, str => {\n    str = str.substring(1);\n    var buf = alloc.allocUnsafe(str.length);\n    for (var i = 0; i < str.length; i++) {\n      buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n  });\n  var BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: basics.bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...basics.bases\n  };\n  module.exports = BASES;\n});","lineCount":51,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"basics"],[4,12,3,10],[4,15,3,13,"require"],[4,22,3,20],[4,23,3,20,"_dependencyMap"],[4,37,3,20],[4,63,3,42],[4,64,3,43],[5,2,4,0],[5,6,4,4,"alloc"],[5,11,4,9],[5,14,4,12,"require"],[5,21,4,19],[5,22,4,19,"_dependencyMap"],[5,36,4,19],[5,54,4,33],[5,55,4,34],[6,2,6,0],[6,11,6,9,"createCodec"],[6,22,6,20,"createCodec"],[6,23,6,21,"name"],[6,27,6,25],[6,29,6,27,"prefix"],[6,35,6,33],[6,37,6,35,"encode"],[6,43,6,41],[6,45,6,43,"decode"],[6,51,6,49],[6,53,6,51],[7,4,7,2],[7,11,7,9],[8,6,8,4,"name"],[8,10,8,8],[9,6,9,4,"prefix"],[9,12,9,10],[10,6,10,4,"encoder"],[10,13,10,11],[10,15,10,13],[11,8,11,6,"name"],[11,12,11,10],[12,8,12,6,"prefix"],[12,14,12,12],[13,8,13,6,"encode"],[14,6,14,4],[14,7,14,5],[15,6,15,4,"decoder"],[15,13,15,11],[15,15,15,13],[16,8,15,15,"decode"],[17,6,15,22],[18,4,16,2],[18,5,16,3],[19,2,17,0],[20,2,18,0],[20,6,18,6,"string"],[20,12,18,12],[20,15,18,15,"createCodec"],[20,26,18,26],[20,27,18,27],[20,33,18,33],[20,35,18,35],[20,38,18,38],[20,40,18,40,"buf"],[20,43,18,43],[20,47,18,47],[21,4,19,2],[21,8,19,8,"decoder"],[21,15,19,15],[21,18,19,18],[21,22,19,22,"TextDecoder"],[21,33,19,33],[21,34,19,34],[21,40,19,40],[21,41,19,41],[22,4,20,2],[22,11,20,9],[22,14,20,12],[22,17,20,15,"decoder"],[22,24,20,22],[22,25,20,23,"decode"],[22,31,20,29],[22,32,20,30,"buf"],[22,35,20,33],[22,36,20,34],[23,2,21,0],[23,3,21,1],[23,5,21,3,"str"],[23,8,21,6],[23,12,21,10],[24,4,22,2],[24,8,22,8,"encoder"],[24,15,22,15],[24,18,22,18],[24,22,22,22,"TextEncoder"],[24,33,22,33],[24,34,22,34],[24,35,22,35],[25,4,23,2],[25,11,23,9,"encoder"],[25,18,23,16],[25,19,23,17,"encode"],[25,25,23,23],[25,26,23,24,"str"],[25,29,23,27],[25,30,23,28,"substring"],[25,39,23,37],[25,40,23,38],[25,41,23,39],[25,42,23,40],[25,43,23,41],[26,2,24,0],[26,3,24,1],[26,4,24,2],[27,2,25,0],[27,6,25,6,"ascii"],[27,11,25,11],[27,14,25,14,"createCodec"],[27,25,25,25],[27,26,25,26],[27,33,25,33],[27,35,25,35],[27,38,25,38],[27,40,25,40,"buf"],[27,43,25,43],[27,47,25,47],[28,4,26,2],[28,8,26,6,"string"],[28,14,26,12],[28,17,26,15],[28,20,26,18],[29,4,27,2],[29,9,27,7],[29,13,27,11,"i"],[29,14,27,12],[29,17,27,15],[29,18,27,16],[29,20,27,18,"i"],[29,21,27,19],[29,24,27,22,"buf"],[29,27,27,25],[29,28,27,26,"length"],[29,34,27,32],[29,36,27,34,"i"],[29,37,27,35],[29,39,27,37],[29,41,27,39],[30,6,28,4,"string"],[30,12,28,10],[30,16,28,14,"String"],[30,22,28,20],[30,23,28,21,"fromCharCode"],[30,35,28,33],[30,36,28,34,"buf"],[30,39,28,37],[30,40,28,38,"i"],[30,41,28,39],[30,42,28,40],[30,43,28,41],[31,4,29,2],[32,4,30,2],[32,11,30,9,"string"],[32,17,30,15],[33,2,31,0],[33,3,31,1],[33,5,31,3,"str"],[33,8,31,6],[33,12,31,10],[34,4,32,2,"str"],[34,7,32,5],[34,10,32,8,"str"],[34,13,32,11],[34,14,32,12,"substring"],[34,23,32,21],[34,24,32,22],[34,25,32,23],[34,26,32,24],[35,4,33,2],[35,8,33,8,"buf"],[35,11,33,11],[35,14,33,14,"alloc"],[35,19,33,19],[35,20,33,20,"allocUnsafe"],[35,31,33,31],[35,32,33,32,"str"],[35,35,33,35],[35,36,33,36,"length"],[35,42,33,42],[35,43,33,43],[36,4,34,2],[36,9,34,7],[36,13,34,11,"i"],[36,14,34,12],[36,17,34,15],[36,18,34,16],[36,20,34,18,"i"],[36,21,34,19],[36,24,34,22,"str"],[36,27,34,25],[36,28,34,26,"length"],[36,34,34,32],[36,36,34,34,"i"],[36,37,34,35],[36,39,34,37],[36,41,34,39],[37,6,35,4,"buf"],[37,9,35,7],[37,10,35,8,"i"],[37,11,35,9],[37,12,35,10],[37,15,35,13,"str"],[37,18,35,16],[37,19,35,17,"charCodeAt"],[37,29,35,27],[37,30,35,28,"i"],[37,31,35,29],[37,32,35,30],[38,4,36,2],[39,4,37,2],[39,11,37,9,"buf"],[39,14,37,12],[40,2,38,0],[40,3,38,1],[40,4,38,2],[41,2,39,0],[41,6,39,6,"BASES"],[41,11,39,11],[41,14,39,14],[42,4,40,2,"utf8"],[42,8,40,6],[42,10,40,8,"string"],[42,16,40,14],[43,4,41,2],[43,11,41,9],[43,13,41,11,"string"],[43,19,41,17],[44,4,42,2,"hex"],[44,7,42,5],[44,9,42,7,"basics"],[44,15,42,13],[44,16,42,14,"bases"],[44,21,42,19],[44,22,42,20,"base16"],[44,28,42,26],[45,4,43,2,"latin1"],[45,10,43,8],[45,12,43,10,"ascii"],[45,17,43,15],[46,4,44,2,"ascii"],[46,9,44,7],[46,11,44,9,"ascii"],[46,16,44,14],[47,4,45,2,"binary"],[47,10,45,8],[47,12,45,10,"ascii"],[47,17,45,15],[48,4,46,2],[48,7,46,5,"basics"],[48,13,46,11],[48,14,46,12,"bases"],[49,2,47,0],[49,3,47,1],[50,2,49,0,"module"],[50,8,49,6],[50,9,49,7,"exports"],[50,16,49,14],[50,19,49,17,"BASES"],[50,24,49,22],[51,0,49,23],[51,3]],"functionMap":{"names":["<global>","createCodec","createCodec$argument_2","createCodec$argument_3"],"mappings":"AAA;ACK;CDW;wCEC;CFG,EG;CHG;wCEC;CFM,EG;CHO"}},"type":"js/module"}]}