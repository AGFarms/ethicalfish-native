{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":320,"column":2,"index":9333}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":43,"index":58},"end":{"line":3,"column":95,"index":110}}],"key":"6eZFbfKht0uO2NEVT/d8+i8B0s8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[1], \"@react-native-async-storage/async-storage\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * This implementation adds localforage support for react-native async storage,\n   *  as documented in: https://facebook.github.io/react-native/docs/asyncstorage\n   *\n   * The implementation itself is based on the already existing localstorage\n   *  support implementation. A future work could try to unite similar code\n   *  structures of both implementations.\n   */\n  function _withCallback(_x, _x2) {\n    return _withCallback2.apply(this, arguments);\n  }\n  function _withCallback2() {\n    _withCallback2 = _asyncToGenerator(function* (callback, promise) {\n      try {\n        var ret = yield promise();\n        if (callback) {\n          callback(null, ret);\n        }\n        return ret;\n      } catch (e) {\n        if (callback) {\n          callback(e);\n        }\n        throw e;\n      }\n    });\n    return _withCallback2.apply(this, arguments);\n  }\n  function _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = `${options.name}/`;\n    if (options.storeName && options.storeName !== defaultConfig.storeName) {\n      keyPrefix += `${options.storeName}/`;\n    }\n    return keyPrefix;\n  }\n  function _iterate(_x3, _x4, _x5, _x6) {\n    return _iterate2.apply(this, arguments);\n  }\n  function _iterate2() {\n    _iterate2 = _asyncToGenerator(function* (dbInfo, keys, iterator, iterationNumber) {\n      var key = keys.shift();\n      if (key === undefined) {\n        return;\n      }\n      var keyPrefix = dbInfo.keyPrefix;\n      if (key.indexOf(keyPrefix) === 0) {\n        var serializedValue = yield _asyncStorage.default.getItem(key); // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the\n        // key is likely undefined and we'll pass it straight\n        // to the iterator.\n\n        var value = serializedValue && dbInfo.serializer ? dbInfo.serializer.deserialize(serializedValue) : serializedValue;\n        var itVal = iterator(value, key.substring(keyPrefix.length), iterationNumber++);\n        if (itVal !== undefined) {\n          return itVal;\n        }\n      }\n      return _iterate(dbInfo, keys, iterator, iterationNumber);\n    });\n    return _iterate2.apply(this, arguments);\n  }\n  var defaultDriver = {\n    /**\n     * The name of this driver!\n     */\n    _driver: 'rnAsyncStorageWrapper',\n    /**\n     * Returns true if the driver can support the React Native Async Storage on the executed platform, false otherwise.\n     * @returns {boolean}\n     * @private\n     */\n    // eslint-disable-next-line require-await\n    _support: function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          return typeof _asyncStorage.default !== 'undefined' && 'setItem' in _asyncStorage.default && !!_asyncStorage.default.setItem;\n        } catch (e) {\n          return false;\n        }\n      });\n      return function _support() {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Config the localStorage backend, using options set in the config.\n     * @param serializer\n     * @param options\n     * @returns {Promise<void>}\n     * @private\n     */\n    _initStorage: function () {\n      var _ref2 = _asyncToGenerator(function* (serializer) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var dbInfo = Object.assign({}, options);\n        dbInfo.keyPrefix = _getKeyPrefix(options, this._defaultConfig);\n        var localStorageTestKey = '_localforage_support_test';\n        yield _asyncStorage.default.setItem(localStorageTestKey, 'it-works');\n        yield _asyncStorage.default.removeItem(localStorageTestKey); // if these operations throw, the storage initialization fails, because something is wrong with the storage!\n\n        if (serializer === undefined) {\n          serializer = yield this.getSerializer();\n        }\n        if (serializer) {\n          dbInfo.serializer = serializer;\n        }\n        this._dbInfo = dbInfo;\n        return Promise.resolve();\n      });\n      return function _initStorage(_x7) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Iterate over all items in the store.\n     *\n     * @param iterator the method to execute on each item individually!\n     * @param callback\n     * @returns {Promise<T>}\n     */\n    iterate: function (iterator, callback) {\n      var _this = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this.ready();\n        var allKeys = yield _asyncStorage.default.getAllKeys();\n        return _iterate(_this._dbInfo, allKeys, iterator, 0);\n      }));\n    },\n    /**\n     * Retrieve an item from the store. Unlike the original async_storage\n     * library in Gaia, we don't modify return values at all. If a key's value\n     * is `undefined`, we pass that value to the callback function.\n     *\n     * @param key\n     * @param callback\n     * @returns {Promise<T>}\n     */\n    getItem: function (key, callback) {\n      var _this2 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        key = String(key);\n        yield _this2.ready();\n        var dbInfo = _this2._dbInfo;\n        var item = yield _asyncStorage.default.getItem(`${dbInfo.keyPrefix}${key}`);\n        return dbInfo.serializer && item ? dbInfo.serializer.deserialize(item) : item;\n      }));\n    },\n    /**\n     * Set a key's value and run an optional callback once the value is set.\n     * Unlike Gaia's implementation, the callback function is passed the value,\n     * in case you want to operate on that value only after you're sure it\n     * saved, or something like that.\n     *\n     * @param key\n     * @param value\n     * @param callback\n     * @returns {Promise<T>}\n     */\n    setItem: function (key, value, callback) {\n      var _this3 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        key = String(key);\n        yield _this3.ready(); // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n\n        if (value === undefined) {\n          value = null;\n        } // Save the original value to pass to the callback.\n\n        var originalValue = value; //_copyValue(value);\n\n        var dbInfo = _this3._dbInfo;\n        return new Promise((resolve, reject) => {\n          function writeToStorage(_x8) {\n            return _writeToStorage.apply(this, arguments);\n          }\n          function _writeToStorage() {\n            _writeToStorage = _asyncToGenerator(function* (valueToWrite) {\n              yield _asyncStorage.default.setItem(`${dbInfo.keyPrefix}${key}`, valueToWrite);\n              return originalValue;\n            });\n            return _writeToStorage.apply(this, arguments);\n          }\n          if (dbInfo.serializer) {\n            dbInfo.serializer.serialize(value, (serializedValue, error) => {\n              if (error) {\n                reject(error);\n                return;\n              }\n              writeToStorage(serializedValue).then(resolve).catch(reject);\n            });\n          } else {\n            writeToStorage(value).then(resolve).catch(reject);\n          }\n        });\n      }));\n    },\n    /**\n     * Remove an item from the store, nice and simple.\n     * @param key\n     * @param callback\n     * @returns {Promise<T>}\n     */\n    removeItem: function (key, callback) {\n      var _this4 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        key = String(key);\n        yield _this4.ready();\n        yield _asyncStorage.default.removeItem(`${_this4._dbInfo.keyPrefix}${key}`);\n      }));\n    },\n    /**\n     * Remove all keys from the datastore, effectively destroying all data in\n     * the app's key/value store!\n     *\n     * @param callback\n     * @returns {Promise<T>}\n     */\n    clear: function (callback) {\n      var _this5 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this5.ready();\n        var keyPrefix = _this5._dbInfo.keyPrefix;\n        var keysToDelete = [];\n        var allKeys = yield _asyncStorage.default.getAllKeys();\n        for (var key of allKeys) {\n          if (key.indexOf(keyPrefix) === 0) {\n            keysToDelete.push(key);\n          }\n        }\n        yield _asyncStorage.default.multiRemove(keysToDelete);\n      }));\n    },\n    /**\n     * Supply the number of keys in the datastore to the callback function.\n     *\n     * @param callback\n     * @returns {PromiseLike<any> | Promise<any>}\n     */\n    length: function (callback) {\n      var _this6 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        var keys = yield _this6.keys();\n        return keys.length;\n      }));\n    },\n    /**\n     * Same as localStorage's key() method, except takes a callback.\n     * @returns {Promise<*>}\n     */\n    key: function (n, callback) {\n      var _this7 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this7.ready();\n        var dbInfo = _this7._dbInfo;\n        var allKeys = yield _asyncStorage.default.getAllKeys();\n        var key = allKeys[n];\n        return key ? key.substring(dbInfo.keyPrefix.length) : null;\n      }));\n    },\n    keys: function (callback) {\n      var _this8 = this;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this8.ready();\n        var dbInfo = _this8._dbInfo;\n        var allKeys = yield _asyncStorage.default.getAllKeys();\n        var driverKeys = [];\n        for (var key of allKeys) {\n          if (key.indexOf(dbInfo.keyPrefix) === 0) {\n            driverKeys.push(key.substring(dbInfo.keyPrefix.length));\n          }\n        }\n        return driverKeys;\n      }));\n    },\n    dropInstance: function () {\n      var _this9 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return _withCallback(callback, /*#__PURE__*/_asyncToGenerator(function* () {\n        var currentConfig = _this9.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n        if (options.name === undefined) {\n          throw Error('Invalid arguments');\n        }\n        var keyPrefix = _getKeyPrefix(options, _this9._defaultConfig);\n        var keys = yield _this9.keys();\n        var keysToDelete = keys.map(k => `${keyPrefix}${k}`);\n        return _asyncStorage.default.multiRemove(keysToDelete);\n      }));\n    }\n  };\n  function driverWithSerialization(serializer) {\n    var driver = Object.assign({}, defaultDriver, {\n      _driver: `${defaultDriver._driver}-with${serializer === undefined ? 'DefaultSerializer' : serializer === null ? 'outSerializer' : 'Serializer'}`\n    });\n    var orgInitFunctionBody = driver._initStorage;\n    driver._initStorage = function (options) {\n      return orgInitFunctionBody.apply(this, [serializer, options]);\n    };\n    return driver;\n  }\n  function driverWithDefaultSerialization() {\n    return driverWithSerialization(undefined);\n  }\n  function driverWithoutSerialization() {\n    return driverWithSerialization(null);\n  }\n  module.exports = {\n    driverWithoutSerialization,\n    driverWithSerialization,\n    driverWithDefaultSerialization\n  };\n});","lineCount":326,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,3,0],[5,6,3,4,"_asyncStorage"],[5,19,3,17],[5,22,3,20,"_interopRequireDefault"],[5,44,3,42],[5,45,3,43,"require"],[5,52,3,50],[5,53,3,50,"_dependencyMap"],[5,67,3,50],[5,115,3,94],[5,116,3,95],[5,117,3,96],[6,2,5,0],[6,11,5,9,"_interopRequireDefault"],[6,33,5,31,"_interopRequireDefault"],[6,34,5,32,"obj"],[6,37,5,35],[6,39,5,37],[7,4,5,39],[7,11,5,46,"obj"],[7,14,5,49],[7,18,5,53,"obj"],[7,21,5,56],[7,22,5,57,"__esModule"],[7,32,5,67],[7,35,5,70,"obj"],[7,38,5,73],[7,41,5,76],[8,6,5,78,"default"],[8,13,5,85],[8,15,5,87,"obj"],[9,4,5,91],[9,5,5,92],[10,2,5,94],[12,2,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,2,7,0],[20,11,15,15,"_withCallback"],[20,24,15,28,"_withCallback"],[20,25,15,28,"_x"],[20,27,15,28],[20,29,15,28,"_x2"],[20,32,15,28],[21,4,15,28],[21,11,15,28,"_withCallback2"],[21,25,15,28],[21,26,15,28,"apply"],[21,31,15,28],[21,38,15,28,"arguments"],[21,47,15,28],[22,2,15,28],[23,2,15,28],[23,11,15,28,"_withCallback2"],[23,26,15,28],[24,4,15,28,"_withCallback2"],[24,18,15,28],[24,21,15,28,"_asyncToGenerator"],[24,38,15,28],[24,39,15,0],[24,50,15,29,"callback"],[24,58,15,37],[24,60,15,39,"promise"],[24,67,15,46],[24,69,15,48],[25,6,16,2],[25,10,16,6],[26,8,17,4],[26,12,17,10,"ret"],[26,15,17,13],[26,24,17,22,"promise"],[26,31,17,29],[26,32,17,30],[26,33,17,31],[27,8,19,4],[27,12,19,8,"callback"],[27,20,19,16],[27,22,19,18],[28,10,20,6,"callback"],[28,18,20,14],[28,19,20,15],[28,23,20,19],[28,25,20,21,"ret"],[28,28,20,24],[28,29,20,25],[29,8,21,4],[30,8,23,4],[30,15,23,11,"ret"],[30,18,23,14],[31,6,24,2],[31,7,24,3],[31,8,24,4],[31,15,24,11,"e"],[31,16,24,12],[31,18,24,14],[32,8,25,4],[32,12,25,8,"callback"],[32,20,25,16],[32,22,25,18],[33,10,26,6,"callback"],[33,18,26,14],[33,19,26,15,"e"],[33,20,26,16],[33,21,26,17],[34,8,27,4],[35,8,29,4],[35,14,29,10,"e"],[35,15,29,11],[36,6,30,2],[37,4,31,0],[37,5,31,1],[38,4,31,1],[38,11,31,1,"_withCallback2"],[38,25,31,1],[38,26,31,1,"apply"],[38,31,31,1],[38,38,31,1,"arguments"],[38,47,31,1],[39,2,31,1],[40,2,33,0],[40,11,33,9,"_getKeyPrefix"],[40,24,33,22,"_getKeyPrefix"],[40,25,33,23,"options"],[40,32,33,30],[40,34,33,32,"defaultConfig"],[40,47,33,45],[40,49,33,47],[41,4,34,2],[41,8,34,6,"keyPrefix"],[41,17,34,15],[41,20,34,18],[41,23,34,21,"options"],[41,30,34,28],[41,31,34,29,"name"],[41,35,34,33],[41,38,34,36],[42,4,36,2],[42,8,36,6,"options"],[42,15,36,13],[42,16,36,14,"storeName"],[42,25,36,23],[42,29,36,27,"options"],[42,36,36,34],[42,37,36,35,"storeName"],[42,46,36,44],[42,51,36,49,"defaultConfig"],[42,64,36,62],[42,65,36,63,"storeName"],[42,74,36,72],[42,76,36,74],[43,6,37,4,"keyPrefix"],[43,15,37,13],[43,19,37,17],[43,22,37,20,"options"],[43,29,37,27],[43,30,37,28,"storeName"],[43,39,37,37],[43,42,37,40],[44,4,38,2],[45,4,40,2],[45,11,40,9,"keyPrefix"],[45,20,40,18],[46,2,41,0],[47,2,41,1],[47,11,43,15,"_iterate"],[47,19,43,23,"_iterate"],[47,20,43,23,"_x3"],[47,23,43,23],[47,25,43,23,"_x4"],[47,28,43,23],[47,30,43,23,"_x5"],[47,33,43,23],[47,35,43,23,"_x6"],[47,38,43,23],[48,4,43,23],[48,11,43,23,"_iterate2"],[48,20,43,23],[48,21,43,23,"apply"],[48,26,43,23],[48,33,43,23,"arguments"],[48,42,43,23],[49,2,43,23],[50,2,43,23],[50,11,43,23,"_iterate2"],[50,21,43,23],[51,4,43,23,"_iterate2"],[51,13,43,23],[51,16,43,23,"_asyncToGenerator"],[51,33,43,23],[51,34,43,0],[51,45,43,24,"dbInfo"],[51,51,43,30],[51,53,43,32,"keys"],[51,57,43,36],[51,59,43,38,"iterator"],[51,67,43,46],[51,69,43,48,"iterationNumber"],[51,84,43,63],[51,86,43,65],[52,6,44,2],[52,10,44,8,"key"],[52,13,44,11],[52,16,44,14,"keys"],[52,20,44,18],[52,21,44,19,"shift"],[52,26,44,24],[52,27,44,25],[52,28,44,26],[53,6,46,2],[53,10,46,6,"key"],[53,13,46,9],[53,18,46,14,"undefined"],[53,27,46,23],[53,29,46,25],[54,8,47,4],[55,6,48,2],[56,6,50,2],[56,10,50,8,"keyPrefix"],[56,19,50,17],[56,22,50,20,"dbInfo"],[56,28,50,26],[56,29,50,27,"keyPrefix"],[56,38,50,36],[57,6,52,2],[57,10,52,6,"key"],[57,13,52,9],[57,14,52,10,"indexOf"],[57,21,52,17],[57,22,52,18,"keyPrefix"],[57,31,52,27],[57,32,52,28],[57,37,52,33],[57,38,52,34],[57,40,52,36],[58,8,53,4],[58,12,53,10,"serializedValue"],[58,27,53,25],[58,36,53,34,"_asyncStorage"],[58,49,53,47],[58,50,53,48,"default"],[58,57,53,55],[58,58,53,56,"getItem"],[58,65,53,63],[58,66,53,64,"key"],[58,69,53,67],[58,70,53,68],[58,71,53,69],[58,72,53,70],[59,8,54,4],[60,8,55,4],[61,8,56,4],[63,8,58,4],[63,12,58,10,"value"],[63,17,58,15],[63,20,58,18,"serializedValue"],[63,35,58,33],[63,39,58,37,"dbInfo"],[63,45,58,43],[63,46,58,44,"serializer"],[63,56,58,54],[63,59,58,57,"dbInfo"],[63,65,58,63],[63,66,58,64,"serializer"],[63,76,58,74],[63,77,58,75,"deserialize"],[63,88,58,86],[63,89,58,87,"serializedValue"],[63,104,58,102],[63,105,58,103],[63,108,58,106,"serializedValue"],[63,123,58,121],[64,8,59,4],[64,12,59,10,"itVal"],[64,17,59,15],[64,20,59,18,"iterator"],[64,28,59,26],[64,29,59,27,"value"],[64,34,59,32],[64,36,59,34,"key"],[64,39,59,37],[64,40,59,38,"substring"],[64,49,59,47],[64,50,59,48,"keyPrefix"],[64,59,59,57],[64,60,59,58,"length"],[64,66,59,64],[64,67,59,65],[64,69,59,67,"iterationNumber"],[64,84,59,82],[64,86,59,84],[64,87,59,85],[65,8,61,4],[65,12,61,8,"itVal"],[65,17,61,13],[65,22,61,18,"undefined"],[65,31,61,27],[65,33,61,29],[66,10,62,6],[66,17,62,13,"itVal"],[66,22,62,18],[67,8,63,4],[68,6,64,2],[69,6,66,2],[69,13,66,9,"_iterate"],[69,21,66,17],[69,22,66,18,"dbInfo"],[69,28,66,24],[69,30,66,26,"keys"],[69,34,66,30],[69,36,66,32,"iterator"],[69,44,66,40],[69,46,66,42,"iterationNumber"],[69,61,66,57],[69,62,66,58],[70,4,67,0],[70,5,67,1],[71,4,67,1],[71,11,67,1,"_iterate2"],[71,20,67,1],[71,21,67,1,"apply"],[71,26,67,1],[71,33,67,1,"arguments"],[71,42,67,1],[72,2,67,1],[73,2,69,0],[73,6,69,6,"defaultDriver"],[73,19,69,19],[73,22,69,22],[74,4,70,2],[75,0,71,0],[76,0,72,0],[77,4,73,2,"_driver"],[77,11,73,9],[77,13,73,11],[77,36,73,34],[78,4,75,2],[79,0,76,0],[80,0,77,0],[81,0,78,0],[82,0,79,0],[83,4,80,2],[84,4,81,2,"_support"],[84,12,81,10],[85,6,81,10],[85,10,81,10,"_ref"],[85,14,81,10],[85,17,81,10,"_asyncToGenerator"],[85,34,81,10],[85,35,81,12],[85,48,81,30],[86,8,82,4],[86,12,82,8],[87,10,83,6],[87,17,83,13],[87,24,83,20,"_asyncStorage"],[87,37,83,33],[87,38,83,34,"default"],[87,45,83,41],[87,50,83,46],[87,61,83,57],[87,65,83,61],[87,74,83,70],[87,78,83,74,"_asyncStorage"],[87,91,83,87],[87,92,83,88,"default"],[87,99,83,95],[87,103,83,99],[87,104,83,100],[87,105,83,101,"_asyncStorage"],[87,118,83,114],[87,119,83,115,"default"],[87,126,83,122],[87,127,83,123,"setItem"],[87,134,83,130],[88,8,84,4],[88,9,84,5],[88,10,84,6],[88,17,84,13,"e"],[88,18,84,14],[88,20,84,16],[89,10,85,6],[89,17,85,13],[89,22,85,18],[90,8,86,4],[91,6,87,2],[91,7,87,3],[92,6,87,3],[92,22,81,2,"_support"],[92,30,81,10,"_support"],[92,31,81,10],[93,8,81,10],[93,15,81,10,"_ref"],[93,19,81,10],[93,20,81,10,"apply"],[93,25,81,10],[93,32,81,10,"arguments"],[93,41,81,10],[94,6,81,10],[95,4,81,10],[95,7,87,3],[96,4,89,2],[97,0,90,0],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,0,94,0],[102,0,95,0],[103,4,96,2,"_initStorage"],[103,16,96,14],[104,6,96,14],[104,10,96,14,"_ref2"],[104,15,96,14],[104,18,96,14,"_asyncToGenerator"],[104,35,96,14],[104,36,96,16],[104,47,96,32,"serializer"],[104,57,96,42],[104,59,96,58],[105,8,96,58],[105,12,96,44,"options"],[105,19,96,51],[105,22,96,51,"arguments"],[105,31,96,51],[105,32,96,51,"length"],[105,38,96,51],[105,46,96,51,"arguments"],[105,55,96,51],[105,63,96,51,"undefined"],[105,72,96,51],[105,75,96,51,"arguments"],[105,84,96,51],[105,90,96,54],[105,91,96,55],[105,92,96,56],[106,8,97,4],[106,12,97,10,"dbInfo"],[106,18,97,16],[106,21,97,19,"Object"],[106,27,97,25],[106,28,97,26,"assign"],[106,34,97,32],[106,35,97,33],[106,36,97,34],[106,37,97,35],[106,39,97,37,"options"],[106,46,97,44],[106,47,97,45],[107,8,98,4,"dbInfo"],[107,14,98,10],[107,15,98,11,"keyPrefix"],[107,24,98,20],[107,27,98,23,"_getKeyPrefix"],[107,40,98,36],[107,41,98,37,"options"],[107,48,98,44],[107,50,98,46],[107,54,98,50],[107,55,98,51,"_defaultConfig"],[107,69,98,65],[107,70,98,66],[108,8,99,4],[108,12,99,10,"localStorageTestKey"],[108,31,99,29],[108,34,99,32],[108,61,99,59],[109,8,100,4],[109,14,100,10,"_asyncStorage"],[109,27,100,23],[109,28,100,24,"default"],[109,35,100,31],[109,36,100,32,"setItem"],[109,43,100,39],[109,44,100,40,"localStorageTestKey"],[109,63,100,59],[109,65,100,61],[109,75,100,71],[109,76,100,72],[110,8,101,4],[110,14,101,10,"_asyncStorage"],[110,27,101,23],[110,28,101,24,"default"],[110,35,101,31],[110,36,101,32,"removeItem"],[110,46,101,42],[110,47,101,43,"localStorageTestKey"],[110,66,101,62],[110,67,101,63],[110,68,101,64],[110,69,101,65],[112,8,103,4],[112,12,103,8,"serializer"],[112,22,103,18],[112,27,103,23,"undefined"],[112,36,103,32],[112,38,103,34],[113,10,104,6,"serializer"],[113,20,104,16],[113,29,104,25],[113,33,104,29],[113,34,104,30,"getSerializer"],[113,47,104,43],[113,48,104,44],[113,49,104,45],[114,8,105,4],[115,8,107,4],[115,12,107,8,"serializer"],[115,22,107,18],[115,24,107,20],[116,10,108,6,"dbInfo"],[116,16,108,12],[116,17,108,13,"serializer"],[116,27,108,23],[116,30,108,26,"serializer"],[116,40,108,36],[117,8,109,4],[118,8,111,4],[118,12,111,8],[118,13,111,9,"_dbInfo"],[118,20,111,16],[118,23,111,19,"dbInfo"],[118,29,111,25],[119,8,112,4],[119,15,112,11,"Promise"],[119,22,112,18],[119,23,112,19,"resolve"],[119,30,112,26],[119,31,112,27],[119,32,112,28],[120,6,113,2],[120,7,113,3],[121,6,113,3],[121,22,96,2,"_initStorage"],[121,34,96,14,"_initStorage"],[121,35,96,14,"_x7"],[121,38,96,14],[122,8,96,14],[122,15,96,14,"_ref2"],[122,20,96,14],[122,21,96,14,"apply"],[122,26,96,14],[122,33,96,14,"arguments"],[122,42,96,14],[123,6,96,14],[124,4,96,14],[124,7,113,3],[125,4,115,2],[126,0,116,0],[127,0,117,0],[128,0,118,0],[129,0,119,0],[130,0,120,0],[131,0,121,0],[132,4,122,2,"iterate"],[132,11,122,9],[132,13,122,11],[132,22,122,11,"iterate"],[132,23,122,21,"iterator"],[132,31,122,29],[132,33,122,31,"callback"],[132,41,122,39],[132,43,122,41],[133,6,122,41],[133,10,122,41,"_this"],[133,15,122,41],[134,6,123,4],[134,13,123,11,"_withCallback"],[134,26,123,24],[134,27,123,25,"callback"],[134,35,123,33],[134,50,123,33,"_asyncToGenerator"],[134,67,123,33],[134,68,123,35],[134,81,123,47],[135,8,124,6],[135,14,124,12,"_this"],[135,19,124,16],[135,20,124,17,"ready"],[135,25,124,22],[135,26,124,23],[135,27,124,24],[136,8,125,6],[136,12,125,12,"allKeys"],[136,19,125,19],[136,28,125,28,"_asyncStorage"],[136,41,125,41],[136,42,125,42,"default"],[136,49,125,49],[136,50,125,50,"getAllKeys"],[136,60,125,60],[136,61,125,61],[136,62,125,62],[137,8,126,6],[137,15,126,13,"_iterate"],[137,23,126,21],[137,24,126,22,"_this"],[137,29,126,26],[137,30,126,27,"_dbInfo"],[137,37,126,34],[137,39,126,36,"allKeys"],[137,46,126,43],[137,48,126,45,"iterator"],[137,56,126,53],[137,58,126,55],[137,59,126,56],[137,60,126,57],[138,6,127,4],[138,7,127,5],[138,9,127,6],[139,4,128,2],[139,5,128,3],[140,4,130,2],[141,0,131,0],[142,0,132,0],[143,0,133,0],[144,0,134,0],[145,0,135,0],[146,0,136,0],[147,0,137,0],[148,0,138,0],[149,4,139,2,"getItem"],[149,11,139,9],[149,13,139,11],[149,22,139,11,"getItem"],[149,23,139,21,"key"],[149,26,139,24],[149,28,139,26,"callback"],[149,36,139,34],[149,38,139,36],[150,6,139,36],[150,10,139,36,"_this2"],[150,16,139,36],[151,6,140,4],[151,13,140,11,"_withCallback"],[151,26,140,24],[151,27,140,25,"callback"],[151,35,140,33],[151,50,140,33,"_asyncToGenerator"],[151,67,140,33],[151,68,140,35],[151,81,140,47],[152,8,141,6,"key"],[152,11,141,9],[152,14,141,12,"String"],[152,20,141,18],[152,21,141,19,"key"],[152,24,141,22],[152,25,141,23],[153,8,142,6],[153,14,142,12,"_this2"],[153,20,142,16],[153,21,142,17,"ready"],[153,26,142,22],[153,27,142,23],[153,28,142,24],[154,8,143,6],[154,12,143,12,"dbInfo"],[154,18,143,18],[154,21,143,21,"_this2"],[154,27,143,25],[154,28,143,26,"_dbInfo"],[154,35,143,33],[155,8,144,6],[155,12,144,12,"item"],[155,16,144,16],[155,25,144,25,"_asyncStorage"],[155,38,144,38],[155,39,144,39,"default"],[155,46,144,46],[155,47,144,47,"getItem"],[155,54,144,54],[155,55,144,55],[155,58,144,58,"dbInfo"],[155,64,144,64],[155,65,144,65,"keyPrefix"],[155,74,144,74],[155,77,144,77,"key"],[155,80,144,80],[155,82,144,82],[155,83,144,83],[156,8,145,6],[156,15,145,13,"dbInfo"],[156,21,145,19],[156,22,145,20,"serializer"],[156,32,145,30],[156,36,145,34,"item"],[156,40,145,38],[156,43,145,41,"dbInfo"],[156,49,145,47],[156,50,145,48,"serializer"],[156,60,145,58],[156,61,145,59,"deserialize"],[156,72,145,70],[156,73,145,71,"item"],[156,77,145,75],[156,78,145,76],[156,81,145,79,"item"],[156,85,145,83],[157,6,146,4],[157,7,146,5],[157,9,146,6],[158,4,147,2],[158,5,147,3],[159,4,149,2],[160,0,150,0],[161,0,151,0],[162,0,152,0],[163,0,153,0],[164,0,154,0],[165,0,155,0],[166,0,156,0],[167,0,157,0],[168,0,158,0],[169,0,159,0],[170,4,160,2,"setItem"],[170,11,160,9],[170,13,160,11],[170,22,160,11,"setItem"],[170,23,160,21,"key"],[170,26,160,24],[170,28,160,26,"value"],[170,33,160,31],[170,35,160,33,"callback"],[170,43,160,41],[170,45,160,43],[171,6,160,43],[171,10,160,43,"_this3"],[171,16,160,43],[172,6,161,4],[172,13,161,11,"_withCallback"],[172,26,161,24],[172,27,161,25,"callback"],[172,35,161,33],[172,50,161,33,"_asyncToGenerator"],[172,67,161,33],[172,68,161,35],[172,81,161,47],[173,8,162,6,"key"],[173,11,162,9],[173,14,162,12,"String"],[173,20,162,18],[173,21,162,19,"key"],[173,24,162,22],[173,25,162,23],[174,8,163,6],[174,14,163,12,"_this3"],[174,20,163,16],[174,21,163,17,"ready"],[174,26,163,22],[174,27,163,23],[174,28,163,24],[174,29,163,25],[174,30,163,26],[175,8,164,6],[177,8,166,6],[177,12,166,10,"value"],[177,17,166,15],[177,22,166,20,"undefined"],[177,31,166,29],[177,33,166,31],[178,10,167,8,"value"],[178,15,167,13],[178,18,167,16],[178,22,167,20],[179,8,168,6],[179,9,168,7],[179,10,168,8],[181,8,171,6],[181,12,171,12,"originalValue"],[181,25,171,25],[181,28,171,28,"value"],[181,33,171,33],[181,34,171,34],[181,35,171,35],[183,8,173,6],[183,12,173,12,"dbInfo"],[183,18,173,18],[183,21,173,21,"_this3"],[183,27,173,25],[183,28,173,26,"_dbInfo"],[183,35,173,33],[184,8,174,6],[184,15,174,13],[184,19,174,17,"Promise"],[184,26,174,24],[184,27,174,25],[184,28,174,26,"resolve"],[184,35,174,33],[184,37,174,35,"reject"],[184,43,174,41],[184,48,174,46],[185,10,174,46],[185,19,175,23,"writeToStorage"],[185,33,175,37,"writeToStorage"],[185,34,175,37,"_x8"],[185,37,175,37],[186,12,175,37],[186,19,175,37,"_writeToStorage"],[186,34,175,37],[186,35,175,37,"apply"],[186,40,175,37],[186,47,175,37,"arguments"],[186,56,175,37],[187,10,175,37],[188,10,175,37],[188,19,175,37,"_writeToStorage"],[188,35,175,37],[189,12,175,37,"_writeToStorage"],[189,27,175,37],[189,30,175,37,"_asyncToGenerator"],[189,47,175,37],[189,48,175,8],[189,59,175,38,"valueToWrite"],[189,71,175,50],[189,73,175,52],[190,14,176,10],[190,20,176,16,"_asyncStorage"],[190,33,176,29],[190,34,176,30,"default"],[190,41,176,37],[190,42,176,38,"setItem"],[190,49,176,45],[190,50,176,46],[190,53,176,49,"dbInfo"],[190,59,176,55],[190,60,176,56,"keyPrefix"],[190,69,176,65],[190,72,176,68,"key"],[190,75,176,71],[190,77,176,73],[190,79,176,75,"valueToWrite"],[190,91,176,87],[190,92,176,88],[191,14,177,10],[191,21,177,17,"originalValue"],[191,34,177,30],[192,12,178,8],[192,13,178,9],[193,12,178,9],[193,19,178,9,"_writeToStorage"],[193,34,178,9],[193,35,178,9,"apply"],[193,40,178,9],[193,47,178,9,"arguments"],[193,56,178,9],[194,10,178,9],[195,10,180,8],[195,14,180,12,"dbInfo"],[195,20,180,18],[195,21,180,19,"serializer"],[195,31,180,29],[195,33,180,31],[196,12,181,10,"dbInfo"],[196,18,181,16],[196,19,181,17,"serializer"],[196,29,181,27],[196,30,181,28,"serialize"],[196,39,181,37],[196,40,181,38,"value"],[196,45,181,43],[196,47,181,45],[196,48,181,46,"serializedValue"],[196,63,181,61],[196,65,181,63,"error"],[196,70,181,68],[196,75,181,73],[197,14,182,12],[197,18,182,16,"error"],[197,23,182,21],[197,25,182,23],[198,16,183,14,"reject"],[198,22,183,20],[198,23,183,21,"error"],[198,28,183,26],[198,29,183,27],[199,16,184,14],[200,14,185,12],[201,14,187,12,"writeToStorage"],[201,28,187,26],[201,29,187,27,"serializedValue"],[201,44,187,42],[201,45,187,43],[201,46,187,44,"then"],[201,50,187,48],[201,51,187,49,"resolve"],[201,58,187,56],[201,59,187,57],[201,60,187,58,"catch"],[201,65,187,63],[201,66,187,64,"reject"],[201,72,187,70],[201,73,187,71],[202,12,188,10],[202,13,188,11],[202,14,188,12],[203,10,189,8],[203,11,189,9],[203,17,189,15],[204,12,190,10,"writeToStorage"],[204,26,190,24],[204,27,190,25,"value"],[204,32,190,30],[204,33,190,31],[204,34,190,32,"then"],[204,38,190,36],[204,39,190,37,"resolve"],[204,46,190,44],[204,47,190,45],[204,48,190,46,"catch"],[204,53,190,51],[204,54,190,52,"reject"],[204,60,190,58],[204,61,190,59],[205,10,191,8],[206,8,192,6],[206,9,192,7],[206,10,192,8],[207,6,193,4],[207,7,193,5],[207,9,193,6],[208,4,194,2],[208,5,194,3],[209,4,196,2],[210,0,197,0],[211,0,198,0],[212,0,199,0],[213,0,200,0],[214,0,201,0],[215,4,202,2,"removeItem"],[215,14,202,12],[215,16,202,14],[215,25,202,14,"removeItem"],[215,26,202,24,"key"],[215,29,202,27],[215,31,202,29,"callback"],[215,39,202,37],[215,41,202,39],[216,6,202,39],[216,10,202,39,"_this4"],[216,16,202,39],[217,6,203,4],[217,13,203,11,"_withCallback"],[217,26,203,24],[217,27,203,25,"callback"],[217,35,203,33],[217,50,203,33,"_asyncToGenerator"],[217,67,203,33],[217,68,203,35],[217,81,203,47],[218,8,204,6,"key"],[218,11,204,9],[218,14,204,12,"String"],[218,20,204,18],[218,21,204,19,"key"],[218,24,204,22],[218,25,204,23],[219,8,205,6],[219,14,205,12,"_this4"],[219,20,205,16],[219,21,205,17,"ready"],[219,26,205,22],[219,27,205,23],[219,28,205,24],[220,8,206,6],[220,14,206,12,"_asyncStorage"],[220,27,206,25],[220,28,206,26,"default"],[220,35,206,33],[220,36,206,34,"removeItem"],[220,46,206,44],[220,47,206,45],[220,50,206,48,"_this4"],[220,56,206,52],[220,57,206,53,"_dbInfo"],[220,64,206,60],[220,65,206,61,"keyPrefix"],[220,74,206,70],[220,77,206,73,"key"],[220,80,206,76],[220,82,206,78],[220,83,206,79],[221,6,207,4],[221,7,207,5],[221,9,207,6],[222,4,208,2],[222,5,208,3],[223,4,210,2],[224,0,211,0],[225,0,212,0],[226,0,213,0],[227,0,214,0],[228,0,215,0],[229,0,216,0],[230,4,217,2,"clear"],[230,9,217,7],[230,11,217,9],[230,20,217,9,"clear"],[230,21,217,19,"callback"],[230,29,217,27],[230,31,217,29],[231,6,217,29],[231,10,217,29,"_this5"],[231,16,217,29],[232,6,218,4],[232,13,218,11,"_withCallback"],[232,26,218,24],[232,27,218,25,"callback"],[232,35,218,33],[232,50,218,33,"_asyncToGenerator"],[232,67,218,33],[232,68,218,35],[232,81,218,47],[233,8,219,6],[233,14,219,12,"_this5"],[233,20,219,16],[233,21,219,17,"ready"],[233,26,219,22],[233,27,219,23],[233,28,219,24],[234,8,220,6],[234,12,220,12,"keyPrefix"],[234,21,220,21],[234,24,220,24,"_this5"],[234,30,220,28],[234,31,220,29,"_dbInfo"],[234,38,220,36],[234,39,220,37,"keyPrefix"],[234,48,220,46],[235,8,221,6],[235,12,221,12,"keysToDelete"],[235,24,221,24],[235,27,221,27],[235,29,221,29],[236,8,222,6],[236,12,222,12,"allKeys"],[236,19,222,19],[236,28,222,28,"_asyncStorage"],[236,41,222,41],[236,42,222,42,"default"],[236,49,222,49],[236,50,222,50,"getAllKeys"],[236,60,222,60],[236,61,222,61],[236,62,222,62],[237,8,224,6],[237,13,224,11],[237,17,224,17,"key"],[237,20,224,20],[237,24,224,24,"allKeys"],[237,31,224,31],[237,33,224,33],[238,10,225,8],[238,14,225,12,"key"],[238,17,225,15],[238,18,225,16,"indexOf"],[238,25,225,23],[238,26,225,24,"keyPrefix"],[238,35,225,33],[238,36,225,34],[238,41,225,39],[238,42,225,40],[238,44,225,42],[239,12,226,10,"keysToDelete"],[239,24,226,22],[239,25,226,23,"push"],[239,29,226,27],[239,30,226,28,"key"],[239,33,226,31],[239,34,226,32],[240,10,227,8],[241,8,228,6],[242,8,230,6],[242,14,230,12,"_asyncStorage"],[242,27,230,25],[242,28,230,26,"default"],[242,35,230,33],[242,36,230,34,"multiRemove"],[242,47,230,45],[242,48,230,46,"keysToDelete"],[242,60,230,58],[242,61,230,59],[243,6,231,4],[243,7,231,5],[243,9,231,6],[244,4,232,2],[244,5,232,3],[245,4,234,2],[246,0,235,0],[247,0,236,0],[248,0,237,0],[249,0,238,0],[250,0,239,0],[251,4,240,2,"length"],[251,10,240,8],[251,12,240,10],[251,21,240,10,"length"],[251,22,240,20,"callback"],[251,30,240,28],[251,32,240,30],[252,6,240,30],[252,10,240,30,"_this6"],[252,16,240,30],[253,6,241,4],[253,13,241,11,"_withCallback"],[253,26,241,24],[253,27,241,25,"callback"],[253,35,241,33],[253,50,241,33,"_asyncToGenerator"],[253,67,241,33],[253,68,241,35],[253,81,241,47],[254,8,242,6],[254,12,242,12,"keys"],[254,16,242,16],[254,25,242,25,"_this6"],[254,31,242,29],[254,32,242,30,"keys"],[254,36,242,34],[254,37,242,35],[254,38,242,36],[255,8,243,6],[255,15,243,13,"keys"],[255,19,243,17],[255,20,243,18,"length"],[255,26,243,24],[256,6,244,4],[256,7,244,5],[256,9,244,6],[257,4,245,2],[257,5,245,3],[258,4,247,2],[259,0,248,0],[260,0,249,0],[261,0,250,0],[262,4,251,2,"key"],[262,7,251,5],[262,9,251,7],[262,18,251,7,"key"],[262,19,251,17,"n"],[262,20,251,18],[262,22,251,20,"callback"],[262,30,251,28],[262,32,251,30],[263,6,251,30],[263,10,251,30,"_this7"],[263,16,251,30],[264,6,252,4],[264,13,252,11,"_withCallback"],[264,26,252,24],[264,27,252,25,"callback"],[264,35,252,33],[264,50,252,33,"_asyncToGenerator"],[264,67,252,33],[264,68,252,35],[264,81,252,47],[265,8,253,6],[265,14,253,12,"_this7"],[265,20,253,16],[265,21,253,17,"ready"],[265,26,253,22],[265,27,253,23],[265,28,253,24],[266,8,254,6],[266,12,254,12,"dbInfo"],[266,18,254,18],[266,21,254,21,"_this7"],[266,27,254,25],[266,28,254,26,"_dbInfo"],[266,35,254,33],[267,8,255,6],[267,12,255,12,"allKeys"],[267,19,255,19],[267,28,255,28,"_asyncStorage"],[267,41,255,41],[267,42,255,42,"default"],[267,49,255,49],[267,50,255,50,"getAllKeys"],[267,60,255,60],[267,61,255,61],[267,62,255,62],[268,8,256,6],[268,12,256,12,"key"],[268,15,256,15],[268,18,256,18,"allKeys"],[268,25,256,25],[268,26,256,26,"n"],[268,27,256,27],[268,28,256,28],[269,8,257,6],[269,15,257,13,"key"],[269,18,257,16],[269,21,257,19,"key"],[269,24,257,22],[269,25,257,23,"substring"],[269,34,257,32],[269,35,257,33,"dbInfo"],[269,41,257,39],[269,42,257,40,"keyPrefix"],[269,51,257,49],[269,52,257,50,"length"],[269,58,257,56],[269,59,257,57],[269,62,257,60],[269,66,257,64],[270,6,258,4],[270,7,258,5],[270,9,258,6],[271,4,259,2],[271,5,259,3],[272,4,260,2,"keys"],[272,8,260,6],[272,10,260,8],[272,19,260,8,"keys"],[272,20,260,18,"callback"],[272,28,260,26],[272,30,260,28],[273,6,260,28],[273,10,260,28,"_this8"],[273,16,260,28],[274,6,261,4],[274,13,261,11,"_withCallback"],[274,26,261,24],[274,27,261,25,"callback"],[274,35,261,33],[274,50,261,33,"_asyncToGenerator"],[274,67,261,33],[274,68,261,35],[274,81,261,47],[275,8,262,6],[275,14,262,12,"_this8"],[275,20,262,16],[275,21,262,17,"ready"],[275,26,262,22],[275,27,262,23],[275,28,262,24],[276,8,263,6],[276,12,263,12,"dbInfo"],[276,18,263,18],[276,21,263,21,"_this8"],[276,27,263,25],[276,28,263,26,"_dbInfo"],[276,35,263,33],[277,8,264,6],[277,12,264,12,"allKeys"],[277,19,264,19],[277,28,264,28,"_asyncStorage"],[277,41,264,41],[277,42,264,42,"default"],[277,49,264,49],[277,50,264,50,"getAllKeys"],[277,60,264,60],[277,61,264,61],[277,62,264,62],[278,8,265,6],[278,12,265,12,"driverKeys"],[278,22,265,22],[278,25,265,25],[278,27,265,27],[279,8,267,6],[279,13,267,11],[279,17,267,17,"key"],[279,20,267,20],[279,24,267,24,"allKeys"],[279,31,267,31],[279,33,267,33],[280,10,268,8],[280,14,268,12,"key"],[280,17,268,15],[280,18,268,16,"indexOf"],[280,25,268,23],[280,26,268,24,"dbInfo"],[280,32,268,30],[280,33,268,31,"keyPrefix"],[280,42,268,40],[280,43,268,41],[280,48,268,46],[280,49,268,47],[280,51,268,49],[281,12,269,10,"driverKeys"],[281,22,269,20],[281,23,269,21,"push"],[281,27,269,25],[281,28,269,26,"key"],[281,31,269,29],[281,32,269,30,"substring"],[281,41,269,39],[281,42,269,40,"dbInfo"],[281,48,269,46],[281,49,269,47,"keyPrefix"],[281,58,269,56],[281,59,269,57,"length"],[281,65,269,63],[281,66,269,64],[281,67,269,65],[282,10,270,8],[283,8,271,6],[284,8,273,6],[284,15,273,13,"driverKeys"],[284,25,273,23],[285,6,274,4],[285,7,274,5],[285,9,274,6],[286,4,275,2],[286,5,275,3],[287,4,276,2,"dropInstance"],[287,16,276,14],[287,18,276,16],[287,27,276,16,"dropInstance"],[287,28,276,16],[287,30,276,50],[288,6,276,50],[288,10,276,50,"_this9"],[288,16,276,50],[289,6,276,50],[289,10,276,26,"options"],[289,17,276,33],[289,20,276,33,"arguments"],[289,29,276,33],[289,30,276,33,"length"],[289,36,276,33],[289,44,276,33,"arguments"],[289,53,276,33],[289,61,276,33,"undefined"],[289,70,276,33],[289,73,276,33,"arguments"],[289,82,276,33],[289,88,276,36],[289,89,276,37],[289,90,276,38],[290,6,276,38],[290,10,276,40,"callback"],[290,18,276,48],[290,21,276,48,"arguments"],[290,30,276,48],[290,31,276,48,"length"],[290,37,276,48],[290,44,276,48,"arguments"],[290,53,276,48],[290,59,276,48,"undefined"],[290,68,276,48],[291,6,277,4],[291,13,277,11,"_withCallback"],[291,26,277,24],[291,27,277,25,"callback"],[291,35,277,33],[291,50,277,33,"_asyncToGenerator"],[291,67,277,33],[291,68,277,35],[291,81,277,47],[292,8,278,6],[292,12,278,12,"currentConfig"],[292,25,278,25],[292,28,278,28,"_this9"],[292,34,278,32],[292,35,278,33,"config"],[292,41,278,39],[292,42,278,40],[292,43,278,41],[293,8,279,6,"options"],[293,15,279,13],[293,16,279,14,"name"],[293,20,279,18],[293,23,279,21,"options"],[293,30,279,28],[293,31,279,29,"name"],[293,35,279,33],[293,39,279,37,"currentConfig"],[293,52,279,50],[293,53,279,51,"name"],[293,57,279,55],[294,8,280,6,"options"],[294,15,280,13],[294,16,280,14,"storeName"],[294,25,280,23],[294,28,280,26,"options"],[294,35,280,33],[294,36,280,34,"storeName"],[294,45,280,43],[294,49,280,47,"currentConfig"],[294,62,280,60],[294,63,280,61,"storeName"],[294,72,280,70],[295,8,282,6],[295,12,282,10,"options"],[295,19,282,17],[295,20,282,18,"name"],[295,24,282,22],[295,29,282,27,"undefined"],[295,38,282,36],[295,40,282,38],[296,10,283,8],[296,16,283,14,"Error"],[296,21,283,19],[296,22,283,20],[296,41,283,39],[296,42,283,40],[297,8,284,6],[298,8,286,6],[298,12,286,12,"keyPrefix"],[298,21,286,21],[298,24,286,24,"_getKeyPrefix"],[298,37,286,37],[298,38,286,38,"options"],[298,45,286,45],[298,47,286,47,"_this9"],[298,53,286,51],[298,54,286,52,"_defaultConfig"],[298,68,286,66],[298,69,286,67],[299,8,288,6],[299,12,288,12,"keys"],[299,16,288,16],[299,25,288,25,"_this9"],[299,31,288,29],[299,32,288,30,"keys"],[299,36,288,34],[299,37,288,35],[299,38,288,36],[300,8,289,6],[300,12,289,12,"keysToDelete"],[300,24,289,24],[300,27,289,27,"keys"],[300,31,289,31],[300,32,289,32,"map"],[300,35,289,35],[300,36,289,36,"k"],[300,37,289,37],[300,41,289,41],[300,44,289,44,"keyPrefix"],[300,53,289,53],[300,56,289,56,"k"],[300,57,289,57],[300,59,289,59],[300,60,289,60],[301,8,290,6],[301,15,290,13,"_asyncStorage"],[301,28,290,26],[301,29,290,27,"default"],[301,36,290,34],[301,37,290,35,"multiRemove"],[301,48,290,46],[301,49,290,47,"keysToDelete"],[301,61,290,59],[301,62,290,60],[302,6,291,4],[302,7,291,5],[302,9,291,6],[303,4,292,2],[304,2,293,0],[304,3,293,1],[305,2,295,0],[305,11,295,9,"driverWithSerialization"],[305,34,295,32,"driverWithSerialization"],[305,35,295,33,"serializer"],[305,45,295,43],[305,47,295,45],[306,4,296,2],[306,8,296,8,"driver"],[306,14,296,14],[306,17,296,17,"Object"],[306,23,296,23],[306,24,296,24,"assign"],[306,30,296,30],[306,31,296,31],[306,32,296,32],[306,33,296,33],[306,35,296,35,"defaultDriver"],[306,48,296,48],[306,50,296,50],[307,6,297,4,"_driver"],[307,13,297,11],[307,15,297,13],[307,18,297,16,"defaultDriver"],[307,31,297,29],[307,32,297,30,"_driver"],[307,39,297,37],[307,47,297,45,"serializer"],[307,57,297,55],[307,62,297,60,"undefined"],[307,71,297,69],[307,74,297,72],[307,93,297,91],[307,96,297,94,"serializer"],[307,106,297,104],[307,111,297,109],[307,115,297,113],[307,118,297,116],[307,133,297,131],[307,136,297,134],[307,148,297,146],[308,4,298,2],[308,5,298,3],[308,6,298,4],[309,4,299,2],[309,8,299,8,"orgInitFunctionBody"],[309,27,299,27],[309,30,299,30,"driver"],[309,36,299,36],[309,37,299,37,"_initStorage"],[309,49,299,49],[310,4,301,2,"driver"],[310,10,301,8],[310,11,301,9,"_initStorage"],[310,23,301,21],[310,26,301,24],[310,36,301,34,"options"],[310,43,301,41],[310,45,301,43],[311,6,302,4],[311,13,302,11,"orgInitFunctionBody"],[311,32,302,30],[311,33,302,31,"apply"],[311,38,302,36],[311,39,302,37],[311,43,302,41],[311,45,302,43],[311,46,302,44,"serializer"],[311,56,302,54],[311,58,302,56,"options"],[311,65,302,63],[311,66,302,64],[311,67,302,65],[312,4,303,2],[312,5,303,3],[313,4,305,2],[313,11,305,9,"driver"],[313,17,305,15],[314,2,306,0],[315,2,308,0],[315,11,308,9,"driverWithDefaultSerialization"],[315,41,308,39,"driverWithDefaultSerialization"],[315,42,308,39],[315,44,308,42],[316,4,309,2],[316,11,309,9,"driverWithSerialization"],[316,34,309,32],[316,35,309,33,"undefined"],[316,44,309,42],[316,45,309,43],[317,2,310,0],[318,2,312,0],[318,11,312,9,"driverWithoutSerialization"],[318,37,312,35,"driverWithoutSerialization"],[318,38,312,35],[318,40,312,38],[319,4,313,2],[319,11,313,9,"driverWithSerialization"],[319,34,313,32],[319,35,313,33],[319,39,313,37],[319,40,313,38],[320,2,314,0],[321,2,316,0,"module"],[321,8,316,6],[321,9,316,7,"exports"],[321,16,316,14],[321,19,316,17],[322,4,317,2,"driverWithoutSerialization"],[322,30,317,28],[323,4,318,2,"driverWithSerialization"],[323,27,318,25],[324,4,319,2,"driverWithDefaultSerialization"],[325,2,320,0],[325,3,320,1],[326,0,320,2],[326,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_withCallback","_getKeyPrefix","_iterate","defaultDriver._support","defaultDriver._initStorage","defaultDriver.iterate","_withCallback$argument_1","defaultDriver.getItem","defaultDriver.setItem","Promise$argument_0","writeToStorage","dbInfo.serializer.serialize$argument_1","defaultDriver.removeItem","defaultDriver.clear","defaultDriver.length","defaultDriver.key","defaultDriver.keys","defaultDriver.dropInstance","keys.map$argument_0","driverWithSerialization","driver._initStorage","driverWithDefaultSerialization","driverWithoutSerialization"],"mappings":"AAA;ACI,+FD;AEU;CFgB;AGE;CHQ;AIE;CJwB;YKc;GLM;gBMS;GNiB;WOS;mCCC;KDI;GPC;WSW;mCDC;KCM;GTC;WUa;mCFC;yBGa;QCC;SDG;6CEG;WFO;OHI;KEC;GVC;ccQ;mCNC;KMI;GdC;SeS;mCPC;KOa;GfC;UgBQ;mCRC;KQG;GhBC;OiBM;mCTC;KSM;GjBC;QkBC;mCVC;KUa;GlBC;gBmBC;mCXC;oCYY,uBZ;KWE;GnBC;AqBG;wBCM;GDE;CrBG;AuBE;CvBE;AwBE;CxBE"}},"type":"js/module"}]}