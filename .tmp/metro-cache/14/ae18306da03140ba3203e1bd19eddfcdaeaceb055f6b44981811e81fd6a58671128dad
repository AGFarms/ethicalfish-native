{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":52,"column":35,"index":1889}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"../../utils/abi/encodeEventTopics.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":31,"index":135},"end":{"line":4,"column":78,"index":182}}],"key":"FTYLQJmOzfqsJoJp4g9FztcPsho="}},{"name":"../../utils/abi/parseEventLogs.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":28,"index":212},"end":{"line":5,"column":72,"index":256}}],"key":"ptS82S0NZxlmQiiBkpc2hACW5UI="}},{"name":"../../utils/encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":19,"index":277},"end":{"line":6,"column":59,"index":317}}],"key":"lzoYQ59yxspkeAGLn+iikiFGcWQ="}},{"name":"../../utils/formatters/log.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":17,"index":336},"end":{"line":7,"column":57,"index":376}}],"key":"IAghTufbBp5BkQkVQ+vkFR9CDm8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getLogs = getLogs;\n  var encodeEventTopics_js_1 = require(_dependencyMap[1], \"../../utils/abi/encodeEventTopics.js\");\n  var parseEventLogs_js_1 = require(_dependencyMap[2], \"../../utils/abi/parseEventLogs.js\");\n  var toHex_js_1 = require(_dependencyMap[3], \"../../utils/encoding/toHex.js\");\n  var log_js_1 = require(_dependencyMap[4], \"../../utils/formatters/log.js\");\n  function getLogs(_x) {\n    return _getLogs.apply(this, arguments);\n  }\n  function _getLogs() {\n    _getLogs = _asyncToGenerator(function* (client) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        address = _ref.address,\n        blockHash = _ref.blockHash,\n        fromBlock = _ref.fromBlock,\n        toBlock = _ref.toBlock,\n        event = _ref.event,\n        events_ = _ref.events,\n        args = _ref.args,\n        strict_ = _ref.strict;\n      var strict = strict_ ?? false;\n      var events = events_ ?? (event ? [event] : undefined);\n      var topics = [];\n      if (events) {\n        var encoded = events.flatMap(event => (0, encodeEventTopics_js_1.encodeEventTopics)({\n          abi: [event],\n          eventName: event.name,\n          args: events_ ? undefined : args\n        }));\n        topics = [encoded];\n        if (event) topics = topics[0];\n      }\n      var logs;\n      if (blockHash) {\n        logs = yield client.request({\n          method: 'eth_getLogs',\n          params: [{\n            address,\n            topics,\n            blockHash\n          }]\n        });\n      } else {\n        logs = yield client.request({\n          method: 'eth_getLogs',\n          params: [{\n            address,\n            topics,\n            fromBlock: typeof fromBlock === 'bigint' ? (0, toHex_js_1.numberToHex)(fromBlock) : fromBlock,\n            toBlock: typeof toBlock === 'bigint' ? (0, toHex_js_1.numberToHex)(toBlock) : toBlock\n          }]\n        });\n      }\n      var formattedLogs = logs.map(log => (0, log_js_1.formatLog)(log));\n      if (!events) return formattedLogs;\n      return (0, parseEventLogs_js_1.parseEventLogs)({\n        abi: events,\n        args: args,\n        logs: formattedLogs,\n        strict\n      });\n    });\n    return _getLogs.apply(this, arguments);\n  }\n});","lineCount":71,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"getLogs"],[8,17,3,15],[8,20,3,18,"getLogs"],[8,27,3,25],[9,2,4,0],[9,6,4,6,"encodeEventTopics_js_1"],[9,28,4,28],[9,31,4,31,"require"],[9,38,4,38],[9,39,4,38,"_dependencyMap"],[9,53,4,38],[9,96,4,77],[9,97,4,78],[10,2,5,0],[10,6,5,6,"parseEventLogs_js_1"],[10,25,5,25],[10,28,5,28,"require"],[10,35,5,35],[10,36,5,35,"_dependencyMap"],[10,50,5,35],[10,90,5,71],[10,91,5,72],[11,2,6,0],[11,6,6,6,"toHex_js_1"],[11,16,6,16],[11,19,6,19,"require"],[11,26,6,26],[11,27,6,26,"_dependencyMap"],[11,41,6,26],[11,77,6,58],[11,78,6,59],[12,2,7,0],[12,6,7,6,"log_js_1"],[12,14,7,14],[12,17,7,17,"require"],[12,24,7,24],[12,25,7,24,"_dependencyMap"],[12,39,7,24],[12,75,7,56],[12,76,7,57],[13,2,7,58],[13,11,8,15,"getLogs"],[13,18,8,22,"getLogs"],[13,19,8,22,"_x"],[13,21,8,22],[14,4,8,22],[14,11,8,22,"_getLogs"],[14,19,8,22],[14,20,8,22,"apply"],[14,25,8,22],[14,32,8,22,"arguments"],[14,41,8,22],[15,2,8,22],[16,2,8,22],[16,11,8,22,"_getLogs"],[16,20,8,22],[17,4,8,22,"_getLogs"],[17,12,8,22],[17,15,8,22,"_asyncToGenerator"],[17,32,8,22],[17,33,8,0],[17,44,8,23,"client"],[17,50,8,29],[17,52,8,128],[18,6,8,128],[18,10,8,128,"_ref"],[18,14,8,128],[18,17,8,128,"arguments"],[18,26,8,128],[18,27,8,128,"length"],[18,33,8,128],[18,41,8,128,"arguments"],[18,50,8,128],[18,58,8,128,"undefined"],[18,67,8,128],[18,70,8,128,"arguments"],[18,79,8,128],[18,85,8,124],[18,86,8,125],[18,87,8,126],[19,8,8,33,"address"],[19,15,8,40],[19,18,8,40,"_ref"],[19,22,8,40],[19,23,8,33,"address"],[19,30,8,40],[20,8,8,42,"blockHash"],[20,17,8,51],[20,20,8,51,"_ref"],[20,24,8,51],[20,25,8,42,"blockHash"],[20,34,8,51],[21,8,8,53,"fromBlock"],[21,17,8,62],[21,20,8,62,"_ref"],[21,24,8,62],[21,25,8,53,"fromBlock"],[21,34,8,62],[22,8,8,64,"toBlock"],[22,15,8,71],[22,18,8,71,"_ref"],[22,22,8,71],[22,23,8,64,"toBlock"],[22,30,8,71],[23,8,8,73,"event"],[23,13,8,78],[23,16,8,78,"_ref"],[23,20,8,78],[23,21,8,73,"event"],[23,26,8,78],[24,8,8,88,"events_"],[24,15,8,95],[24,18,8,95,"_ref"],[24,22,8,95],[24,23,8,80,"events"],[24,29,8,86],[25,8,8,97,"args"],[25,12,8,101],[25,15,8,101,"_ref"],[25,19,8,101],[25,20,8,97,"args"],[25,24,8,101],[26,8,8,111,"strict_"],[26,15,8,118],[26,18,8,118,"_ref"],[26,22,8,118],[26,23,8,103,"strict"],[26,29,8,109],[27,6,9,4],[27,10,9,10,"strict"],[27,16,9,16],[27,19,9,19,"strict_"],[27,26,9,26],[27,30,9,30],[27,35,9,35],[28,6,10,4],[28,10,10,10,"events"],[28,16,10,16],[28,19,10,19,"events_"],[28,26,10,26],[28,31,10,31,"event"],[28,36,10,36],[28,39,10,39],[28,40,10,40,"event"],[28,45,10,45],[28,46,10,46],[28,49,10,49,"undefined"],[28,58,10,58],[28,59,10,59],[29,6,11,4],[29,10,11,8,"topics"],[29,16,11,14],[29,19,11,17],[29,21,11,19],[30,6,12,4],[30,10,12,8,"events"],[30,16,12,14],[30,18,12,16],[31,8,13,8],[31,12,13,14,"encoded"],[31,19,13,21],[31,22,13,24,"events"],[31,28,13,30],[31,29,13,31,"flatMap"],[31,36,13,38],[31,37,13,40,"event"],[31,42,13,45],[31,46,13,50],[31,47,13,51],[31,48,13,52],[31,50,13,54,"encodeEventTopics_js_1"],[31,72,13,76],[31,73,13,77,"encodeEventTopics"],[31,90,13,94],[31,92,13,96],[32,10,14,12,"abi"],[32,13,14,15],[32,15,14,17],[32,16,14,18,"event"],[32,21,14,23],[32,22,14,24],[33,10,15,12,"eventName"],[33,19,15,21],[33,21,15,23,"event"],[33,26,15,28],[33,27,15,29,"name"],[33,31,15,33],[34,10,16,12,"args"],[34,14,16,16],[34,16,16,18,"events_"],[34,23,16,25],[34,26,16,28,"undefined"],[34,35,16,37],[34,38,16,40,"args"],[35,8,17,8],[35,9,17,9],[35,10,17,10],[35,11,17,11],[36,8,18,8,"topics"],[36,14,18,14],[36,17,18,17],[36,18,18,18,"encoded"],[36,25,18,25],[36,26,18,26],[37,8,19,8],[37,12,19,12,"event"],[37,17,19,17],[37,19,20,12,"topics"],[37,25,20,18],[37,28,20,21,"topics"],[37,34,20,27],[37,35,20,28],[37,36,20,29],[37,37,20,30],[38,6,21,4],[39,6,22,4],[39,10,22,8,"logs"],[39,14,22,12],[40,6,23,4],[40,10,23,8,"blockHash"],[40,19,23,17],[40,21,23,19],[41,8,24,8,"logs"],[41,12,24,12],[41,21,24,21,"client"],[41,27,24,27],[41,28,24,28,"request"],[41,35,24,35],[41,36,24,36],[42,10,25,12,"method"],[42,16,25,18],[42,18,25,20],[42,31,25,33],[43,10,26,12,"params"],[43,16,26,18],[43,18,26,20],[43,19,26,21],[44,12,26,23,"address"],[44,19,26,30],[45,12,26,32,"topics"],[45,18,26,38],[46,12,26,40,"blockHash"],[47,10,26,50],[47,11,26,51],[48,8,27,8],[48,9,27,9],[48,10,27,10],[49,6,28,4],[49,7,28,5],[49,13,29,9],[50,8,30,8,"logs"],[50,12,30,12],[50,21,30,21,"client"],[50,27,30,27],[50,28,30,28,"request"],[50,35,30,35],[50,36,30,36],[51,10,31,12,"method"],[51,16,31,18],[51,18,31,20],[51,31,31,33],[52,10,32,12,"params"],[52,16,32,18],[52,18,32,20],[52,19,33,16],[53,12,34,20,"address"],[53,19,34,27],[54,12,35,20,"topics"],[54,18,35,26],[55,12,36,20,"fromBlock"],[55,21,36,29],[55,23,36,31],[55,30,36,38,"fromBlock"],[55,39,36,47],[55,44,36,52],[55,52,36,60],[55,55,36,63],[55,56,36,64],[55,57,36,65],[55,59,36,67,"toHex_js_1"],[55,69,36,77],[55,70,36,78,"numberToHex"],[55,81,36,89],[55,83,36,91,"fromBlock"],[55,92,36,100],[55,93,36,101],[55,96,36,104,"fromBlock"],[55,105,36,113],[56,12,37,20,"toBlock"],[56,19,37,27],[56,21,37,29],[56,28,37,36,"toBlock"],[56,35,37,43],[56,40,37,48],[56,48,37,56],[56,51,37,59],[56,52,37,60],[56,53,37,61],[56,55,37,63,"toHex_js_1"],[56,65,37,73],[56,66,37,74,"numberToHex"],[56,77,37,85],[56,79,37,87,"toBlock"],[56,86,37,94],[56,87,37,95],[56,90,37,98,"toBlock"],[57,10,38,16],[57,11,38,17],[58,8,40,8],[58,9,40,9],[58,10,40,10],[59,6,41,4],[60,6,42,4],[60,10,42,10,"formattedLogs"],[60,23,42,23],[60,26,42,26,"logs"],[60,30,42,30],[60,31,42,31,"map"],[60,34,42,34],[60,35,42,36,"log"],[60,38,42,39],[60,42,42,44],[60,43,42,45],[60,44,42,46],[60,46,42,48,"log_js_1"],[60,54,42,56],[60,55,42,57,"formatLog"],[60,64,42,66],[60,66,42,68,"log"],[60,69,42,71],[60,70,42,72],[60,71,42,73],[61,6,43,4],[61,10,43,8],[61,11,43,9,"events"],[61,17,43,15],[61,19,44,8],[61,26,44,15,"formattedLogs"],[61,39,44,28],[62,6,45,4],[62,13,45,11],[62,14,45,12],[62,15,45,13],[62,17,45,15,"parseEventLogs_js_1"],[62,36,45,34],[62,37,45,35,"parseEventLogs"],[62,51,45,49],[62,53,45,51],[63,8,46,8,"abi"],[63,11,46,11],[63,13,46,13,"events"],[63,19,46,19],[64,8,47,8,"args"],[64,12,47,12],[64,14,47,14,"args"],[64,18,47,18],[65,8,48,8,"logs"],[65,12,48,12],[65,14,48,14,"formattedLogs"],[65,27,48,27],[66,8,49,8,"strict"],[67,6,50,4],[67,7,50,5],[67,8,50,6],[68,4,51,0],[68,5,51,1],[69,4,51,1],[69,11,51,1,"_getLogs"],[69,19,51,1],[69,20,51,1,"apply"],[69,25,51,1],[69,32,51,1,"arguments"],[69,41,51,1],[70,2,51,1],[71,0,51,1],[71,3]],"functionMap":{"names":["<global>","getLogs","events.flatMap$argument_0","logs.map$argument_0"],"mappings":"AAA;ACO;uCCK;UDI;mCEyB,qCF;CDS"}},"type":"js/module"}]}