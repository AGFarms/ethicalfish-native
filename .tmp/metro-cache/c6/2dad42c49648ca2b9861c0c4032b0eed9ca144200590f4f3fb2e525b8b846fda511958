{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":112,"column":42,"index":5130}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"ox/BlockOverrides","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":23,"index":141},"end":{"line":4,"column":51,"index":169}}],"key":"AmuDjh0/C5E0FEFRQ0pOBaUImLA="}},{"name":"../../accounts/utils/parseAccount.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":26,"index":197},"end":{"line":5,"column":73,"index":244}}],"key":"78ilBCaWG+jlxgI7Q++yCgRPwkg="}},{"name":"../../errors/abi.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":17,"index":263},"end":{"line":6,"column":47,"index":293}}],"key":"bt3peqx8r8dLrUUfcZSr8LlIUEw="}},{"name":"../../errors/contract.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":22,"index":317},"end":{"line":7,"column":57,"index":352}}],"key":"OQvXDaBWSvRWt2AHBVaSARMlf3k="}},{"name":"../../errors/node.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":18,"index":372},"end":{"line":8,"column":49,"index":403}}],"key":"F/L+jwjxi/2PistW8zqeXUtyQUU="}},{"name":"../../utils/abi/decodeFunctionResult.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":34,"index":439},"end":{"line":9,"column":84,"index":489}}],"key":"5luVFMCCdwnL6JGylx//78TqXfs="}},{"name":"../../utils/abi/encodeFunctionData.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":32,"index":523},"end":{"line":10,"column":80,"index":571}}],"key":"k6DKt1NuhSk38W4TkpjEP1M8d4E="}},{"name":"../../utils/encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":19,"index":592},"end":{"line":11,"column":59,"index":632}}],"key":"lzoYQ59yxspkeAGLn+iikiFGcWQ="}},{"name":"../../utils/errors/getContractError.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":30,"index":664},"end":{"line":12,"column":79,"index":713}}],"key":"l1AsMsjSTliC+/hCX99gCA1dK2c="}},{"name":"../../utils/errors/getNodeError.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":26,"index":741},"end":{"line":13,"column":71,"index":786}}],"key":"P/f1T4WXPoJmiaFrpiJElynaID8="}},{"name":"../../utils/formatters/block.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":19,"index":807},"end":{"line":14,"column":61,"index":849}}],"key":"F4Vs76ksbVZWcvu2IlwVvJMGPLo="}},{"name":"../../utils/formatters/log.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":17,"index":868},"end":{"line":15,"column":57,"index":908}}],"key":"IAghTufbBp5BkQkVQ+vkFR9CDm8="}},{"name":"../../utils/formatters/transactionRequest.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":32,"index":942},"end":{"line":16,"column":87,"index":997}}],"key":"OolntZ7JIhMmlzE4od+BKjdmxKI="}},{"name":"../../utils/stateOverride.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":27,"index":1026},"end":{"line":17,"column":66,"index":1065}}],"key":"sStrIDkjeln+9QbKAOFB+abAft4="}},{"name":"../../utils/transaction/assertRequest.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":27,"index":1094},"end":{"line":18,"column":78,"index":1145}}],"key":"9gUwCXYupiRiCvncblFZpd6wzYg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.simulateBlocks = simulateBlocks;\n  var BlockOverrides = require(_dependencyMap[1], \"ox/BlockOverrides\");\n  var parseAccount_js_1 = require(_dependencyMap[2], \"../../accounts/utils/parseAccount.js\");\n  var abi_js_1 = require(_dependencyMap[3], \"../../errors/abi.js\");\n  var contract_js_1 = require(_dependencyMap[4], \"../../errors/contract.js\");\n  var node_js_1 = require(_dependencyMap[5], \"../../errors/node.js\");\n  var decodeFunctionResult_js_1 = require(_dependencyMap[6], \"../../utils/abi/decodeFunctionResult.js\");\n  var encodeFunctionData_js_1 = require(_dependencyMap[7], \"../../utils/abi/encodeFunctionData.js\");\n  var toHex_js_1 = require(_dependencyMap[8], \"../../utils/encoding/toHex.js\");\n  var getContractError_js_1 = require(_dependencyMap[9], \"../../utils/errors/getContractError.js\");\n  var getNodeError_js_1 = require(_dependencyMap[10], \"../../utils/errors/getNodeError.js\");\n  var block_js_1 = require(_dependencyMap[11], \"../../utils/formatters/block.js\");\n  var log_js_1 = require(_dependencyMap[12], \"../../utils/formatters/log.js\");\n  var transactionRequest_js_1 = require(_dependencyMap[13], \"../../utils/formatters/transactionRequest.js\");\n  var stateOverride_js_1 = require(_dependencyMap[14], \"../../utils/stateOverride.js\");\n  var assertRequest_js_1 = require(_dependencyMap[15], \"../../utils/transaction/assertRequest.js\");\n  function simulateBlocks(_x, _x2) {\n    return _simulateBlocks.apply(this, arguments);\n  }\n  function _simulateBlocks() {\n    _simulateBlocks = _asyncToGenerator(function* (client, parameters) {\n      var blockNumber = parameters.blockNumber,\n        _parameters$blockTag = parameters.blockTag,\n        blockTag = _parameters$blockTag === void 0 ? 'latest' : _parameters$blockTag,\n        blocks = parameters.blocks,\n        returnFullTransactions = parameters.returnFullTransactions,\n        traceTransfers = parameters.traceTransfers,\n        validation = parameters.validation;\n      try {\n        var blockStateCalls = [];\n        for (var _block of blocks) {\n          var blockOverrides = _block.blockOverrides ? BlockOverrides.toRpc(_block.blockOverrides) : undefined;\n          var calls = _block.calls.map(call_ => {\n            var call = call_;\n            var account = call.account ? (0, parseAccount_js_1.parseAccount)(call.account) : undefined;\n            var request = {\n              ...call,\n              data: call.abi ? (0, encodeFunctionData_js_1.encodeFunctionData)(call) : call.data,\n              from: call.from ?? account?.address\n            };\n            (0, assertRequest_js_1.assertRequest)(request);\n            return (0, transactionRequest_js_1.formatTransactionRequest)(request);\n          });\n          var stateOverrides = _block.stateOverrides ? (0, stateOverride_js_1.serializeStateOverride)(_block.stateOverrides) : undefined;\n          blockStateCalls.push({\n            blockOverrides,\n            calls,\n            stateOverrides\n          });\n        }\n        var blockNumberHex = blockNumber ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\n        var block = blockNumberHex || blockTag;\n        var result = yield client.request({\n          method: 'eth_simulateV1',\n          params: [{\n            blockStateCalls,\n            returnFullTransactions,\n            traceTransfers,\n            validation\n          }, block]\n        });\n        return result.map((block, i) => ({\n          ...(0, block_js_1.formatBlock)(block),\n          calls: block.calls.map((call, j) => {\n            var _blocks$i$calls$j = blocks[i].calls[j],\n              abi = _blocks$i$calls$j.abi,\n              args = _blocks$i$calls$j.args,\n              functionName = _blocks$i$calls$j.functionName,\n              to = _blocks$i$calls$j.to;\n            var data = call.error?.data ?? call.returnData;\n            var gasUsed = BigInt(call.gasUsed);\n            var logs = call.logs?.map(log => (0, log_js_1.formatLog)(log));\n            var status = call.status === '0x1' ? 'success' : 'failure';\n            var result = abi && status === 'success' ? (0, decodeFunctionResult_js_1.decodeFunctionResult)({\n              abi,\n              data,\n              functionName\n            }) : null;\n            var error = (() => {\n              if (status === 'success') return undefined;\n              var error = undefined;\n              if (call.error?.data === '0x') error = new abi_js_1.AbiDecodingZeroDataError();else if (call.error) error = new contract_js_1.RawContractError(call.error);\n              if (!error) return undefined;\n              return (0, getContractError_js_1.getContractError)(error, {\n                abi: abi ?? [],\n                address: to,\n                args,\n                functionName: functionName ?? '<unknown>'\n              });\n            })();\n            return {\n              data,\n              gasUsed,\n              logs,\n              status,\n              ...(status === 'success' ? {\n                result\n              } : {\n                error\n              })\n            };\n          })\n        }));\n      } catch (e) {\n        var cause = e;\n        var error = (0, getNodeError_js_1.getNodeError)(cause, {});\n        if (error instanceof node_js_1.UnknownNodeError) throw cause;\n        throw error;\n      }\n    });\n    return _simulateBlocks.apply(this, arguments);\n  }\n});","lineCount":120,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"simulateBlocks"],[8,24,3,22],[8,27,3,25,"simulateBlocks"],[8,41,3,39],[9,2,4,0],[9,6,4,6,"BlockOverrides"],[9,20,4,20],[9,23,4,23,"require"],[9,30,4,30],[9,31,4,30,"_dependencyMap"],[9,45,4,30],[9,69,4,50],[9,70,4,51],[10,2,5,0],[10,6,5,6,"parseAccount_js_1"],[10,23,5,23],[10,26,5,26,"require"],[10,33,5,33],[10,34,5,33,"_dependencyMap"],[10,48,5,33],[10,91,5,72],[10,92,5,73],[11,2,6,0],[11,6,6,6,"abi_js_1"],[11,14,6,14],[11,17,6,17,"require"],[11,24,6,24],[11,25,6,24,"_dependencyMap"],[11,39,6,24],[11,65,6,46],[11,66,6,47],[12,2,7,0],[12,6,7,6,"contract_js_1"],[12,19,7,19],[12,22,7,22,"require"],[12,29,7,29],[12,30,7,29,"_dependencyMap"],[12,44,7,29],[12,75,7,56],[12,76,7,57],[13,2,8,0],[13,6,8,6,"node_js_1"],[13,15,8,15],[13,18,8,18,"require"],[13,25,8,25],[13,26,8,25,"_dependencyMap"],[13,40,8,25],[13,67,8,48],[13,68,8,49],[14,2,9,0],[14,6,9,6,"decodeFunctionResult_js_1"],[14,31,9,31],[14,34,9,34,"require"],[14,41,9,41],[14,42,9,41,"_dependencyMap"],[14,56,9,41],[14,102,9,83],[14,103,9,84],[15,2,10,0],[15,6,10,6,"encodeFunctionData_js_1"],[15,29,10,29],[15,32,10,32,"require"],[15,39,10,39],[15,40,10,39,"_dependencyMap"],[15,54,10,39],[15,98,10,79],[15,99,10,80],[16,2,11,0],[16,6,11,6,"toHex_js_1"],[16,16,11,16],[16,19,11,19,"require"],[16,26,11,26],[16,27,11,26,"_dependencyMap"],[16,41,11,26],[16,77,11,58],[16,78,11,59],[17,2,12,0],[17,6,12,6,"getContractError_js_1"],[17,27,12,27],[17,30,12,30,"require"],[17,37,12,37],[17,38,12,37,"_dependencyMap"],[17,52,12,37],[17,97,12,78],[17,98,12,79],[18,2,13,0],[18,6,13,6,"getNodeError_js_1"],[18,23,13,23],[18,26,13,26,"require"],[18,33,13,33],[18,34,13,33,"_dependencyMap"],[18,48,13,33],[18,90,13,70],[18,91,13,71],[19,2,14,0],[19,6,14,6,"block_js_1"],[19,16,14,16],[19,19,14,19,"require"],[19,26,14,26],[19,27,14,26,"_dependencyMap"],[19,41,14,26],[19,80,14,60],[19,81,14,61],[20,2,15,0],[20,6,15,6,"log_js_1"],[20,14,15,14],[20,17,15,17,"require"],[20,24,15,24],[20,25,15,24,"_dependencyMap"],[20,39,15,24],[20,76,15,56],[20,77,15,57],[21,2,16,0],[21,6,16,6,"transactionRequest_js_1"],[21,29,16,29],[21,32,16,32,"require"],[21,39,16,39],[21,40,16,39,"_dependencyMap"],[21,54,16,39],[21,106,16,86],[21,107,16,87],[22,2,17,0],[22,6,17,6,"stateOverride_js_1"],[22,24,17,24],[22,27,17,27,"require"],[22,34,17,34],[22,35,17,34,"_dependencyMap"],[22,49,17,34],[22,85,17,65],[22,86,17,66],[23,2,18,0],[23,6,18,6,"assertRequest_js_1"],[23,24,18,24],[23,27,18,27,"require"],[23,34,18,34],[23,35,18,34,"_dependencyMap"],[23,49,18,34],[23,97,18,77],[23,98,18,78],[24,2,18,79],[24,11,19,15,"simulateBlocks"],[24,25,19,29,"simulateBlocks"],[24,26,19,29,"_x"],[24,28,19,29],[24,30,19,29,"_x2"],[24,33,19,29],[25,4,19,29],[25,11,19,29,"_simulateBlocks"],[25,26,19,29],[25,27,19,29,"apply"],[25,32,19,29],[25,39,19,29,"arguments"],[25,48,19,29],[26,2,19,29],[27,2,19,29],[27,11,19,29,"_simulateBlocks"],[27,27,19,29],[28,4,19,29,"_simulateBlocks"],[28,19,19,29],[28,22,19,29,"_asyncToGenerator"],[28,39,19,29],[28,40,19,0],[28,51,19,30,"client"],[28,57,19,36],[28,59,19,38,"parameters"],[28,69,19,48],[28,71,19,50],[29,6,20,4],[29,10,20,12,"blockNumber"],[29,21,20,23],[29,24,20,110,"parameters"],[29,34,20,120],[29,35,20,12,"blockNumber"],[29,46,20,23],[30,8,20,23,"_parameters$blockTag"],[30,28,20,23],[30,31,20,110,"parameters"],[30,41,20,120],[30,42,20,25,"blockTag"],[30,50,20,33],[31,8,20,25,"blockTag"],[31,16,20,33],[31,19,20,33,"_parameters$blockTag"],[31,39,20,33],[31,53,20,36],[31,61,20,44],[31,64,20,44,"_parameters$blockTag"],[31,84,20,44],[32,8,20,46,"blocks"],[32,14,20,52],[32,17,20,110,"parameters"],[32,27,20,120],[32,28,20,46,"blocks"],[32,34,20,52],[33,8,20,54,"returnFullTransactions"],[33,30,20,76],[33,33,20,110,"parameters"],[33,43,20,120],[33,44,20,54,"returnFullTransactions"],[33,66,20,76],[34,8,20,78,"traceTransfers"],[34,22,20,92],[34,25,20,110,"parameters"],[34,35,20,120],[34,36,20,78,"traceTransfers"],[34,50,20,92],[35,8,20,94,"validation"],[35,18,20,104],[35,21,20,110,"parameters"],[35,31,20,120],[35,32,20,94,"validation"],[35,42,20,104],[36,6,21,4],[36,10,21,8],[37,8,22,8],[37,12,22,14,"blockStateCalls"],[37,27,22,29],[37,30,22,32],[37,32,22,34],[38,8,23,8],[38,13,23,13],[38,17,23,19,"block"],[38,23,23,24],[38,27,23,28,"blocks"],[38,33,23,34],[38,35,23,36],[39,10,24,12],[39,14,24,18,"blockOverrides"],[39,28,24,32],[39,31,24,35,"block"],[39,37,24,40],[39,38,24,41,"blockOverrides"],[39,52,24,55],[39,55,25,18,"BlockOverrides"],[39,69,25,32],[39,70,25,33,"toRpc"],[39,75,25,38],[39,76,25,39,"block"],[39,82,25,44],[39,83,25,45,"blockOverrides"],[39,97,25,59],[39,98,25,60],[39,101,26,18,"undefined"],[39,110,26,27],[40,10,27,12],[40,14,27,18,"calls"],[40,19,27,23],[40,22,27,26,"block"],[40,28,27,31],[40,29,27,32,"calls"],[40,34,27,37],[40,35,27,38,"map"],[40,38,27,41],[40,39,27,43,"call_"],[40,44,27,48],[40,48,27,53],[41,12,28,16],[41,16,28,22,"call"],[41,20,28,26],[41,23,28,29,"call_"],[41,28,28,34],[42,12,29,16],[42,16,29,22,"account"],[42,23,29,29],[42,26,29,32,"call"],[42,30,29,36],[42,31,29,37,"account"],[42,38,29,44],[42,41,29,47],[42,42,29,48],[42,43,29,49],[42,45,29,51,"parseAccount_js_1"],[42,62,29,68],[42,63,29,69,"parseAccount"],[42,75,29,81],[42,77,29,83,"call"],[42,81,29,87],[42,82,29,88,"account"],[42,89,29,95],[42,90,29,96],[42,93,29,99,"undefined"],[42,102,29,108],[43,12,30,16],[43,16,30,22,"request"],[43,23,30,29],[43,26,30,32],[44,14,31,20],[44,17,31,23,"call"],[44,21,31,27],[45,14,32,20,"data"],[45,18,32,24],[45,20,32,26,"call"],[45,24,32,30],[45,25,32,31,"abi"],[45,28,32,34],[45,31,32,37],[45,32,32,38],[45,33,32,39],[45,35,32,41,"encodeFunctionData_js_1"],[45,58,32,64],[45,59,32,65,"encodeFunctionData"],[45,77,32,83],[45,79,32,85,"call"],[45,83,32,89],[45,84,32,90],[45,87,32,93,"call"],[45,91,32,97],[45,92,32,98,"data"],[45,96,32,102],[46,14,33,20,"from"],[46,18,33,24],[46,20,33,26,"call"],[46,24,33,30],[46,25,33,31,"from"],[46,29,33,35],[46,33,33,39,"account"],[46,40,33,46],[46,42,33,48,"address"],[47,12,34,16],[47,13,34,17],[48,12,35,16],[48,13,35,17],[48,14,35,18],[48,16,35,20,"assertRequest_js_1"],[48,34,35,38],[48,35,35,39,"assertRequest"],[48,48,35,52],[48,50,35,54,"request"],[48,57,35,61],[48,58,35,62],[49,12,36,16],[49,19,36,23],[49,20,36,24],[49,21,36,25],[49,23,36,27,"transactionRequest_js_1"],[49,46,36,50],[49,47,36,51,"formatTransactionRequest"],[49,71,36,75],[49,73,36,77,"request"],[49,80,36,84],[49,81,36,85],[50,10,37,12],[50,11,37,13],[50,12,37,14],[51,10,38,12],[51,14,38,18,"stateOverrides"],[51,28,38,32],[51,31,38,35,"block"],[51,37,38,40],[51,38,38,41,"stateOverrides"],[51,52,38,55],[51,55,39,18],[51,56,39,19],[51,57,39,20],[51,59,39,22,"stateOverride_js_1"],[51,77,39,40],[51,78,39,41,"serializeStateOverride"],[51,100,39,63],[51,102,39,65,"block"],[51,108,39,70],[51,109,39,71,"stateOverrides"],[51,123,39,85],[51,124,39,86],[51,127,40,18,"undefined"],[51,136,40,27],[52,10,41,12,"blockStateCalls"],[52,25,41,27],[52,26,41,28,"push"],[52,30,41,32],[52,31,41,33],[53,12,42,16,"blockOverrides"],[53,26,42,30],[54,12,43,16,"calls"],[54,17,43,21],[55,12,44,16,"stateOverrides"],[56,10,45,12],[56,11,45,13],[56,12,45,14],[57,8,46,8],[58,8,47,8],[58,12,47,14,"blockNumberHex"],[58,26,47,28],[58,29,47,31,"blockNumber"],[58,40,47,42],[58,43,47,45],[58,44,47,46],[58,45,47,47],[58,47,47,49,"toHex_js_1"],[58,57,47,59],[58,58,47,60,"numberToHex"],[58,69,47,71],[58,71,47,73,"blockNumber"],[58,82,47,84],[58,83,47,85],[58,86,47,88,"undefined"],[58,95,47,97],[59,8,48,8],[59,12,48,14,"block"],[59,17,48,19],[59,20,48,22,"blockNumberHex"],[59,34,48,36],[59,38,48,40,"blockTag"],[59,46,48,48],[60,8,49,8],[60,12,49,14,"result"],[60,18,49,20],[60,27,49,29,"client"],[60,33,49,35],[60,34,49,36,"request"],[60,41,49,43],[60,42,49,44],[61,10,50,12,"method"],[61,16,50,18],[61,18,50,20],[61,34,50,36],[62,10,51,12,"params"],[62,16,51,18],[62,18,51,20],[62,19,52,16],[63,12,52,18,"blockStateCalls"],[63,27,52,33],[64,12,52,35,"returnFullTransactions"],[64,34,52,57],[65,12,52,59,"traceTransfers"],[65,26,52,73],[66,12,52,75,"validation"],[67,10,52,86],[67,11,52,87],[67,13,53,16,"block"],[67,18,53,21],[68,8,55,8],[68,9,55,9],[68,10,55,10],[69,8,56,8],[69,15,56,15,"result"],[69,21,56,21],[69,22,56,22,"map"],[69,25,56,25],[69,26,56,26],[69,27,56,27,"block"],[69,32,56,32],[69,34,56,34,"i"],[69,35,56,35],[69,41,56,41],[70,10,57,12],[70,13,57,15],[70,14,57,16],[70,15,57,17],[70,17,57,19,"block_js_1"],[70,27,57,29],[70,28,57,30,"formatBlock"],[70,39,57,41],[70,41,57,43,"block"],[70,46,57,48],[70,47,57,49],[71,10,58,12,"calls"],[71,15,58,17],[71,17,58,19,"block"],[71,22,58,24],[71,23,58,25,"calls"],[71,28,58,30],[71,29,58,31,"map"],[71,32,58,34],[71,33,58,35],[71,34,58,36,"call"],[71,38,58,40],[71,40,58,42,"j"],[71,41,58,43],[71,46,58,48],[72,12,59,16],[72,16,59,16,"_blocks$i$calls$j"],[72,33,59,16],[72,36,59,56,"blocks"],[72,42,59,62],[72,43,59,63,"i"],[72,44,59,64],[72,45,59,65],[72,46,59,66,"calls"],[72,51,59,71],[72,52,59,72,"j"],[72,53,59,73],[72,54,59,74],[73,14,59,24,"abi"],[73,17,59,27],[73,20,59,27,"_blocks$i$calls$j"],[73,37,59,27],[73,38,59,24,"abi"],[73,41,59,27],[74,14,59,29,"args"],[74,18,59,33],[74,21,59,33,"_blocks$i$calls$j"],[74,38,59,33],[74,39,59,29,"args"],[74,43,59,33],[75,14,59,35,"functionName"],[75,26,59,47],[75,29,59,47,"_blocks$i$calls$j"],[75,46,59,47],[75,47,59,35,"functionName"],[75,59,59,47],[76,14,59,49,"to"],[76,16,59,51],[76,19,59,51,"_blocks$i$calls$j"],[76,36,59,51],[76,37,59,49,"to"],[76,39,59,51],[77,12,60,16],[77,16,60,22,"data"],[77,20,60,26],[77,23,60,29,"call"],[77,27,60,33],[77,28,60,34,"error"],[77,33,60,39],[77,35,60,41,"data"],[77,39,60,45],[77,43,60,49,"call"],[77,47,60,53],[77,48,60,54,"returnData"],[77,58,60,64],[78,12,61,16],[78,16,61,22,"gasUsed"],[78,23,61,29],[78,26,61,32,"BigInt"],[78,32,61,38],[78,33,61,39,"call"],[78,37,61,43],[78,38,61,44,"gasUsed"],[78,45,61,51],[78,46,61,52],[79,12,62,16],[79,16,62,22,"logs"],[79,20,62,26],[79,23,62,29,"call"],[79,27,62,33],[79,28,62,34,"logs"],[79,32,62,38],[79,34,62,40,"map"],[79,37,62,43],[79,38,62,45,"log"],[79,41,62,48],[79,45,62,53],[79,46,62,54],[79,47,62,55],[79,49,62,57,"log_js_1"],[79,57,62,65],[79,58,62,66,"formatLog"],[79,67,62,75],[79,69,62,77,"log"],[79,72,62,80],[79,73,62,81],[79,74,62,82],[80,12,63,16],[80,16,63,22,"status"],[80,22,63,28],[80,25,63,31,"call"],[80,29,63,35],[80,30,63,36,"status"],[80,36,63,42],[80,41,63,47],[80,46,63,52],[80,49,63,55],[80,58,63,64],[80,61,63,67],[80,70,63,76],[81,12,64,16],[81,16,64,22,"result"],[81,22,64,28],[81,25,64,31,"abi"],[81,28,64,34],[81,32,64,38,"status"],[81,38,64,44],[81,43,64,49],[81,52,64,58],[81,55,65,22],[81,56,65,23],[81,57,65,24],[81,59,65,26,"decodeFunctionResult_js_1"],[81,84,65,51],[81,85,65,52,"decodeFunctionResult"],[81,105,65,72],[81,107,65,74],[82,14,66,24,"abi"],[82,17,66,27],[83,14,67,24,"data"],[83,18,67,28],[84,14,68,24,"functionName"],[85,12,69,20],[85,13,69,21],[85,14,69,22],[85,17,70,22],[85,21,70,26],[86,12,71,16],[86,16,71,22,"error"],[86,21,71,27],[86,24,71,30],[86,25,71,31],[86,31,71,37],[87,14,72,20],[87,18,72,24,"status"],[87,24,72,30],[87,29,72,35],[87,38,72,44],[87,40,73,24],[87,47,73,31,"undefined"],[87,56,73,40],[88,14,74,20],[88,18,74,24,"error"],[88,23,74,29],[88,26,74,32,"undefined"],[88,35,74,41],[89,14,75,20],[89,18,75,24,"call"],[89,22,75,28],[89,23,75,29,"error"],[89,28,75,34],[89,30,75,36,"data"],[89,34,75,40],[89,39,75,45],[89,43,75,49],[89,45,76,24,"error"],[89,50,76,29],[89,53,76,32],[89,57,76,36,"abi_js_1"],[89,65,76,44],[89,66,76,45,"AbiDecodingZeroDataError"],[89,90,76,69],[89,91,76,70],[89,92,76,71],[89,93,76,72],[89,98,77,25],[89,102,77,29,"call"],[89,106,77,33],[89,107,77,34,"error"],[89,112,77,39],[89,114,78,24,"error"],[89,119,78,29],[89,122,78,32],[89,126,78,36,"contract_js_1"],[89,139,78,49],[89,140,78,50,"RawContractError"],[89,156,78,66],[89,157,78,67,"call"],[89,161,78,71],[89,162,78,72,"error"],[89,167,78,77],[89,168,78,78],[90,14,79,20],[90,18,79,24],[90,19,79,25,"error"],[90,24,79,30],[90,26,80,24],[90,33,80,31,"undefined"],[90,42,80,40],[91,14,81,20],[91,21,81,27],[91,22,81,28],[91,23,81,29],[91,25,81,31,"getContractError_js_1"],[91,46,81,52],[91,47,81,53,"getContractError"],[91,63,81,69],[91,65,81,71,"error"],[91,70,81,76],[91,72,81,78],[92,16,82,24,"abi"],[92,19,82,27],[92,21,82,30,"abi"],[92,24,82,33],[92,28,82,37],[92,30,82,40],[93,16,83,24,"address"],[93,23,83,31],[93,25,83,33,"to"],[93,27,83,35],[94,16,84,24,"args"],[94,20,84,28],[95,16,85,24,"functionName"],[95,28,85,36],[95,30,85,38,"functionName"],[95,42,85,50],[95,46,85,54],[96,14,86,20],[96,15,86,21],[96,16,86,22],[97,12,87,16],[97,13,87,17],[97,15,87,19],[97,16,87,20],[98,12,88,16],[98,19,88,23],[99,14,89,20,"data"],[99,18,89,24],[100,14,90,20,"gasUsed"],[100,21,90,27],[101,14,91,20,"logs"],[101,18,91,24],[102,14,92,20,"status"],[102,20,92,26],[103,14,93,20],[103,18,93,24,"status"],[103,24,93,30],[103,29,93,35],[103,38,93,44],[103,41,94,26],[104,16,95,28,"result"],[105,14,96,24],[105,15,96,25],[105,18,97,26],[106,16,98,28,"error"],[107,14,99,24],[107,15,99,25],[108,12,100,16],[108,13,100,17],[109,10,101,12],[109,11,101,13],[110,8,102,8],[110,9,102,9],[110,10,102,10],[110,11,102,11],[111,6,103,4],[111,7,103,5],[111,8,104,4],[111,15,104,11,"e"],[111,16,104,12],[111,18,104,14],[112,8,105,8],[112,12,105,14,"cause"],[112,17,105,19],[112,20,105,22,"e"],[112,21,105,23],[113,8,106,8],[113,12,106,14,"error"],[113,17,106,19],[113,20,106,22],[113,21,106,23],[113,22,106,24],[113,24,106,26,"getNodeError_js_1"],[113,41,106,43],[113,42,106,44,"getNodeError"],[113,54,106,56],[113,56,106,58,"cause"],[113,61,106,63],[113,63,106,65],[113,64,106,66],[113,65,106,67],[113,66,106,68],[114,8,107,8],[114,12,107,12,"error"],[114,17,107,17],[114,29,107,29,"node_js_1"],[114,38,107,38],[114,39,107,39,"UnknownNodeError"],[114,55,107,55],[114,57,108,12],[114,63,108,18,"cause"],[114,68,108,23],[115,8,109,8],[115,14,109,14,"error"],[115,19,109,19],[116,6,110,4],[117,4,111,0],[117,5,111,1],[118,4,111,1],[118,11,111,1,"_simulateBlocks"],[118,26,111,1],[118,27,111,1,"apply"],[118,32,111,1],[118,39,111,1,"arguments"],[118,48,111,1],[119,2,111,1],[120,0,111,1],[120,3]],"functionMap":{"names":["<global>","simulateBlocks","block.calls.map$argument_0","result.map$argument_0","call.logs.map$argument_0","<anonymous>"],"mappings":"AAA;ACkB;0CCQ;aDU;0BEmB;mCDE;4CEI,qCF;+BGS;iBHgB;aCc;UFC;CDS"}},"type":"js/module"}]}