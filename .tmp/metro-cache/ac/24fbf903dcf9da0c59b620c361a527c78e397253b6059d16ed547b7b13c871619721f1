{"dependencies":[{"name":"../../errors/address.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":21,"index":174},"end":{"line":5,"column":55,"index":208}}],"key":"2cEksyM3yM2+hGHnvI4gX9dXhE0="}},{"name":"../encoding/toBytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":21,"index":231},"end":{"line":6,"column":54,"index":264}}],"key":"IH3Jqmew4P7fKnssnSnuakMjJtk="}},{"name":"../hash/keccak256.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":23,"index":289},"end":{"line":7,"column":54,"index":320}}],"key":"hVdRuF9I2m+y185iahTUOhPDZBM="}},{"name":"../lru.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":17,"index":339},"end":{"line":8,"column":37,"index":359}}],"key":"xmN8d1NIZNnJo4v6K8wlNuy6gZE="}},{"name":"./isAddress.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":23,"index":384},"end":{"line":9,"column":48,"index":409}}],"key":"j20wJ7iGRewMUE0K4zIBHKDpXc0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.checksumAddress = checksumAddress;\n  exports.getAddress = getAddress;\n  var address_js_1 = require(_dependencyMap[0], \"../../errors/address.js\");\n  var toBytes_js_1 = require(_dependencyMap[1], \"../encoding/toBytes.js\");\n  var keccak256_js_1 = require(_dependencyMap[2], \"../hash/keccak256.js\");\n  var lru_js_1 = require(_dependencyMap[3], \"../lru.js\");\n  var isAddress_js_1 = require(_dependencyMap[4], \"./isAddress.js\");\n  var checksumAddressCache = new lru_js_1.LruMap(8192);\n  function checksumAddress(address_, chainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`)) return checksumAddressCache.get(`${address_}.${chainId}`);\n    var hexAddress = chainId ? `${chainId}${address_.toLowerCase()}` : address_.substring(2).toLowerCase();\n    var hash = (0, keccak256_js_1.keccak256)((0, toBytes_js_1.stringToBytes)(hexAddress), 'bytes');\n    var address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (var i = 0; i < 40; i += 2) {\n      if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n        address[i] = address[i].toUpperCase();\n      }\n      if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n        address[i + 1] = address[i + 1].toUpperCase();\n      }\n    }\n    var result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n  }\n  function getAddress(address, chainId) {\n    if (!(0, isAddress_js_1.isAddress)(address, {\n      strict: false\n    })) throw new address_js_1.InvalidAddressError({\n      address\n    });\n    return checksumAddress(address, chainId);\n  }\n});","lineCount":40,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"checksumAddress"],[7,25,3,23],[7,28,3,26,"checksumAddress"],[7,43,3,41],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getAddress"],[8,20,4,18],[8,23,4,21,"getAddress"],[8,33,4,31],[9,2,5,0],[9,6,5,6,"address_js_1"],[9,18,5,18],[9,21,5,21,"require"],[9,28,5,28],[9,29,5,28,"_dependencyMap"],[9,43,5,28],[9,73,5,54],[9,74,5,55],[10,2,6,0],[10,6,6,6,"toBytes_js_1"],[10,18,6,18],[10,21,6,21,"require"],[10,28,6,28],[10,29,6,28,"_dependencyMap"],[10,43,6,28],[10,72,6,53],[10,73,6,54],[11,2,7,0],[11,6,7,6,"keccak256_js_1"],[11,20,7,20],[11,23,7,23,"require"],[11,30,7,30],[11,31,7,30,"_dependencyMap"],[11,45,7,30],[11,72,7,53],[11,73,7,54],[12,2,8,0],[12,6,8,6,"lru_js_1"],[12,14,8,14],[12,17,8,17,"require"],[12,24,8,24],[12,25,8,24,"_dependencyMap"],[12,39,8,24],[12,55,8,36],[12,56,8,37],[13,2,9,0],[13,6,9,6,"isAddress_js_1"],[13,20,9,20],[13,23,9,23,"require"],[13,30,9,30],[13,31,9,30,"_dependencyMap"],[13,45,9,30],[13,66,9,47],[13,67,9,48],[14,2,10,0],[14,6,10,6,"checksumAddressCache"],[14,26,10,26],[14,29,10,29],[14,33,10,33,"lru_js_1"],[14,41,10,41],[14,42,10,42,"LruMap"],[14,48,10,48],[14,49,10,49],[14,53,10,53],[14,54,10,54],[15,2,11,0],[15,11,11,9,"checksumAddress"],[15,26,11,24,"checksumAddress"],[15,27,11,25,"address_"],[15,35,11,33],[15,37,11,35,"chainId"],[15,44,11,42],[15,46,11,44],[16,4,12,4],[16,8,12,8,"checksumAddressCache"],[16,28,12,28],[16,29,12,29,"has"],[16,32,12,32],[16,33,12,33],[16,36,12,36,"address_"],[16,44,12,44],[16,48,12,48,"chainId"],[16,55,12,55],[16,57,12,57],[16,58,12,58],[16,60,13,8],[16,67,13,15,"checksumAddressCache"],[16,87,13,35],[16,88,13,36,"get"],[16,91,13,39],[16,92,13,40],[16,95,13,43,"address_"],[16,103,13,51],[16,107,13,55,"chainId"],[16,114,13,62],[16,116,13,64],[16,117,13,65],[17,4,14,4],[17,8,14,10,"hexAddress"],[17,18,14,20],[17,21,14,23,"chainId"],[17,28,14,30],[17,31,15,10],[17,34,15,13,"chainId"],[17,41,15,20],[17,44,15,23,"address_"],[17,52,15,31],[17,53,15,32,"toLowerCase"],[17,64,15,43],[17,65,15,44],[17,66,15,45],[17,68,15,47],[17,71,16,10,"address_"],[17,79,16,18],[17,80,16,19,"substring"],[17,89,16,28],[17,90,16,29],[17,91,16,30],[17,92,16,31],[17,93,16,32,"toLowerCase"],[17,104,16,43],[17,105,16,44],[17,106,16,45],[18,4,17,4],[18,8,17,10,"hash"],[18,12,17,14],[18,15,17,17],[18,16,17,18],[18,17,17,19],[18,19,17,21,"keccak256_js_1"],[18,33,17,35],[18,34,17,36,"keccak256"],[18,43,17,45],[18,45,17,47],[18,46,17,48],[18,47,17,49],[18,49,17,51,"toBytes_js_1"],[18,61,17,63],[18,62,17,64,"stringToBytes"],[18,75,17,77],[18,77,17,79,"hexAddress"],[18,87,17,89],[18,88,17,90],[18,90,17,92],[18,97,17,99],[18,98,17,100],[19,4,18,4],[19,8,18,10,"address"],[19,15,18,17],[19,18,18,20],[19,19,18,21,"chainId"],[19,26,18,28],[19,29,18,31,"hexAddress"],[19,39,18,41],[19,40,18,42,"substring"],[19,49,18,51],[19,50,18,52],[19,53,18,55,"chainId"],[19,60,18,62],[19,64,18,66],[19,65,18,67,"length"],[19,71,18,73],[19,72,18,74],[19,75,18,77,"hexAddress"],[19,85,18,87],[19,87,18,89,"split"],[19,92,18,94],[19,93,18,95],[19,95,18,97],[19,96,18,98],[20,4,19,4],[20,9,19,9],[20,13,19,13,"i"],[20,14,19,14],[20,17,19,17],[20,18,19,18],[20,20,19,20,"i"],[20,21,19,21],[20,24,19,24],[20,26,19,26],[20,28,19,28,"i"],[20,29,19,29],[20,33,19,33],[20,34,19,34],[20,36,19,36],[21,6,20,8],[21,10,20,12,"hash"],[21,14,20,16],[21,15,20,17,"i"],[21,16,20,18],[21,20,20,22],[21,21,20,23],[21,22,20,24],[21,26,20,28],[21,27,20,29],[21,31,20,33],[21,32,20,34],[21,36,20,38,"address"],[21,43,20,45],[21,44,20,46,"i"],[21,45,20,47],[21,46,20,48],[21,48,20,50],[22,8,21,12,"address"],[22,15,21,19],[22,16,21,20,"i"],[22,17,21,21],[22,18,21,22],[22,21,21,25,"address"],[22,28,21,32],[22,29,21,33,"i"],[22,30,21,34],[22,31,21,35],[22,32,21,36,"toUpperCase"],[22,43,21,47],[22,44,21,48],[22,45,21,49],[23,6,22,8],[24,6,23,8],[24,10,23,12],[24,11,23,13,"hash"],[24,15,23,17],[24,16,23,18,"i"],[24,17,23,19],[24,21,23,23],[24,22,23,24],[24,23,23,25],[24,26,23,28],[24,30,23,32],[24,35,23,37],[24,36,23,38],[24,40,23,42,"address"],[24,47,23,49],[24,48,23,50,"i"],[24,49,23,51],[24,52,23,54],[24,53,23,55],[24,54,23,56],[24,56,23,58],[25,8,24,12,"address"],[25,15,24,19],[25,16,24,20,"i"],[25,17,24,21],[25,20,24,24],[25,21,24,25],[25,22,24,26],[25,25,24,29,"address"],[25,32,24,36],[25,33,24,37,"i"],[25,34,24,38],[25,37,24,41],[25,38,24,42],[25,39,24,43],[25,40,24,44,"toUpperCase"],[25,51,24,55],[25,52,24,56],[25,53,24,57],[26,6,25,8],[27,4,26,4],[28,4,27,4],[28,8,27,10,"result"],[28,14,27,16],[28,17,27,19],[28,22,27,24,"address"],[28,29,27,31],[28,30,27,32,"join"],[28,34,27,36],[28,35,27,37],[28,37,27,39],[28,38,27,40],[28,40,27,42],[29,4,28,4,"checksumAddressCache"],[29,24,28,24],[29,25,28,25,"set"],[29,28,28,28],[29,29,28,29],[29,32,28,32,"address_"],[29,40,28,40],[29,44,28,44,"chainId"],[29,51,28,51],[29,53,28,53],[29,55,28,55,"result"],[29,61,28,61],[29,62,28,62],[30,4,29,4],[30,11,29,11,"result"],[30,17,29,17],[31,2,30,0],[32,2,31,0],[32,11,31,9,"getAddress"],[32,21,31,19,"getAddress"],[32,22,31,20,"address"],[32,29,31,27],[32,31,31,29,"chainId"],[32,38,31,36],[32,40,31,38],[33,4,32,4],[33,8,32,8],[33,9,32,9],[33,10,32,10],[33,11,32,11],[33,13,32,13,"isAddress_js_1"],[33,27,32,27],[33,28,32,28,"isAddress"],[33,37,32,37],[33,39,32,39,"address"],[33,46,32,46],[33,48,32,48],[34,6,32,50,"strict"],[34,12,32,56],[34,14,32,58],[35,4,32,64],[35,5,32,65],[35,6,32,66],[35,8,33,8],[35,14,33,14],[35,18,33,18,"address_js_1"],[35,30,33,30],[35,31,33,31,"InvalidAddressError"],[35,50,33,50],[35,51,33,51],[36,6,33,53,"address"],[37,4,33,61],[37,5,33,62],[37,6,33,63],[38,4,34,4],[38,11,34,11,"checksumAddress"],[38,26,34,26],[38,27,34,27,"address"],[38,34,34,34],[38,36,34,36,"chainId"],[38,43,34,43],[38,44,34,44],[39,2,35,0],[40,0,35,1],[40,3]],"functionMap":{"names":["<global>","checksumAddress","getAddress"],"mappings":"AAA;ACU;CDmB;AEC;CFI"}},"type":"js/module"}]}