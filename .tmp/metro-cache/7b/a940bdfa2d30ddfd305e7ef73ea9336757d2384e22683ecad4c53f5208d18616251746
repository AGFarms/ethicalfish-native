{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":37,"index":6172}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":37,"index":6172}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":37,"index":6172}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":37,"index":6172}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":37,"index":6172}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./Bytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":14,"index":480},"end":{"line":12,"column":35,"index":501}}],"key":"rNRwa7Zf7ZARCnEg8u+ewpd4GVM="}},{"name":"./Errors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":15,"index":518},"end":{"line":13,"column":37,"index":540}}],"key":"aRDieYW4zCqFaYB2G3UoFMFCzB8="}},{"name":"./Hex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":12,"index":554},"end":{"line":14,"column":31,"index":573}}],"key":"oEliWuYqEXnGgYRozlJUSnQSPng="}},{"name":"./Json.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":13,"index":588},"end":{"line":15,"column":33,"index":608}}],"key":"9KuULPfqnG/mbO7kU59YIGvOytc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = require(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = require(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = require(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.InvalidSerializedSizeError = exports.InvalidUncompressedPrefixError = exports.InvalidCompressedPrefixError = exports.InvalidPrefixError = exports.InvalidError = void 0;\n  exports.assert = assert;\n  exports.compress = compress;\n  exports.from = from;\n  exports.fromBytes = fromBytes;\n  exports.fromHex = fromHex;\n  exports.toBytes = toBytes;\n  exports.toHex = toHex;\n  exports.validate = validate;\n  var Bytes = require(_dependencyMap[5], \"./Bytes.js\");\n  var Errors = require(_dependencyMap[6], \"./Errors.js\");\n  var Hex = require(_dependencyMap[7], \"./Hex.js\");\n  var Json = require(_dependencyMap[8], \"./Json.js\");\n  function assert(publicKey) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var compressed = options.compressed;\n    var prefix = publicKey.prefix,\n      x = publicKey.x,\n      y = publicKey.y;\n    if (compressed === false || typeof x === 'bigint' && typeof y === 'bigint') {\n      if (prefix !== 4) throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidUncompressedPrefixError()\n      });\n      return;\n    }\n    if (compressed === true || typeof x === 'bigint' && typeof y === 'undefined') {\n      if (prefix !== 3 && prefix !== 2) throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidCompressedPrefixError()\n      });\n      return;\n    }\n    throw new InvalidError({\n      publicKey\n    });\n  }\n  function compress(publicKey) {\n    var x = publicKey.x,\n      y = publicKey.y;\n    return {\n      prefix: y % 2n === 0n ? 2 : 3,\n      x\n    };\n  }\n  function from(value) {\n    var publicKey = (() => {\n      if (Hex.validate(value)) return fromHex(value);\n      if (Bytes.validate(value)) return fromBytes(value);\n      var prefix = value.prefix,\n        x = value.x,\n        y = value.y;\n      if (typeof x === 'bigint' && typeof y === 'bigint') return {\n        prefix: prefix ?? 0x04,\n        x,\n        y\n      };\n      return {\n        prefix,\n        x\n      };\n    })();\n    assert(publicKey);\n    return publicKey;\n  }\n  function fromBytes(publicKey) {\n    return fromHex(Hex.fromBytes(publicKey));\n  }\n  function fromHex(publicKey) {\n    if (publicKey.length !== 132 && publicKey.length !== 130 && publicKey.length !== 68) throw new InvalidSerializedSizeError({\n      publicKey\n    });\n    if (publicKey.length === 130) {\n      var _x = BigInt(Hex.slice(publicKey, 0, 32));\n      var y = BigInt(Hex.slice(publicKey, 32, 64));\n      return {\n        prefix: 4,\n        x: _x,\n        y\n      };\n    }\n    if (publicKey.length === 132) {\n      var _prefix = Number(Hex.slice(publicKey, 0, 1));\n      var _x2 = BigInt(Hex.slice(publicKey, 1, 33));\n      var _y = BigInt(Hex.slice(publicKey, 33, 65));\n      return {\n        prefix: _prefix,\n        x: _x2,\n        y: _y\n      };\n    }\n    var prefix = Number(Hex.slice(publicKey, 0, 1));\n    var x = BigInt(Hex.slice(publicKey, 1, 33));\n    return {\n      prefix,\n      x\n    };\n  }\n  function toBytes(publicKey) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return Bytes.fromHex(toHex(publicKey, options));\n  }\n  function toHex(publicKey) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    assert(publicKey);\n    var prefix = publicKey.prefix,\n      x = publicKey.x,\n      y = publicKey.y;\n    var _options$includePrefi = options.includePrefix,\n      includePrefix = _options$includePrefi === void 0 ? true : _options$includePrefi;\n    var publicKey_ = Hex.concat(includePrefix ? Hex.fromNumber(prefix, {\n      size: 1\n    }) : '0x', Hex.fromNumber(x, {\n      size: 32\n    }), typeof y === 'bigint' ? Hex.fromNumber(y, {\n      size: 32\n    }) : '0x');\n    return publicKey_;\n  }\n  function validate(publicKey) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    try {\n      assert(publicKey, options);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n  var InvalidError = /*#__PURE__*/function (_Errors$BaseError) {\n    function InvalidError(_ref) {\n      var _this;\n      var publicKey = _ref.publicKey;\n      _classCallCheck(this, InvalidError);\n      _this = _callSuper(this, InvalidError, [`Value \\`${Json.stringify(publicKey)}\\` is not a valid public key.`, {\n        metaMessages: ['Public key must contain:', '- an `x` and `prefix` value (compressed)', '- an `x`, `y`, and `prefix` value (uncompressed)']\n      }]);\n      Object.defineProperty(_this, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'PublicKey.InvalidError'\n      });\n      return _this;\n    }\n    _inherits(InvalidError, _Errors$BaseError);\n    return _createClass(InvalidError);\n  }(Errors.BaseError);\n  exports.InvalidError = InvalidError;\n  var InvalidPrefixError = /*#__PURE__*/function (_Errors$BaseError2) {\n    function InvalidPrefixError(_ref2) {\n      var _this2;\n      var prefix = _ref2.prefix,\n        cause = _ref2.cause;\n      _classCallCheck(this, InvalidPrefixError);\n      _this2 = _callSuper(this, InvalidPrefixError, [`Prefix \"${prefix}\" is invalid.`, {\n        cause\n      }]);\n      Object.defineProperty(_this2, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'PublicKey.InvalidPrefixError'\n      });\n      return _this2;\n    }\n    _inherits(InvalidPrefixError, _Errors$BaseError2);\n    return _createClass(InvalidPrefixError);\n  }(Errors.BaseError);\n  exports.InvalidPrefixError = InvalidPrefixError;\n  var InvalidCompressedPrefixError = /*#__PURE__*/function (_Errors$BaseError3) {\n    function InvalidCompressedPrefixError() {\n      var _this3;\n      _classCallCheck(this, InvalidCompressedPrefixError);\n      _this3 = _callSuper(this, InvalidCompressedPrefixError, ['Prefix must be 2 or 3 for compressed public keys.']);\n      Object.defineProperty(_this3, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'PublicKey.InvalidCompressedPrefixError'\n      });\n      return _this3;\n    }\n    _inherits(InvalidCompressedPrefixError, _Errors$BaseError3);\n    return _createClass(InvalidCompressedPrefixError);\n  }(Errors.BaseError);\n  exports.InvalidCompressedPrefixError = InvalidCompressedPrefixError;\n  var InvalidUncompressedPrefixError = /*#__PURE__*/function (_Errors$BaseError4) {\n    function InvalidUncompressedPrefixError() {\n      var _this4;\n      _classCallCheck(this, InvalidUncompressedPrefixError);\n      _this4 = _callSuper(this, InvalidUncompressedPrefixError, ['Prefix must be 4 for uncompressed public keys.']);\n      Object.defineProperty(_this4, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'PublicKey.InvalidUncompressedPrefixError'\n      });\n      return _this4;\n    }\n    _inherits(InvalidUncompressedPrefixError, _Errors$BaseError4);\n    return _createClass(InvalidUncompressedPrefixError);\n  }(Errors.BaseError);\n  exports.InvalidUncompressedPrefixError = InvalidUncompressedPrefixError;\n  var InvalidSerializedSizeError = /*#__PURE__*/function (_Errors$BaseError5) {\n    function InvalidSerializedSizeError(_ref3) {\n      var _this5;\n      var publicKey = _ref3.publicKey;\n      _classCallCheck(this, InvalidSerializedSizeError);\n      _this5 = _callSuper(this, InvalidSerializedSizeError, [`Value \\`${publicKey}\\` is an invalid public key size.`, {\n        metaMessages: ['Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).', `Received ${Hex.size(Hex.from(publicKey))} bytes.`]\n      }]);\n      Object.defineProperty(_this5, \"name\", {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: 'PublicKey.InvalidSerializedSizeError'\n      });\n      return _this5;\n    }\n    _inherits(InvalidSerializedSizeError, _Errors$BaseError5);\n    return _createClass(InvalidSerializedSizeError);\n  }(Errors.BaseError);\n  exports.InvalidSerializedSizeError = InvalidSerializedSizeError;\n});","lineCount":237,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"require"],[4,28,1,13],[4,29,1,13,"_dependencyMap"],[4,43,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"require"],[6,42,1,13],[6,43,1,13,"_dependencyMap"],[6,57,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"require"],[7,31,1,13],[7,32,1,13,"_dependencyMap"],[7,46,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"require"],[8,25,1,13],[8,26,1,13,"_dependencyMap"],[8,40,1,13],[9,2,1,13],[9,11,1,13,"_callSuper"],[9,22,1,13,"t"],[9,23,1,13],[9,25,1,13,"o"],[9,26,1,13],[9,28,1,13,"e"],[9,29,1,13],[9,40,1,13,"o"],[9,41,1,13],[9,44,1,13,"_getPrototypeOf"],[9,59,1,13],[9,60,1,13,"o"],[9,61,1,13],[9,64,1,13,"_possibleConstructorReturn"],[9,90,1,13],[9,91,1,13,"t"],[9,92,1,13],[9,94,1,13,"_isNativeReflectConstruct"],[9,119,1,13],[9,124,1,13,"Reflect"],[9,131,1,13],[9,132,1,13,"construct"],[9,141,1,13],[9,142,1,13,"o"],[9,143,1,13],[9,145,1,13,"e"],[9,146,1,13],[9,154,1,13,"_getPrototypeOf"],[9,169,1,13],[9,170,1,13,"t"],[9,171,1,13],[9,173,1,13,"constructor"],[9,184,1,13],[9,188,1,13,"o"],[9,189,1,13],[9,190,1,13,"apply"],[9,195,1,13],[9,196,1,13,"t"],[9,197,1,13],[9,199,1,13,"e"],[9,200,1,13],[10,2,1,13],[10,11,1,13,"_isNativeReflectConstruct"],[10,37,1,13],[10,51,1,13,"t"],[10,52,1,13],[10,56,1,13,"Boolean"],[10,63,1,13],[10,64,1,13,"prototype"],[10,73,1,13],[10,74,1,13,"valueOf"],[10,81,1,13],[10,82,1,13,"call"],[10,86,1,13],[10,87,1,13,"Reflect"],[10,94,1,13],[10,95,1,13,"construct"],[10,104,1,13],[10,105,1,13,"Boolean"],[10,112,1,13],[10,145,1,13,"t"],[10,146,1,13],[10,159,1,13,"_isNativeReflectConstruct"],[10,184,1,13],[10,196,1,13,"_isNativeReflectConstruct"],[10,197,1,13],[10,210,1,13,"t"],[10,211,1,13],[11,2,2,0,"Object"],[11,8,2,6],[11,9,2,7,"defineProperty"],[11,23,2,21],[11,24,2,22,"exports"],[11,31,2,29],[11,33,2,31],[11,45,2,43],[11,47,2,45],[12,4,2,47,"value"],[12,9,2,52],[12,11,2,54],[13,2,2,59],[13,3,2,60],[13,4,2,61],[14,2,3,0,"exports"],[14,9,3,7],[14,10,3,8,"InvalidSerializedSizeError"],[14,36,3,34],[14,39,3,37,"exports"],[14,46,3,44],[14,47,3,45,"InvalidUncompressedPrefixError"],[14,77,3,75],[14,80,3,78,"exports"],[14,87,3,85],[14,88,3,86,"InvalidCompressedPrefixError"],[14,116,3,114],[14,119,3,117,"exports"],[14,126,3,124],[14,127,3,125,"InvalidPrefixError"],[14,145,3,143],[14,148,3,146,"exports"],[14,155,3,153],[14,156,3,154,"InvalidError"],[14,168,3,166],[14,171,3,169],[14,176,3,174],[14,177,3,175],[15,2,4,0,"exports"],[15,9,4,7],[15,10,4,8,"assert"],[15,16,4,14],[15,19,4,17,"assert"],[15,25,4,23],[16,2,5,0,"exports"],[16,9,5,7],[16,10,5,8,"compress"],[16,18,5,16],[16,21,5,19,"compress"],[16,29,5,27],[17,2,6,0,"exports"],[17,9,6,7],[17,10,6,8,"from"],[17,14,6,12],[17,17,6,15,"from"],[17,21,6,19],[18,2,7,0,"exports"],[18,9,7,7],[18,10,7,8,"fromBytes"],[18,19,7,17],[18,22,7,20,"fromBytes"],[18,31,7,29],[19,2,8,0,"exports"],[19,9,8,7],[19,10,8,8,"fromHex"],[19,17,8,15],[19,20,8,18,"fromHex"],[19,27,8,25],[20,2,9,0,"exports"],[20,9,9,7],[20,10,9,8,"toBytes"],[20,17,9,15],[20,20,9,18,"toBytes"],[20,27,9,25],[21,2,10,0,"exports"],[21,9,10,7],[21,10,10,8,"toHex"],[21,15,10,13],[21,18,10,16,"toHex"],[21,23,10,21],[22,2,11,0,"exports"],[22,9,11,7],[22,10,11,8,"validate"],[22,18,11,16],[22,21,11,19,"validate"],[22,29,11,27],[23,2,12,0],[23,6,12,6,"Bytes"],[23,11,12,11],[23,14,12,14,"require"],[23,21,12,21],[23,22,12,21,"_dependencyMap"],[23,36,12,21],[23,53,12,34],[23,54,12,35],[24,2,13,0],[24,6,13,6,"Errors"],[24,12,13,12],[24,15,13,15,"require"],[24,22,13,22],[24,23,13,22,"_dependencyMap"],[24,37,13,22],[24,55,13,36],[24,56,13,37],[25,2,14,0],[25,6,14,6,"Hex"],[25,9,14,9],[25,12,14,12,"require"],[25,19,14,19],[25,20,14,19,"_dependencyMap"],[25,34,14,19],[25,49,14,30],[25,50,14,31],[26,2,15,0],[26,6,15,6,"Json"],[26,10,15,10],[26,13,15,13,"require"],[26,20,15,20],[26,21,15,20,"_dependencyMap"],[26,35,15,20],[26,51,15,32],[26,52,15,33],[27,2,16,0],[27,11,16,9,"assert"],[27,17,16,15,"assert"],[27,18,16,16,"publicKey"],[27,27,16,25],[27,29,16,41],[28,4,16,41],[28,8,16,27,"options"],[28,15,16,34],[28,18,16,34,"arguments"],[28,27,16,34],[28,28,16,34,"length"],[28,34,16,34],[28,42,16,34,"arguments"],[28,51,16,34],[28,59,16,34,"undefined"],[28,68,16,34],[28,71,16,34,"arguments"],[28,80,16,34],[28,86,16,37],[28,87,16,38],[28,88,16,39],[29,4,17,4],[29,8,17,12,"compressed"],[29,18,17,22],[29,21,17,27,"options"],[29,28,17,34],[29,29,17,12,"compressed"],[29,39,17,22],[30,4,18,4],[30,8,18,12,"prefix"],[30,14,18,18],[30,17,18,29,"publicKey"],[30,26,18,38],[30,27,18,12,"prefix"],[30,33,18,18],[31,6,18,20,"x"],[31,7,18,21],[31,10,18,29,"publicKey"],[31,19,18,38],[31,20,18,20,"x"],[31,21,18,21],[32,6,18,23,"y"],[32,7,18,24],[32,10,18,29,"publicKey"],[32,19,18,38],[32,20,18,23,"y"],[32,21,18,24],[33,4,19,4],[33,8,19,8,"compressed"],[33,18,19,18],[33,23,19,23],[33,28,19,28],[33,32,20,9],[33,39,20,16,"x"],[33,40,20,17],[33,45,20,22],[33,53,20,30],[33,57,20,34],[33,64,20,41,"y"],[33,65,20,42],[33,70,20,47],[33,78,20,56],[33,80,20,58],[34,6,21,8],[34,10,21,12,"prefix"],[34,16,21,18],[34,21,21,23],[34,22,21,24],[34,24,22,12],[34,30,22,18],[34,34,22,22,"InvalidPrefixError"],[34,52,22,40],[34,53,22,41],[35,8,23,16,"prefix"],[35,14,23,22],[36,8,24,16,"cause"],[36,13,24,21],[36,15,24,23],[36,19,24,27,"InvalidUncompressedPrefixError"],[36,49,24,57],[36,50,24,58],[37,6,25,12],[37,7,25,13],[37,8,25,14],[38,6,26,8],[39,4,27,4],[40,4,28,4],[40,8,28,8,"compressed"],[40,18,28,18],[40,23,28,23],[40,27,28,27],[40,31,29,9],[40,38,29,16,"x"],[40,39,29,17],[40,44,29,22],[40,52,29,30],[40,56,29,34],[40,63,29,41,"y"],[40,64,29,42],[40,69,29,47],[40,80,29,59],[40,82,29,61],[41,6,30,8],[41,10,30,12,"prefix"],[41,16,30,18],[41,21,30,23],[41,22,30,24],[41,26,30,28,"prefix"],[41,32,30,34],[41,37,30,39],[41,38,30,40],[41,40,31,12],[41,46,31,18],[41,50,31,22,"InvalidPrefixError"],[41,68,31,40],[41,69,31,41],[42,8,32,16,"prefix"],[42,14,32,22],[43,8,33,16,"cause"],[43,13,33,21],[43,15,33,23],[43,19,33,27,"InvalidCompressedPrefixError"],[43,47,33,55],[43,48,33,56],[44,6,34,12],[44,7,34,13],[44,8,34,14],[45,6,35,8],[46,4,36,4],[47,4,37,4],[47,10,37,10],[47,14,37,14,"InvalidError"],[47,26,37,26],[47,27,37,27],[48,6,37,29,"publicKey"],[49,4,37,39],[49,5,37,40],[49,6,37,41],[50,2,38,0],[51,2,39,0],[51,11,39,9,"compress"],[51,19,39,17,"compress"],[51,20,39,18,"publicKey"],[51,29,39,27],[51,31,39,29],[52,4,40,4],[52,8,40,12,"x"],[52,9,40,13],[52,12,40,21,"publicKey"],[52,21,40,30],[52,22,40,12,"x"],[52,23,40,13],[53,6,40,15,"y"],[53,7,40,16],[53,10,40,21,"publicKey"],[53,19,40,30],[53,20,40,15,"y"],[53,21,40,16],[54,4,41,4],[54,11,41,11],[55,6,42,8,"prefix"],[55,12,42,14],[55,14,42,16,"y"],[55,15,42,17],[55,18,42,20],[55,20,42,22],[55,25,42,27],[55,27,42,29],[55,30,42,32],[55,31,42,33],[55,34,42,36],[55,35,42,37],[56,6,43,8,"x"],[57,4,44,4],[57,5,44,5],[58,2,45,0],[59,2,46,0],[59,11,46,9,"from"],[59,15,46,13,"from"],[59,16,46,14,"value"],[59,21,46,19],[59,23,46,21],[60,4,47,4],[60,8,47,10,"publicKey"],[60,17,47,19],[60,20,47,22],[60,21,47,23],[60,27,47,29],[61,6,48,8],[61,10,48,12,"Hex"],[61,13,48,15],[61,14,48,16,"validate"],[61,22,48,24],[61,23,48,25,"value"],[61,28,48,30],[61,29,48,31],[61,31,49,12],[61,38,49,19,"fromHex"],[61,45,49,26],[61,46,49,27,"value"],[61,51,49,32],[61,52,49,33],[62,6,50,8],[62,10,50,12,"Bytes"],[62,15,50,17],[62,16,50,18,"validate"],[62,24,50,26],[62,25,50,27,"value"],[62,30,50,32],[62,31,50,33],[62,33,51,12],[62,40,51,19,"fromBytes"],[62,49,51,28],[62,50,51,29,"value"],[62,55,51,34],[62,56,51,35],[63,6,52,8],[63,10,52,16,"prefix"],[63,16,52,22],[63,19,52,33,"value"],[63,24,52,38],[63,25,52,16,"prefix"],[63,31,52,22],[64,8,52,24,"x"],[64,9,52,25],[64,12,52,33,"value"],[64,17,52,38],[64,18,52,24,"x"],[64,19,52,25],[65,8,52,27,"y"],[65,9,52,28],[65,12,52,33,"value"],[65,17,52,38],[65,18,52,27,"y"],[65,19,52,28],[66,6,53,8],[66,10,53,12],[66,17,53,19,"x"],[66,18,53,20],[66,23,53,25],[66,31,53,33],[66,35,53,37],[66,42,53,44,"y"],[66,43,53,45],[66,48,53,50],[66,56,53,58],[66,58,54,12],[66,65,54,19],[67,8,54,21,"prefix"],[67,14,54,27],[67,16,54,29,"prefix"],[67,22,54,35],[67,26,54,39],[67,30,54,43],[68,8,54,45,"x"],[68,9,54,46],[69,8,54,48,"y"],[70,6,54,50],[70,7,54,51],[71,6,55,8],[71,13,55,15],[72,8,55,17,"prefix"],[72,14,55,23],[73,8,55,25,"x"],[74,6,55,27],[74,7,55,28],[75,4,56,4],[75,5,56,5],[75,7,56,7],[75,8,56,8],[76,4,57,4,"assert"],[76,10,57,10],[76,11,57,11,"publicKey"],[76,20,57,20],[76,21,57,21],[77,4,58,4],[77,11,58,11,"publicKey"],[77,20,58,20],[78,2,59,0],[79,2,60,0],[79,11,60,9,"fromBytes"],[79,20,60,18,"fromBytes"],[79,21,60,19,"publicKey"],[79,30,60,28],[79,32,60,30],[80,4,61,4],[80,11,61,11,"fromHex"],[80,18,61,18],[80,19,61,19,"Hex"],[80,22,61,22],[80,23,61,23,"fromBytes"],[80,32,61,32],[80,33,61,33,"publicKey"],[80,42,61,42],[80,43,61,43],[80,44,61,44],[81,2,62,0],[82,2,63,0],[82,11,63,9,"fromHex"],[82,18,63,16,"fromHex"],[82,19,63,17,"publicKey"],[82,28,63,26],[82,30,63,28],[83,4,64,4],[83,8,64,8,"publicKey"],[83,17,64,17],[83,18,64,18,"length"],[83,24,64,24],[83,29,64,29],[83,32,64,32],[83,36,65,8,"publicKey"],[83,45,65,17],[83,46,65,18,"length"],[83,52,65,24],[83,57,65,29],[83,60,65,32],[83,64,66,8,"publicKey"],[83,73,66,17],[83,74,66,18,"length"],[83,80,66,24],[83,85,66,29],[83,87,66,31],[83,89,67,8],[83,95,67,14],[83,99,67,18,"InvalidSerializedSizeError"],[83,125,67,44],[83,126,67,45],[84,6,67,47,"publicKey"],[85,4,67,57],[85,5,67,58],[85,6,67,59],[86,4,68,4],[86,8,68,8,"publicKey"],[86,17,68,17],[86,18,68,18,"length"],[86,24,68,24],[86,29,68,29],[86,32,68,32],[86,34,68,34],[87,6,69,8],[87,10,69,14,"x"],[87,12,69,15],[87,15,69,18,"BigInt"],[87,21,69,24],[87,22,69,25,"Hex"],[87,25,69,28],[87,26,69,29,"slice"],[87,31,69,34],[87,32,69,35,"publicKey"],[87,41,69,44],[87,43,69,46],[87,44,69,47],[87,46,69,49],[87,48,69,51],[87,49,69,52],[87,50,69,53],[88,6,70,8],[88,10,70,14,"y"],[88,11,70,15],[88,14,70,18,"BigInt"],[88,20,70,24],[88,21,70,25,"Hex"],[88,24,70,28],[88,25,70,29,"slice"],[88,30,70,34],[88,31,70,35,"publicKey"],[88,40,70,44],[88,42,70,46],[88,44,70,48],[88,46,70,50],[88,48,70,52],[88,49,70,53],[88,50,70,54],[89,6,71,8],[89,13,71,15],[90,8,72,12,"prefix"],[90,14,72,18],[90,16,72,20],[90,17,72,21],[91,8,73,12,"x"],[91,9,73,13],[91,11,73,12,"x"],[91,13,73,13],[92,8,74,12,"y"],[93,6,75,8],[93,7,75,9],[94,4,76,4],[95,4,77,4],[95,8,77,8,"publicKey"],[95,17,77,17],[95,18,77,18,"length"],[95,24,77,24],[95,29,77,29],[95,32,77,32],[95,34,77,34],[96,6,78,8],[96,10,78,14,"prefix"],[96,17,78,20],[96,20,78,23,"Number"],[96,26,78,29],[96,27,78,30,"Hex"],[96,30,78,33],[96,31,78,34,"slice"],[96,36,78,39],[96,37,78,40,"publicKey"],[96,46,78,49],[96,48,78,51],[96,49,78,52],[96,51,78,54],[96,52,78,55],[96,53,78,56],[96,54,78,57],[97,6,79,8],[97,10,79,14,"x"],[97,13,79,15],[97,16,79,18,"BigInt"],[97,22,79,24],[97,23,79,25,"Hex"],[97,26,79,28],[97,27,79,29,"slice"],[97,32,79,34],[97,33,79,35,"publicKey"],[97,42,79,44],[97,44,79,46],[97,45,79,47],[97,47,79,49],[97,49,79,51],[97,50,79,52],[97,51,79,53],[98,6,80,8],[98,10,80,14,"y"],[98,12,80,15],[98,15,80,18,"BigInt"],[98,21,80,24],[98,22,80,25,"Hex"],[98,25,80,28],[98,26,80,29,"slice"],[98,31,80,34],[98,32,80,35,"publicKey"],[98,41,80,44],[98,43,80,46],[98,45,80,48],[98,47,80,50],[98,49,80,52],[98,50,80,53],[98,51,80,54],[99,6,81,8],[99,13,81,15],[100,8,82,12,"prefix"],[100,14,82,18],[100,16,82,12,"prefix"],[100,23,82,18],[101,8,83,12,"x"],[101,9,83,13],[101,11,83,12,"x"],[101,14,83,13],[102,8,84,12,"y"],[102,9,84,13],[102,11,84,12,"y"],[103,6,85,8],[103,7,85,9],[104,4,86,4],[105,4,87,4],[105,8,87,10,"prefix"],[105,14,87,16],[105,17,87,19,"Number"],[105,23,87,25],[105,24,87,26,"Hex"],[105,27,87,29],[105,28,87,30,"slice"],[105,33,87,35],[105,34,87,36,"publicKey"],[105,43,87,45],[105,45,87,47],[105,46,87,48],[105,48,87,50],[105,49,87,51],[105,50,87,52],[105,51,87,53],[106,4,88,4],[106,8,88,10,"x"],[106,9,88,11],[106,12,88,14,"BigInt"],[106,18,88,20],[106,19,88,21,"Hex"],[106,22,88,24],[106,23,88,25,"slice"],[106,28,88,30],[106,29,88,31,"publicKey"],[106,38,88,40],[106,40,88,42],[106,41,88,43],[106,43,88,45],[106,45,88,47],[106,46,88,48],[106,47,88,49],[107,4,89,4],[107,11,89,11],[108,6,90,8,"prefix"],[108,12,90,14],[109,6,91,8,"x"],[110,4,92,4],[110,5,92,5],[111,2,93,0],[112,2,94,0],[112,11,94,9,"toBytes"],[112,18,94,16,"toBytes"],[112,19,94,17,"publicKey"],[112,28,94,26],[112,30,94,42],[113,4,94,42],[113,8,94,28,"options"],[113,15,94,35],[113,18,94,35,"arguments"],[113,27,94,35],[113,28,94,35,"length"],[113,34,94,35],[113,42,94,35,"arguments"],[113,51,94,35],[113,59,94,35,"undefined"],[113,68,94,35],[113,71,94,35,"arguments"],[113,80,94,35],[113,86,94,38],[113,87,94,39],[113,88,94,40],[114,4,95,4],[114,11,95,11,"Bytes"],[114,16,95,16],[114,17,95,17,"fromHex"],[114,24,95,24],[114,25,95,25,"toHex"],[114,30,95,30],[114,31,95,31,"publicKey"],[114,40,95,40],[114,42,95,42,"options"],[114,49,95,49],[114,50,95,50],[114,51,95,51],[115,2,96,0],[116,2,97,0],[116,11,97,9,"toHex"],[116,16,97,14,"toHex"],[116,17,97,15,"publicKey"],[116,26,97,24],[116,28,97,40],[117,4,97,40],[117,8,97,26,"options"],[117,15,97,33],[117,18,97,33,"arguments"],[117,27,97,33],[117,28,97,33,"length"],[117,34,97,33],[117,42,97,33,"arguments"],[117,51,97,33],[117,59,97,33,"undefined"],[117,68,97,33],[117,71,97,33,"arguments"],[117,80,97,33],[117,86,97,36],[117,87,97,37],[117,88,97,38],[118,4,98,4,"assert"],[118,10,98,10],[118,11,98,11,"publicKey"],[118,20,98,20],[118,21,98,21],[119,4,99,4],[119,8,99,12,"prefix"],[119,14,99,18],[119,17,99,29,"publicKey"],[119,26,99,38],[119,27,99,12,"prefix"],[119,33,99,18],[120,6,99,20,"x"],[120,7,99,21],[120,10,99,29,"publicKey"],[120,19,99,38],[120,20,99,20,"x"],[120,21,99,21],[121,6,99,23,"y"],[121,7,99,24],[121,10,99,29,"publicKey"],[121,19,99,38],[121,20,99,23,"y"],[121,21,99,24],[122,4,100,4],[122,8,100,4,"_options$includePrefi"],[122,29,100,4],[122,32,100,37,"options"],[122,39,100,44],[122,40,100,12,"includePrefix"],[122,53,100,25],[123,6,100,12,"includePrefix"],[123,19,100,25],[123,22,100,25,"_options$includePrefi"],[123,43,100,25],[123,57,100,28],[123,61,100,32],[123,64,100,32,"_options$includePrefi"],[123,85,100,32],[124,4,101,4],[124,8,101,10,"publicKey_"],[124,18,101,20],[124,21,101,23,"Hex"],[124,24,101,26],[124,25,101,27,"concat"],[124,31,101,33],[124,32,101,34,"includePrefix"],[124,45,101,47],[124,48,101,50,"Hex"],[124,51,101,53],[124,52,101,54,"fromNumber"],[124,62,101,64],[124,63,101,65,"prefix"],[124,69,101,71],[124,71,101,73],[125,6,101,75,"size"],[125,10,101,79],[125,12,101,81],[126,4,101,83],[126,5,101,84],[126,6,101,85],[126,9,101,88],[126,13,101,92],[126,15,101,94,"Hex"],[126,18,101,97],[126,19,101,98,"fromNumber"],[126,29,101,108],[126,30,101,109,"x"],[126,31,101,110],[126,33,101,112],[127,6,101,114,"size"],[127,10,101,118],[127,12,101,120],[128,4,101,123],[128,5,101,124],[128,6,101,125],[128,8,101,127],[128,15,101,134,"y"],[128,16,101,135],[128,21,101,140],[128,29,101,148],[128,32,101,151,"Hex"],[128,35,101,154],[128,36,101,155,"fromNumber"],[128,46,101,165],[128,47,101,166,"y"],[128,48,101,167],[128,50,101,169],[129,6,101,171,"size"],[129,10,101,175],[129,12,101,177],[130,4,101,180],[130,5,101,181],[130,6,101,182],[130,9,101,185],[130,13,101,189],[130,14,101,190],[131,4,102,4],[131,11,102,11,"publicKey_"],[131,21,102,21],[132,2,103,0],[133,2,104,0],[133,11,104,9,"validate"],[133,19,104,17,"validate"],[133,20,104,18,"publicKey"],[133,29,104,27],[133,31,104,43],[134,4,104,43],[134,8,104,29,"options"],[134,15,104,36],[134,18,104,36,"arguments"],[134,27,104,36],[134,28,104,36,"length"],[134,34,104,36],[134,42,104,36,"arguments"],[134,51,104,36],[134,59,104,36,"undefined"],[134,68,104,36],[134,71,104,36,"arguments"],[134,80,104,36],[134,86,104,39],[134,87,104,40],[134,88,104,41],[135,4,105,4],[135,8,105,8],[136,6,106,8,"assert"],[136,12,106,14],[136,13,106,15,"publicKey"],[136,22,106,24],[136,24,106,26,"options"],[136,31,106,33],[136,32,106,34],[137,6,107,8],[137,13,107,15],[137,17,107,19],[138,4,108,4],[138,5,108,5],[138,6,109,4],[138,13,109,11,"error"],[138,18,109,16],[138,20,109,18],[139,6,110,8],[139,13,110,15],[139,18,110,20],[140,4,111,4],[141,2,112,0],[142,2,112,1],[142,6,113,6,"InvalidError"],[142,18,113,18],[142,44,113,18,"_Errors$BaseError"],[142,61,113,18],[143,4,114,4],[143,13,114,4,"InvalidError"],[143,26,114,4,"_ref"],[143,30,114,4],[143,32,114,31],[144,6,114,31],[144,10,114,31,"_this"],[144,15,114,31],[145,6,114,31],[145,10,114,18,"publicKey"],[145,19,114,27],[145,22,114,27,"_ref"],[145,26,114,27],[145,27,114,18,"publicKey"],[145,36,114,27],[146,6,114,27,"_classCallCheck"],[146,21,114,27],[146,28,114,27,"InvalidError"],[146,40,114,27],[147,6,115,8,"_this"],[147,11,115,8],[147,14,115,8,"_callSuper"],[147,24,115,8],[147,31,115,8,"InvalidError"],[147,43,115,8],[147,46,115,14],[147,57,115,25,"Json"],[147,61,115,29],[147,62,115,30,"stringify"],[147,71,115,39],[147,72,115,40,"publicKey"],[147,81,115,49],[147,82,115,50],[147,113,115,81],[147,115,115,83],[148,8,116,12,"metaMessages"],[148,20,116,24],[148,22,116,26],[148,23,117,16],[148,49,117,42],[148,51,118,16],[148,93,118,58],[148,95,119,16],[148,145,119,66],[149,6,121,8],[149,7,121,9],[150,6,122,8,"Object"],[150,12,122,14],[150,13,122,15,"defineProperty"],[150,27,122,29],[150,28,122,29,"_this"],[150,33,122,29],[150,35,122,36],[150,41,122,42],[150,43,122,44],[151,8,123,12,"enumerable"],[151,18,123,22],[151,20,123,24],[151,24,123,28],[152,8,124,12,"configurable"],[152,20,124,24],[152,22,124,26],[152,26,124,30],[153,8,125,12,"writable"],[153,16,125,20],[153,18,125,22],[153,22,125,26],[154,8,126,12,"value"],[154,13,126,17],[154,15,126,19],[155,6,127,8],[155,7,127,9],[155,8,127,10],[156,6,127,11],[156,13,127,11,"_this"],[156,18,127,11],[157,4,128,4],[158,4,128,5,"_inherits"],[158,13,128,5],[158,14,128,5,"InvalidError"],[158,26,128,5],[158,28,128,5,"_Errors$BaseError"],[158,45,128,5],[159,4,128,5],[159,11,128,5,"_createClass"],[159,23,128,5],[159,24,128,5,"InvalidError"],[159,36,128,5],[160,2,128,5],[160,4,113,27,"Errors"],[160,10,113,33],[160,11,113,34,"BaseError"],[160,20,113,43],[161,2,130,0,"exports"],[161,9,130,7],[161,10,130,8,"InvalidError"],[161,22,130,20],[161,25,130,23,"InvalidError"],[161,37,130,35],[162,2,130,36],[162,6,131,6,"InvalidPrefixError"],[162,24,131,24],[162,50,131,24,"_Errors$BaseError2"],[162,68,131,24],[163,4,132,4],[163,13,132,4,"InvalidPrefixError"],[163,32,132,4,"_ref2"],[163,37,132,4],[163,39,132,35],[164,6,132,35],[164,10,132,35,"_this2"],[164,16,132,35],[165,6,132,35],[165,10,132,18,"prefix"],[165,16,132,24],[165,19,132,24,"_ref2"],[165,24,132,24],[165,25,132,18,"prefix"],[165,31,132,24],[166,8,132,26,"cause"],[166,13,132,31],[166,16,132,31,"_ref2"],[166,21,132,31],[166,22,132,26,"cause"],[166,27,132,31],[167,6,132,31,"_classCallCheck"],[167,21,132,31],[167,28,132,31,"InvalidPrefixError"],[167,46,132,31],[168,6,133,8,"_this2"],[168,12,133,8],[168,15,133,8,"_callSuper"],[168,25,133,8],[168,32,133,8,"InvalidPrefixError"],[168,50,133,8],[168,53,133,14],[168,64,133,25,"prefix"],[168,70,133,31],[168,85,133,46],[168,87,133,48],[169,8,134,12,"cause"],[170,6,135,8],[170,7,135,9],[171,6,136,8,"Object"],[171,12,136,14],[171,13,136,15,"defineProperty"],[171,27,136,29],[171,28,136,29,"_this2"],[171,34,136,29],[171,36,136,36],[171,42,136,42],[171,44,136,44],[172,8,137,12,"enumerable"],[172,18,137,22],[172,20,137,24],[172,24,137,28],[173,8,138,12,"configurable"],[173,20,138,24],[173,22,138,26],[173,26,138,30],[174,8,139,12,"writable"],[174,16,139,20],[174,18,139,22],[174,22,139,26],[175,8,140,12,"value"],[175,13,140,17],[175,15,140,19],[176,6,141,8],[176,7,141,9],[176,8,141,10],[177,6,141,11],[177,13,141,11,"_this2"],[177,19,141,11],[178,4,142,4],[179,4,142,5,"_inherits"],[179,13,142,5],[179,14,142,5,"InvalidPrefixError"],[179,32,142,5],[179,34,142,5,"_Errors$BaseError2"],[179,52,142,5],[180,4,142,5],[180,11,142,5,"_createClass"],[180,23,142,5],[180,24,142,5,"InvalidPrefixError"],[180,42,142,5],[181,2,142,5],[181,4,131,33,"Errors"],[181,10,131,39],[181,11,131,40,"BaseError"],[181,20,131,49],[182,2,144,0,"exports"],[182,9,144,7],[182,10,144,8,"InvalidPrefixError"],[182,28,144,26],[182,31,144,29,"InvalidPrefixError"],[182,49,144,47],[183,2,144,48],[183,6,145,6,"InvalidCompressedPrefixError"],[183,34,145,34],[183,60,145,34,"_Errors$BaseError3"],[183,78,145,34],[184,4,146,4],[184,13,146,4,"InvalidCompressedPrefixError"],[184,42,146,4],[184,44,146,18],[185,6,146,18],[185,10,146,18,"_this3"],[185,16,146,18],[186,6,146,18,"_classCallCheck"],[186,21,146,18],[186,28,146,18,"InvalidCompressedPrefixError"],[186,56,146,18],[187,6,147,8,"_this3"],[187,12,147,8],[187,15,147,8,"_callSuper"],[187,25,147,8],[187,32,147,8,"InvalidCompressedPrefixError"],[187,60,147,8],[187,63,147,14],[187,114,147,65],[188,6,148,8,"Object"],[188,12,148,14],[188,13,148,15,"defineProperty"],[188,27,148,29],[188,28,148,29,"_this3"],[188,34,148,29],[188,36,148,36],[188,42,148,42],[188,44,148,44],[189,8,149,12,"enumerable"],[189,18,149,22],[189,20,149,24],[189,24,149,28],[190,8,150,12,"configurable"],[190,20,150,24],[190,22,150,26],[190,26,150,30],[191,8,151,12,"writable"],[191,16,151,20],[191,18,151,22],[191,22,151,26],[192,8,152,12,"value"],[192,13,152,17],[192,15,152,19],[193,6,153,8],[193,7,153,9],[193,8,153,10],[194,6,153,11],[194,13,153,11,"_this3"],[194,19,153,11],[195,4,154,4],[196,4,154,5,"_inherits"],[196,13,154,5],[196,14,154,5,"InvalidCompressedPrefixError"],[196,42,154,5],[196,44,154,5,"_Errors$BaseError3"],[196,62,154,5],[197,4,154,5],[197,11,154,5,"_createClass"],[197,23,154,5],[197,24,154,5,"InvalidCompressedPrefixError"],[197,52,154,5],[198,2,154,5],[198,4,145,43,"Errors"],[198,10,145,49],[198,11,145,50,"BaseError"],[198,20,145,59],[199,2,156,0,"exports"],[199,9,156,7],[199,10,156,8,"InvalidCompressedPrefixError"],[199,38,156,36],[199,41,156,39,"InvalidCompressedPrefixError"],[199,69,156,67],[200,2,156,68],[200,6,157,6,"InvalidUncompressedPrefixError"],[200,36,157,36],[200,62,157,36,"_Errors$BaseError4"],[200,80,157,36],[201,4,158,4],[201,13,158,4,"InvalidUncompressedPrefixError"],[201,44,158,4],[201,46,158,18],[202,6,158,18],[202,10,158,18,"_this4"],[202,16,158,18],[203,6,158,18,"_classCallCheck"],[203,21,158,18],[203,28,158,18,"InvalidUncompressedPrefixError"],[203,58,158,18],[204,6,159,8,"_this4"],[204,12,159,8],[204,15,159,8,"_callSuper"],[204,25,159,8],[204,32,159,8,"InvalidUncompressedPrefixError"],[204,62,159,8],[204,65,159,14],[204,113,159,62],[205,6,160,8,"Object"],[205,12,160,14],[205,13,160,15,"defineProperty"],[205,27,160,29],[205,28,160,29,"_this4"],[205,34,160,29],[205,36,160,36],[205,42,160,42],[205,44,160,44],[206,8,161,12,"enumerable"],[206,18,161,22],[206,20,161,24],[206,24,161,28],[207,8,162,12,"configurable"],[207,20,162,24],[207,22,162,26],[207,26,162,30],[208,8,163,12,"writable"],[208,16,163,20],[208,18,163,22],[208,22,163,26],[209,8,164,12,"value"],[209,13,164,17],[209,15,164,19],[210,6,165,8],[210,7,165,9],[210,8,165,10],[211,6,165,11],[211,13,165,11,"_this4"],[211,19,165,11],[212,4,166,4],[213,4,166,5,"_inherits"],[213,13,166,5],[213,14,166,5,"InvalidUncompressedPrefixError"],[213,44,166,5],[213,46,166,5,"_Errors$BaseError4"],[213,64,166,5],[214,4,166,5],[214,11,166,5,"_createClass"],[214,23,166,5],[214,24,166,5,"InvalidUncompressedPrefixError"],[214,54,166,5],[215,2,166,5],[215,4,157,45,"Errors"],[215,10,157,51],[215,11,157,52,"BaseError"],[215,20,157,61],[216,2,168,0,"exports"],[216,9,168,7],[216,10,168,8,"InvalidUncompressedPrefixError"],[216,40,168,38],[216,43,168,41,"InvalidUncompressedPrefixError"],[216,73,168,71],[217,2,168,72],[217,6,169,6,"InvalidSerializedSizeError"],[217,32,169,32],[217,58,169,32,"_Errors$BaseError5"],[217,76,169,32],[218,4,170,4],[218,13,170,4,"InvalidSerializedSizeError"],[218,40,170,4,"_ref3"],[218,45,170,4],[218,47,170,31],[219,6,170,31],[219,10,170,31,"_this5"],[219,16,170,31],[220,6,170,31],[220,10,170,18,"publicKey"],[220,19,170,27],[220,22,170,27,"_ref3"],[220,27,170,27],[220,28,170,18,"publicKey"],[220,37,170,27],[221,6,170,27,"_classCallCheck"],[221,21,170,27],[221,28,170,27,"InvalidSerializedSizeError"],[221,54,170,27],[222,6,171,8,"_this5"],[222,12,171,8],[222,15,171,8,"_callSuper"],[222,25,171,8],[222,32,171,8,"InvalidSerializedSizeError"],[222,58,171,8],[222,61,171,14],[222,72,171,25,"publicKey"],[222,81,171,34],[222,116,171,69],[222,118,171,71],[223,8,172,12,"metaMessages"],[223,20,172,24],[223,22,172,26],[223,23,173,16],[223,127,173,120],[223,129,174,16],[223,141,174,28,"Hex"],[223,144,174,31],[223,145,174,32,"size"],[223,149,174,36],[223,150,174,37,"Hex"],[223,153,174,40],[223,154,174,41,"from"],[223,158,174,45],[223,159,174,46,"publicKey"],[223,168,174,55],[223,169,174,56],[223,170,174,57],[223,179,174,66],[224,6,176,8],[224,7,176,9],[225,6,177,8,"Object"],[225,12,177,14],[225,13,177,15,"defineProperty"],[225,27,177,29],[225,28,177,29,"_this5"],[225,34,177,29],[225,36,177,36],[225,42,177,42],[225,44,177,44],[226,8,178,12,"enumerable"],[226,18,178,22],[226,20,178,24],[226,24,178,28],[227,8,179,12,"configurable"],[227,20,179,24],[227,22,179,26],[227,26,179,30],[228,8,180,12,"writable"],[228,16,180,20],[228,18,180,22],[228,22,180,26],[229,8,181,12,"value"],[229,13,181,17],[229,15,181,19],[230,6,182,8],[230,7,182,9],[230,8,182,10],[231,6,182,11],[231,13,182,11,"_this5"],[231,19,182,11],[232,4,183,4],[233,4,183,5,"_inherits"],[233,13,183,5],[233,14,183,5,"InvalidSerializedSizeError"],[233,40,183,5],[233,42,183,5,"_Errors$BaseError5"],[233,60,183,5],[234,4,183,5],[234,11,183,5,"_createClass"],[234,23,183,5],[234,24,183,5,"InvalidSerializedSizeError"],[234,50,183,5],[235,2,183,5],[235,4,169,41,"Errors"],[235,10,169,47],[235,11,169,48,"BaseError"],[235,20,169,57],[236,2,185,0,"exports"],[236,9,185,7],[236,10,185,8,"InvalidSerializedSizeError"],[236,36,185,34],[236,39,185,37,"InvalidSerializedSizeError"],[236,65,185,63],[237,0,185,64],[237,3]],"functionMap":{"names":["<global>","assert","compress","from","<anonymous>","fromBytes","fromHex","toBytes","toHex","validate","InvalidError","InvalidError#constructor","InvalidPrefixError","InvalidPrefixError#constructor","InvalidCompressedPrefixError","InvalidCompressedPrefixError#constructor","InvalidUncompressedPrefixError","InvalidUncompressedPrefixError#constructor","InvalidSerializedSizeError","InvalidSerializedSizeError#constructor"],"mappings":"AAA;ACe;CDsB;AEC;CFM;AGC;uBCC;KDS;CHG;AKC;CLE;AMC;CN8B;AOC;CPE;AQC;CRM;ASC;CTQ;AUC;ICC;KDc;CVC;AYE;ICC;KDU;CZC;AcE;ICC;KDQ;CdC;AgBE;ICC;KDQ;ChBC;AkBE;ICC;KDa;ClBC"}},"type":"js/module"}]}