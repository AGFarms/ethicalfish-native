{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":316,"column":0,"index":8793}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":316,"column":0,"index":8793}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":316,"column":0,"index":8793}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./varint.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":13,"index":92},"end":{"line":5,"column":35,"index":114}}],"key":"PpLAeT2e615ni4dlByst6Y0m9Qk="}},{"name":"./hashes/digest.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":13,"index":129},"end":{"line":6,"column":42,"index":158}}],"key":"p1uxJWA3Al1EVRrARQBREvroSEE="}},{"name":"./bases/base58.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":13,"index":173},"end":{"line":7,"column":41,"index":201}}],"key":"S50B5LbLLvlIkQLoWVG6tUJoT8A="}},{"name":"./bases/base32.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":13,"index":216},"end":{"line":8,"column":41,"index":244}}],"key":"zO7rHUCK9PtDkc20sMopxNioOtY="}},{"name":"./bytes.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":12,"index":258},"end":{"line":9,"column":33,"index":279}}],"key":"gyhVpSFMewOarJv0mUF0j0ANRJQ="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var varint = require(_dependencyMap[3], \"./varint.js\");\n  var digest = require(_dependencyMap[4], \"./hashes/digest.js\");\n  var base58 = require(_dependencyMap[5], \"./bases/base58.js\");\n  var base32 = require(_dependencyMap[6], \"./bases/base32.js\");\n  var bytes = require(_dependencyMap[7], \"./bytes.js\");\n  var CID = /*#__PURE__*/function () {\n    function CID(version, code, multihash, bytes) {\n      _classCallCheck(this, CID);\n      this.code = code;\n      this.version = version;\n      this.multihash = multihash;\n      this.bytes = bytes;\n      this.byteOffset = bytes.byteOffset;\n      this.byteLength = bytes.byteLength;\n      this.asCID = this;\n      this._baseCache = new Map();\n      Object.defineProperties(this, {\n        byteOffset: hidden,\n        byteLength: hidden,\n        code: readonly,\n        version: readonly,\n        multihash: readonly,\n        bytes: readonly,\n        _baseCache: hidden,\n        asCID: hidden\n      });\n    }\n    return _createClass(CID, [{\n      key: \"toV0\",\n      value: function toV0() {\n        switch (this.version) {\n          case 0:\n            {\n              return this;\n            }\n          default:\n            {\n              var code = this.code,\n                multihash = this.multihash;\n              if (code !== DAG_PB_CODE) {\n                throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n              }\n              if (multihash.code !== SHA_256_CODE) {\n                throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n              }\n              return CID.createV0(multihash);\n            }\n        }\n      }\n    }, {\n      key: \"toV1\",\n      value: function toV1() {\n        switch (this.version) {\n          case 0:\n            {\n              var _this$multihash = this.multihash,\n                code = _this$multihash.code,\n                digest$1 = _this$multihash.digest;\n              var multihash = digest.create(code, digest$1);\n              return CID.createV1(this.code, multihash);\n            }\n          case 1:\n            {\n              return this;\n            }\n          default:\n            {\n              throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(other) {\n        return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString(base) {\n        var bytes = this.bytes,\n          version = this.version,\n          _baseCache = this._baseCache;\n        switch (version) {\n          case 0:\n            return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n          default:\n            return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n        }\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return {\n          code: this.code,\n          version: this.version,\n          hash: this.multihash.bytes\n        };\n      }\n    }, {\n      key: Symbol.toStringTag,\n      get: function () {\n        return 'CID';\n      }\n    }, {\n      key: Symbol.for('nodejs.util.inspect.custom'),\n      value: function () {\n        return 'CID(' + this.toString() + ')';\n      }\n    }, {\n      key: \"toBaseEncodedString\",\n      get: function () {\n        throw new Error('Deprecated, use .toString()');\n      }\n    }, {\n      key: \"codec\",\n      get: function () {\n        throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n      }\n    }, {\n      key: \"buffer\",\n      get: function () {\n        throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n      }\n    }, {\n      key: \"multibaseName\",\n      get: function () {\n        throw new Error('\"multibaseName\" property is deprecated');\n      }\n    }, {\n      key: \"prefix\",\n      get: function () {\n        throw new Error('\"prefix\" property is deprecated');\n      }\n    }], [{\n      key: \"isCID\",\n      value: function isCID(value) {\n        deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n        return !!(value && (value[cidSymbol] || value.asCID === value));\n      }\n    }, {\n      key: \"asCID\",\n      value: function asCID(value) {\n        if (value instanceof CID) {\n          return value;\n        } else if (value != null && value.asCID === value) {\n          var _version = value.version,\n            code = value.code,\n            multihash = value.multihash,\n            _bytes = value.bytes;\n          return new CID(_version, code, multihash, _bytes || encodeCID(_version, code, multihash.bytes));\n        } else if (value != null && value[cidSymbol] === true) {\n          var _version2 = value.version,\n            _multihash = value.multihash,\n            _code = value.code;\n          var digest$1 = digest.decode(_multihash);\n          return CID.create(_version2, _code, digest$1);\n        } else {\n          return null;\n        }\n      }\n    }, {\n      key: \"create\",\n      value: function create(version, code, digest) {\n        if (typeof code !== 'number') {\n          throw new Error('String codecs are no longer supported');\n        }\n        switch (version) {\n          case 0:\n            {\n              if (code !== DAG_PB_CODE) {\n                throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n              } else {\n                return new CID(version, code, digest, digest.bytes);\n              }\n            }\n          case 1:\n            {\n              var _bytes2 = encodeCID(version, code, digest.bytes);\n              return new CID(version, code, digest, _bytes2);\n            }\n          default:\n            {\n              throw new Error('Invalid version');\n            }\n        }\n      }\n    }, {\n      key: \"createV0\",\n      value: function createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n      }\n    }, {\n      key: \"createV1\",\n      value: function createV1(code, digest) {\n        return CID.create(1, code, digest);\n      }\n    }, {\n      key: \"decode\",\n      value: function decode(bytes) {\n        var _CID$decodeFirst = CID.decodeFirst(bytes),\n          _CID$decodeFirst2 = _slicedToArray(_CID$decodeFirst, 2),\n          cid = _CID$decodeFirst2[0],\n          remainder = _CID$decodeFirst2[1];\n        if (remainder.length) {\n          throw new Error('Incorrect length');\n        }\n        return cid;\n      }\n    }, {\n      key: \"decodeFirst\",\n      value: function decodeFirst(bytes$1) {\n        var specs = CID.inspectBytes(bytes$1);\n        var prefixSize = specs.size - specs.multihashSize;\n        var multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n          throw new Error('Incorrect length');\n        }\n        var digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        var digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        var cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n        return [cid, bytes$1.subarray(specs.size)];\n      }\n    }, {\n      key: \"inspectBytes\",\n      value: function inspectBytes(initialBytes) {\n        var offset = 0;\n        var next = () => {\n          var _varint$decode = varint.decode(initialBytes.subarray(offset)),\n            _varint$decode2 = _slicedToArray(_varint$decode, 2),\n            i = _varint$decode2[0],\n            length = _varint$decode2[1];\n          offset += length;\n          return i;\n        };\n        var version = next();\n        var codec = DAG_PB_CODE;\n        if (version === 18) {\n          version = 0;\n          offset = 0;\n        } else if (version === 1) {\n          codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n          throw new RangeError(`Invalid CID version ${version}`);\n        }\n        var prefixSize = offset;\n        var multihashCode = next();\n        var digestSize = next();\n        var size = offset + digestSize;\n        var multihashSize = size - prefixSize;\n        return {\n          version,\n          codec,\n          multihashCode,\n          digestSize,\n          multihashSize,\n          size\n        };\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(source, base) {\n        var _parseCIDtoBytes = parseCIDtoBytes(source, base),\n          _parseCIDtoBytes2 = _slicedToArray(_parseCIDtoBytes, 2),\n          prefix = _parseCIDtoBytes2[0],\n          bytes = _parseCIDtoBytes2[1];\n        var cid = CID.decode(bytes);\n        cid._baseCache.set(prefix, source);\n        return cid;\n      }\n    }]);\n  }();\n  var parseCIDtoBytes = (source, base) => {\n    switch (source[0]) {\n      case 'Q':\n        {\n          var decoder = base || base58.base58btc;\n          return [base58.base58btc.prefix, decoder.decode(`${base58.base58btc.prefix}${source}`)];\n        }\n      case base58.base58btc.prefix:\n        {\n          var _decoder = base || base58.base58btc;\n          return [base58.base58btc.prefix, _decoder.decode(source)];\n        }\n      case base32.base32.prefix:\n        {\n          var _decoder2 = base || base32.base32;\n          return [base32.base32.prefix, _decoder2.decode(source)];\n        }\n      default:\n        {\n          if (base == null) {\n            throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n          }\n          return [source[0], base.decode(source)];\n        }\n    }\n  };\n  var toStringV0 = (bytes, cache, base) => {\n    var prefix = base.prefix;\n    if (prefix !== base58.base58btc.prefix) {\n      throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    var cid = cache.get(prefix);\n    if (cid == null) {\n      var _cid = base.encode(bytes).slice(1);\n      cache.set(prefix, _cid);\n      return _cid;\n    } else {\n      return cid;\n    }\n  };\n  var toStringV1 = (bytes, cache, base) => {\n    var prefix = base.prefix;\n    var cid = cache.get(prefix);\n    if (cid == null) {\n      var _cid2 = base.encode(bytes);\n      cache.set(prefix, _cid2);\n      return _cid2;\n    } else {\n      return cid;\n    }\n  };\n  var DAG_PB_CODE = 112;\n  var SHA_256_CODE = 18;\n  var encodeCID = (version, code, multihash) => {\n    var codeOffset = varint.encodingLength(version);\n    var hashOffset = codeOffset + varint.encodingLength(code);\n    var bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n  };\n  var cidSymbol = Symbol.for('@ipld/js-cid/CID');\n  var readonly = {\n    writable: false,\n    configurable: false,\n    enumerable: true\n  };\n  var hidden = {\n    writable: false,\n    enumerable: false,\n    configurable: false\n  };\n  var version = '0.0.0-dev';\n  var deprecate = (range, message) => {\n    if (range.test(version)) {\n      console.warn(message);\n    } else {\n      throw new Error(message);\n    }\n  };\n  var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n  exports.CID = CID;\n});","lineCount":379,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[7,2,3,0,"Object"],[7,8,3,6],[7,9,3,7,"defineProperty"],[7,23,3,21],[7,24,3,22,"exports"],[7,31,3,29],[7,33,3,31],[7,45,3,43],[7,47,3,45],[8,4,3,47,"value"],[8,9,3,52],[8,11,3,54],[9,2,3,59],[9,3,3,60],[9,4,3,61],[10,2,5,0],[10,6,5,4,"varint"],[10,12,5,10],[10,15,5,13,"require"],[10,22,5,20],[10,23,5,20,"_dependencyMap"],[10,37,5,20],[10,55,5,34],[10,56,5,35],[11,2,6,0],[11,6,6,4,"digest"],[11,12,6,10],[11,15,6,13,"require"],[11,22,6,20],[11,23,6,20,"_dependencyMap"],[11,37,6,20],[11,62,6,41],[11,63,6,42],[12,2,7,0],[12,6,7,4,"base58"],[12,12,7,10],[12,15,7,13,"require"],[12,22,7,20],[12,23,7,20,"_dependencyMap"],[12,37,7,20],[12,61,7,40],[12,62,7,41],[13,2,8,0],[13,6,8,4,"base32"],[13,12,8,10],[13,15,8,13,"require"],[13,22,8,20],[13,23,8,20,"_dependencyMap"],[13,37,8,20],[13,61,8,40],[13,62,8,41],[14,2,9,0],[14,6,9,4,"bytes"],[14,11,9,9],[14,14,9,12,"require"],[14,21,9,19],[14,22,9,19,"_dependencyMap"],[14,36,9,19],[14,53,9,32],[14,54,9,33],[15,2,9,34],[15,6,11,6,"CID"],[15,9,11,9],[16,4,12,2],[16,13,12,2,"CID"],[16,17,12,14,"version"],[16,24,12,21],[16,26,12,23,"code"],[16,30,12,27],[16,32,12,29,"multihash"],[16,41,12,38],[16,43,12,40,"bytes"],[16,48,12,45],[16,50,12,47],[17,6,12,47,"_classCallCheck"],[17,21,12,47],[17,28,12,47,"CID"],[17,31,12,47],[18,6,13,4],[18,10,13,8],[18,11,13,9,"code"],[18,15,13,13],[18,18,13,16,"code"],[18,22,13,20],[19,6,14,4],[19,10,14,8],[19,11,14,9,"version"],[19,18,14,16],[19,21,14,19,"version"],[19,28,14,26],[20,6,15,4],[20,10,15,8],[20,11,15,9,"multihash"],[20,20,15,18],[20,23,15,21,"multihash"],[20,32,15,30],[21,6,16,4],[21,10,16,8],[21,11,16,9,"bytes"],[21,16,16,14],[21,19,16,17,"bytes"],[21,24,16,22],[22,6,17,4],[22,10,17,8],[22,11,17,9,"byteOffset"],[22,21,17,19],[22,24,17,22,"bytes"],[22,29,17,27],[22,30,17,28,"byteOffset"],[22,40,17,38],[23,6,18,4],[23,10,18,8],[23,11,18,9,"byteLength"],[23,21,18,19],[23,24,18,22,"bytes"],[23,29,18,27],[23,30,18,28,"byteLength"],[23,40,18,38],[24,6,19,4],[24,10,19,8],[24,11,19,9,"asCID"],[24,16,19,14],[24,19,19,17],[24,23,19,21],[25,6,20,4],[25,10,20,8],[25,11,20,9,"_baseCache"],[25,21,20,19],[25,24,20,22],[25,28,20,26,"Map"],[25,31,20,29],[25,32,20,30],[25,33,20,31],[26,6,21,4,"Object"],[26,12,21,10],[26,13,21,11,"defineProperties"],[26,29,21,27],[26,30,21,28],[26,34,21,32],[26,36,21,34],[27,8,22,6,"byteOffset"],[27,18,22,16],[27,20,22,18,"hidden"],[27,26,22,24],[28,8,23,6,"byteLength"],[28,18,23,16],[28,20,23,18,"hidden"],[28,26,23,24],[29,8,24,6,"code"],[29,12,24,10],[29,14,24,12,"readonly"],[29,22,24,20],[30,8,25,6,"version"],[30,15,25,13],[30,17,25,15,"readonly"],[30,25,25,23],[31,8,26,6,"multihash"],[31,17,26,15],[31,19,26,17,"readonly"],[31,27,26,25],[32,8,27,6,"bytes"],[32,13,27,11],[32,15,27,13,"readonly"],[32,23,27,21],[33,8,28,6,"_baseCache"],[33,18,28,16],[33,20,28,18,"hidden"],[33,26,28,24],[34,8,29,6,"asCID"],[34,13,29,11],[34,15,29,13,"hidden"],[35,6,30,4],[35,7,30,5],[35,8,30,6],[36,4,31,2],[37,4,31,3],[37,11,31,3,"_createClass"],[37,23,31,3],[37,24,31,3,"CID"],[37,27,31,3],[38,6,31,3,"key"],[38,9,31,3],[39,6,31,3,"value"],[39,11,31,3],[39,13,32,2],[39,22,32,2,"toV0"],[39,26,32,6,"toV0"],[39,27,32,6],[39,29,32,9],[40,8,33,4],[40,16,33,12],[40,20,33,16],[40,21,33,17,"version"],[40,28,33,24],[41,10,34,4],[41,15,34,9],[41,16,34,10],[42,12,34,12],[43,14,35,8],[43,21,35,15],[43,25,35,19],[44,12,36,6],[45,10,37,4],[46,12,37,13],[47,14,38,8],[47,18,38,15,"code"],[47,22,38,19],[47,25,38,34],[47,29,38,38],[47,30,38,15,"code"],[47,34,38,19],[48,16,38,21,"multihash"],[48,25,38,30],[48,28,38,34],[48,32,38,38],[48,33,38,21,"multihash"],[48,42,38,30],[49,14,39,8],[49,18,39,12,"code"],[49,22,39,16],[49,27,39,21,"DAG_PB_CODE"],[49,38,39,32],[49,40,39,34],[50,16,40,10],[50,22,40,16],[50,26,40,20,"Error"],[50,31,40,25],[50,32,40,26],[50,74,40,68],[50,75,40,69],[51,14,41,8],[52,14,42,8],[52,18,42,12,"multihash"],[52,27,42,21],[52,28,42,22,"code"],[52,32,42,26],[52,37,42,31,"SHA_256_CODE"],[52,49,42,43],[52,51,42,45],[53,16,43,10],[53,22,43,16],[53,26,43,20,"Error"],[53,31,43,25],[53,32,43,26],[53,84,43,78],[53,85,43,79],[54,14,44,8],[55,14,45,8],[55,21,45,15,"CID"],[55,24,45,18],[55,25,45,19,"createV0"],[55,33,45,27],[55,34,45,28,"multihash"],[55,43,45,37],[55,44,45,38],[56,12,46,6],[57,8,47,4],[58,6,48,2],[59,4,48,3],[60,6,48,3,"key"],[60,9,48,3],[61,6,48,3,"value"],[61,11,48,3],[61,13,49,2],[61,22,49,2,"toV1"],[61,26,49,6,"toV1"],[61,27,49,6],[61,29,49,9],[62,8,50,4],[62,16,50,12],[62,20,50,16],[62,21,50,17,"version"],[62,28,50,24],[63,10,51,4],[63,15,51,9],[63,16,51,10],[64,12,51,12],[65,14,52,8],[65,18,52,8,"_this$multihash"],[65,33,52,8],[65,36,52,41],[65,40,52,45],[65,41,52,46,"multihash"],[65,50,52,55],[66,16,52,15,"code"],[66,20,52,19],[66,23,52,19,"_this$multihash"],[66,38,52,19],[66,39,52,15,"code"],[66,43,52,19],[67,16,52,29,"digest$1"],[67,24,52,37],[67,27,52,37,"_this$multihash"],[67,42,52,37],[67,43,52,21,"digest"],[67,49,52,27],[68,14,53,8],[68,18,53,14,"multihash"],[68,27,53,23],[68,30,53,26,"digest"],[68,36,53,32],[68,37,53,33,"create"],[68,43,53,39],[68,44,53,40,"code"],[68,48,53,44],[68,50,53,46,"digest$1"],[68,58,53,54],[68,59,53,55],[69,14,54,8],[69,21,54,15,"CID"],[69,24,54,18],[69,25,54,19,"createV1"],[69,33,54,27],[69,34,54,28],[69,38,54,32],[69,39,54,33,"code"],[69,43,54,37],[69,45,54,39,"multihash"],[69,54,54,48],[69,55,54,49],[70,12,55,6],[71,10,56,4],[71,15,56,9],[71,16,56,10],[72,12,56,12],[73,14,57,8],[73,21,57,15],[73,25,57,19],[74,12,58,6],[75,10,59,4],[76,12,59,13],[77,14,60,8],[77,20,60,14,"Error"],[77,25,60,19],[77,26,60,20],[77,57,60,52],[77,61,60,56],[77,62,60,57,"version"],[77,69,60,64],[77,113,60,109],[77,114,60,110],[78,12,61,6],[79,8,62,4],[80,6,63,2],[81,4,63,3],[82,6,63,3,"key"],[82,9,63,3],[83,6,63,3,"value"],[83,11,63,3],[83,13,64,2],[83,22,64,2,"equals"],[83,28,64,8,"equals"],[83,29,64,9,"other"],[83,34,64,14],[83,36,64,16],[84,8,65,4],[84,15,65,11,"other"],[84,20,65,16],[84,24,65,20],[84,28,65,24],[84,29,65,25,"code"],[84,33,65,29],[84,38,65,34,"other"],[84,43,65,39],[84,44,65,40,"code"],[84,48,65,44],[84,52,65,48],[84,56,65,52],[84,57,65,53,"version"],[84,64,65,60],[84,69,65,65,"other"],[84,74,65,70],[84,75,65,71,"version"],[84,82,65,78],[84,86,65,82,"digest"],[84,92,65,88],[84,93,65,89,"equals"],[84,99,65,95],[84,100,65,96],[84,104,65,100],[84,105,65,101,"multihash"],[84,114,65,110],[84,116,65,112,"other"],[84,121,65,117],[84,122,65,118,"multihash"],[84,131,65,127],[84,132,65,128],[85,6,66,2],[86,4,66,3],[87,6,66,3,"key"],[87,9,66,3],[88,6,66,3,"value"],[88,11,66,3],[88,13,67,2],[88,22,67,2,"toString"],[88,30,67,10,"toString"],[88,31,67,11,"base"],[88,35,67,15],[88,37,67,17],[89,8,68,4],[89,12,68,11,"bytes"],[89,17,68,16],[89,20,68,41],[89,24,68,45],[89,25,68,11,"bytes"],[89,30,68,16],[90,10,68,18,"version"],[90,17,68,25],[90,20,68,41],[90,24,68,45],[90,25,68,18,"version"],[90,32,68,25],[91,10,68,27,"_baseCache"],[91,20,68,37],[91,23,68,41],[91,27,68,45],[91,28,68,27,"_baseCache"],[91,38,68,37],[92,8,69,4],[92,16,69,12,"version"],[92,23,69,19],[93,10,70,4],[93,15,70,9],[93,16,70,10],[94,12,71,6],[94,19,71,13,"toStringV0"],[94,29,71,23],[94,30,71,24,"bytes"],[94,35,71,29],[94,37,71,31,"_baseCache"],[94,47,71,41],[94,49,71,43,"base"],[94,53,71,47],[94,57,71,51,"base58"],[94,63,71,57],[94,64,71,58,"base58btc"],[94,73,71,67],[94,74,71,68,"encoder"],[94,81,71,75],[94,82,71,76],[95,10,72,4],[96,12,73,6],[96,19,73,13,"toStringV1"],[96,29,73,23],[96,30,73,24,"bytes"],[96,35,73,29],[96,37,73,31,"_baseCache"],[96,47,73,41],[96,49,73,43,"base"],[96,53,73,47],[96,57,73,51,"base32"],[96,63,73,57],[96,64,73,58,"base32"],[96,70,73,64],[96,71,73,65,"encoder"],[96,78,73,72],[96,79,73,73],[97,8,74,4],[98,6,75,2],[99,4,75,3],[100,6,75,3,"key"],[100,9,75,3],[101,6,75,3,"value"],[101,11,75,3],[101,13,76,2],[101,22,76,2,"toJSON"],[101,28,76,8,"toJSON"],[101,29,76,8],[101,31,76,11],[102,8,77,4],[102,15,77,11],[103,10,78,6,"code"],[103,14,78,10],[103,16,78,12],[103,20,78,16],[103,21,78,17,"code"],[103,25,78,21],[104,10,79,6,"version"],[104,17,79,13],[104,19,79,15],[104,23,79,19],[104,24,79,20,"version"],[104,31,79,27],[105,10,80,6,"hash"],[105,14,80,10],[105,16,80,12],[105,20,80,16],[105,21,80,17,"multihash"],[105,30,80,26],[105,31,80,27,"bytes"],[106,8,81,4],[106,9,81,5],[107,6,82,2],[108,4,82,3],[109,6,82,3,"key"],[109,9,82,3],[109,11,83,7,"Symbol"],[109,17,83,13],[109,18,83,14,"toStringTag"],[109,29,83,25],[110,6,83,25,"get"],[110,9,83,25],[110,11,83,2],[110,20,83,2,"get"],[110,21,83,2],[110,23,83,29],[111,8,84,4],[111,15,84,11],[111,20,84,16],[112,6,85,2],[113,4,85,3],[114,6,85,3,"key"],[114,9,85,3],[114,11,86,3,"Symbol"],[114,17,86,9],[114,18,86,10,"for"],[114,21,86,13],[114,22,86,14],[114,50,86,42],[114,51,86,43],[115,6,86,43,"value"],[115,11,86,43],[115,13,86,2],[115,22,86,2,"value"],[115,23,86,2],[115,25,86,47],[116,8,87,4],[116,15,87,11],[116,21,87,17],[116,24,87,20],[116,28,87,24],[116,29,87,25,"toString"],[116,37,87,33],[116,38,87,34],[116,39,87,35],[116,42,87,38],[116,45,87,41],[117,6,88,2],[118,4,88,3],[119,6,88,3,"key"],[119,9,88,3],[120,6,88,3,"get"],[120,9,88,3],[120,11,93,2],[120,20,93,2,"get"],[120,21,93,2],[120,23,93,28],[121,8,94,4],[121,14,94,10],[121,18,94,14,"Error"],[121,23,94,19],[121,24,94,20],[121,53,94,49],[121,54,94,50],[122,6,95,2],[123,4,95,3],[124,6,95,3,"key"],[124,9,95,3],[125,6,95,3,"get"],[125,9,95,3],[125,11,96,2],[125,20,96,2,"get"],[125,21,96,2],[125,23,96,14],[126,8,97,4],[126,14,97,10],[126,18,97,14,"Error"],[126,23,97,19],[126,24,97,20],[126,93,97,89],[126,94,97,90],[127,6,98,2],[128,4,98,3],[129,6,98,3,"key"],[129,9,98,3],[130,6,98,3,"get"],[130,9,98,3],[130,11,99,2],[130,20,99,2,"get"],[130,21,99,2],[130,23,99,15],[131,8,100,4],[131,14,100,10],[131,18,100,14,"Error"],[131,23,100,19],[131,24,100,20],[131,91,100,87],[131,92,100,88],[132,6,101,2],[133,4,101,3],[134,6,101,3,"key"],[134,9,101,3],[135,6,101,3,"get"],[135,9,101,3],[135,11,102,2],[135,20,102,2,"get"],[135,21,102,2],[135,23,102,22],[136,8,103,4],[136,14,103,10],[136,18,103,14,"Error"],[136,23,103,19],[136,24,103,20],[136,64,103,60],[136,65,103,61],[137,6,104,2],[138,4,104,3],[139,6,104,3,"key"],[139,9,104,3],[140,6,104,3,"get"],[140,9,104,3],[140,11,105,2],[140,20,105,2,"get"],[140,21,105,2],[140,23,105,15],[141,8,106,4],[141,14,106,10],[141,18,106,14,"Error"],[141,23,106,19],[141,24,106,20],[141,57,106,53],[141,58,106,54],[142,6,107,2],[143,4,107,3],[144,6,107,3,"key"],[144,9,107,3],[145,6,107,3,"value"],[145,11,107,3],[145,13,89,2],[145,22,89,9,"isCID"],[145,27,89,14,"isCID"],[145,28,89,15,"value"],[145,33,89,20],[145,35,89,22],[146,8,90,4,"deprecate"],[146,17,90,13],[146,18,90,14],[146,25,90,21],[146,27,90,23,"IS_CID_DEPRECATION"],[146,45,90,41],[146,46,90,42],[147,8,91,4],[147,15,91,11],[147,16,91,12],[147,18,91,14,"value"],[147,23,91,19],[147,28,91,24,"value"],[147,33,91,29],[147,34,91,30,"cidSymbol"],[147,43,91,39],[147,44,91,40],[147,48,91,44,"value"],[147,53,91,49],[147,54,91,50,"asCID"],[147,59,91,55],[147,64,91,60,"value"],[147,69,91,65],[147,70,91,66],[147,71,91,67],[148,6,92,2],[149,4,92,3],[150,6,92,3,"key"],[150,9,92,3],[151,6,92,3,"value"],[151,11,92,3],[151,13,108,2],[151,22,108,9,"asCID"],[151,27,108,14,"asCID"],[151,28,108,15,"value"],[151,33,108,20],[151,35,108,22],[152,8,109,4],[152,12,109,8,"value"],[152,17,109,13],[152,29,109,25,"CID"],[152,32,109,28],[152,34,109,30],[153,10,110,6],[153,17,110,13,"value"],[153,22,110,18],[154,8,111,4],[154,9,111,5],[154,15,111,11],[154,19,111,15,"value"],[154,24,111,20],[154,28,111,24],[154,32,111,28],[154,36,111,32,"value"],[154,41,111,37],[154,42,111,38,"asCID"],[154,47,111,43],[154,52,111,48,"value"],[154,57,111,53],[154,59,111,55],[155,10,112,6],[155,14,112,13,"version"],[155,22,112,20],[155,25,112,48,"value"],[155,30,112,53],[155,31,112,13,"version"],[155,38,112,20],[156,12,112,22,"code"],[156,16,112,26],[156,19,112,48,"value"],[156,24,112,53],[156,25,112,22,"code"],[156,29,112,26],[157,12,112,28,"multihash"],[157,21,112,37],[157,24,112,48,"value"],[157,29,112,53],[157,30,112,28,"multihash"],[157,39,112,37],[158,12,112,39,"bytes"],[158,18,112,44],[158,21,112,48,"value"],[158,26,112,53],[158,27,112,39,"bytes"],[158,32,112,44],[159,10,113,6],[159,17,113,13],[159,21,113,17,"CID"],[159,24,113,20],[159,25,113,21,"version"],[159,33,113,28],[159,35,113,30,"code"],[159,39,113,34],[159,41,113,36,"multihash"],[159,50,113,45],[159,52,113,47,"bytes"],[159,58,113,52],[159,62,113,56,"encodeCID"],[159,71,113,65],[159,72,113,66,"version"],[159,80,113,73],[159,82,113,75,"code"],[159,86,113,79],[159,88,113,81,"multihash"],[159,97,113,90],[159,98,113,91,"bytes"],[159,103,113,96],[159,104,113,97],[159,105,113,98],[160,8,114,4],[160,9,114,5],[160,15,114,11],[160,19,114,15,"value"],[160,24,114,20],[160,28,114,24],[160,32,114,28],[160,36,114,32,"value"],[160,41,114,37],[160,42,114,38,"cidSymbol"],[160,51,114,47],[160,52,114,48],[160,57,114,53],[160,61,114,57],[160,63,114,59],[161,10,115,6],[161,14,115,13,"version"],[161,23,115,20],[161,26,115,41,"value"],[161,31,115,46],[161,32,115,13,"version"],[161,39,115,20],[162,12,115,22,"multihash"],[162,22,115,31],[162,25,115,41,"value"],[162,30,115,46],[162,31,115,22,"multihash"],[162,40,115,31],[163,12,115,33,"code"],[163,17,115,37],[163,20,115,41,"value"],[163,25,115,46],[163,26,115,33,"code"],[163,30,115,37],[164,10,116,6],[164,14,116,12,"digest$1"],[164,22,116,20],[164,25,116,23,"digest"],[164,31,116,29],[164,32,116,30,"decode"],[164,38,116,36],[164,39,116,37,"multihash"],[164,49,116,46],[164,50,116,47],[165,10,117,6],[165,17,117,13,"CID"],[165,20,117,16],[165,21,117,17,"create"],[165,27,117,23],[165,28,117,24,"version"],[165,37,117,31],[165,39,117,33,"code"],[165,44,117,37],[165,46,117,39,"digest$1"],[165,54,117,47],[165,55,117,48],[166,8,118,4],[166,9,118,5],[166,15,118,11],[167,10,119,6],[167,17,119,13],[167,21,119,17],[168,8,120,4],[169,6,121,2],[170,4,121,3],[171,6,121,3,"key"],[171,9,121,3],[172,6,121,3,"value"],[172,11,121,3],[172,13,122,2],[172,22,122,9,"create"],[172,28,122,15,"create"],[172,29,122,16,"version"],[172,36,122,23],[172,38,122,25,"code"],[172,42,122,29],[172,44,122,31,"digest"],[172,50,122,37],[172,52,122,39],[173,8,123,4],[173,12,123,8],[173,19,123,15,"code"],[173,23,123,19],[173,28,123,24],[173,36,123,32],[173,38,123,34],[174,10,124,6],[174,16,124,12],[174,20,124,16,"Error"],[174,25,124,21],[174,26,124,22],[174,65,124,61],[174,66,124,62],[175,8,125,4],[176,8,126,4],[176,16,126,12,"version"],[176,23,126,19],[177,10,127,4],[177,15,127,9],[177,16,127,10],[178,12,127,12],[179,14,128,8],[179,18,128,12,"code"],[179,22,128,16],[179,27,128,21,"DAG_PB_CODE"],[179,38,128,32],[179,40,128,34],[180,16,129,10],[180,22,129,16],[180,26,129,20,"Error"],[180,31,129,25],[180,32,129,26],[180,72,129,67,"DAG_PB_CODE"],[180,83,129,78],[180,101,129,97],[180,102,129,98],[181,14,130,8],[181,15,130,9],[181,21,130,15],[182,16,131,10],[182,23,131,17],[182,27,131,21,"CID"],[182,30,131,24],[182,31,131,25,"version"],[182,38,131,32],[182,40,131,34,"code"],[182,44,131,38],[182,46,131,40,"digest"],[182,52,131,46],[182,54,131,48,"digest"],[182,60,131,54],[182,61,131,55,"bytes"],[182,66,131,60],[182,67,131,61],[183,14,132,8],[184,12,133,6],[185,10,134,4],[185,15,134,9],[185,16,134,10],[186,12,134,12],[187,14,135,8],[187,18,135,14,"bytes"],[187,25,135,19],[187,28,135,22,"encodeCID"],[187,37,135,31],[187,38,135,32,"version"],[187,45,135,39],[187,47,135,41,"code"],[187,51,135,45],[187,53,135,47,"digest"],[187,59,135,53],[187,60,135,54,"bytes"],[187,65,135,59],[187,66,135,60],[188,14,136,8],[188,21,136,15],[188,25,136,19,"CID"],[188,28,136,22],[188,29,136,23,"version"],[188,36,136,30],[188,38,136,32,"code"],[188,42,136,36],[188,44,136,38,"digest"],[188,50,136,44],[188,52,136,46,"bytes"],[188,59,136,51],[188,60,136,52],[189,12,137,6],[190,10,138,4],[191,12,138,13],[192,14,139,8],[192,20,139,14],[192,24,139,18,"Error"],[192,29,139,23],[192,30,139,24],[192,47,139,41],[192,48,139,42],[193,12,140,6],[194,8,141,4],[195,6,142,2],[196,4,142,3],[197,6,142,3,"key"],[197,9,142,3],[198,6,142,3,"value"],[198,11,142,3],[198,13,143,2],[198,22,143,9,"createV0"],[198,30,143,17,"createV0"],[198,31,143,18,"digest"],[198,37,143,24],[198,39,143,26],[199,8,144,4],[199,15,144,11,"CID"],[199,18,144,14],[199,19,144,15,"create"],[199,25,144,21],[199,26,144,22],[199,27,144,23],[199,29,144,25,"DAG_PB_CODE"],[199,40,144,36],[199,42,144,38,"digest"],[199,48,144,44],[199,49,144,45],[200,6,145,2],[201,4,145,3],[202,6,145,3,"key"],[202,9,145,3],[203,6,145,3,"value"],[203,11,145,3],[203,13,146,2],[203,22,146,9,"createV1"],[203,30,146,17,"createV1"],[203,31,146,18,"code"],[203,35,146,22],[203,37,146,24,"digest"],[203,43,146,30],[203,45,146,32],[204,8,147,4],[204,15,147,11,"CID"],[204,18,147,14],[204,19,147,15,"create"],[204,25,147,21],[204,26,147,22],[204,27,147,23],[204,29,147,25,"code"],[204,33,147,29],[204,35,147,31,"digest"],[204,41,147,37],[204,42,147,38],[205,6,148,2],[206,4,148,3],[207,6,148,3,"key"],[207,9,148,3],[208,6,148,3,"value"],[208,11,148,3],[208,13,149,2],[208,22,149,9,"decode"],[208,28,149,15,"decode"],[208,29,149,16,"bytes"],[208,34,149,21],[208,36,149,23],[209,8,150,4],[209,12,150,4,"_CID$decodeFirst"],[209,28,150,4],[209,31,150,29,"CID"],[209,34,150,32],[209,35,150,33,"decodeFirst"],[209,46,150,44],[209,47,150,45,"bytes"],[209,52,150,50],[209,53,150,51],[210,10,150,51,"_CID$decodeFirst2"],[210,27,150,51],[210,30,150,51,"_slicedToArray"],[210,44,150,51],[210,45,150,51,"_CID$decodeFirst"],[210,61,150,51],[211,10,150,11,"cid"],[211,13,150,14],[211,16,150,14,"_CID$decodeFirst2"],[211,33,150,14],[212,10,150,16,"remainder"],[212,19,150,25],[212,22,150,25,"_CID$decodeFirst2"],[212,39,150,25],[213,8,151,4],[213,12,151,8,"remainder"],[213,21,151,17],[213,22,151,18,"length"],[213,28,151,24],[213,30,151,26],[214,10,152,6],[214,16,152,12],[214,20,152,16,"Error"],[214,25,152,21],[214,26,152,22],[214,44,152,40],[214,45,152,41],[215,8,153,4],[216,8,154,4],[216,15,154,11,"cid"],[216,18,154,14],[217,6,155,2],[218,4,155,3],[219,6,155,3,"key"],[219,9,155,3],[220,6,155,3,"value"],[220,11,155,3],[220,13,156,2],[220,22,156,9,"decodeFirst"],[220,33,156,20,"decodeFirst"],[220,34,156,21,"bytes$1"],[220,41,156,28],[220,43,156,30],[221,8,157,4],[221,12,157,10,"specs"],[221,17,157,15],[221,20,157,18,"CID"],[221,23,157,21],[221,24,157,22,"inspectBytes"],[221,36,157,34],[221,37,157,35,"bytes$1"],[221,44,157,42],[221,45,157,43],[222,8,158,4],[222,12,158,10,"prefixSize"],[222,22,158,20],[222,25,158,23,"specs"],[222,30,158,28],[222,31,158,29,"size"],[222,35,158,33],[222,38,158,36,"specs"],[222,43,158,41],[222,44,158,42,"multihashSize"],[222,57,158,55],[223,8,159,4],[223,12,159,10,"multihashBytes"],[223,26,159,24],[223,29,159,27,"bytes"],[223,34,159,32],[223,35,159,33,"coerce"],[223,41,159,39],[223,42,159,40,"bytes$1"],[223,49,159,47],[223,50,159,48,"subarray"],[223,58,159,56],[223,59,159,57,"prefixSize"],[223,69,159,67],[223,71,159,69,"prefixSize"],[223,81,159,79],[223,84,159,82,"specs"],[223,89,159,87],[223,90,159,88,"multihashSize"],[223,103,159,101],[223,104,159,102],[223,105,159,103],[224,8,160,4],[224,12,160,8,"multihashBytes"],[224,26,160,22],[224,27,160,23,"byteLength"],[224,37,160,33],[224,42,160,38,"specs"],[224,47,160,43],[224,48,160,44,"multihashSize"],[224,61,160,57],[224,63,160,59],[225,10,161,6],[225,16,161,12],[225,20,161,16,"Error"],[225,25,161,21],[225,26,161,22],[225,44,161,40],[225,45,161,41],[226,8,162,4],[227,8,163,4],[227,12,163,10,"digestBytes"],[227,23,163,21],[227,26,163,24,"multihashBytes"],[227,40,163,38],[227,41,163,39,"subarray"],[227,49,163,47],[227,50,163,48,"specs"],[227,55,163,53],[227,56,163,54,"multihashSize"],[227,69,163,67],[227,72,163,70,"specs"],[227,77,163,75],[227,78,163,76,"digestSize"],[227,88,163,86],[227,89,163,87],[228,8,164,4],[228,12,164,10,"digest$1"],[228,20,164,18],[228,23,164,21],[228,27,164,25,"digest"],[228,33,164,31],[228,34,164,32,"Digest"],[228,40,164,38],[228,41,164,39,"specs"],[228,46,164,44],[228,47,164,45,"multihashCode"],[228,60,164,58],[228,62,164,60,"specs"],[228,67,164,65],[228,68,164,66,"digestSize"],[228,78,164,76],[228,80,164,78,"digestBytes"],[228,91,164,89],[228,93,164,91,"multihashBytes"],[228,107,164,105],[228,108,164,106],[229,8,165,4],[229,12,165,10,"cid"],[229,15,165,13],[229,18,165,16,"specs"],[229,23,165,21],[229,24,165,22,"version"],[229,31,165,29],[229,36,165,34],[229,37,165,35],[229,40,165,38,"CID"],[229,43,165,41],[229,44,165,42,"createV0"],[229,52,165,50],[229,53,165,51,"digest$1"],[229,61,165,59],[229,62,165,60],[229,65,165,63,"CID"],[229,68,165,66],[229,69,165,67,"createV1"],[229,77,165,75],[229,78,165,76,"specs"],[229,83,165,81],[229,84,165,82,"codec"],[229,89,165,87],[229,91,165,89,"digest$1"],[229,99,165,97],[229,100,165,98],[230,8,166,4],[230,15,166,11],[230,16,167,6,"cid"],[230,19,167,9],[230,21,168,6,"bytes$1"],[230,28,168,13],[230,29,168,14,"subarray"],[230,37,168,22],[230,38,168,23,"specs"],[230,43,168,28],[230,44,168,29,"size"],[230,48,168,33],[230,49,168,34],[230,50,169,5],[231,6,170,2],[232,4,170,3],[233,6,170,3,"key"],[233,9,170,3],[234,6,170,3,"value"],[234,11,170,3],[234,13,171,2],[234,22,171,9,"inspectBytes"],[234,34,171,21,"inspectBytes"],[234,35,171,22,"initialBytes"],[234,47,171,34],[234,49,171,36],[235,8,172,4],[235,12,172,8,"offset"],[235,18,172,14],[235,21,172,17],[235,22,172,18],[236,8,173,4],[236,12,173,10,"next"],[236,16,173,14],[236,19,173,17,"next"],[236,20,173,17],[236,25,173,23],[237,10,174,6],[237,14,174,6,"_varint$decode"],[237,28,174,6],[237,31,174,26,"varint"],[237,37,174,32],[237,38,174,33,"decode"],[237,44,174,39],[237,45,174,40,"initialBytes"],[237,57,174,52],[237,58,174,53,"subarray"],[237,66,174,61],[237,67,174,62,"offset"],[237,73,174,68],[237,74,174,69],[237,75,174,70],[238,12,174,70,"_varint$decode2"],[238,27,174,70],[238,30,174,70,"_slicedToArray"],[238,44,174,70],[238,45,174,70,"_varint$decode"],[238,59,174,70],[239,12,174,13,"i"],[239,13,174,14],[239,16,174,14,"_varint$decode2"],[239,31,174,14],[240,12,174,16,"length"],[240,18,174,22],[240,21,174,22,"_varint$decode2"],[240,36,174,22],[241,10,175,6,"offset"],[241,16,175,12],[241,20,175,16,"length"],[241,26,175,22],[242,10,176,6],[242,17,176,13,"i"],[242,18,176,14],[243,8,177,4],[243,9,177,5],[244,8,178,4],[244,12,178,8,"version"],[244,19,178,15],[244,22,178,18,"next"],[244,26,178,22],[244,27,178,23],[244,28,178,24],[245,8,179,4],[245,12,179,8,"codec"],[245,17,179,13],[245,20,179,16,"DAG_PB_CODE"],[245,31,179,27],[246,8,180,4],[246,12,180,8,"version"],[246,19,180,15],[246,24,180,20],[246,26,180,22],[246,28,180,24],[247,10,181,6,"version"],[247,17,181,13],[247,20,181,16],[247,21,181,17],[248,10,182,6,"offset"],[248,16,182,12],[248,19,182,15],[248,20,182,16],[249,8,183,4],[249,9,183,5],[249,15,183,11],[249,19,183,15,"version"],[249,26,183,22],[249,31,183,27],[249,32,183,28],[249,34,183,30],[250,10,184,6,"codec"],[250,15,184,11],[250,18,184,14,"next"],[250,22,184,18],[250,23,184,19],[250,24,184,20],[251,8,185,4],[252,8,186,4],[252,12,186,8,"version"],[252,19,186,15],[252,24,186,20],[252,25,186,21],[252,29,186,25,"version"],[252,36,186,32],[252,41,186,37],[252,42,186,38],[252,44,186,40],[253,10,187,6],[253,16,187,12],[253,20,187,16,"RangeError"],[253,30,187,26],[253,31,187,27],[253,54,187,51,"version"],[253,61,187,58],[253,63,187,61],[253,64,187,62],[254,8,188,4],[255,8,189,4],[255,12,189,10,"prefixSize"],[255,22,189,20],[255,25,189,23,"offset"],[255,31,189,29],[256,8,190,4],[256,12,190,10,"multihashCode"],[256,25,190,23],[256,28,190,26,"next"],[256,32,190,30],[256,33,190,31],[256,34,190,32],[257,8,191,4],[257,12,191,10,"digestSize"],[257,22,191,20],[257,25,191,23,"next"],[257,29,191,27],[257,30,191,28],[257,31,191,29],[258,8,192,4],[258,12,192,10,"size"],[258,16,192,14],[258,19,192,17,"offset"],[258,25,192,23],[258,28,192,26,"digestSize"],[258,38,192,36],[259,8,193,4],[259,12,193,10,"multihashSize"],[259,25,193,23],[259,28,193,26,"size"],[259,32,193,30],[259,35,193,33,"prefixSize"],[259,45,193,43],[260,8,194,4],[260,15,194,11],[261,10,195,6,"version"],[261,17,195,13],[262,10,196,6,"codec"],[262,15,196,11],[263,10,197,6,"multihashCode"],[263,23,197,19],[264,10,198,6,"digestSize"],[264,20,198,16],[265,10,199,6,"multihashSize"],[265,23,199,19],[266,10,200,6,"size"],[267,8,201,4],[267,9,201,5],[268,6,202,2],[269,4,202,3],[270,6,202,3,"key"],[270,9,202,3],[271,6,202,3,"value"],[271,11,202,3],[271,13,203,2],[271,22,203,9,"parse"],[271,27,203,14,"parse"],[271,28,203,15,"source"],[271,34,203,21],[271,36,203,23,"base"],[271,40,203,27],[271,42,203,29],[272,8,204,4],[272,12,204,4,"_parseCIDtoBytes"],[272,28,204,4],[272,31,204,28,"parseCIDtoBytes"],[272,46,204,43],[272,47,204,44,"source"],[272,53,204,50],[272,55,204,52,"base"],[272,59,204,56],[272,60,204,57],[273,10,204,57,"_parseCIDtoBytes2"],[273,27,204,57],[273,30,204,57,"_slicedToArray"],[273,44,204,57],[273,45,204,57,"_parseCIDtoBytes"],[273,61,204,57],[274,10,204,11,"prefix"],[274,16,204,17],[274,19,204,17,"_parseCIDtoBytes2"],[274,36,204,17],[275,10,204,19,"bytes"],[275,15,204,24],[275,18,204,24,"_parseCIDtoBytes2"],[275,35,204,24],[276,8,205,4],[276,12,205,10,"cid"],[276,15,205,13],[276,18,205,16,"CID"],[276,21,205,19],[276,22,205,20,"decode"],[276,28,205,26],[276,29,205,27,"bytes"],[276,34,205,32],[276,35,205,33],[277,8,206,4,"cid"],[277,11,206,7],[277,12,206,8,"_baseCache"],[277,22,206,18],[277,23,206,19,"set"],[277,26,206,22],[277,27,206,23,"prefix"],[277,33,206,29],[277,35,206,31,"source"],[277,41,206,37],[277,42,206,38],[278,8,207,4],[278,15,207,11,"cid"],[278,18,207,14],[279,6,208,2],[280,4,208,3],[281,2,208,3],[282,2,210,0],[282,6,210,6,"parseCIDtoBytes"],[282,21,210,21],[282,24,210,24,"parseCIDtoBytes"],[282,25,210,25,"source"],[282,31,210,31],[282,33,210,33,"base"],[282,37,210,37],[282,42,210,42],[283,4,211,2],[283,12,211,10,"source"],[283,18,211,16],[283,19,211,17],[283,20,211,18],[283,21,211,19],[284,6,212,2],[284,11,212,7],[284,14,212,10],[285,8,212,12],[286,10,213,6],[286,14,213,12,"decoder"],[286,21,213,19],[286,24,213,22,"base"],[286,28,213,26],[286,32,213,30,"base58"],[286,38,213,36],[286,39,213,37,"base58btc"],[286,48,213,46],[287,10,214,6],[287,17,214,13],[287,18,215,8,"base58"],[287,24,215,14],[287,25,215,15,"base58btc"],[287,34,215,24],[287,35,215,25,"prefix"],[287,41,215,31],[287,43,216,8,"decoder"],[287,50,216,15],[287,51,216,16,"decode"],[287,57,216,22],[287,58,216,23],[287,61,216,27,"base58"],[287,67,216,33],[287,68,216,34,"base58btc"],[287,77,216,43],[287,78,216,44,"prefix"],[287,84,216,50],[287,87,216,55,"source"],[287,93,216,61],[287,95,216,64],[287,96,216,65],[287,97,217,7],[288,8,218,4],[289,6,219,2],[289,11,219,7,"base58"],[289,17,219,13],[289,18,219,14,"base58btc"],[289,27,219,23],[289,28,219,24,"prefix"],[289,34,219,30],[290,8,219,32],[291,10,220,6],[291,14,220,12,"decoder"],[291,22,220,19],[291,25,220,22,"base"],[291,29,220,26],[291,33,220,30,"base58"],[291,39,220,36],[291,40,220,37,"base58btc"],[291,49,220,46],[292,10,221,6],[292,17,221,13],[292,18,222,8,"base58"],[292,24,222,14],[292,25,222,15,"base58btc"],[292,34,222,24],[292,35,222,25,"prefix"],[292,41,222,31],[292,43,223,8,"decoder"],[292,51,223,15],[292,52,223,16,"decode"],[292,58,223,22],[292,59,223,23,"source"],[292,65,223,29],[292,66,223,30],[292,67,224,7],[293,8,225,4],[294,6,226,2],[294,11,226,7,"base32"],[294,17,226,13],[294,18,226,14,"base32"],[294,24,226,20],[294,25,226,21,"prefix"],[294,31,226,27],[295,8,226,29],[296,10,227,6],[296,14,227,12,"decoder"],[296,23,227,19],[296,26,227,22,"base"],[296,30,227,26],[296,34,227,30,"base32"],[296,40,227,36],[296,41,227,37,"base32"],[296,47,227,43],[297,10,228,6],[297,17,228,13],[297,18,229,8,"base32"],[297,24,229,14],[297,25,229,15,"base32"],[297,31,229,21],[297,32,229,22,"prefix"],[297,38,229,28],[297,40,230,8,"decoder"],[297,49,230,15],[297,50,230,16,"decode"],[297,56,230,22],[297,57,230,23,"source"],[297,63,230,29],[297,64,230,30],[297,65,231,7],[298,8,232,4],[299,6,233,2],[300,8,233,11],[301,10,234,6],[301,14,234,10,"base"],[301,18,234,14],[301,22,234,18],[301,26,234,22],[301,28,234,24],[302,12,235,8],[302,18,235,14,"Error"],[302,23,235,19],[302,24,235,20],[302,105,235,101],[302,106,235,102],[303,10,236,6],[304,10,237,6],[304,17,237,13],[304,18,238,8,"source"],[304,24,238,14],[304,25,238,15],[304,26,238,16],[304,27,238,17],[304,29,239,8,"base"],[304,33,239,12],[304,34,239,13,"decode"],[304,40,239,19],[304,41,239,20,"source"],[304,47,239,26],[304,48,239,27],[304,49,240,7],[305,8,241,4],[306,4,242,2],[307,2,243,0],[307,3,243,1],[308,2,244,0],[308,6,244,6,"toStringV0"],[308,16,244,16],[308,19,244,19,"toStringV0"],[308,20,244,20,"bytes"],[308,25,244,25],[308,27,244,27,"cache"],[308,32,244,32],[308,34,244,34,"base"],[308,38,244,38],[308,43,244,43],[309,4,245,2],[309,8,245,9,"prefix"],[309,14,245,15],[309,17,245,19,"base"],[309,21,245,23],[309,22,245,9,"prefix"],[309,28,245,15],[310,4,246,2],[310,8,246,6,"prefix"],[310,14,246,12],[310,19,246,17,"base58"],[310,25,246,23],[310,26,246,24,"base58btc"],[310,35,246,33],[310,36,246,34,"prefix"],[310,42,246,40],[310,44,246,42],[311,6,247,4],[311,12,247,10,"Error"],[311,17,247,15],[311,18,247,16],[311,48,247,47,"base"],[311,52,247,51],[311,53,247,52,"name"],[311,57,247,56],[311,68,247,68],[311,69,247,69],[312,4,248,2],[313,4,249,2],[313,8,249,8,"cid"],[313,11,249,11],[313,14,249,14,"cache"],[313,19,249,19],[313,20,249,20,"get"],[313,23,249,23],[313,24,249,24,"prefix"],[313,30,249,30],[313,31,249,31],[314,4,250,2],[314,8,250,6,"cid"],[314,11,250,9],[314,15,250,13],[314,19,250,17],[314,21,250,19],[315,6,251,4],[315,10,251,10,"cid"],[315,14,251,13],[315,17,251,16,"base"],[315,21,251,20],[315,22,251,21,"encode"],[315,28,251,27],[315,29,251,28,"bytes"],[315,34,251,33],[315,35,251,34],[315,36,251,35,"slice"],[315,41,251,40],[315,42,251,41],[315,43,251,42],[315,44,251,43],[316,6,252,4,"cache"],[316,11,252,9],[316,12,252,10,"set"],[316,15,252,13],[316,16,252,14,"prefix"],[316,22,252,20],[316,24,252,22,"cid"],[316,28,252,25],[316,29,252,26],[317,6,253,4],[317,13,253,11,"cid"],[317,17,253,14],[318,4,254,2],[318,5,254,3],[318,11,254,9],[319,6,255,4],[319,13,255,11,"cid"],[319,16,255,14],[320,4,256,2],[321,2,257,0],[321,3,257,1],[322,2,258,0],[322,6,258,6,"toStringV1"],[322,16,258,16],[322,19,258,19,"toStringV1"],[322,20,258,20,"bytes"],[322,25,258,25],[322,27,258,27,"cache"],[322,32,258,32],[322,34,258,34,"base"],[322,38,258,38],[322,43,258,43],[323,4,259,2],[323,8,259,9,"prefix"],[323,14,259,15],[323,17,259,19,"base"],[323,21,259,23],[323,22,259,9,"prefix"],[323,28,259,15],[324,4,260,2],[324,8,260,8,"cid"],[324,11,260,11],[324,14,260,14,"cache"],[324,19,260,19],[324,20,260,20,"get"],[324,23,260,23],[324,24,260,24,"prefix"],[324,30,260,30],[324,31,260,31],[325,4,261,2],[325,8,261,6,"cid"],[325,11,261,9],[325,15,261,13],[325,19,261,17],[325,21,261,19],[326,6,262,4],[326,10,262,10,"cid"],[326,15,262,13],[326,18,262,16,"base"],[326,22,262,20],[326,23,262,21,"encode"],[326,29,262,27],[326,30,262,28,"bytes"],[326,35,262,33],[326,36,262,34],[327,6,263,4,"cache"],[327,11,263,9],[327,12,263,10,"set"],[327,15,263,13],[327,16,263,14,"prefix"],[327,22,263,20],[327,24,263,22,"cid"],[327,29,263,25],[327,30,263,26],[328,6,264,4],[328,13,264,11,"cid"],[328,18,264,14],[329,4,265,2],[329,5,265,3],[329,11,265,9],[330,6,266,4],[330,13,266,11,"cid"],[330,16,266,14],[331,4,267,2],[332,2,268,0],[332,3,268,1],[333,2,269,0],[333,6,269,6,"DAG_PB_CODE"],[333,17,269,17],[333,20,269,20],[333,23,269,23],[334,2,270,0],[334,6,270,6,"SHA_256_CODE"],[334,18,270,18],[334,21,270,21],[334,23,270,23],[335,2,271,0],[335,6,271,6,"encodeCID"],[335,15,271,15],[335,18,271,18,"encodeCID"],[335,19,271,19,"version"],[335,26,271,26],[335,28,271,28,"code"],[335,32,271,32],[335,34,271,34,"multihash"],[335,43,271,43],[335,48,271,48],[336,4,272,2],[336,8,272,8,"codeOffset"],[336,18,272,18],[336,21,272,21,"varint"],[336,27,272,27],[336,28,272,28,"encodingLength"],[336,42,272,42],[336,43,272,43,"version"],[336,50,272,50],[336,51,272,51],[337,4,273,2],[337,8,273,8,"hashOffset"],[337,18,273,18],[337,21,273,21,"codeOffset"],[337,31,273,31],[337,34,273,34,"varint"],[337,40,273,40],[337,41,273,41,"encodingLength"],[337,55,273,55],[337,56,273,56,"code"],[337,60,273,60],[337,61,273,61],[338,4,274,2],[338,8,274,8,"bytes"],[338,13,274,13],[338,16,274,16],[338,20,274,20,"Uint8Array"],[338,30,274,30],[338,31,274,31,"hashOffset"],[338,41,274,41],[338,44,274,44,"multihash"],[338,53,274,53],[338,54,274,54,"byteLength"],[338,64,274,64],[338,65,274,65],[339,4,275,2,"varint"],[339,10,275,8],[339,11,275,9,"encodeTo"],[339,19,275,17],[339,20,275,18,"version"],[339,27,275,25],[339,29,275,27,"bytes"],[339,34,275,32],[339,36,275,34],[339,37,275,35],[339,38,275,36],[340,4,276,2,"varint"],[340,10,276,8],[340,11,276,9,"encodeTo"],[340,19,276,17],[340,20,276,18,"code"],[340,24,276,22],[340,26,276,24,"bytes"],[340,31,276,29],[340,33,276,31,"codeOffset"],[340,43,276,41],[340,44,276,42],[341,4,277,2,"bytes"],[341,9,277,7],[341,10,277,8,"set"],[341,13,277,11],[341,14,277,12,"multihash"],[341,23,277,21],[341,25,277,23,"hashOffset"],[341,35,277,33],[341,36,277,34],[342,4,278,2],[342,11,278,9,"bytes"],[342,16,278,14],[343,2,279,0],[343,3,279,1],[344,2,280,0],[344,6,280,6,"cidSymbol"],[344,15,280,15],[344,18,280,18,"Symbol"],[344,24,280,24],[344,25,280,25,"for"],[344,28,280,28],[344,29,280,29],[344,47,280,47],[344,48,280,48],[345,2,281,0],[345,6,281,6,"readonly"],[345,14,281,14],[345,17,281,17],[346,4,282,2,"writable"],[346,12,282,10],[346,14,282,12],[346,19,282,17],[347,4,283,2,"configurable"],[347,16,283,14],[347,18,283,16],[347,23,283,21],[348,4,284,2,"enumerable"],[348,14,284,12],[348,16,284,14],[349,2,285,0],[349,3,285,1],[350,2,286,0],[350,6,286,6,"hidden"],[350,12,286,12],[350,15,286,15],[351,4,287,2,"writable"],[351,12,287,10],[351,14,287,12],[351,19,287,17],[352,4,288,2,"enumerable"],[352,14,288,12],[352,16,288,14],[352,21,288,19],[353,4,289,2,"configurable"],[353,16,289,14],[353,18,289,16],[354,2,290,0],[354,3,290,1],[355,2,291,0],[355,6,291,6,"version"],[355,13,291,13],[355,16,291,16],[355,27,291,27],[356,2,292,0],[356,6,292,6,"deprecate"],[356,15,292,15],[356,18,292,18,"deprecate"],[356,19,292,19,"range"],[356,24,292,24],[356,26,292,26,"message"],[356,33,292,33],[356,38,292,38],[357,4,293,2],[357,8,293,6,"range"],[357,13,293,11],[357,14,293,12,"test"],[357,18,293,16],[357,19,293,17,"version"],[357,26,293,24],[357,27,293,25],[357,29,293,27],[358,6,294,4,"console"],[358,13,294,11],[358,14,294,12,"warn"],[358,18,294,16],[358,19,294,17,"message"],[358,26,294,24],[358,27,294,25],[359,4,295,2],[359,5,295,3],[359,11,295,9],[360,6,296,4],[360,12,296,10],[360,16,296,14,"Error"],[360,21,296,19],[360,22,296,20,"message"],[360,29,296,27],[360,30,296,28],[361,4,297,2],[362,2,298,0],[362,3,298,1],[363,2,299,0],[363,6,299,6,"IS_CID_DEPRECATION"],[363,24,299,24],[363,27,299,27],[364,0,300,0],[365,0,301,0],[366,0,302,0],[367,0,303,0],[368,0,304,0],[369,0,305,0],[370,0,306,0],[371,0,307,0],[372,0,308,0],[373,0,309,0],[374,0,310,0],[375,0,311,0],[376,0,312,0],[377,0,313,0],[377,1,313,1],[378,2,315,0,"exports"],[378,9,315,7],[378,10,315,8,"CID"],[378,13,315,11],[378,16,315,14,"CID"],[378,19,315,17],[379,0,315,18],[379,3]],"functionMap":{"names":["<global>","CID","CID#constructor","CID#toV0","CID#toV1","CID#equals","CID#toString","CID#toJSON","CID#get__@@toStringTag","CID#@@_for","CID.isCID","CID#get__toBaseEncodedString","CID#get__codec","CID#get__buffer","CID#get__multibaseName","CID#get__prefix","CID.asCID","CID.create","CID.createV0","CID.createV1","CID.decode","CID.decodeFirst","CID.inspectBytes","next","CID.parse","parseCIDtoBytes","toStringV0","toStringV1","encodeCID","deprecate"],"mappings":"AAA;ACU;ECC;GDmB;EEC;GFgB;EGC;GHc;EIC;GJE;EKC;GLQ;EMC;GNM;EOC;GPE;EQC;GRE;ESC;GTG;EUC;GVE;EWC;GXE;EYC;GZE;EaC;GbE;EcC;GdE;EeC;Gfa;EgBC;GhBoB;EiBC;GjBE;EkBC;GlBE;EmBC;GnBM;EoBC;GpBc;EqBC;iBCE;KDI;GrByB;EuBC;GvBK;CDC;wByBC;CzBiC;mB0BC;C1Ba;mB2BC;C3BU;kB4BG;C5BQ;kB6Ba;C7BM"}},"type":"js/module"}]}