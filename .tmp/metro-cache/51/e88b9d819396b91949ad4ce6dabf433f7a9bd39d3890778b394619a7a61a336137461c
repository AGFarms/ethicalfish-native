{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":21,"column":0,"index":438}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"./hasher.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":13,"index":92},"end":{"line":5,"column":35,"index":114}}],"key":"SO7m4HFzCCBClTquTxxvFkYz8e8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var hasher = require(_dependencyMap[1], \"./hasher.js\");\n  var sha = name => (/*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (data) {\n      return new Uint8Array(yield crypto.subtle.digest(name, data));\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  var sha256 = hasher.from({\n    name: 'sha2-256',\n    code: 18,\n    encode: sha('SHA-256')\n  });\n  var sha512 = hasher.from({\n    name: 'sha2-512',\n    code: 19,\n    encode: sha('SHA-512')\n  });\n  exports.sha256 = sha256;\n  exports.sha512 = sha512;\n});","lineCount":29,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,5,0],[8,6,5,4,"hasher"],[8,12,5,10],[8,15,5,13,"require"],[8,22,5,20],[8,23,5,20,"_dependencyMap"],[8,37,5,20],[8,55,5,34],[8,56,5,35],[9,2,7,0],[9,6,7,6,"sha"],[9,9,7,9],[9,12,7,12,"name"],[9,16,7,16],[10,4,7,16],[10,8,7,16,"_ref"],[10,12,7,16],[10,15,7,16,"_asyncToGenerator"],[10,32,7,16],[10,33,7,20],[10,44,7,26,"data"],[10,48,7,30],[11,6,7,30],[11,13,7,34],[11,17,7,38,"Uint8Array"],[11,27,7,48],[11,34,7,55,"crypto"],[11,40,7,61],[11,41,7,62,"subtle"],[11,47,7,68],[11,48,7,69,"digest"],[11,54,7,75],[11,55,7,76,"name"],[11,59,7,80],[11,61,7,82,"data"],[11,65,7,86],[11,66,7,87],[11,67,7,88],[12,4,7,88],[13,4,7,88],[13,21,7,88,"_x"],[13,23,7,88],[14,6,7,88],[14,13,7,88,"_ref"],[14,17,7,88],[14,18,7,88,"apply"],[14,23,7,88],[14,30,7,88,"arguments"],[14,39,7,88],[15,4,7,88],[16,2,7,88],[17,2,8,0],[17,6,8,6,"sha256"],[17,12,8,12],[17,15,8,15,"hasher"],[17,21,8,21],[17,22,8,22,"from"],[17,26,8,26],[17,27,8,27],[18,4,9,2,"name"],[18,8,9,6],[18,10,9,8],[18,20,9,18],[19,4,10,2,"code"],[19,8,10,6],[19,10,10,8],[19,12,10,10],[20,4,11,2,"encode"],[20,10,11,8],[20,12,11,10,"sha"],[20,15,11,13],[20,16,11,14],[20,25,11,23],[21,2,12,0],[21,3,12,1],[21,4,12,2],[22,2,13,0],[22,6,13,6,"sha512"],[22,12,13,12],[22,15,13,15,"hasher"],[22,21,13,21],[22,22,13,22,"from"],[22,26,13,26],[22,27,13,27],[23,4,14,2,"name"],[23,8,14,6],[23,10,14,8],[23,20,14,18],[24,4,15,2,"code"],[24,8,15,6],[24,10,15,8],[24,12,15,10],[25,4,16,2,"encode"],[25,10,16,8],[25,12,16,10,"sha"],[25,15,16,13],[25,16,16,14],[25,25,16,23],[26,2,17,0],[26,3,17,1],[26,4,17,2],[27,2,19,0,"exports"],[27,9,19,7],[27,10,19,8,"sha256"],[27,16,19,14],[27,19,19,17,"sha256"],[27,25,19,23],[28,2,20,0,"exports"],[28,9,20,7],[28,10,20,8,"sha512"],[28,16,20,14],[28,19,20,17,"sha512"],[28,25,20,23],[29,0,20,24],[29,3]],"functionMap":{"names":["<global>","sha","<anonymous>"],"mappings":"AAA;YCM,QC,oEF"}},"type":"js/module"}]}