{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":151,"column":36,"index":6139}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":151,"column":36,"index":6139}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":151,"column":36,"index":6139}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"../../errors/node.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":18,"index":165},"end":{"line":5,"column":49,"index":196}}],"key":"F/L+jwjxi/2PistW8zqeXUtyQUU="}},{"name":"../../errors/rpc.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":17,"index":215},"end":{"line":6,"column":47,"index":245}}],"key":"feg60odpqK3ag4zPeI/qr1XZUNA="}},{"name":"../../utils/wait.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":18,"index":265},"end":{"line":7,"column":48,"index":295}}],"key":"buTMAwY02bIqrRzPKVTxRf5fMDM="}},{"name":"./createTransport.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":29,"index":326},"end":{"line":8,"column":60,"index":357}}],"key":"zr7a0xQkLAysUze0H3cD5eiTvKk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _asyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _objectWithoutProperties = require(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _excluded = [\"chain\", \"pollingInterval\", \"timeout\"];\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fallback = fallback;\n  exports.rankTransports = rankTransports;\n  var node_js_1 = require(_dependencyMap[3], \"../../errors/node.js\");\n  var rpc_js_1 = require(_dependencyMap[4], \"../../errors/rpc.js\");\n  var wait_js_1 = require(_dependencyMap[5], \"../../utils/wait.js\");\n  var createTransport_js_1 = require(_dependencyMap[6], \"./createTransport.js\");\n  function fallback(transports_) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _config$key = config.key,\n      key = _config$key === void 0 ? 'fallback' : _config$key,\n      _config$name = config.name,\n      name = _config$name === void 0 ? 'Fallback' : _config$name,\n      _config$rank = config.rank,\n      rank = _config$rank === void 0 ? false : _config$rank,\n      retryCount = config.retryCount,\n      retryDelay = config.retryDelay;\n    return _ref => {\n      var chain = _ref.chain,\n        _ref$pollingInterval = _ref.pollingInterval,\n        pollingInterval = _ref$pollingInterval === void 0 ? 4_000 : _ref$pollingInterval,\n        timeout = _ref.timeout,\n        rest = _objectWithoutProperties(_ref, _excluded);\n      var transports = transports_;\n      var onResponse = () => {};\n      var transport = (0, createTransport_js_1.createTransport)({\n        key,\n        name,\n        request(_ref2) {\n          return _asyncToGenerator(function* () {\n            var method = _ref2.method,\n              params = _ref2.params;\n            var includes;\n            var _fetch = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator(function* () {\n                var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var transport = transports[i]({\n                  ...rest,\n                  chain,\n                  retryCount: 0,\n                  timeout\n                });\n                try {\n                  var response = yield transport.request({\n                    method,\n                    params\n                  });\n                  onResponse({\n                    method,\n                    params: params,\n                    response,\n                    transport,\n                    status: 'success'\n                  });\n                  return response;\n                } catch (err) {\n                  onResponse({\n                    error: err,\n                    method,\n                    params: params,\n                    transport,\n                    status: 'error'\n                  });\n                  if (shouldThrow(err)) throw err;\n                  if (i === transports.length - 1) throw err;\n                  includes ??= transports.slice(i + 1).some(transport => {\n                    var _ref4 = transport({\n                        chain\n                      }).config.methods || {},\n                      include = _ref4.include,\n                      exclude = _ref4.exclude;\n                    if (include) return include.includes(method);\n                    if (exclude) return !exclude.includes(method);\n                    return true;\n                  });\n                  if (!includes) throw err;\n                  return _fetch(i + 1);\n                }\n              });\n              return function fetch() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n            return _fetch();\n          })();\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback'\n      }, {\n        onResponse: fn => onResponse = fn,\n        transports: transports.map(fn => fn({\n          chain,\n          retryCount: 0\n        }))\n      });\n      if (rank) {\n        var rankOptions = typeof rank === 'object' ? rank : {};\n        rankTransports({\n          chain,\n          interval: rankOptions.interval ?? pollingInterval,\n          onTransports: transports_ => transports = transports_,\n          ping: rankOptions.ping,\n          sampleCount: rankOptions.sampleCount,\n          timeout: rankOptions.timeout,\n          transports,\n          weights: rankOptions.weights\n        });\n      }\n      return transport;\n    };\n  }\n  function shouldThrow(error) {\n    if ('code' in error && typeof error.code === 'number') {\n      if (error.code === rpc_js_1.TransactionRejectedRpcError.code || error.code === rpc_js_1.UserRejectedRequestError.code || node_js_1.ExecutionRevertedError.nodeMessage.test(error.message) || error.code === 5000) return true;\n    }\n    return false;\n  }\n  function rankTransports(_ref5) {\n    var chain = _ref5.chain,\n      _ref5$interval = _ref5.interval,\n      interval = _ref5$interval === void 0 ? 4_000 : _ref5$interval,\n      onTransports = _ref5.onTransports,\n      ping = _ref5.ping,\n      _ref5$sampleCount = _ref5.sampleCount,\n      sampleCount = _ref5$sampleCount === void 0 ? 10 : _ref5$sampleCount,\n      _ref5$timeout = _ref5.timeout,\n      timeout = _ref5$timeout === void 0 ? 1_000 : _ref5$timeout,\n      transports = _ref5.transports,\n      _ref5$weights = _ref5.weights,\n      weights = _ref5$weights === void 0 ? {} : _ref5$weights;\n    var _weights$stability = weights.stability,\n      stabilityWeight = _weights$stability === void 0 ? 0.7 : _weights$stability,\n      _weights$latency = weights.latency,\n      latencyWeight = _weights$latency === void 0 ? 0.3 : _weights$latency;\n    var samples = [];\n    var _rankTransports_ = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* () {\n        var sample = yield Promise.all(transports.map(/*#__PURE__*/function () {\n          var _ref7 = _asyncToGenerator(function* (transport) {\n            var transport_ = transport({\n              chain,\n              retryCount: 0,\n              timeout\n            });\n            var start = Date.now();\n            var end;\n            var success;\n            try {\n              yield ping ? ping({\n                transport: transport_\n              }) : transport_.request({\n                method: 'net_listening'\n              });\n              success = 1;\n            } catch {\n              success = 0;\n            } finally {\n              end = Date.now();\n            }\n            var latency = end - start;\n            return {\n              latency,\n              success\n            };\n          });\n          return function (_x) {\n            return _ref7.apply(this, arguments);\n          };\n        }()));\n        samples.push(sample);\n        if (samples.length > sampleCount) samples.shift();\n        var maxLatency = Math.max(...samples.map(sample => Math.max(...sample.map(_ref8 => {\n          var latency = _ref8.latency;\n          return latency;\n        }))));\n        var scores = transports.map((_, i) => {\n          var latencies = samples.map(sample => sample[i].latency);\n          var meanLatency = latencies.reduce((acc, latency) => acc + latency, 0) / latencies.length;\n          var latencyScore = 1 - meanLatency / maxLatency;\n          var successes = samples.map(sample => sample[i].success);\n          var stabilityScore = successes.reduce((acc, success) => acc + success, 0) / successes.length;\n          if (stabilityScore === 0) return [0, i];\n          return [latencyWeight * latencyScore + stabilityWeight * stabilityScore, i];\n        }).sort((a, b) => b[0] - a[0]);\n        onTransports(scores.map(_ref9 => {\n          var _ref10 = _slicedToArray(_ref9, 2),\n            i = _ref10[1];\n          return transports[i];\n        }));\n        yield (0, wait_js_1.wait)(interval);\n        _rankTransports_();\n      });\n      return function rankTransports_() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    _rankTransports_();\n  }\n});","lineCount":209,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_asyncToGenerator"],[5,23,1,13],[5,26,1,13,"require"],[5,33,1,13],[5,34,1,13,"_dependencyMap"],[5,48,1,13],[6,2,1,13],[6,6,1,13,"_objectWithoutProperties"],[6,30,1,13],[6,33,1,13,"require"],[6,40,1,13],[6,41,1,13,"_dependencyMap"],[6,55,1,13],[7,2,1,13],[7,6,1,13,"_excluded"],[7,15,1,13],[8,2,2,0,"Object"],[8,8,2,6],[8,9,2,7,"defineProperty"],[8,23,2,21],[8,24,2,22,"exports"],[8,31,2,29],[8,33,2,31],[8,45,2,43],[8,47,2,45],[9,4,2,47,"value"],[9,9,2,52],[9,11,2,54],[10,2,2,59],[10,3,2,60],[10,4,2,61],[11,2,3,0,"exports"],[11,9,3,7],[11,10,3,8,"fallback"],[11,18,3,16],[11,21,3,19,"fallback"],[11,29,3,27],[12,2,4,0,"exports"],[12,9,4,7],[12,10,4,8,"rankTransports"],[12,24,4,22],[12,27,4,25,"rankTransports"],[12,41,4,39],[13,2,5,0],[13,6,5,6,"node_js_1"],[13,15,5,15],[13,18,5,18,"require"],[13,25,5,25],[13,26,5,25,"_dependencyMap"],[13,40,5,25],[13,67,5,48],[13,68,5,49],[14,2,6,0],[14,6,6,6,"rpc_js_1"],[14,14,6,14],[14,17,6,17,"require"],[14,24,6,24],[14,25,6,24,"_dependencyMap"],[14,39,6,24],[14,65,6,46],[14,66,6,47],[15,2,7,0],[15,6,7,6,"wait_js_1"],[15,15,7,15],[15,18,7,18,"require"],[15,25,7,25],[15,26,7,25,"_dependencyMap"],[15,40,7,25],[15,66,7,47],[15,67,7,48],[16,2,8,0],[16,6,8,6,"createTransport_js_1"],[16,26,8,26],[16,29,8,29,"require"],[16,36,8,36],[16,37,8,36,"_dependencyMap"],[16,51,8,36],[16,78,8,59],[16,79,8,60],[17,2,9,0],[17,11,9,9,"fallback"],[17,19,9,17,"fallback"],[17,20,9,18,"transports_"],[17,31,9,29],[17,33,9,44],[18,4,9,44],[18,8,9,31,"config"],[18,14,9,37],[18,17,9,37,"arguments"],[18,26,9,37],[18,27,9,37,"length"],[18,33,9,37],[18,41,9,37,"arguments"],[18,50,9,37],[18,58,9,37,"undefined"],[18,67,9,37],[18,70,9,37,"arguments"],[18,79,9,37],[18,85,9,40],[18,86,9,41],[18,87,9,42],[19,4,10,4],[19,8,10,4,"_config$key"],[19,19,10,4],[19,22,10,91,"config"],[19,28,10,97],[19,29,10,12,"key"],[19,32,10,15],[20,6,10,12,"key"],[20,9,10,15],[20,12,10,15,"_config$key"],[20,23,10,15],[20,37,10,18],[20,47,10,28],[20,50,10,28,"_config$key"],[20,61,10,28],[21,6,10,28,"_config$name"],[21,18,10,28],[21,21,10,91,"config"],[21,27,10,97],[21,28,10,30,"name"],[21,32,10,34],[22,6,10,30,"name"],[22,10,10,34],[22,13,10,34,"_config$name"],[22,25,10,34],[22,39,10,37],[22,49,10,47],[22,52,10,47,"_config$name"],[22,64,10,47],[23,6,10,47,"_config$rank"],[23,18,10,47],[23,21,10,91,"config"],[23,27,10,97],[23,28,10,49,"rank"],[23,32,10,53],[24,6,10,49,"rank"],[24,10,10,53],[24,13,10,53,"_config$rank"],[24,25,10,53],[24,39,10,56],[24,44,10,61],[24,47,10,61,"_config$rank"],[24,59,10,61],[25,6,10,63,"retryCount"],[25,16,10,73],[25,19,10,91,"config"],[25,25,10,97],[25,26,10,63,"retryCount"],[25,36,10,73],[26,6,10,75,"retryDelay"],[26,16,10,85],[26,19,10,91,"config"],[26,25,10,97],[26,26,10,75,"retryDelay"],[26,36,10,85],[27,4,11,4],[27,11,11,12,"_ref"],[27,15,11,12],[27,19,11,70],[28,6,11,70],[28,10,11,15,"chain"],[28,15,11,20],[28,18,11,20,"_ref"],[28,22,11,20],[28,23,11,15,"chain"],[28,28,11,20],[29,8,11,20,"_ref$pollingInterval"],[29,28,11,20],[29,31,11,20,"_ref"],[29,35,11,20],[29,36,11,22,"pollingInterval"],[29,51,11,37],[30,8,11,22,"pollingInterval"],[30,23,11,37],[30,26,11,37,"_ref$pollingInterval"],[30,46,11,37],[30,60,11,40],[30,65,11,45],[30,68,11,45,"_ref$pollingInterval"],[30,88,11,45],[31,8,11,47,"timeout"],[31,15,11,54],[31,18,11,54,"_ref"],[31,22,11,54],[31,23,11,47,"timeout"],[31,30,11,54],[32,8,11,59,"rest"],[32,12,11,63],[32,15,11,63,"_objectWithoutProperties"],[32,39,11,63],[32,40,11,63,"_ref"],[32,44,11,63],[32,46,11,63,"_excluded"],[32,55,11,63],[33,6,12,8],[33,10,12,12,"transports"],[33,20,12,22],[33,23,12,25,"transports_"],[33,34,12,36],[34,6,13,8],[34,10,13,12,"onResponse"],[34,20,13,22],[34,23,13,25,"onResponse"],[34,24,13,25],[34,29,13,31],[34,30,13,33],[34,31,13,34],[35,6,14,8],[35,10,14,14,"transport"],[35,19,14,23],[35,22,14,26],[35,23,14,27],[35,24,14,28],[35,26,14,30,"createTransport_js_1"],[35,46,14,50],[35,47,14,51,"createTransport"],[35,62,14,66],[35,64,14,68],[36,8,15,12,"key"],[36,11,15,15],[37,8,16,12,"name"],[37,12,16,16],[38,8,17,18,"request"],[38,15,17,25,"request"],[38,16,17,25,"_ref2"],[38,21,17,25],[38,23,17,46],[39,10,17,46],[39,17,17,46,"_asyncToGenerator"],[39,34,17,46],[40,12,17,46],[40,16,17,28,"method"],[40,22,17,34],[40,25,17,34,"_ref2"],[40,30,17,34],[40,31,17,28,"method"],[40,37,17,34],[41,14,17,36,"params"],[41,20,17,42],[41,23,17,42,"_ref2"],[41,28,17,42],[41,29,17,36,"params"],[41,35,17,42],[42,12,18,16],[42,16,18,20,"includes"],[42,24,18,28],[43,12,19,16],[43,16,19,22,"fetch"],[43,22,19,27],[44,14,19,27],[44,18,19,27,"_ref3"],[44,23,19,27],[44,26,19,27,"_asyncToGenerator"],[44,43,19,27],[44,44,19,30],[44,57,19,47],[45,16,19,47],[45,20,19,37,"i"],[45,21,19,38],[45,24,19,38,"arguments"],[45,33,19,38],[45,34,19,38,"length"],[45,40,19,38],[45,48,19,38,"arguments"],[45,57,19,38],[45,65,19,38,"undefined"],[45,74,19,38],[45,77,19,38,"arguments"],[45,86,19,38],[45,92,19,41],[45,93,19,42],[46,16,20,20],[46,20,20,26,"transport"],[46,29,20,35],[46,32,20,38,"transports"],[46,42,20,48],[46,43,20,49,"i"],[46,44,20,50],[46,45,20,51],[46,46,20,52],[47,18,21,24],[47,21,21,27,"rest"],[47,25,21,31],[48,18,22,24,"chain"],[48,23,22,29],[49,18,23,24,"retryCount"],[49,28,23,34],[49,30,23,36],[49,31,23,37],[50,18,24,24,"timeout"],[51,16,25,20],[51,17,25,21],[51,18,25,22],[52,16,26,20],[52,20,26,24],[53,18,27,24],[53,22,27,30,"response"],[53,30,27,38],[53,39,27,47,"transport"],[53,48,27,56],[53,49,27,57,"request"],[53,56,27,64],[53,57,27,65],[54,20,28,28,"method"],[54,26,28,34],[55,20,29,28,"params"],[56,18,30,24],[56,19,30,25],[56,20,30,26],[57,18,31,24,"onResponse"],[57,28,31,34],[57,29,31,35],[58,20,32,28,"method"],[58,26,32,34],[59,20,33,28,"params"],[59,26,33,34],[59,28,33,36,"params"],[59,34,33,42],[60,20,34,28,"response"],[60,28,34,36],[61,20,35,28,"transport"],[61,29,35,37],[62,20,36,28,"status"],[62,26,36,34],[62,28,36,36],[63,18,37,24],[63,19,37,25],[63,20,37,26],[64,18,38,24],[64,25,38,31,"response"],[64,33,38,39],[65,16,39,20],[65,17,39,21],[65,18,40,20],[65,25,40,27,"err"],[65,28,40,30],[65,30,40,32],[66,18,41,24,"onResponse"],[66,28,41,34],[66,29,41,35],[67,20,42,28,"error"],[67,25,42,33],[67,27,42,35,"err"],[67,30,42,38],[68,20,43,28,"method"],[68,26,43,34],[69,20,44,28,"params"],[69,26,44,34],[69,28,44,36,"params"],[69,34,44,42],[70,20,45,28,"transport"],[70,29,45,37],[71,20,46,28,"status"],[71,26,46,34],[71,28,46,36],[72,18,47,24],[72,19,47,25],[72,20,47,26],[73,18,48,24],[73,22,48,28,"shouldThrow"],[73,33,48,39],[73,34,48,40,"err"],[73,37,48,43],[73,38,48,44],[73,40,49,28],[73,46,49,34,"err"],[73,49,49,37],[74,18,50,24],[74,22,50,28,"i"],[74,23,50,29],[74,28,50,34,"transports"],[74,38,50,44],[74,39,50,45,"length"],[74,45,50,51],[74,48,50,54],[74,49,50,55],[74,51,51,28],[74,57,51,34,"err"],[74,60,51,37],[75,18,52,24,"includes"],[75,26,52,32],[75,31,52,37,"transports"],[75,41,52,47],[75,42,52,48,"slice"],[75,47,52,53],[75,48,52,54,"i"],[75,49,52,55],[75,52,52,58],[75,53,52,59],[75,54,52,60],[75,55,52,61,"some"],[75,59,52,65],[75,60,52,67,"transport"],[75,69,52,76],[75,73,52,81],[76,20,53,28],[76,24,53,28,"_ref4"],[76,29,53,28],[76,32,53,57,"transport"],[76,41,53,66],[76,42,53,67],[77,24,53,69,"chain"],[78,22,53,75],[78,23,53,76],[78,24,53,77],[78,25,53,78,"config"],[78,31,53,84],[78,32,53,85,"methods"],[78,39,53,92],[78,43,53,96],[78,44,53,97],[78,45,53,98],[79,22,53,36,"include"],[79,29,53,43],[79,32,53,43,"_ref4"],[79,37,53,43],[79,38,53,36,"include"],[79,45,53,43],[80,22,53,45,"exclude"],[80,29,53,52],[80,32,53,52,"_ref4"],[80,37,53,52],[80,38,53,45,"exclude"],[80,45,53,52],[81,20,54,28],[81,24,54,32,"include"],[81,31,54,39],[81,33,55,32],[81,40,55,39,"include"],[81,47,55,46],[81,48,55,47,"includes"],[81,56,55,55],[81,57,55,56,"method"],[81,63,55,62],[81,64,55,63],[82,20,56,28],[82,24,56,32,"exclude"],[82,31,56,39],[82,33,57,32],[82,40,57,39],[82,41,57,40,"exclude"],[82,48,57,47],[82,49,57,48,"includes"],[82,57,57,56],[82,58,57,57,"method"],[82,64,57,63],[82,65,57,64],[83,20,58,28],[83,27,58,35],[83,31,58,39],[84,18,59,24],[84,19,59,25],[84,20,59,26],[85,18,60,24],[85,22,60,28],[85,23,60,29,"includes"],[85,31,60,37],[85,33,61,28],[85,39,61,34,"err"],[85,42,61,37],[86,18,62,24],[86,25,62,31,"fetch"],[86,31,62,36],[86,32,62,37,"i"],[86,33,62,38],[86,36,62,41],[86,37,62,42],[86,38,62,43],[87,16,63,20],[88,14,64,16],[88,15,64,17],[89,14,64,17],[89,30,19,22,"fetch"],[89,35,19,27,"fetch"],[89,36,19,27],[90,16,19,27],[90,23,19,27,"_ref3"],[90,28,19,27],[90,29,19,27,"apply"],[90,34,19,27],[90,41,19,27,"arguments"],[90,50,19,27],[91,14,19,27],[92,12,19,27],[92,15,64,17],[93,12,65,16],[93,19,65,23,"fetch"],[93,25,65,28],[93,26,65,29],[93,27,65,30],[94,10,65,31],[95,8,66,12],[95,9,66,13],[96,8,67,12,"retryCount"],[96,18,67,22],[97,8,68,12,"retryDelay"],[97,18,68,22],[98,8,69,12,"type"],[98,12,69,16],[98,14,69,18],[99,6,70,8],[99,7,70,9],[99,9,70,11],[100,8,71,12,"onResponse"],[100,18,71,22],[100,20,71,25,"fn"],[100,22,71,27],[100,26,71,33,"onResponse"],[100,36,71,43],[100,39,71,46,"fn"],[100,41,71,49],[101,8,72,12,"transports"],[101,18,72,22],[101,20,72,24,"transports"],[101,30,72,34],[101,31,72,35,"map"],[101,34,72,38],[101,35,72,40,"fn"],[101,37,72,42],[101,41,72,47,"fn"],[101,43,72,49],[101,44,72,50],[102,10,72,52,"chain"],[102,15,72,57],[103,10,72,59,"retryCount"],[103,20,72,69],[103,22,72,71],[104,8,72,73],[104,9,72,74],[104,10,72,75],[105,6,73,8],[105,7,73,9],[105,8,73,10],[106,6,74,8],[106,10,74,12,"rank"],[106,14,74,16],[106,16,74,18],[107,8,75,12],[107,12,75,18,"rankOptions"],[107,23,75,29],[107,26,75,33],[107,33,75,40,"rank"],[107,37,75,44],[107,42,75,49],[107,50,75,57],[107,53,75,60,"rank"],[107,57,75,64],[107,60,75,67],[107,61,75,68],[107,62,75,70],[108,8,76,12,"rankTransports"],[108,22,76,26],[108,23,76,27],[109,10,77,16,"chain"],[109,15,77,21],[110,10,78,16,"interval"],[110,18,78,24],[110,20,78,26,"rankOptions"],[110,31,78,37],[110,32,78,38,"interval"],[110,40,78,46],[110,44,78,50,"pollingInterval"],[110,59,78,65],[111,10,79,16,"onTransports"],[111,22,79,28],[111,24,79,31,"transports_"],[111,35,79,42],[111,39,79,48,"transports"],[111,49,79,58],[111,52,79,61,"transports_"],[111,63,79,73],[112,10,80,16,"ping"],[112,14,80,20],[112,16,80,22,"rankOptions"],[112,27,80,33],[112,28,80,34,"ping"],[112,32,80,38],[113,10,81,16,"sampleCount"],[113,21,81,27],[113,23,81,29,"rankOptions"],[113,34,81,40],[113,35,81,41,"sampleCount"],[113,46,81,52],[114,10,82,16,"timeout"],[114,17,82,23],[114,19,82,25,"rankOptions"],[114,30,82,36],[114,31,82,37,"timeout"],[114,38,82,44],[115,10,83,16,"transports"],[115,20,83,26],[116,10,84,16,"weights"],[116,17,84,23],[116,19,84,25,"rankOptions"],[116,30,84,36],[116,31,84,37,"weights"],[117,8,85,12],[117,9,85,13],[117,10,85,14],[118,6,86,8],[119,6,87,8],[119,13,87,15,"transport"],[119,22,87,24],[120,4,88,4],[120,5,88,5],[121,2,89,0],[122,2,90,0],[122,11,90,9,"shouldThrow"],[122,22,90,20,"shouldThrow"],[122,23,90,21,"error"],[122,28,90,26],[122,30,90,28],[123,4,91,4],[123,8,91,8],[123,14,91,14],[123,18,91,18,"error"],[123,23,91,23],[123,27,91,27],[123,34,91,34,"error"],[123,39,91,39],[123,40,91,40,"code"],[123,44,91,44],[123,49,91,49],[123,57,91,57],[123,59,91,59],[124,6,92,8],[124,10,92,12,"error"],[124,15,92,17],[124,16,92,18,"code"],[124,20,92,22],[124,25,92,27,"rpc_js_1"],[124,33,92,35],[124,34,92,36,"TransactionRejectedRpcError"],[124,61,92,63],[124,62,92,64,"code"],[124,66,92,68],[124,70,93,12,"error"],[124,75,93,17],[124,76,93,18,"code"],[124,80,93,22],[124,85,93,27,"rpc_js_1"],[124,93,93,35],[124,94,93,36,"UserRejectedRequestError"],[124,118,93,60],[124,119,93,61,"code"],[124,123,93,65],[124,127,94,12,"node_js_1"],[124,136,94,21],[124,137,94,22,"ExecutionRevertedError"],[124,159,94,44],[124,160,94,45,"nodeMessage"],[124,171,94,56],[124,172,94,57,"test"],[124,176,94,61],[124,177,94,62,"error"],[124,182,94,67],[124,183,94,68,"message"],[124,190,94,75],[124,191,94,76],[124,195,95,12,"error"],[124,200,95,17],[124,201,95,18,"code"],[124,205,95,22],[124,210,95,27],[124,214,95,31],[124,216,96,12],[124,223,96,19],[124,227,96,23],[125,4,97,4],[126,4,98,4],[126,11,98,11],[126,16,98,16],[127,2,99,0],[128,2,100,0],[128,11,100,9,"rankTransports"],[128,25,100,23,"rankTransports"],[128,26,100,23,"_ref5"],[128,31,100,23],[128,33,100,135],[129,4,100,135],[129,8,100,26,"chain"],[129,13,100,31],[129,16,100,31,"_ref5"],[129,21,100,31],[129,22,100,26,"chain"],[129,27,100,31],[130,6,100,31,"_ref5$interval"],[130,20,100,31],[130,23,100,31,"_ref5"],[130,28,100,31],[130,29,100,33,"interval"],[130,37,100,41],[131,6,100,33,"interval"],[131,14,100,41],[131,17,100,41,"_ref5$interval"],[131,31,100,41],[131,45,100,44],[131,50,100,49],[131,53,100,49,"_ref5$interval"],[131,67,100,49],[132,6,100,51,"onTransports"],[132,18,100,63],[132,21,100,63,"_ref5"],[132,26,100,63],[132,27,100,51,"onTransports"],[132,39,100,63],[133,6,100,65,"ping"],[133,10,100,69],[133,13,100,69,"_ref5"],[133,18,100,69],[133,19,100,65,"ping"],[133,23,100,69],[134,6,100,69,"_ref5$sampleCount"],[134,23,100,69],[134,26,100,69,"_ref5"],[134,31,100,69],[134,32,100,71,"sampleCount"],[134,43,100,82],[135,6,100,71,"sampleCount"],[135,17,100,82],[135,20,100,82,"_ref5$sampleCount"],[135,37,100,82],[135,51,100,85],[135,53,100,87],[135,56,100,87,"_ref5$sampleCount"],[135,73,100,87],[136,6,100,87,"_ref5$timeout"],[136,19,100,87],[136,22,100,87,"_ref5"],[136,27,100,87],[136,28,100,89,"timeout"],[136,35,100,96],[137,6,100,89,"timeout"],[137,13,100,96],[137,16,100,96,"_ref5$timeout"],[137,29,100,96],[137,43,100,99],[137,48,100,104],[137,51,100,104,"_ref5$timeout"],[137,64,100,104],[138,6,100,106,"transports"],[138,16,100,116],[138,19,100,116,"_ref5"],[138,24,100,116],[138,25,100,106,"transports"],[138,35,100,116],[139,6,100,116,"_ref5$weights"],[139,19,100,116],[139,22,100,116,"_ref5"],[139,27,100,116],[139,28,100,118,"weights"],[139,35,100,125],[140,6,100,118,"weights"],[140,13,100,125],[140,16,100,125,"_ref5$weights"],[140,29,100,125],[140,43,100,128],[140,44,100,129],[140,45,100,130],[140,48,100,130,"_ref5$weights"],[140,61,100,130],[141,4,101,4],[141,8,101,4,"_weights$stability"],[141,26,101,4],[141,29,101,79,"weights"],[141,36,101,86],[141,37,101,12,"stability"],[141,46,101,21],[142,6,101,23,"stabilityWeight"],[142,21,101,38],[142,24,101,38,"_weights$stability"],[142,42,101,38],[142,56,101,41],[142,59,101,44],[142,62,101,44,"_weights$stability"],[142,80,101,44],[143,6,101,44,"_weights$latency"],[143,22,101,44],[143,25,101,79,"weights"],[143,32,101,86],[143,33,101,46,"latency"],[143,40,101,53],[144,6,101,55,"latencyWeight"],[144,19,101,68],[144,22,101,68,"_weights$latency"],[144,38,101,68],[144,52,101,71],[144,55,101,74],[144,58,101,74,"_weights$latency"],[144,74,101,74],[145,4,102,4],[145,8,102,10,"samples"],[145,15,102,17],[145,18,102,20],[145,20,102,22],[146,4,103,4],[146,8,103,10,"rankTransports_"],[146,24,103,25],[147,6,103,25],[147,10,103,25,"_ref6"],[147,15,103,25],[147,18,103,25,"_asyncToGenerator"],[147,35,103,25],[147,36,103,28],[147,49,103,40],[148,8,104,8],[148,12,104,14,"sample"],[148,18,104,20],[148,27,104,29,"Promise"],[148,34,104,36],[148,35,104,37,"all"],[148,38,104,40],[148,39,104,41,"transports"],[148,49,104,51],[148,50,104,52,"map"],[148,53,104,55],[149,10,104,55],[149,14,104,55,"_ref7"],[149,19,104,55],[149,22,104,55,"_asyncToGenerator"],[149,39,104,55],[149,40,104,56],[149,51,104,63,"transport"],[149,60,104,72],[149,62,104,77],[150,12,105,12],[150,16,105,18,"transport_"],[150,26,105,28],[150,29,105,31,"transport"],[150,38,105,40],[150,39,105,41],[151,14,105,43,"chain"],[151,19,105,48],[152,14,105,50,"retryCount"],[152,24,105,60],[152,26,105,62],[152,27,105,63],[153,14,105,65,"timeout"],[154,12,105,73],[154,13,105,74],[154,14,105,75],[155,12,106,12],[155,16,106,18,"start"],[155,21,106,23],[155,24,106,26,"Date"],[155,28,106,30],[155,29,106,31,"now"],[155,32,106,34],[155,33,106,35],[155,34,106,36],[156,12,107,12],[156,16,107,16,"end"],[156,19,107,19],[157,12,108,12],[157,16,108,16,"success"],[157,23,108,23],[158,12,109,12],[158,16,109,16],[159,14,110,16],[159,20,110,23,"ping"],[159,24,110,27],[159,27,111,22,"ping"],[159,31,111,26],[159,32,111,27],[160,16,111,29,"transport"],[160,25,111,38],[160,27,111,40,"transport_"],[161,14,111,51],[161,15,111,52],[161,16,111,53],[161,19,112,22,"transport_"],[161,29,112,32],[161,30,112,33,"request"],[161,37,112,40],[161,38,112,41],[162,16,112,43,"method"],[162,22,112,49],[162,24,112,51],[163,14,112,67],[163,15,112,68],[163,16,112,69],[164,14,113,16,"success"],[164,21,113,23],[164,24,113,26],[164,25,113,27],[165,12,114,12],[165,13,114,13],[165,14,115,12],[165,20,115,18],[166,14,116,16,"success"],[166,21,116,23],[166,24,116,26],[166,25,116,27],[167,12,117,12],[167,13,117,13],[167,22,118,20],[168,14,119,16,"end"],[168,17,119,19],[168,20,119,22,"Date"],[168,24,119,26],[168,25,119,27,"now"],[168,28,119,30],[168,29,119,31],[168,30,119,32],[169,12,120,12],[170,12,121,12],[170,16,121,18,"latency"],[170,23,121,25],[170,26,121,28,"end"],[170,29,121,31],[170,32,121,34,"start"],[170,37,121,39],[171,12,122,12],[171,19,122,19],[172,14,122,21,"latency"],[172,21,122,28],[173,14,122,30,"success"],[174,12,122,38],[174,13,122,39],[175,10,123,8],[175,11,123,9],[176,10,123,9],[176,27,123,9,"_x"],[176,29,123,9],[177,12,123,9],[177,19,123,9,"_ref7"],[177,24,123,9],[177,25,123,9,"apply"],[177,30,123,9],[177,37,123,9,"arguments"],[177,46,123,9],[178,10,123,9],[179,8,123,9],[179,12,123,10],[179,13,123,11],[180,8,124,8,"samples"],[180,15,124,15],[180,16,124,16,"push"],[180,20,124,20],[180,21,124,21,"sample"],[180,27,124,27],[180,28,124,28],[181,8,125,8],[181,12,125,12,"samples"],[181,19,125,19],[181,20,125,20,"length"],[181,26,125,26],[181,29,125,29,"sampleCount"],[181,40,125,40],[181,42,126,12,"samples"],[181,49,126,19],[181,50,126,20,"shift"],[181,55,126,25],[181,56,126,26],[181,57,126,27],[182,8,127,8],[182,12,127,14,"maxLatency"],[182,22,127,24],[182,25,127,27,"Math"],[182,29,127,31],[182,30,127,32,"max"],[182,33,127,35],[182,34,127,36],[182,37,127,39,"samples"],[182,44,127,46],[182,45,127,47,"map"],[182,48,127,50],[182,49,127,52,"sample"],[182,55,127,58],[182,59,127,63,"Math"],[182,63,127,67],[182,64,127,68,"max"],[182,67,127,71],[182,68,127,72],[182,71,127,75,"sample"],[182,77,127,81],[182,78,127,82,"map"],[182,81,127,85],[182,82,127,86,"_ref8"],[182,87,127,86],[183,10,127,86],[183,14,127,89,"latency"],[183,21,127,96],[183,24,127,96,"_ref8"],[183,29,127,96],[183,30,127,89,"latency"],[183,37,127,96],[184,10,127,96],[184,17,127,103,"latency"],[184,24,127,110],[185,8,127,110],[185,10,127,111],[185,11,127,112],[185,12,127,113],[185,13,127,114],[186,8,128,8],[186,12,128,14,"scores"],[186,18,128,20],[186,21,128,23,"transports"],[186,31,128,33],[186,32,129,13,"map"],[186,35,129,16],[186,36,129,17],[186,37,129,18,"_"],[186,38,129,19],[186,40,129,21,"i"],[186,41,129,22],[186,46,129,27],[187,10,130,12],[187,14,130,18,"latencies"],[187,23,130,27],[187,26,130,30,"samples"],[187,33,130,37],[187,34,130,38,"map"],[187,37,130,41],[187,38,130,43,"sample"],[187,44,130,49],[187,48,130,54,"sample"],[187,54,130,60],[187,55,130,61,"i"],[187,56,130,62],[187,57,130,63],[187,58,130,64,"latency"],[187,65,130,71],[187,66,130,72],[188,10,131,12],[188,14,131,18,"meanLatency"],[188,25,131,29],[188,28,131,32,"latencies"],[188,37,131,41],[188,38,131,42,"reduce"],[188,44,131,48],[188,45,131,49],[188,46,131,50,"acc"],[188,49,131,53],[188,51,131,55,"latency"],[188,58,131,62],[188,63,131,67,"acc"],[188,66,131,70],[188,69,131,73,"latency"],[188,76,131,80],[188,78,131,82],[188,79,131,83],[188,80,131,84],[188,83,132,16,"latencies"],[188,92,132,25],[188,93,132,26,"length"],[188,99,132,32],[189,10,133,12],[189,14,133,18,"latencyScore"],[189,26,133,30],[189,29,133,33],[189,30,133,34],[189,33,133,37,"meanLatency"],[189,44,133,48],[189,47,133,51,"maxLatency"],[189,57,133,61],[190,10,134,12],[190,14,134,18,"successes"],[190,23,134,27],[190,26,134,30,"samples"],[190,33,134,37],[190,34,134,38,"map"],[190,37,134,41],[190,38,134,43,"sample"],[190,44,134,49],[190,48,134,54,"sample"],[190,54,134,60],[190,55,134,61,"i"],[190,56,134,62],[190,57,134,63],[190,58,134,64,"success"],[190,65,134,71],[190,66,134,72],[191,10,135,12],[191,14,135,18,"stabilityScore"],[191,28,135,32],[191,31,135,35,"successes"],[191,40,135,44],[191,41,135,45,"reduce"],[191,47,135,51],[191,48,135,52],[191,49,135,53,"acc"],[191,52,135,56],[191,54,135,58,"success"],[191,61,135,65],[191,66,135,70,"acc"],[191,69,135,73],[191,72,135,76,"success"],[191,79,135,83],[191,81,135,85],[191,82,135,86],[191,83,135,87],[191,86,136,16,"successes"],[191,95,136,25],[191,96,136,26,"length"],[191,102,136,32],[192,10,137,12],[192,14,137,16,"stabilityScore"],[192,28,137,30],[192,33,137,35],[192,34,137,36],[192,36,138,16],[192,43,138,23],[192,44,138,24],[192,45,138,25],[192,47,138,27,"i"],[192,48,138,28],[192,49,138,29],[193,10,139,12],[193,17,139,19],[193,18,140,16,"latencyWeight"],[193,31,140,29],[193,34,140,32,"latencyScore"],[193,46,140,44],[193,49,140,47,"stabilityWeight"],[193,64,140,62],[193,67,140,65,"stabilityScore"],[193,81,140,79],[193,83,141,16,"i"],[193,84,141,17],[193,85,142,13],[194,8,143,8],[194,9,143,9],[194,10,143,10],[194,11,144,13,"sort"],[194,15,144,17],[194,16,144,18],[194,17,144,19,"a"],[194,18,144,20],[194,20,144,22,"b"],[194,21,144,23],[194,26,144,28,"b"],[194,27,144,29],[194,28,144,30],[194,29,144,31],[194,30,144,32],[194,33,144,35,"a"],[194,34,144,36],[194,35,144,37],[194,36,144,38],[194,37,144,39],[194,38,144,40],[195,8,145,8,"onTransports"],[195,20,145,20],[195,21,145,21,"scores"],[195,27,145,27],[195,28,145,28,"map"],[195,31,145,31],[195,32,145,32,"_ref9"],[195,37,145,32],[196,10,145,32],[196,14,145,32,"_ref10"],[196,20,145,32],[196,23,145,32,"_slicedToArray"],[196,37,145,32],[196,38,145,32,"_ref9"],[196,43,145,32],[197,12,145,36,"i"],[197,13,145,37],[197,16,145,37,"_ref10"],[197,22,145,37],[198,10,145,37],[198,17,145,43,"transports"],[198,27,145,53],[198,28,145,54,"i"],[198,29,145,55],[198,30,145,56],[199,8,145,56],[199,10,145,57],[199,11,145,58],[200,8,146,8],[200,14,146,14],[200,15,146,15],[200,16,146,16],[200,18,146,18,"wait_js_1"],[200,27,146,27],[200,28,146,28,"wait"],[200,32,146,32],[200,34,146,34,"interval"],[200,42,146,42],[200,43,146,43],[201,8,147,8,"rankTransports_"],[201,24,147,23],[201,25,147,24],[201,26,147,25],[202,6,148,4],[202,7,148,5],[203,6,148,5],[203,22,103,10,"rankTransports_"],[203,37,103,25,"rankTransports_"],[203,38,103,25],[204,8,103,25],[204,15,103,25,"_ref6"],[204,20,103,25],[204,21,103,25,"apply"],[204,26,103,25],[204,33,103,25,"arguments"],[204,42,103,25],[205,6,103,25],[206,4,103,25],[206,7,148,5],[207,4,149,4,"rankTransports_"],[207,20,149,19],[207,21,149,20],[207,22,149,21],[208,2,150,0],[209,0,150,1],[209,3]],"functionMap":{"names":["<global>","fallback","<anonymous>","onResponse","request","fetch","transports.slice.some$argument_0","transports.map$argument_0","rankTransports$argument_0.onTransports","shouldThrow","rankTransports","rankTransports_","samples.map$argument_0","sample.map$argument_0","latencies.reduce$argument_0","successes.reduce$argument_0","transports.map.sort$argument_0","scores.map$argument_0"],"mappings":"AAA;ACQ;YCE;yBCE,SD;YEI;8BCE;kECiC;yBDO;iBDK;aFE;wBCK,yBD;uCKC,oCL;8BMO,2CN;KDS;CDC;ASC;CTS;AUC;4BCG;wDJC;SImB;mDCI,mCC,wBD,ED;iBJE;0CKC,6BL;iDOC,+BP;0CKG,6BL;oDQC,+BR;SIQ;kBKC,qBL;gCMC,wBN;KDG;CVE"}},"type":"js/module"}]}