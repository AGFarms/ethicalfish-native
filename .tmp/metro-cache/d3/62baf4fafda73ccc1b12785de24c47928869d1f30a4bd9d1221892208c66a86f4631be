{"dependencies":[{"name":"buffer","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":167,"index":167},"end":{"line":1,"column":184,"index":184}}],"key":"5Twuof5L0reL9HI8fBVaV44CCiU="}},{"name":"./sponge","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":220,"index":220},"end":{"line":1,"column":239,"index":239}}],"key":"rRHVlsvmEPytl5sdIvQRhxN5paA="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports[\"default\"] = exports.SHAKE = exports.SHA3Hash = exports.SHA3 = exports.Keccak = void 0;\n  var _buffer = require(_dependencyMap[0], \"buffer\");\n  var _sponge = _interopRequireDefault(require(_dependencyMap[1], \"./sponge\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      \"default\": obj\n    };\n  }\n  var createHash = function createHash(_ref) {\n    var allowedSizes = _ref.allowedSizes,\n      defaultSize = _ref.defaultSize,\n      padding = _ref.padding;\n    return function Hash() {\n      var _this = this;\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n      if (!this || this.constructor !== Hash) {\n        return new Hash(size);\n      }\n      if (allowedSizes && !allowedSizes.includes(size)) {\n        throw new Error(\"Unsupported hash length\");\n      }\n      var sponge = new _sponge[\"default\"]({\n        capacity: size\n      });\n      this.update = function (input) {\n        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"utf8\";\n        if (_buffer.Buffer.isBuffer(input)) {\n          sponge.absorb(input);\n          return _this;\n        }\n        if (typeof input === \"string\") {\n          return _this.update(_buffer.Buffer.from(input, encoding));\n        }\n        throw new TypeError(\"Not a string or buffer\");\n      };\n      this.digest = function () {\n        var formatOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"binary\";\n        var options = typeof formatOrOptions === \"string\" ? {\n          format: formatOrOptions\n        } : formatOrOptions;\n        var buffer = sponge.squeeze({\n          buffer: options.buffer,\n          padding: options.padding || padding\n        });\n        if (options.format && options.format !== \"binary\") {\n          return buffer.toString(options.format);\n        }\n        return buffer;\n      };\n      this.reset = function () {\n        sponge.reset();\n        return _this;\n      };\n      return this;\n    };\n  };\n  var Keccak = createHash({\n    allowedSizes: [224, 256, 384, 512],\n    defaultSize: 512,\n    padding: 1\n  });\n  exports.Keccak = Keccak;\n  var SHA3 = createHash({\n    allowedSizes: [224, 256, 384, 512],\n    defaultSize: 512,\n    padding: 6\n  });\n  exports.SHA3 = SHA3;\n  var SHAKE = createHash({\n    allowedSizes: [128, 256],\n    defaultSize: 256,\n    padding: 31\n  });\n  exports.SHAKE = SHAKE;\n  var SHA3Hash = Keccak;\n  exports.SHA3Hash = SHA3Hash;\n  SHA3.SHA3Hash = SHA3Hash;\n  var _default = SHA3;\n  exports[\"default\"] = _default;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,19],[4,9,1,20,"defineProperty"],[4,23,1,34],[4,24,1,35,"exports"],[4,31,1,42],[4,33,1,43],[4,45,1,55],[4,47,1,56],[5,4,1,57,"value"],[5,9,1,62],[5,11,1,63],[6,2,1,67],[6,3,1,68],[6,4,1,69],[7,2,1,70,"exports"],[7,9,1,77],[7,10,1,78],[7,19,1,87],[7,20,1,88],[7,23,1,89,"exports"],[7,30,1,96],[7,31,1,97,"SHAKE"],[7,36,1,102],[7,39,1,103,"exports"],[7,46,1,110],[7,47,1,111,"SHA3Hash"],[7,55,1,119],[7,58,1,120,"exports"],[7,65,1,127],[7,66,1,128,"SHA3"],[7,70,1,132],[7,73,1,133,"exports"],[7,80,1,140],[7,81,1,141,"Keccak"],[7,87,1,147],[7,90,1,148],[7,95,1,153],[7,96,1,154],[8,2,1,155],[8,6,1,159,"_buffer"],[8,13,1,166],[8,16,1,167,"require"],[8,23,1,174],[8,24,1,174,"_dependencyMap"],[8,38,1,174],[8,51,1,183],[8,52,1,184],[9,2,1,185],[9,6,1,189,"_sponge"],[9,13,1,196],[9,16,1,197,"_interopRequireDefault"],[9,38,1,219],[9,39,1,220,"require"],[9,46,1,227],[9,47,1,227,"_dependencyMap"],[9,61,1,227],[9,76,1,238],[9,77,1,239],[9,78,1,240],[10,2,1,241],[10,11,1,250,"_interopRequireDefault"],[10,33,1,272,"_interopRequireDefault"],[10,34,1,273,"obj"],[10,37,1,276],[10,39,1,277],[11,4,1,278],[11,11,1,285,"obj"],[11,14,1,288],[11,18,1,290,"obj"],[11,21,1,293],[11,22,1,294,"__esModule"],[11,32,1,304],[11,35,1,305,"obj"],[11,38,1,308],[11,41,1,309],[12,6,1,310],[12,15,1,319],[12,17,1,320,"obj"],[13,4,1,323],[13,5,1,324],[14,2,1,324],[15,2,1,325],[15,6,1,329,"createHash"],[15,16,1,339],[15,19,1,340],[15,28,1,349,"createHash"],[15,38,1,359,"createHash"],[15,39,1,360,"_ref"],[15,43,1,364],[15,45,1,365],[16,4,1,366],[16,8,1,370,"allowedSizes"],[16,20,1,382],[16,23,1,383,"_ref"],[16,27,1,387],[16,28,1,388,"allowedSizes"],[16,40,1,400],[17,6,1,401,"defaultSize"],[17,17,1,412],[17,20,1,413,"_ref"],[17,24,1,417],[17,25,1,418,"defaultSize"],[17,36,1,429],[18,6,1,430,"padding"],[18,13,1,437],[18,16,1,438,"_ref"],[18,20,1,442],[18,21,1,443,"padding"],[18,28,1,450],[19,4,1,451],[19,11,1,458],[19,20,1,467,"Hash"],[19,24,1,471,"Hash"],[19,25,1,471],[19,27,1,473],[20,6,1,474],[20,10,1,478,"_this"],[20,15,1,483],[20,18,1,484],[20,22,1,488],[21,6,1,489],[21,10,1,493,"size"],[21,14,1,497],[21,17,1,498,"arguments"],[21,26,1,507],[21,27,1,508,"length"],[21,33,1,514],[21,36,1,515],[21,37,1,516],[21,41,1,518,"arguments"],[21,50,1,527],[21,51,1,528],[21,52,1,529],[21,53,1,530],[21,58,1,533,"undefined"],[21,67,1,542],[21,70,1,543,"arguments"],[21,79,1,552],[21,80,1,553],[21,81,1,554],[21,82,1,555],[21,85,1,556,"defaultSize"],[21,96,1,567],[22,6,1,568],[22,10,1,571],[22,11,1,572],[22,15,1,576],[22,19,1,578],[22,23,1,582],[22,24,1,583,"constructor"],[22,35,1,594],[22,40,1,597,"Hash"],[22,44,1,601],[22,46,1,602],[23,8,1,603],[23,15,1,610],[23,19,1,614,"Hash"],[23,23,1,618],[23,24,1,619,"size"],[23,28,1,623],[23,29,1,624],[24,6,1,624],[25,6,1,625],[25,10,1,628,"allowedSizes"],[25,22,1,640],[25,26,1,642],[25,27,1,643,"allowedSizes"],[25,39,1,655],[25,40,1,656,"includes"],[25,48,1,664],[25,49,1,665,"size"],[25,53,1,669],[25,54,1,670],[25,56,1,671],[26,8,1,672],[26,14,1,678],[26,18,1,682,"Error"],[26,23,1,687],[26,24,1,688],[26,49,1,713],[26,50,1,714],[27,6,1,714],[28,6,1,715],[28,10,1,719,"sponge"],[28,16,1,725],[28,19,1,726],[28,23,1,730,"_sponge"],[28,30,1,737],[28,31,1,738],[28,40,1,747],[28,41,1,748],[28,42,1,749],[29,8,1,750,"capacity"],[29,16,1,758],[29,18,1,759,"size"],[30,6,1,763],[30,7,1,764],[30,8,1,765],[31,6,1,766],[31,10,1,770],[31,11,1,771,"update"],[31,17,1,777],[31,20,1,778],[31,30,1,787,"input"],[31,35,1,792],[31,37,1,793],[32,8,1,794],[32,12,1,798,"encoding"],[32,20,1,806],[32,23,1,807,"arguments"],[32,32,1,816],[32,33,1,817,"length"],[32,39,1,823],[32,42,1,824],[32,43,1,825],[32,47,1,827,"arguments"],[32,56,1,836],[32,57,1,837],[32,58,1,838],[32,59,1,839],[32,64,1,842,"undefined"],[32,73,1,851],[32,76,1,852,"arguments"],[32,85,1,861],[32,86,1,862],[32,87,1,863],[32,88,1,864],[32,91,1,865],[32,97,1,871],[33,8,1,872],[33,12,1,875,"_buffer"],[33,19,1,882],[33,20,1,883,"Buffer"],[33,26,1,889],[33,27,1,890,"isBuffer"],[33,35,1,898],[33,36,1,899,"input"],[33,41,1,904],[33,42,1,905],[33,44,1,906],[34,10,1,907,"sponge"],[34,16,1,913],[34,17,1,914,"absorb"],[34,23,1,920],[34,24,1,921,"input"],[34,29,1,926],[34,30,1,927],[35,10,1,928],[35,17,1,935,"_this"],[35,22,1,940],[36,8,1,940],[37,8,1,941],[37,12,1,944],[37,19,1,951,"input"],[37,24,1,956],[37,29,1,959],[37,37,1,967],[37,39,1,968],[38,10,1,969],[38,17,1,976,"_this"],[38,22,1,981],[38,23,1,982,"update"],[38,29,1,988],[38,30,1,989,"_buffer"],[38,37,1,996],[38,38,1,997,"Buffer"],[38,44,1,1003],[38,45,1,1004,"from"],[38,49,1,1008],[38,50,1,1009,"input"],[38,55,1,1014],[38,57,1,1015,"encoding"],[38,65,1,1023],[38,66,1,1024],[38,67,1,1025],[39,8,1,1025],[40,8,1,1026],[40,14,1,1032],[40,18,1,1036,"TypeError"],[40,27,1,1045],[40,28,1,1046],[40,52,1,1070],[40,53,1,1071],[41,6,1,1071],[41,7,1,1072],[42,6,1,1073],[42,10,1,1077],[42,11,1,1078,"digest"],[42,17,1,1084],[42,20,1,1085],[42,32,1,1095],[43,8,1,1096],[43,12,1,1100,"formatOrOptions"],[43,27,1,1115],[43,30,1,1116,"arguments"],[43,39,1,1125],[43,40,1,1126,"length"],[43,46,1,1132],[43,49,1,1133],[43,50,1,1134],[43,54,1,1136,"arguments"],[43,63,1,1145],[43,64,1,1146],[43,65,1,1147],[43,66,1,1148],[43,71,1,1151,"undefined"],[43,80,1,1160],[43,83,1,1161,"arguments"],[43,92,1,1170],[43,93,1,1171],[43,94,1,1172],[43,95,1,1173],[43,98,1,1174],[43,106,1,1182],[44,8,1,1183],[44,12,1,1187,"options"],[44,19,1,1194],[44,22,1,1195],[44,29,1,1202,"formatOrOptions"],[44,44,1,1217],[44,49,1,1220],[44,57,1,1228],[44,60,1,1229],[45,10,1,1230,"format"],[45,16,1,1236],[45,18,1,1237,"formatOrOptions"],[46,8,1,1252],[46,9,1,1253],[46,12,1,1254,"formatOrOptions"],[46,27,1,1269],[47,8,1,1270],[47,12,1,1274,"buffer"],[47,18,1,1280],[47,21,1,1281,"sponge"],[47,27,1,1287],[47,28,1,1288,"squeeze"],[47,35,1,1295],[47,36,1,1296],[48,10,1,1297,"buffer"],[48,16,1,1303],[48,18,1,1304,"options"],[48,25,1,1311],[48,26,1,1312,"buffer"],[48,32,1,1318],[49,10,1,1319,"padding"],[49,17,1,1326],[49,19,1,1327,"options"],[49,26,1,1334],[49,27,1,1335,"padding"],[49,34,1,1342],[49,38,1,1344,"padding"],[50,8,1,1351],[50,9,1,1352],[50,10,1,1353],[51,8,1,1354],[51,12,1,1357,"options"],[51,19,1,1364],[51,20,1,1365,"format"],[51,26,1,1371],[51,30,1,1373,"options"],[51,37,1,1380],[51,38,1,1381,"format"],[51,44,1,1387],[51,49,1,1390],[51,57,1,1398],[51,59,1,1399],[52,10,1,1400],[52,17,1,1407,"buffer"],[52,23,1,1413],[52,24,1,1414,"toString"],[52,32,1,1422],[52,33,1,1423,"options"],[52,40,1,1430],[52,41,1,1431,"format"],[52,47,1,1437],[52,48,1,1438],[53,8,1,1438],[54,8,1,1439],[54,15,1,1446,"buffer"],[54,21,1,1452],[55,6,1,1452],[55,7,1,1453],[56,6,1,1454],[56,10,1,1458],[56,11,1,1459,"reset"],[56,16,1,1464],[56,19,1,1465],[56,31,1,1475],[57,8,1,1476,"sponge"],[57,14,1,1482],[57,15,1,1483,"reset"],[57,20,1,1488],[57,21,1,1489],[57,22,1,1490],[58,8,1,1491],[58,15,1,1498,"_this"],[58,20,1,1503],[59,6,1,1503],[59,7,1,1504],[60,6,1,1505],[60,13,1,1512],[60,17,1,1516],[61,4,1,1516],[61,5,1,1517],[62,2,1,1517],[62,3,1,1518],[63,2,1,1519],[63,6,1,1523,"Keccak"],[63,12,1,1529],[63,15,1,1530,"createHash"],[63,25,1,1540],[63,26,1,1541],[64,4,1,1542,"allowedSizes"],[64,16,1,1554],[64,18,1,1555],[64,19,1,1556],[64,22,1,1559],[64,24,1,1560],[64,27,1,1563],[64,29,1,1564],[64,32,1,1567],[64,34,1,1568],[64,37,1,1571],[64,38,1,1572],[65,4,1,1573,"defaultSize"],[65,15,1,1584],[65,17,1,1585],[65,20,1,1588],[66,4,1,1589,"padding"],[66,11,1,1596],[66,13,1,1597],[67,2,1,1598],[67,3,1,1599],[67,4,1,1600],[68,2,1,1601,"exports"],[68,9,1,1608],[68,10,1,1609,"Keccak"],[68,16,1,1615],[68,19,1,1616,"Keccak"],[68,25,1,1622],[69,2,1,1623],[69,6,1,1627,"SHA3"],[69,10,1,1631],[69,13,1,1632,"createHash"],[69,23,1,1642],[69,24,1,1643],[70,4,1,1644,"allowedSizes"],[70,16,1,1656],[70,18,1,1657],[70,19,1,1658],[70,22,1,1661],[70,24,1,1662],[70,27,1,1665],[70,29,1,1666],[70,32,1,1669],[70,34,1,1670],[70,37,1,1673],[70,38,1,1674],[71,4,1,1675,"defaultSize"],[71,15,1,1686],[71,17,1,1687],[71,20,1,1690],[72,4,1,1691,"padding"],[72,11,1,1698],[72,13,1,1699],[73,2,1,1700],[73,3,1,1701],[73,4,1,1702],[74,2,1,1703,"exports"],[74,9,1,1710],[74,10,1,1711,"SHA3"],[74,14,1,1715],[74,17,1,1716,"SHA3"],[74,21,1,1720],[75,2,1,1721],[75,6,1,1725,"SHAKE"],[75,11,1,1730],[75,14,1,1731,"createHash"],[75,24,1,1741],[75,25,1,1742],[76,4,1,1743,"allowedSizes"],[76,16,1,1755],[76,18,1,1756],[76,19,1,1757],[76,22,1,1760],[76,24,1,1761],[76,27,1,1764],[76,28,1,1765],[77,4,1,1766,"defaultSize"],[77,15,1,1777],[77,17,1,1778],[77,20,1,1781],[78,4,1,1782,"padding"],[78,11,1,1789],[78,13,1,1790],[79,2,1,1792],[79,3,1,1793],[79,4,1,1794],[80,2,1,1795,"exports"],[80,9,1,1802],[80,10,1,1803,"SHAKE"],[80,15,1,1808],[80,18,1,1809,"SHAKE"],[80,23,1,1814],[81,2,1,1815],[81,6,1,1819,"SHA3Hash"],[81,14,1,1827],[81,17,1,1828,"Keccak"],[81,23,1,1834],[82,2,1,1835,"exports"],[82,9,1,1842],[82,10,1,1843,"SHA3Hash"],[82,18,1,1851],[82,21,1,1852,"SHA3Hash"],[82,29,1,1860],[83,2,1,1861,"SHA3"],[83,6,1,1865],[83,7,1,1866,"SHA3Hash"],[83,15,1,1874],[83,18,1,1875,"SHA3Hash"],[83,26,1,1883],[84,2,1,1884],[84,6,1,1888,"_default"],[84,14,1,1896],[84,17,1,1897,"SHA3"],[84,21,1,1901],[85,2,1,1902,"exports"],[85,9,1,1909],[85,10,1,1910],[85,19,1,1919],[85,20,1,1920],[85,23,1,1921,"_default"],[85,31,1,1929],[86,0,1,1930],[86,3]],"functionMap":{"names":["<global>","_interopRequireDefault","createHash","Hash","update","digest","reset"],"mappings":"AAA,iPC,oFD,eE,sHC,gUC,sSD,aE,gXF,YG,uCH,aD,CF"}},"type":"js/module"}]}