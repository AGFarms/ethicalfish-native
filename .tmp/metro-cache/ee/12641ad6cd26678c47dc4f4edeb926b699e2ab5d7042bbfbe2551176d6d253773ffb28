{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.concat = concat;\n  exports.concatBytes = concatBytes;\n  exports.concatHex = concatHex;\n  function concat(values) {\n    if (typeof values[0] === 'string') return concatHex(values);\n    return concatBytes(values);\n  }\n  function concatBytes(values) {\n    var length = 0;\n    for (var arr of values) {\n      length += arr.length;\n    }\n    var result = new Uint8Array(length);\n    var offset = 0;\n    for (var _arr of values) {\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n    return result;\n  }\n  function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n  }\n});","lineCount":30,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"concat"],[7,16,3,14],[7,19,3,17,"concat"],[7,25,3,23],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"concatBytes"],[8,21,4,19],[8,24,4,22,"concatBytes"],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"concatHex"],[9,19,5,17],[9,22,5,20,"concatHex"],[9,31,5,29],[10,2,6,0],[10,11,6,9,"concat"],[10,17,6,15,"concat"],[10,18,6,16,"values"],[10,24,6,22],[10,26,6,24],[11,4,7,4],[11,8,7,8],[11,15,7,15,"values"],[11,21,7,21],[11,22,7,22],[11,23,7,23],[11,24,7,24],[11,29,7,29],[11,37,7,37],[11,39,8,8],[11,46,8,15,"concatHex"],[11,55,8,24],[11,56,8,25,"values"],[11,62,8,31],[11,63,8,32],[12,4,9,4],[12,11,9,11,"concatBytes"],[12,22,9,22],[12,23,9,23,"values"],[12,29,9,29],[12,30,9,30],[13,2,10,0],[14,2,11,0],[14,11,11,9,"concatBytes"],[14,22,11,20,"concatBytes"],[14,23,11,21,"values"],[14,29,11,27],[14,31,11,29],[15,4,12,4],[15,8,12,8,"length"],[15,14,12,14],[15,17,12,17],[15,18,12,18],[16,4,13,4],[16,9,13,9],[16,13,13,15,"arr"],[16,16,13,18],[16,20,13,22,"values"],[16,26,13,28],[16,28,13,30],[17,6,14,8,"length"],[17,12,14,14],[17,16,14,18,"arr"],[17,19,14,21],[17,20,14,22,"length"],[17,26,14,28],[18,4,15,4],[19,4,16,4],[19,8,16,10,"result"],[19,14,16,16],[19,17,16,19],[19,21,16,23,"Uint8Array"],[19,31,16,33],[19,32,16,34,"length"],[19,38,16,40],[19,39,16,41],[20,4,17,4],[20,8,17,8,"offset"],[20,14,17,14],[20,17,17,17],[20,18,17,18],[21,4,18,4],[21,9,18,9],[21,13,18,15,"arr"],[21,17,18,18],[21,21,18,22,"values"],[21,27,18,28],[21,29,18,30],[22,6,19,8,"result"],[22,12,19,14],[22,13,19,15,"set"],[22,16,19,18],[22,17,19,19,"arr"],[22,21,19,22],[22,23,19,24,"offset"],[22,29,19,30],[22,30,19,31],[23,6,20,8,"offset"],[23,12,20,14],[23,16,20,18,"arr"],[23,20,20,21],[23,21,20,22,"length"],[23,27,20,28],[24,4,21,4],[25,4,22,4],[25,11,22,11,"result"],[25,17,22,17],[26,2,23,0],[27,2,24,0],[27,11,24,9,"concatHex"],[27,20,24,18,"concatHex"],[27,21,24,19,"values"],[27,27,24,25],[27,29,24,27],[28,4,25,4],[28,11,25,11],[28,16,25,16,"values"],[28,22,25,22],[28,23,25,23,"reduce"],[28,29,25,29],[28,30,25,30],[28,31,25,31,"acc"],[28,34,25,34],[28,36,25,36,"x"],[28,37,25,37],[28,42,25,42,"acc"],[28,45,25,45],[28,48,25,48,"x"],[28,49,25,49],[28,50,25,50,"replace"],[28,57,25,57],[28,58,25,58],[28,62,25,62],[28,64,25,64],[28,66,25,66],[28,67,25,67],[28,69,25,69],[28,71,25,71],[28,72,25,72],[28,74,25,74],[29,2,26,0],[30,0,26,1],[30,3]],"functionMap":{"names":["<global>","concat","concatBytes","concatHex","values.reduce$argument_0"],"mappings":"AAA;ACK;CDI;AEC;CFY;AGC;8BCC,qCD;CHC"}},"type":"js/module"}]}