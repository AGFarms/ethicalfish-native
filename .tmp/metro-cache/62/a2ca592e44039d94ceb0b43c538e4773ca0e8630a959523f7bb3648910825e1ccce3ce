{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":40,"index":2803}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../errors/abi.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":17,"index":131},"end":{"line":4,"column":47,"index":161}}],"key":"bt3peqx8r8dLrUUfcZSr8LlIUEw="}},{"name":"../../errors/address.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":21,"index":184},"end":{"line":5,"column":55,"index":218}}],"key":"2cEksyM3yM2+hGHnvI4gX9dXhE0="}},{"name":"../address/isAddress.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":23,"index":243},"end":{"line":6,"column":57,"index":277}}],"key":"D5jbfaKKF7FjVg0hCKJ8kaIs9NU="}},{"name":"../data/concat.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":20,"index":299},"end":{"line":7,"column":48,"index":327}}],"key":"/Jt4qeKCErddWi6AKlnb9At1fi4="}},{"name":"../data/pad.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":17,"index":346},"end":{"line":8,"column":42,"index":371}}],"key":"pWvt3jaCXRmfpgmejFTCxZ8h/Ho="}},{"name":"../encoding/toHex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":19,"index":392},"end":{"line":9,"column":50,"index":423}}],"key":"bRt+1vooOX12K5i1W+v01PrrHLA="}},{"name":"../regex.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":19,"index":444},"end":{"line":10,"column":41,"index":466}}],"key":"y5uIP5kO3bpnmwyMhzPmHRwcsg0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodePacked = encodePacked;\n  var abi_js_1 = require(_dependencyMap[1], \"../../errors/abi.js\");\n  var address_js_1 = require(_dependencyMap[2], \"../../errors/address.js\");\n  var isAddress_js_1 = require(_dependencyMap[3], \"../address/isAddress.js\");\n  var concat_js_1 = require(_dependencyMap[4], \"../data/concat.js\");\n  var pad_js_1 = require(_dependencyMap[5], \"../data/pad.js\");\n  var toHex_js_1 = require(_dependencyMap[6], \"../encoding/toHex.js\");\n  var regex_js_1 = require(_dependencyMap[7], \"../regex.js\");\n  function encodePacked(types, values) {\n    if (types.length !== values.length) throw new abi_js_1.AbiEncodingLengthMismatchError({\n      expectedLength: types.length,\n      givenLength: values.length\n    });\n    var data = [];\n    for (var i = 0; i < types.length; i++) {\n      var type = types[i];\n      var value = values[i];\n      data.push(encode(type, value));\n    }\n    return (0, concat_js_1.concatHex)(data);\n  }\n  function encode(type, value) {\n    var isArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (type === 'address') {\n      var address = value;\n      if (!(0, isAddress_js_1.isAddress)(address)) throw new address_js_1.InvalidAddressError({\n        address\n      });\n      return (0, pad_js_1.pad)(address.toLowerCase(), {\n        size: isArray ? 32 : null\n      });\n    }\n    if (type === 'string') return (0, toHex_js_1.stringToHex)(value);\n    if (type === 'bytes') return value;\n    if (type === 'bool') return (0, pad_js_1.pad)((0, toHex_js_1.boolToHex)(value), {\n      size: isArray ? 32 : 1\n    });\n    var intMatch = type.match(regex_js_1.integerRegex);\n    if (intMatch) {\n      var _intMatch = _slicedToArray(intMatch, 3),\n        _type = _intMatch[0],\n        baseType = _intMatch[1],\n        _intMatch$ = _intMatch[2],\n        bits = _intMatch$ === void 0 ? '256' : _intMatch$;\n      var size = Number.parseInt(bits) / 8;\n      return (0, toHex_js_1.numberToHex)(value, {\n        size: isArray ? 32 : size,\n        signed: baseType === 'int'\n      });\n    }\n    var bytesMatch = type.match(regex_js_1.bytesRegex);\n    if (bytesMatch) {\n      var _bytesMatch = _slicedToArray(bytesMatch, 2),\n        _type2 = _bytesMatch[0],\n        _size = _bytesMatch[1];\n      if (Number.parseInt(_size) !== (value.length - 2) / 2) throw new abi_js_1.BytesSizeMismatchError({\n        expectedSize: Number.parseInt(_size),\n        givenSize: (value.length - 2) / 2\n      });\n      return (0, pad_js_1.pad)(value, {\n        dir: 'right',\n        size: isArray ? 32 : null\n      });\n    }\n    var arrayMatch = type.match(regex_js_1.arrayRegex);\n    if (arrayMatch && Array.isArray(value)) {\n      var _arrayMatch = _slicedToArray(arrayMatch, 2),\n        _type3 = _arrayMatch[0],\n        childType = _arrayMatch[1];\n      var data = [];\n      for (var i = 0; i < value.length; i++) {\n        data.push(encode(childType, value[i], true));\n      }\n      if (data.length === 0) return '0x';\n      return (0, concat_js_1.concatHex)(data);\n    }\n    throw new abi_js_1.UnsupportedPackedAbiType(type);\n  }\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"encodePacked"],[8,22,3,20],[8,25,3,23,"encodePacked"],[8,37,3,35],[9,2,4,0],[9,6,4,6,"abi_js_1"],[9,14,4,14],[9,17,4,17,"require"],[9,24,4,24],[9,25,4,24,"_dependencyMap"],[9,39,4,24],[9,65,4,46],[9,66,4,47],[10,2,5,0],[10,6,5,6,"address_js_1"],[10,18,5,18],[10,21,5,21,"require"],[10,28,5,28],[10,29,5,28,"_dependencyMap"],[10,43,5,28],[10,73,5,54],[10,74,5,55],[11,2,6,0],[11,6,6,6,"isAddress_js_1"],[11,20,6,20],[11,23,6,23,"require"],[11,30,6,30],[11,31,6,30,"_dependencyMap"],[11,45,6,30],[11,75,6,56],[11,76,6,57],[12,2,7,0],[12,6,7,6,"concat_js_1"],[12,17,7,17],[12,20,7,20,"require"],[12,27,7,27],[12,28,7,27,"_dependencyMap"],[12,42,7,27],[12,66,7,47],[12,67,7,48],[13,2,8,0],[13,6,8,6,"pad_js_1"],[13,14,8,14],[13,17,8,17,"require"],[13,24,8,24],[13,25,8,24,"_dependencyMap"],[13,39,8,24],[13,60,8,41],[13,61,8,42],[14,2,9,0],[14,6,9,6,"toHex_js_1"],[14,16,9,16],[14,19,9,19,"require"],[14,26,9,26],[14,27,9,26,"_dependencyMap"],[14,41,9,26],[14,68,9,49],[14,69,9,50],[15,2,10,0],[15,6,10,6,"regex_js_1"],[15,16,10,16],[15,19,10,19,"require"],[15,26,10,26],[15,27,10,26,"_dependencyMap"],[15,41,10,26],[15,59,10,40],[15,60,10,41],[16,2,11,0],[16,11,11,9,"encodePacked"],[16,23,11,21,"encodePacked"],[16,24,11,22,"types"],[16,29,11,27],[16,31,11,29,"values"],[16,37,11,35],[16,39,11,37],[17,4,12,4],[17,8,12,8,"types"],[17,13,12,13],[17,14,12,14,"length"],[17,20,12,20],[17,25,12,25,"values"],[17,31,12,31],[17,32,12,32,"length"],[17,38,12,38],[17,40,13,8],[17,46,13,14],[17,50,13,18,"abi_js_1"],[17,58,13,26],[17,59,13,27,"AbiEncodingLengthMismatchError"],[17,89,13,57],[17,90,13,58],[18,6,14,12,"expectedLength"],[18,20,14,26],[18,22,14,28,"types"],[18,27,14,33],[18,28,14,34,"length"],[18,34,14,40],[19,6,15,12,"givenLength"],[19,17,15,23],[19,19,15,25,"values"],[19,25,15,31],[19,26,15,32,"length"],[20,4,16,8],[20,5,16,9],[20,6,16,10],[21,4,17,4],[21,8,17,10,"data"],[21,12,17,14],[21,15,17,17],[21,17,17,19],[22,4,18,4],[22,9,18,9],[22,13,18,13,"i"],[22,14,18,14],[22,17,18,17],[22,18,18,18],[22,20,18,20,"i"],[22,21,18,21],[22,24,18,24,"types"],[22,29,18,29],[22,30,18,30,"length"],[22,36,18,36],[22,38,18,38,"i"],[22,39,18,39],[22,41,18,41],[22,43,18,43],[23,6,19,8],[23,10,19,14,"type"],[23,14,19,18],[23,17,19,21,"types"],[23,22,19,26],[23,23,19,27,"i"],[23,24,19,28],[23,25,19,29],[24,6,20,8],[24,10,20,14,"value"],[24,15,20,19],[24,18,20,22,"values"],[24,24,20,28],[24,25,20,29,"i"],[24,26,20,30],[24,27,20,31],[25,6,21,8,"data"],[25,10,21,12],[25,11,21,13,"push"],[25,15,21,17],[25,16,21,18,"encode"],[25,22,21,24],[25,23,21,25,"type"],[25,27,21,29],[25,29,21,31,"value"],[25,34,21,36],[25,35,21,37],[25,36,21,38],[26,4,22,4],[27,4,23,4],[27,11,23,11],[27,12,23,12],[27,13,23,13],[27,15,23,15,"concat_js_1"],[27,26,23,26],[27,27,23,27,"concatHex"],[27,36,23,36],[27,38,23,38,"data"],[27,42,23,42],[27,43,23,43],[28,2,24,0],[29,2,25,0],[29,11,25,9,"encode"],[29,17,25,15,"encode"],[29,18,25,16,"type"],[29,22,25,20],[29,24,25,22,"value"],[29,29,25,27],[29,31,25,46],[30,4,25,46],[30,8,25,29,"isArray"],[30,15,25,36],[30,18,25,36,"arguments"],[30,27,25,36],[30,28,25,36,"length"],[30,34,25,36],[30,42,25,36,"arguments"],[30,51,25,36],[30,59,25,36,"undefined"],[30,68,25,36],[30,71,25,36,"arguments"],[30,80,25,36],[30,86,25,39],[30,91,25,44],[31,4,26,4],[31,8,26,8,"type"],[31,12,26,12],[31,17,26,17],[31,26,26,26],[31,28,26,28],[32,6,27,8],[32,10,27,14,"address"],[32,17,27,21],[32,20,27,24,"value"],[32,25,27,29],[33,6,28,8],[33,10,28,12],[33,11,28,13],[33,12,28,14],[33,13,28,15],[33,15,28,17,"isAddress_js_1"],[33,29,28,31],[33,30,28,32,"isAddress"],[33,39,28,41],[33,41,28,43,"address"],[33,48,28,50],[33,49,28,51],[33,51,29,12],[33,57,29,18],[33,61,29,22,"address_js_1"],[33,73,29,34],[33,74,29,35,"InvalidAddressError"],[33,93,29,54],[33,94,29,55],[34,8,29,57,"address"],[35,6,29,65],[35,7,29,66],[35,8,29,67],[36,6,30,8],[36,13,30,15],[36,14,30,16],[36,15,30,17],[36,17,30,19,"pad_js_1"],[36,25,30,27],[36,26,30,28,"pad"],[36,29,30,31],[36,31,30,33,"address"],[36,38,30,40],[36,39,30,41,"toLowerCase"],[36,50,30,52],[36,51,30,53],[36,52,30,54],[36,54,30,56],[37,8,31,12,"size"],[37,12,31,16],[37,14,31,18,"isArray"],[37,21,31,25],[37,24,31,28],[37,26,31,30],[37,29,31,33],[38,6,32,8],[38,7,32,9],[38,8,32,10],[39,4,33,4],[40,4,34,4],[40,8,34,8,"type"],[40,12,34,12],[40,17,34,17],[40,25,34,25],[40,27,35,8],[40,34,35,15],[40,35,35,16],[40,36,35,17],[40,38,35,19,"toHex_js_1"],[40,48,35,29],[40,49,35,30,"stringToHex"],[40,60,35,41],[40,62,35,43,"value"],[40,67,35,48],[40,68,35,49],[41,4,36,4],[41,8,36,8,"type"],[41,12,36,12],[41,17,36,17],[41,24,36,24],[41,26,37,8],[41,33,37,15,"value"],[41,38,37,20],[42,4,38,4],[42,8,38,8,"type"],[42,12,38,12],[42,17,38,17],[42,23,38,23],[42,25,39,8],[42,32,39,15],[42,33,39,16],[42,34,39,17],[42,36,39,19,"pad_js_1"],[42,44,39,27],[42,45,39,28,"pad"],[42,48,39,31],[42,50,39,33],[42,51,39,34],[42,52,39,35],[42,54,39,37,"toHex_js_1"],[42,64,39,47],[42,65,39,48,"boolToHex"],[42,74,39,57],[42,76,39,59,"value"],[42,81,39,64],[42,82,39,65],[42,84,39,67],[43,6,39,69,"size"],[43,10,39,73],[43,12,39,75,"isArray"],[43,19,39,82],[43,22,39,85],[43,24,39,87],[43,27,39,90],[44,4,39,92],[44,5,39,93],[44,6,39,94],[45,4,40,4],[45,8,40,10,"intMatch"],[45,16,40,18],[45,19,40,21,"type"],[45,23,40,25],[45,24,40,26,"match"],[45,29,40,31],[45,30,40,32,"regex_js_1"],[45,40,40,42],[45,41,40,43,"integerRegex"],[45,53,40,55],[45,54,40,56],[46,4,41,4],[46,8,41,8,"intMatch"],[46,16,41,16],[46,18,41,18],[47,6,42,8],[47,10,42,8,"_intMatch"],[47,19,42,8],[47,22,42,8,"_slicedToArray"],[47,36,42,8],[47,37,42,48,"intMatch"],[47,45,42,56],[48,8,42,15,"_type"],[48,13,42,20],[48,16,42,20,"_intMatch"],[48,25,42,20],[49,8,42,22,"baseType"],[49,16,42,30],[49,19,42,30,"_intMatch"],[49,28,42,30],[50,8,42,30,"_intMatch$"],[50,18,42,30],[50,21,42,30,"_intMatch"],[50,30,42,30],[51,8,42,32,"bits"],[51,12,42,36],[51,15,42,36,"_intMatch$"],[51,25,42,36],[51,39,42,39],[51,44,42,44],[51,47,42,44,"_intMatch$"],[51,57,42,44],[52,6,43,8],[52,10,43,14,"size"],[52,14,43,18],[52,17,43,21,"Number"],[52,23,43,27],[52,24,43,28,"parseInt"],[52,32,43,36],[52,33,43,37,"bits"],[52,37,43,41],[52,38,43,42],[52,41,43,45],[52,42,43,46],[53,6,44,8],[53,13,44,15],[53,14,44,16],[53,15,44,17],[53,17,44,19,"toHex_js_1"],[53,27,44,29],[53,28,44,30,"numberToHex"],[53,39,44,41],[53,41,44,43,"value"],[53,46,44,48],[53,48,44,50],[54,8,45,12,"size"],[54,12,45,16],[54,14,45,18,"isArray"],[54,21,45,25],[54,24,45,28],[54,26,45,30],[54,29,45,33,"size"],[54,33,45,37],[55,8,46,12,"signed"],[55,14,46,18],[55,16,46,20,"baseType"],[55,24,46,28],[55,29,46,33],[56,6,47,8],[56,7,47,9],[56,8,47,10],[57,4,48,4],[58,4,49,4],[58,8,49,10,"bytesMatch"],[58,18,49,20],[58,21,49,23,"type"],[58,25,49,27],[58,26,49,28,"match"],[58,31,49,33],[58,32,49,34,"regex_js_1"],[58,42,49,44],[58,43,49,45,"bytesRegex"],[58,53,49,55],[58,54,49,56],[59,4,50,4],[59,8,50,8,"bytesMatch"],[59,18,50,18],[59,20,50,20],[60,6,51,8],[60,10,51,8,"_bytesMatch"],[60,21,51,8],[60,24,51,8,"_slicedToArray"],[60,38,51,8],[60,39,51,30,"bytesMatch"],[60,49,51,40],[61,8,51,15,"_type"],[61,14,51,20],[61,17,51,20,"_bytesMatch"],[61,28,51,20],[62,8,51,22,"size"],[62,13,51,26],[62,16,51,26,"_bytesMatch"],[62,27,51,26],[63,6,52,8],[63,10,52,12,"Number"],[63,16,52,18],[63,17,52,19,"parseInt"],[63,25,52,27],[63,26,52,28,"size"],[63,31,52,32],[63,32,52,33],[63,37,52,38],[63,38,52,39,"value"],[63,43,52,44],[63,44,52,45,"length"],[63,50,52,51],[63,53,52,54],[63,54,52,55],[63,58,52,59],[63,59,52,60],[63,61,53,12],[63,67,53,18],[63,71,53,22,"abi_js_1"],[63,79,53,30],[63,80,53,31,"BytesSizeMismatchError"],[63,102,53,53],[63,103,53,54],[64,8,54,16,"expectedSize"],[64,20,54,28],[64,22,54,30,"Number"],[64,28,54,36],[64,29,54,37,"parseInt"],[64,37,54,45],[64,38,54,46,"size"],[64,43,54,50],[64,44,54,51],[65,8,55,16,"givenSize"],[65,17,55,25],[65,19,55,27],[65,20,55,28,"value"],[65,25,55,33],[65,26,55,34,"length"],[65,32,55,40],[65,35,55,43],[65,36,55,44],[65,40,55,48],[66,6,56,12],[66,7,56,13],[66,8,56,14],[67,6,57,8],[67,13,57,15],[67,14,57,16],[67,15,57,17],[67,17,57,19,"pad_js_1"],[67,25,57,27],[67,26,57,28,"pad"],[67,29,57,31],[67,31,57,33,"value"],[67,36,57,38],[67,38,57,40],[68,8,57,42,"dir"],[68,11,57,45],[68,13,57,47],[68,20,57,54],[69,8,57,56,"size"],[69,12,57,60],[69,14,57,62,"isArray"],[69,21,57,69],[69,24,57,72],[69,26,57,74],[69,29,57,77],[70,6,57,82],[70,7,57,83],[70,8,57,84],[71,4,58,4],[72,4,59,4],[72,8,59,10,"arrayMatch"],[72,18,59,20],[72,21,59,23,"type"],[72,25,59,27],[72,26,59,28,"match"],[72,31,59,33],[72,32,59,34,"regex_js_1"],[72,42,59,44],[72,43,59,45,"arrayRegex"],[72,53,59,55],[72,54,59,56],[73,4,60,4],[73,8,60,8,"arrayMatch"],[73,18,60,18],[73,22,60,22,"Array"],[73,27,60,27],[73,28,60,28,"isArray"],[73,35,60,35],[73,36,60,36,"value"],[73,41,60,41],[73,42,60,42],[73,44,60,44],[74,6,61,8],[74,10,61,8,"_arrayMatch"],[74,21,61,8],[74,24,61,8,"_slicedToArray"],[74,38,61,8],[74,39,61,35,"arrayMatch"],[74,49,61,45],[75,8,61,15,"_type"],[75,14,61,20],[75,17,61,20,"_arrayMatch"],[75,28,61,20],[76,8,61,22,"childType"],[76,17,61,31],[76,20,61,31,"_arrayMatch"],[76,31,61,31],[77,6,62,8],[77,10,62,14,"data"],[77,14,62,18],[77,17,62,21],[77,19,62,23],[78,6,63,8],[78,11,63,13],[78,15,63,17,"i"],[78,16,63,18],[78,19,63,21],[78,20,63,22],[78,22,63,24,"i"],[78,23,63,25],[78,26,63,28,"value"],[78,31,63,33],[78,32,63,34,"length"],[78,38,63,40],[78,40,63,42,"i"],[78,41,63,43],[78,43,63,45],[78,45,63,47],[79,8,64,12,"data"],[79,12,64,16],[79,13,64,17,"push"],[79,17,64,21],[79,18,64,22,"encode"],[79,24,64,28],[79,25,64,29,"childType"],[79,34,64,38],[79,36,64,40,"value"],[79,41,64,45],[79,42,64,46,"i"],[79,43,64,47],[79,44,64,48],[79,46,64,50],[79,50,64,54],[79,51,64,55],[79,52,64,56],[80,6,65,8],[81,6,66,8],[81,10,66,12,"data"],[81,14,66,16],[81,15,66,17,"length"],[81,21,66,23],[81,26,66,28],[81,27,66,29],[81,29,67,12],[81,36,67,19],[81,40,67,23],[82,6,68,8],[82,13,68,15],[82,14,68,16],[82,15,68,17],[82,17,68,19,"concat_js_1"],[82,28,68,30],[82,29,68,31,"concatHex"],[82,38,68,40],[82,40,68,42,"data"],[82,44,68,46],[82,45,68,47],[83,4,69,4],[84,4,70,4],[84,10,70,10],[84,14,70,14,"abi_js_1"],[84,22,70,22],[84,23,70,23,"UnsupportedPackedAbiType"],[84,47,70,47],[84,48,70,48,"type"],[84,52,70,52],[84,53,70,53],[85,2,71,0],[86,0,71,1],[86,3]],"functionMap":{"names":["<global>","encodePacked","encode"],"mappings":"AAA;ACU;CDa;AEC;CF8C"}},"type":"js/module"}]}