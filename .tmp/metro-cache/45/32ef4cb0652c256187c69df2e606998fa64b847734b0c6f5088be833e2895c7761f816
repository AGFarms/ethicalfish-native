{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":123,"column":0,"index":2692}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":123,"column":0,"index":2692}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"lodash.sortby","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":21,"index":35},"end":{"line":2,"column":45,"index":59}}],"key":"8NB/NAYkJ54N9FOaTTlrVe5i6zw="}},{"name":"./urlencoded","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":19,"index":80},"end":{"line":3,"column":42,"index":103}}],"key":"B44avZmjK9RAmT5sIqgrylF6DAY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var stableSortBy = require(_dependencyMap[2], \"lodash.sortby\");\n  var urlencoded = require(_dependencyMap[3], \"./urlencoded\");\n  exports.implementation = /*#__PURE__*/function () {\n    function URLSearchParamsImpl(globalObject, constructorArgs, _ref) {\n      var _ref$doNotStripQMark = _ref.doNotStripQMark,\n        doNotStripQMark = _ref$doNotStripQMark === void 0 ? false : _ref$doNotStripQMark;\n      _classCallCheck(this, URLSearchParamsImpl);\n      var init = constructorArgs[0];\n      this._list = [];\n      this._url = null;\n      if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n        init = init.slice(1);\n      }\n      if (Array.isArray(init)) {\n        for (var pair of init) {\n          if (pair.length !== 2) {\n            throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" + \"contain exactly two elements.\");\n          }\n          this._list.push([pair[0], pair[1]]);\n        }\n      } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n        for (var name of Object.keys(init)) {\n          var value = init[name];\n          this._list.push([name, value]);\n        }\n      } else {\n        this._list = urlencoded.parseUrlencoded(init);\n      }\n    }\n    return _createClass(URLSearchParamsImpl, [{\n      key: \"_updateSteps\",\n      value: function _updateSteps() {\n        if (this._url !== null) {\n          var query = urlencoded.serializeUrlencoded(this._list);\n          if (query === \"\") {\n            query = null;\n          }\n          this._url._url.query = query;\n        }\n      }\n    }, {\n      key: \"append\",\n      value: function append(name, value) {\n        this._list.push([name, value]);\n        this._updateSteps();\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(name) {\n        var i = 0;\n        while (i < this._list.length) {\n          if (this._list[i][0] === name) {\n            this._list.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n        this._updateSteps();\n      }\n    }, {\n      key: \"get\",\n      value: function get(name) {\n        for (var tuple of this._list) {\n          if (tuple[0] === name) {\n            return tuple[1];\n          }\n        }\n        return null;\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(name) {\n        var output = [];\n        for (var tuple of this._list) {\n          if (tuple[0] === name) {\n            output.push(tuple[1]);\n          }\n        }\n        return output;\n      }\n    }, {\n      key: \"has\",\n      value: function has(name) {\n        for (var tuple of this._list) {\n          if (tuple[0] === name) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }, {\n      key: \"set\",\n      value: function set(name, value) {\n        var found = false;\n        var i = 0;\n        while (i < this._list.length) {\n          if (this._list[i][0] === name) {\n            if (found) {\n              this._list.splice(i, 1);\n            } else {\n              found = true;\n              this._list[i][1] = value;\n              i++;\n            }\n          } else {\n            i++;\n          }\n        }\n        if (!found) {\n          this._list.push([name, value]);\n        }\n        this._updateSteps();\n      }\n    }, {\n      key: \"sort\",\n      value: function sort() {\n        this._list = stableSortBy(this._list, [0]);\n        this._updateSteps();\n      }\n    }, {\n      key: Symbol.iterator,\n      value: function () {\n        return this._list[Symbol.iterator]();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return urlencoded.serializeUrlencoded(this._list);\n      }\n    }]);\n  }();\n});","lineCount":137,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[6,2,2,0],[6,6,2,6,"stableSortBy"],[6,18,2,18],[6,21,2,21,"require"],[6,28,2,28],[6,29,2,28,"_dependencyMap"],[6,43,2,28],[6,63,2,44],[6,64,2,45],[7,2,3,0],[7,6,3,6,"urlencoded"],[7,16,3,16],[7,19,3,19,"require"],[7,26,3,26],[7,27,3,26,"_dependencyMap"],[7,41,3,26],[7,60,3,41],[7,61,3,42],[8,2,5,0,"exports"],[8,9,5,7],[8,10,5,8,"implementation"],[8,24,5,22],[9,4,6,2],[9,13,6,2,"URLSearchParamsImpl"],[9,33,6,14,"globalObject"],[9,45,6,26],[9,47,6,28,"constructorArgs"],[9,62,6,43],[9,64,6,43,"_ref"],[9,68,6,43],[9,70,6,74],[10,6,6,74],[10,10,6,74,"_ref$doNotStripQMark"],[10,30,6,74],[10,33,6,74,"_ref"],[10,37,6,74],[10,38,6,47,"doNotStripQMark"],[10,53,6,62],[11,8,6,47,"doNotStripQMark"],[11,23,6,62],[11,26,6,62,"_ref$doNotStripQMark"],[11,46,6,62],[11,60,6,65],[11,65,6,70],[11,68,6,70,"_ref$doNotStripQMark"],[11,88,6,70],[12,6,6,70,"_classCallCheck"],[12,21,6,70],[12,28,6,70,"URLSearchParamsImpl"],[12,47,6,70],[13,6,7,4],[13,10,7,8,"init"],[13,14,7,12],[13,17,7,15,"constructorArgs"],[13,32,7,30],[13,33,7,31],[13,34,7,32],[13,35,7,33],[14,6,8,4],[14,10,8,8],[14,11,8,9,"_list"],[14,16,8,14],[14,19,8,17],[14,21,8,19],[15,6,9,4],[15,10,9,8],[15,11,9,9,"_url"],[15,15,9,13],[15,18,9,16],[15,22,9,20],[16,6,11,4],[16,10,11,8],[16,11,11,9,"doNotStripQMark"],[16,26,11,24],[16,30,11,28],[16,37,11,35,"init"],[16,41,11,39],[16,46,11,44],[16,54,11,52],[16,58,11,56,"init"],[16,62,11,60],[16,63,11,61],[16,64,11,62],[16,65,11,63],[16,70,11,68],[16,73,11,71],[16,75,11,73],[17,8,12,6,"init"],[17,12,12,10],[17,15,12,13,"init"],[17,19,12,17],[17,20,12,18,"slice"],[17,25,12,23],[17,26,12,24],[17,27,12,25],[17,28,12,26],[18,6,13,4],[19,6,15,4],[19,10,15,8,"Array"],[19,15,15,13],[19,16,15,14,"isArray"],[19,23,15,21],[19,24,15,22,"init"],[19,28,15,26],[19,29,15,27],[19,31,15,29],[20,8,16,6],[20,13,16,11],[20,17,16,17,"pair"],[20,21,16,21],[20,25,16,25,"init"],[20,29,16,29],[20,31,16,31],[21,10,17,8],[21,14,17,12,"pair"],[21,18,17,16],[21,19,17,17,"length"],[21,25,17,23],[21,30,17,28],[21,31,17,29],[21,33,17,31],[22,12,18,10],[22,18,18,16],[22,22,18,20,"TypeError"],[22,31,18,29],[22,32,18,30],[22,113,18,111],[22,116,19,30],[22,147,19,61],[22,148,19,62],[23,10,20,8],[24,10,21,8],[24,14,21,12],[24,15,21,13,"_list"],[24,20,21,18],[24,21,21,19,"push"],[24,25,21,23],[24,26,21,24],[24,27,21,25,"pair"],[24,31,21,29],[24,32,21,30],[24,33,21,31],[24,34,21,32],[24,36,21,34,"pair"],[24,40,21,38],[24,41,21,39],[24,42,21,40],[24,43,21,41],[24,44,21,42],[24,45,21,43],[25,8,22,6],[26,6,23,4],[26,7,23,5],[26,13,23,11],[26,17,23,15],[26,24,23,22,"init"],[26,28,23,26],[26,33,23,31],[26,41,23,39],[26,45,23,43,"Object"],[26,51,23,49],[26,52,23,50,"getPrototypeOf"],[26,66,23,64],[26,67,23,65,"init"],[26,71,23,69],[26,72,23,70],[26,77,23,75],[26,81,23,79],[26,83,23,81],[27,8,24,6],[27,13,24,11],[27,17,24,17,"name"],[27,21,24,21],[27,25,24,25,"Object"],[27,31,24,31],[27,32,24,32,"keys"],[27,36,24,36],[27,37,24,37,"init"],[27,41,24,41],[27,42,24,42],[27,44,24,44],[28,10,25,8],[28,14,25,14,"value"],[28,19,25,19],[28,22,25,22,"init"],[28,26,25,26],[28,27,25,27,"name"],[28,31,25,31],[28,32,25,32],[29,10,26,8],[29,14,26,12],[29,15,26,13,"_list"],[29,20,26,18],[29,21,26,19,"push"],[29,25,26,23],[29,26,26,24],[29,27,26,25,"name"],[29,31,26,29],[29,33,26,31,"value"],[29,38,26,36],[29,39,26,37],[29,40,26,38],[30,8,27,6],[31,6,28,4],[31,7,28,5],[31,13,28,11],[32,8,29,6],[32,12,29,10],[32,13,29,11,"_list"],[32,18,29,16],[32,21,29,19,"urlencoded"],[32,31,29,29],[32,32,29,30,"parseUrlencoded"],[32,47,29,45],[32,48,29,46,"init"],[32,52,29,50],[32,53,29,51],[33,6,30,4],[34,4,31,2],[35,4,31,3],[35,11,31,3,"_createClass"],[35,23,31,3],[35,24,31,3,"URLSearchParamsImpl"],[35,43,31,3],[36,6,31,3,"key"],[36,9,31,3],[37,6,31,3,"value"],[37,11,31,3],[37,13,33,2],[37,22,33,2,"_updateSteps"],[37,34,33,14,"_updateSteps"],[37,35,33,14],[37,37,33,17],[38,8,34,4],[38,12,34,8],[38,16,34,12],[38,17,34,13,"_url"],[38,21,34,17],[38,26,34,22],[38,30,34,26],[38,32,34,28],[39,10,35,6],[39,14,35,10,"query"],[39,19,35,15],[39,22,35,18,"urlencoded"],[39,32,35,28],[39,33,35,29,"serializeUrlencoded"],[39,52,35,48],[39,53,35,49],[39,57,35,53],[39,58,35,54,"_list"],[39,63,35,59],[39,64,35,60],[40,10,36,6],[40,14,36,10,"query"],[40,19,36,15],[40,24,36,20],[40,26,36,22],[40,28,36,24],[41,12,37,8,"query"],[41,17,37,13],[41,20,37,16],[41,24,37,20],[42,10,38,6],[43,10,39,6],[43,14,39,10],[43,15,39,11,"_url"],[43,19,39,15],[43,20,39,16,"_url"],[43,24,39,20],[43,25,39,21,"query"],[43,30,39,26],[43,33,39,29,"query"],[43,38,39,34],[44,8,40,4],[45,6,41,2],[46,4,41,3],[47,6,41,3,"key"],[47,9,41,3],[48,6,41,3,"value"],[48,11,41,3],[48,13,43,2],[48,22,43,2,"append"],[48,28,43,8,"append"],[48,29,43,9,"name"],[48,33,43,13],[48,35,43,15,"value"],[48,40,43,20],[48,42,43,22],[49,8,44,4],[49,12,44,8],[49,13,44,9,"_list"],[49,18,44,14],[49,19,44,15,"push"],[49,23,44,19],[49,24,44,20],[49,25,44,21,"name"],[49,29,44,25],[49,31,44,27,"value"],[49,36,44,32],[49,37,44,33],[49,38,44,34],[50,8,45,4],[50,12,45,8],[50,13,45,9,"_updateSteps"],[50,25,45,21],[50,26,45,22],[50,27,45,23],[51,6,46,2],[52,4,46,3],[53,6,46,3,"key"],[53,9,46,3],[54,6,46,3,"value"],[54,11,46,3],[54,13,48,2],[54,22,48,2,"delete"],[54,29,48,8,"delete"],[54,30,48,9,"name"],[54,34,48,13],[54,36,48,15],[55,8,49,4],[55,12,49,8,"i"],[55,13,49,9],[55,16,49,12],[55,17,49,13],[56,8,50,4],[56,15,50,11,"i"],[56,16,50,12],[56,19,50,15],[56,23,50,19],[56,24,50,20,"_list"],[56,29,50,25],[56,30,50,26,"length"],[56,36,50,32],[56,38,50,34],[57,10,51,6],[57,14,51,10],[57,18,51,14],[57,19,51,15,"_list"],[57,24,51,20],[57,25,51,21,"i"],[57,26,51,22],[57,27,51,23],[57,28,51,24],[57,29,51,25],[57,30,51,26],[57,35,51,31,"name"],[57,39,51,35],[57,41,51,37],[58,12,52,8],[58,16,52,12],[58,17,52,13,"_list"],[58,22,52,18],[58,23,52,19,"splice"],[58,29,52,25],[58,30,52,26,"i"],[58,31,52,27],[58,33,52,29],[58,34,52,30],[58,35,52,31],[59,10,53,6],[59,11,53,7],[59,17,53,13],[60,12,54,8,"i"],[60,13,54,9],[60,15,54,11],[61,10,55,6],[62,8,56,4],[63,8,57,4],[63,12,57,8],[63,13,57,9,"_updateSteps"],[63,25,57,21],[63,26,57,22],[63,27,57,23],[64,6,58,2],[65,4,58,3],[66,6,58,3,"key"],[66,9,58,3],[67,6,58,3,"value"],[67,11,58,3],[67,13,60,2],[67,22,60,2,"get"],[67,25,60,5,"get"],[67,26,60,6,"name"],[67,30,60,10],[67,32,60,12],[68,8,61,4],[68,13,61,9],[68,17,61,15,"tuple"],[68,22,61,20],[68,26,61,24],[68,30,61,28],[68,31,61,29,"_list"],[68,36,61,34],[68,38,61,36],[69,10,62,6],[69,14,62,10,"tuple"],[69,19,62,15],[69,20,62,16],[69,21,62,17],[69,22,62,18],[69,27,62,23,"name"],[69,31,62,27],[69,33,62,29],[70,12,63,8],[70,19,63,15,"tuple"],[70,24,63,20],[70,25,63,21],[70,26,63,22],[70,27,63,23],[71,10,64,6],[72,8,65,4],[73,8,66,4],[73,15,66,11],[73,19,66,15],[74,6,67,2],[75,4,67,3],[76,6,67,3,"key"],[76,9,67,3],[77,6,67,3,"value"],[77,11,67,3],[77,13,69,2],[77,22,69,2,"getAll"],[77,28,69,8,"getAll"],[77,29,69,9,"name"],[77,33,69,13],[77,35,69,15],[78,8,70,4],[78,12,70,10,"output"],[78,18,70,16],[78,21,70,19],[78,23,70,21],[79,8,71,4],[79,13,71,9],[79,17,71,15,"tuple"],[79,22,71,20],[79,26,71,24],[79,30,71,28],[79,31,71,29,"_list"],[79,36,71,34],[79,38,71,36],[80,10,72,6],[80,14,72,10,"tuple"],[80,19,72,15],[80,20,72,16],[80,21,72,17],[80,22,72,18],[80,27,72,23,"name"],[80,31,72,27],[80,33,72,29],[81,12,73,8,"output"],[81,18,73,14],[81,19,73,15,"push"],[81,23,73,19],[81,24,73,20,"tuple"],[81,29,73,25],[81,30,73,26],[81,31,73,27],[81,32,73,28],[81,33,73,29],[82,10,74,6],[83,8,75,4],[84,8,76,4],[84,15,76,11,"output"],[84,21,76,17],[85,6,77,2],[86,4,77,3],[87,6,77,3,"key"],[87,9,77,3],[88,6,77,3,"value"],[88,11,77,3],[88,13,79,2],[88,22,79,2,"has"],[88,25,79,5,"has"],[88,26,79,6,"name"],[88,30,79,10],[88,32,79,12],[89,8,80,4],[89,13,80,9],[89,17,80,15,"tuple"],[89,22,80,20],[89,26,80,24],[89,30,80,28],[89,31,80,29,"_list"],[89,36,80,34],[89,38,80,36],[90,10,81,6],[90,14,81,10,"tuple"],[90,19,81,15],[90,20,81,16],[90,21,81,17],[90,22,81,18],[90,27,81,23,"name"],[90,31,81,27],[90,33,81,29],[91,12,82,8],[91,19,82,15],[91,23,82,19],[92,10,83,6],[93,8,84,4],[94,8,85,4],[94,15,85,11],[94,20,85,16],[95,6,86,2],[96,4,86,3],[97,6,86,3,"key"],[97,9,86,3],[98,6,86,3,"value"],[98,11,86,3],[98,13,88,2],[98,22,88,2,"set"],[98,25,88,5,"set"],[98,26,88,6,"name"],[98,30,88,10],[98,32,88,12,"value"],[98,37,88,17],[98,39,88,19],[99,8,89,4],[99,12,89,8,"found"],[99,17,89,13],[99,20,89,16],[99,25,89,21],[100,8,90,4],[100,12,90,8,"i"],[100,13,90,9],[100,16,90,12],[100,17,90,13],[101,8,91,4],[101,15,91,11,"i"],[101,16,91,12],[101,19,91,15],[101,23,91,19],[101,24,91,20,"_list"],[101,29,91,25],[101,30,91,26,"length"],[101,36,91,32],[101,38,91,34],[102,10,92,6],[102,14,92,10],[102,18,92,14],[102,19,92,15,"_list"],[102,24,92,20],[102,25,92,21,"i"],[102,26,92,22],[102,27,92,23],[102,28,92,24],[102,29,92,25],[102,30,92,26],[102,35,92,31,"name"],[102,39,92,35],[102,41,92,37],[103,12,93,8],[103,16,93,12,"found"],[103,21,93,17],[103,23,93,19],[104,14,94,10],[104,18,94,14],[104,19,94,15,"_list"],[104,24,94,20],[104,25,94,21,"splice"],[104,31,94,27],[104,32,94,28,"i"],[104,33,94,29],[104,35,94,31],[104,36,94,32],[104,37,94,33],[105,12,95,8],[105,13,95,9],[105,19,95,15],[106,14,96,10,"found"],[106,19,96,15],[106,22,96,18],[106,26,96,22],[107,14,97,10],[107,18,97,14],[107,19,97,15,"_list"],[107,24,97,20],[107,25,97,21,"i"],[107,26,97,22],[107,27,97,23],[107,28,97,24],[107,29,97,25],[107,30,97,26],[107,33,97,29,"value"],[107,38,97,34],[108,14,98,10,"i"],[108,15,98,11],[108,17,98,13],[109,12,99,8],[110,10,100,6],[110,11,100,7],[110,17,100,13],[111,12,101,8,"i"],[111,13,101,9],[111,15,101,11],[112,10,102,6],[113,8,103,4],[114,8,104,4],[114,12,104,8],[114,13,104,9,"found"],[114,18,104,14],[114,20,104,16],[115,10,105,6],[115,14,105,10],[115,15,105,11,"_list"],[115,20,105,16],[115,21,105,17,"push"],[115,25,105,21],[115,26,105,22],[115,27,105,23,"name"],[115,31,105,27],[115,33,105,29,"value"],[115,38,105,34],[115,39,105,35],[115,40,105,36],[116,8,106,4],[117,8,107,4],[117,12,107,8],[117,13,107,9,"_updateSteps"],[117,25,107,21],[117,26,107,22],[117,27,107,23],[118,6,108,2],[119,4,108,3],[120,6,108,3,"key"],[120,9,108,3],[121,6,108,3,"value"],[121,11,108,3],[121,13,110,2],[121,22,110,2,"sort"],[121,26,110,6,"sort"],[121,27,110,6],[121,29,110,9],[122,8,111,4],[122,12,111,8],[122,13,111,9,"_list"],[122,18,111,14],[122,21,111,17,"stableSortBy"],[122,33,111,29],[122,34,111,30],[122,38,111,34],[122,39,111,35,"_list"],[122,44,111,40],[122,46,111,42],[122,47,111,43],[122,48,111,44],[122,49,111,45],[122,50,111,46],[123,8,112,4],[123,12,112,8],[123,13,112,9,"_updateSteps"],[123,25,112,21],[123,26,112,22],[123,27,112,23],[124,6,113,2],[125,4,113,3],[126,6,113,3,"key"],[126,9,113,3],[126,11,115,3,"Symbol"],[126,17,115,9],[126,18,115,10,"iterator"],[126,26,115,18],[127,6,115,18,"value"],[127,11,115,18],[127,13,115,2],[127,22,115,2,"value"],[127,23,115,2],[127,25,115,22],[128,8,116,4],[128,15,116,11],[128,19,116,15],[128,20,116,16,"_list"],[128,25,116,21],[128,26,116,22,"Symbol"],[128,32,116,28],[128,33,116,29,"iterator"],[128,41,116,37],[128,42,116,38],[128,43,116,39],[128,44,116,40],[129,6,117,2],[130,4,117,3],[131,6,117,3,"key"],[131,9,117,3],[132,6,117,3,"value"],[132,11,117,3],[132,13,119,2],[132,22,119,2,"toString"],[132,30,119,10,"toString"],[132,31,119,10],[132,33,119,13],[133,8,120,4],[133,15,120,11,"urlencoded"],[133,25,120,21],[133,26,120,22,"serializeUrlencoded"],[133,45,120,41],[133,46,120,42],[133,50,120,46],[133,51,120,47,"_list"],[133,56,120,52],[133,57,120,53],[134,6,121,2],[135,4,121,3],[136,2,121,3],[136,5,122,1],[137,0,122,2],[137,3]],"functionMap":{"names":["<global>","URLSearchParamsImpl","URLSearchParamsImpl#constructor","URLSearchParamsImpl#_updateSteps","URLSearchParamsImpl#append","URLSearchParamsImpl#_delete","URLSearchParamsImpl#get","URLSearchParamsImpl#getAll","URLSearchParamsImpl#has","URLSearchParamsImpl#set","URLSearchParamsImpl#sort","URLSearchParamsImpl#@@iterator","URLSearchParamsImpl#toString"],"mappings":"AAA;yBCI;ECC;GDyB;EEE;GFQ;EGE;GHG;EIE;GJU;EKE;GLO;EME;GNQ;EOE;GPO;EQE;GRoB;ESE;GTG;EUE;GVE;EWE;GXE;CDC"}},"type":"js/module"}]}